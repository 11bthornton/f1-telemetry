{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0","program":"C:\\Users\\Ben\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","async_io","--edition=2018","C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=01625f8aad49ab14","-C","extra-filename=-01625f8aad49ab14","--out-dir","c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps","--extern","async_lock=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libasync_lock-0cf6e986b133be57.rmeta","--extern","concurrent_queue=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libconcurrent_queue-2954f6c04b077cea.rmeta","--extern","futures_lite=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libfutures_lite-f535b464b080ecdc.rmeta","--extern","log=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\liblog-8ba5e39123a654c6.rmeta","--extern","parking=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libparking-97e2716c63e976f9.rmeta","--extern","polling=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libpolling-d6602128d01f026b.rmeta","--extern","slab=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libslab-98d8df007dba1138.rmeta","--extern","socket2=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libsocket2-70412354d21c71c8.rmeta","--extern","waker_fn=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libwaker_fn-6b0d794c221a534c.rmeta","--extern","windows_sys=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libwindows_sys-cd23080c71bd6b4c.rmeta","--cap-lints","allow","-L","native=C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.30.30705\\atlmfc\\lib\\x64","-L","native=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\build\\wepoll-ffi-34f6e8a25ccce791\\out","-L","native=C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.42.0\\lib","--error-format=json","--sysroot","C:\\Users\\Ben\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libasync_io-01625f8aad49ab14.rmeta"},"prelude":{"crate_id":{"name":"async_io","disambiguator":[8107040055704591989,0]},"crate_root":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src","external_crates":[{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10288641326355699271,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-lite-1.12.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5178777620647193466,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7203661724729889941,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17525700935344431946,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14114419768508526436,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[7430704726206783492,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12664251144516306473,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5349691386245612169,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7588176879124425336,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12802573245210436658,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[15058356585373963657,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11406058276128544710,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[12054102872615165506,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15575797803660711391,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[2170788131994516450,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":16,"id":{"name":"futures_lite","disambiguator":[1819541201088999364,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":17,"id":{"name":"pin_project_lite","disambiguator":[6621430443817631547,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","num":18,"id":{"name":"parking","disambiguator":[3009397415668499507,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","num":19,"id":{"name":"waker_fn","disambiguator":[13797696997638982724,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":20,"id":{"name":"futures_core","disambiguator":[13412865793139997503,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":21,"id":{"name":"futures_io","disambiguator":[2244033671744110353,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":22,"id":{"name":"fastrand","disambiguator":[2196587609525212048,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":23,"id":{"name":"memchr","disambiguator":[14172788285213947117,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":24,"id":{"name":"socket2","disambiguator":[5241300313612454483,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":25,"id":{"name":"winapi","disambiguator":[3052853135328917355,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","num":26,"id":{"name":"async_lock","disambiguator":[14123118671153444933,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","num":27,"id":{"name":"event_listener","disambiguator":[9686504692904195901,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","num":28,"id":{"name":"concurrent_queue","disambiguator":[17317036530603466288,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","num":29,"id":{"name":"crossbeam_utils","disambiguator":[12261398158359852006,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","num":30,"id":{"name":"cfg_if","disambiguator":[7872221195650628815,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","num":31,"id":{"name":"polling","disambiguator":[8796988399382582089,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","num":32,"id":{"name":"log","disambiguator":[12962908896140855491,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","num":33,"id":{"name":"value_bag","disambiguator":[12614158785438163357,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","num":34,"id":{"name":"wepoll_ffi","disambiguator":[15026773439058360796,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","num":35,"id":{"name":"windows_sys","disambiguator":[12860283537905889122,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","num":36,"id":{"name":"slab","disambiguator":[5853818257851179701,0]}}],"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":0,"byte_end":62012,"line_start":1,"line_end":1903,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3196,"byte_end":3204,"line_start":91,"line_end":91,"column_start":17,"column_end":25},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3224,"byte_end":3232,"line_start":92,"line_end":92,"column_start":19,"column_end":27},"alias_span":null,"name":"Readable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3234,"byte_end":3247,"line_start":92,"line_end":92,"column_start":29,"column_end":42},"alias_span":null,"name":"ReadableOwned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3249,"byte_end":3257,"line_start":92,"line_end":92,"column_start":44,"column_end":52},"alias_span":null,"name":"Writable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3259,"byte_end":3272,"line_start":92,"line_end":92,"column_start":54,"column_end":67},"alias_span":null,"name":"WritableOwned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":0,"byte_end":62012,"line_start":1,"line_end":1903,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":199},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":625},{"krate":0,"index":629},{"krate":0,"index":436},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":631},{"krate":0,"index":635},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":474},{"krate":0,"index":478},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":522},{"krate":0,"index":527},{"krate":0,"index":533},{"krate":0,"index":540},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":603}],"decl_id":null,"docs":" Async I/O and timers.","sig":null,"attributes":[{"value":"/ Async I/O and timers.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides two tools:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30,"byte_end":64,"line_start":3,"line_end":3,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":65,"byte_end":68,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`Async`], an adapter for standard networking types (and [many other] types) to use in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":69,"byte_end":161,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/   async programs.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":162,"byte_end":183,"line_start":6,"line_end":6,"column_start":1,"column_end":22}},{"value":"/ * [`Timer`], a future or stream that emits timed events.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":184,"byte_end":244,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":245,"byte_end":248,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For concrete async networking types built on top of this crate, see [`async-net`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":249,"byte_end":335,"line_start":9,"line_end":9,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":336,"byte_end":339,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [many other]: https://github.com/smol-rs/async-io/tree/master/examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":340,"byte_end":414,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ [`async-net`]: https://docs.rs/async-net","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":415,"byte_end":459,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":460,"byte_end":463,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":464,"byte_end":484,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":485,"byte_end":488,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The first time [`Async`] or [`Timer`] is used, a thread named \"async-io\" will be spawned.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":489,"byte_end":582,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/ The purpose of this thread is to wait for I/O events reported by the operating system, and then","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":583,"byte_end":682,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/ wake appropriate futures blocked on I/O or timers when they can be resumed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":683,"byte_end":762,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":763,"byte_end":766,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ To wait for the next I/O event, the \"async-io\" thread uses [epoll] on Linux/Android/illumos,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":767,"byte_end":863,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ [kqueue] on macOS/iOS/BSD, [event ports] on illumos/Solaris, and [wepoll] on Windows. That","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":864,"byte_end":958,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ functionality is provided by the [`polling`] crate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":959,"byte_end":1014,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1015,"byte_end":1018,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ However, note that you can also process I/O events and wake futures on any thread using the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1019,"byte_end":1114,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ [`block_on()`] function. The \"async-io\" thread is therefore just a fallback mechanism","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1115,"byte_end":1204,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ processing I/O events in case no other threads are.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1205,"byte_end":1260,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1261,"byte_end":1264,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1265,"byte_end":1313,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1314,"byte_end":1364,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1365,"byte_end":1419,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1420,"byte_end":1472,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/ [`polling`]: https://docs.rs/polling","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1473,"byte_end":1513,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1514,"byte_end":1517,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1518,"byte_end":1532,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1533,"byte_end":1536,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Connect to `example.com:80`, or time out after 10 seconds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1537,"byte_end":1599,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1600,"byte_end":1603,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1604,"byte_end":1611,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use async_io::{Async, Timer};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1612,"byte_end":1645,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ use futures_lite::{future::FutureExt, io};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1646,"byte_end":1692,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1693,"byte_end":1696,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1697,"byte_end":1742,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1743,"byte_end":1771,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1772,"byte_end":1775,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1776,"byte_end":1820,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1821,"byte_end":1888,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1889,"byte_end":1892,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).or(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1893,"byte_end":1954,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":1955,"byte_end":2007,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/     Err(io::ErrorKind::TimedOut.into())","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":2008,"byte_end":2051,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":2052,"byte_end":2058,"line_start":51,"line_end":51,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":2059,"byte_end":2071,"line_start":52,"line_end":52,"column_start":1,"column_end":13}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":2072,"byte_end":2105,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":2106,"byte_end":2113,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":2115,"byte_end":2186,"line_start":56,"line_end":56,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65331,"byte_end":65339,"line_start":107,"line_end":107,"column_start":8,"column_end":16},"name":"block_on","qualname":"::driver::block_on","value":"fn block_on<T, impl Future<Output = T>>(impl Future<Output = T>) -> T where\nimpl Future<Output = T>: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread on a future, processing I/O events when idle.","sig":null,"attributes":[{"value":"/ Blocks the current thread on a future, processing I/O events when idle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":64934,"byte_end":65009,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65010,"byte_end":65013,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65014,"byte_end":65028,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65029,"byte_end":65032,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65033,"byte_end":65040,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65041,"byte_end":65065,"line_start":98,"line_end":98,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65066,"byte_end":65094,"line_start":99,"line_end":99,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65095,"byte_end":65098,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ async_io::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65099,"byte_end":65129,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/     // This timer will likely be processed by the current","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65130,"byte_end":65191,"line_start":102,"line_end":102,"column_start":1,"column_end":62}},{"value":"/     // thread rather than the fallback \"async-io\" thread.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65192,"byte_end":65253,"line_start":103,"line_end":103,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_millis(1)).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65254,"byte_end":65307,"line_start":104,"line_end":104,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65308,"byte_end":65315,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":65316,"byte_end":65323,"line_start":106,"line_end":106,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":86506,"byte_end":86514,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"Readable","qualname":"::reactor::Readable","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for [`Async::readable`](crate::Async::readable).\n","sig":null,"attributes":[{"value":"/ Future for [`Async::readable`](crate::Async::readable).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":86367,"byte_end":86426,"line_start":484,"line_end":484,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":86427,"byte_end":86494,"line_start":485,"line_end":485,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":86634,"byte_end":86638,"line_start":491,"line_end":491,"column_start":8,"column_end":12},"name":"poll","qualname":"<Readable as futures_lite::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":86911,"byte_end":86914,"line_start":499,"line_end":499,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Readable as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87171,"byte_end":87184,"line_start":506,"line_end":506,"column_start":12,"column_end":25},"name":"ReadableOwned","qualname":"::reactor::ReadableOwned","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for [`Async::readable_owned`](crate::Async::readable_owned).\n","sig":null,"attributes":[{"value":"/ Future for [`Async::readable_owned`](crate::Async::readable_owned).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87020,"byte_end":87091,"line_start":504,"line_end":504,"column_start":1,"column_end":72}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87092,"byte_end":87159,"line_start":505,"line_end":505,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87302,"byte_end":87306,"line_start":511,"line_end":511,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadableOwned<T> as futures_lite::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87586,"byte_end":87589,"line_start":519,"line_end":519,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReadableOwned<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87839,"byte_end":87847,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"Writable","qualname":"::reactor::Writable","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for [`Async::writable`](crate::Async::writable).\n","sig":null,"attributes":[{"value":"/ Future for [`Async::writable`](crate::Async::writable).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87700,"byte_end":87759,"line_start":524,"line_end":524,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87760,"byte_end":87827,"line_start":525,"line_end":525,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87967,"byte_end":87971,"line_start":531,"line_end":531,"column_start":8,"column_end":12},"name":"poll","qualname":"<Writable as futures_lite::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":88244,"byte_end":88247,"line_start":539,"line_end":539,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Writable as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":88504,"byte_end":88517,"line_start":546,"line_end":546,"column_start":12,"column_end":25},"name":"WritableOwned","qualname":"::reactor::WritableOwned","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for [`Async::writable_owned`](crate::Async::writable_owned).\n","sig":null,"attributes":[{"value":"/ Future for [`Async::writable_owned`](crate::Async::writable_owned).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":88353,"byte_end":88424,"line_start":544,"line_end":544,"column_start":1,"column_end":72}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":88425,"byte_end":88492,"line_start":545,"line_end":545,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":88635,"byte_end":88639,"line_start":551,"line_end":551,"column_start":8,"column_end":12},"name":"poll","qualname":"<WritableOwned<T> as futures_lite::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":88919,"byte_end":88922,"line_start":559,"line_end":559,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WritableOwned<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4316,"byte_end":4321,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"Timer","qualname":"::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"decl_id":null,"docs":" A future or stream that emits timed events.","sig":null,"attributes":[{"value":"/ A future or stream that emits timed events.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3429,"byte_end":3476,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3477,"byte_end":3480,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Timers are futures that output a single [`Instant`] when they fire.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3481,"byte_end":3552,"line_start":101,"line_end":101,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3553,"byte_end":3556,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Timers are also streams that can output [`Instant`]s periodically.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3557,"byte_end":3627,"line_start":103,"line_end":103,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3628,"byte_end":3631,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3632,"byte_end":3646,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3647,"byte_end":3650,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Sleep for 1 second:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3651,"byte_end":3674,"line_start":107,"line_end":107,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3675,"byte_end":3678,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3679,"byte_end":3686,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3687,"byte_end":3711,"line_start":110,"line_end":110,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3712,"byte_end":3740,"line_start":111,"line_end":111,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3741,"byte_end":3744,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3745,"byte_end":3789,"line_start":113,"line_end":113,"column_start":1,"column_end":45}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3790,"byte_end":3837,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3838,"byte_end":3847,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3848,"byte_end":3855,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3856,"byte_end":3859,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Timeout after 1 second:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3860,"byte_end":3887,"line_start":118,"line_end":118,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3888,"byte_end":3891,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3892,"byte_end":3899,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3900,"byte_end":3924,"line_start":121,"line_end":121,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::FutureExt;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3925,"byte_end":3957,"line_start":122,"line_end":122,"column_start":1,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3958,"byte_end":3986,"line_start":123,"line_end":123,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3987,"byte_end":3990,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":3991,"byte_end":4035,"line_start":125,"line_end":125,"column_start":1,"column_end":45}},{"value":"/ let addrs = async_net::resolve(\"google.com:80\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4036,"byte_end":4087,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/     .or(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4088,"byte_end":4107,"line_start":127,"line_end":127,"column_start":1,"column_end":20}},{"value":"/         Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4108,"byte_end":4164,"line_start":128,"line_end":128,"column_start":1,"column_end":57}},{"value":"/         Err(std::io::ErrorKind::TimedOut.into())","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4165,"byte_end":4217,"line_start":129,"line_end":129,"column_start":1,"column_end":53}},{"value":"/     })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4218,"byte_end":4228,"line_start":130,"line_end":130,"column_start":1,"column_end":11}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4229,"byte_end":4245,"line_start":131,"line_end":131,"column_start":1,"column_end":17}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4246,"byte_end":4279,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4280,"byte_end":4287,"line_start":133,"line_end":133,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5935,"byte_end":5940,"line_start":185,"line_end":185,"column_start":12,"column_end":17},"name":"never","qualname":"<Timer>::never","value":"fn never() -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that will never fire.","sig":null,"attributes":[{"value":"/ Creates a timer that will never fire.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4836,"byte_end":4877,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4882,"byte_end":4885,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4890,"byte_end":4904,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4909,"byte_end":4912,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function may also be useful for creating a function with an optional timeout.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4917,"byte_end":5003,"line_start":157,"line_end":157,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5008,"byte_end":5011,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5016,"byte_end":5023,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5028,"byte_end":5072,"line_start":160,"line_end":160,"column_start":5,"column_end":49}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5077,"byte_end":5101,"line_start":161,"line_end":161,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5106,"byte_end":5139,"line_start":162,"line_end":162,"column_start":5,"column_end":38}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5144,"byte_end":5172,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5177,"byte_end":5180,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ async fn run_with_timeout(timeout: Option<Duration>) {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5185,"byte_end":5243,"line_start":165,"line_end":165,"column_start":5,"column_end":63}},{"value":"/     let timer = timeout","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5248,"byte_end":5275,"line_start":166,"line_end":166,"column_start":5,"column_end":32}},{"value":"/         .map(|timeout| Timer::after(timeout))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5280,"byte_end":5329,"line_start":167,"line_end":167,"column_start":5,"column_end":54}},{"value":"/         .unwrap_or_else(Timer::never);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5334,"byte_end":5376,"line_start":168,"line_end":168,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5381,"byte_end":5384,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     run_lengthy_operation().or(timer).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5389,"byte_end":5437,"line_start":170,"line_end":170,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5442,"byte_end":5447,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ # // Note that since a Timer as a Future returns an Instant,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5452,"byte_end":5516,"line_start":172,"line_end":172,"column_start":5,"column_end":69}},{"value":"/ # // this function needs to return an Instant to be used","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5521,"byte_end":5581,"line_start":173,"line_end":173,"column_start":5,"column_end":65}},{"value":"/ # // in \"or\".","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5586,"byte_end":5603,"line_start":174,"line_end":174,"column_start":5,"column_end":22}},{"value":"/ # async fn run_lengthy_operation() -> std::time::Instant {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5608,"byte_end":5670,"line_start":175,"line_end":175,"column_start":5,"column_end":67}},{"value":"/ #    std::time::Instant::now()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5675,"byte_end":5709,"line_start":176,"line_end":176,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5714,"byte_end":5721,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5726,"byte_end":5729,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ // Times out after 5 seconds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5734,"byte_end":5767,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/ run_with_timeout(Some(Duration::from_secs(5))).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5772,"byte_end":5829,"line_start":180,"line_end":180,"column_start":5,"column_end":62}},{"value":"/ // Does not time out.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5834,"byte_end":5859,"line_start":181,"line_end":181,"column_start":5,"column_end":30}},{"value":"/ run_with_timeout(None).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5864,"byte_end":5897,"line_start":182,"line_end":182,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5902,"byte_end":5911,"line_start":183,"line_end":183,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":5916,"byte_end":5923,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6417,"byte_end":6422,"line_start":205,"line_end":205,"column_start":12,"column_end":17},"name":"after","qualname":"<Timer>::after","value":"fn after(Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits an event once after the given duration of time.","sig":null,"attributes":[{"value":"/ Creates a timer that emits an event once after the given duration of time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6083,"byte_end":6161,"line_start":193,"line_end":193,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6166,"byte_end":6169,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6174,"byte_end":6188,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6193,"byte_end":6196,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6201,"byte_end":6208,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6213,"byte_end":6237,"line_start":198,"line_end":198,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6242,"byte_end":6270,"line_start":199,"line_end":199,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6275,"byte_end":6278,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6283,"byte_end":6327,"line_start":201,"line_end":201,"column_start":5,"column_end":49}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6332,"byte_end":6379,"line_start":202,"line_end":202,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6384,"byte_end":6393,"line_start":203,"line_end":203,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6398,"byte_end":6405,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6973,"byte_end":6975,"line_start":225,"line_end":225,"column_start":12,"column_end":14},"name":"at","qualname":"<Timer>::at","value":"fn at(Instant) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits an event once at the given time instant.","sig":null,"attributes":[{"value":"/ Creates a timer that emits an event once at the given time instant.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6573,"byte_end":6644,"line_start":211,"line_end":211,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6649,"byte_end":6652,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6657,"byte_end":6671,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6676,"byte_end":6679,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6684,"byte_end":6691,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6696,"byte_end":6720,"line_start":216,"line_end":216,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6725,"byte_end":6764,"line_start":217,"line_end":217,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6769,"byte_end":6772,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6777,"byte_end":6821,"line_start":219,"line_end":219,"column_start":5,"column_end":49}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6826,"byte_end":6855,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6860,"byte_end":6904,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/ Timer::at(when).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6909,"byte_end":6935,"line_start":222,"line_end":222,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6940,"byte_end":6949,"line_start":223,"line_end":223,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":6954,"byte_end":6961,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7531,"byte_end":7539,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"interval","qualname":"<Timer>::interval","value":"fn interval(Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits events periodically.","sig":null,"attributes":[{"value":"/ Creates a timer that emits events periodically.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7137,"byte_end":7188,"line_start":230,"line_end":230,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7193,"byte_end":7196,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7201,"byte_end":7215,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7220,"byte_end":7223,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7228,"byte_end":7235,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7240,"byte_end":7264,"line_start":235,"line_end":235,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7269,"byte_end":7301,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7306,"byte_end":7345,"line_start":237,"line_end":237,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7350,"byte_end":7353,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7358,"byte_end":7402,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/ let period = Duration::from_secs(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7407,"byte_end":7447,"line_start":240,"line_end":240,"column_start":5,"column_end":45}},{"value":"/ Timer::interval(period).next().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7452,"byte_end":7493,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7498,"byte_end":7507,"line_start":242,"line_end":242,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7512,"byte_end":7519,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8173,"byte_end":8184,"line_start":265,"line_end":265,"column_start":12,"column_end":23},"name":"interval_at","qualname":"<Timer>::interval_at","value":"fn interval_at(Instant, Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits events periodically, starting at `start`.","sig":null,"attributes":[{"value":"/ Creates a timer that emits events periodically, starting at `start`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7712,"byte_end":7784,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7789,"byte_end":7792,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7797,"byte_end":7811,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7816,"byte_end":7819,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7824,"byte_end":7831,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7836,"byte_end":7860,"line_start":255,"line_end":255,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7865,"byte_end":7897,"line_start":256,"line_end":256,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7902,"byte_end":7941,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7946,"byte_end":7949,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":7954,"byte_end":7998,"line_start":259,"line_end":259,"column_start":5,"column_end":49}},{"value":"/ let start = Instant::now();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8003,"byte_end":8034,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/ let period = Duration::from_secs(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8039,"byte_end":8079,"line_start":261,"line_end":261,"column_start":5,"column_end":45}},{"value":"/ Timer::interval_at(start, period).next().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8084,"byte_end":8135,"line_start":262,"line_end":262,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8140,"byte_end":8149,"line_start":263,"line_end":263,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8154,"byte_end":8161,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8961,"byte_end":8970,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"set_after","qualname":"<Timer>::set_after","value":"fn set_after<'_>(&'_ mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit an en event once after the given duration of time.","sig":null,"attributes":[{"value":"/ Sets the timer to emit an en event once after the given duration of time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8350,"byte_end":8427,"line_start":273,"line_end":273,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8432,"byte_end":8435,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8440,"byte_end":8518,"line_start":275,"line_end":275,"column_start":5,"column_end":83}},{"value":"/ [`set_after()`][`Timer::set_after()`] does not remove the waker associated with the task","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8523,"byte_end":8615,"line_start":276,"line_end":276,"column_start":5,"column_end":97}},{"value":"/ that is polling the timer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8620,"byte_end":8650,"line_start":277,"line_end":277,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8655,"byte_end":8658,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8663,"byte_end":8677,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8682,"byte_end":8685,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8690,"byte_end":8697,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8702,"byte_end":8726,"line_start":282,"line_end":282,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8731,"byte_end":8759,"line_start":283,"line_end":283,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8764,"byte_end":8767,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8772,"byte_end":8816,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8821,"byte_end":8874,"line_start":286,"line_end":286,"column_start":5,"column_end":58}},{"value":"/ t.set_after(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8879,"byte_end":8923,"line_start":287,"line_end":287,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8928,"byte_end":8937,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":8942,"byte_end":8949,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9949,"byte_end":9955,"line_start":321,"line_end":321,"column_start":12,"column_end":18},"name":"set_at","qualname":"<Timer>::set_at","value":"fn set_at<'_>(&'_ mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit an event once at the given time instant.","sig":null,"attributes":[{"value":"/ Sets the timer to emit an event once at the given time instant.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9277,"byte_end":9344,"line_start":301,"line_end":301,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9349,"byte_end":9352,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9357,"byte_end":9435,"line_start":303,"line_end":303,"column_start":5,"column_end":83}},{"value":"/ [`set_at()`][`Timer::set_at()`] does not remove the waker associated with the task","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9440,"byte_end":9526,"line_start":304,"line_end":304,"column_start":5,"column_end":91}},{"value":"/ that is polling the timer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9531,"byte_end":9561,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9566,"byte_end":9569,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9574,"byte_end":9588,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9593,"byte_end":9596,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9601,"byte_end":9608,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9613,"byte_end":9637,"line_start":310,"line_end":310,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9642,"byte_end":9681,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9686,"byte_end":9689,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9694,"byte_end":9738,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9743,"byte_end":9796,"line_start":314,"line_end":314,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9801,"byte_end":9804,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9809,"byte_end":9838,"line_start":316,"line_end":316,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9843,"byte_end":9887,"line_start":317,"line_end":317,"column_start":5,"column_end":49}},{"value":"/ t.set_at(when);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9892,"byte_end":9911,"line_start":318,"line_end":318,"column_start":5,"column_end":24}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9916,"byte_end":9925,"line_start":319,"line_end":319,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":9930,"byte_end":9937,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10955,"byte_end":10967,"line_start":353,"line_end":353,"column_start":12,"column_end":24},"name":"set_interval","qualname":"<Timer>::set_interval","value":"fn set_interval<'_>(&'_ mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit events periodically.","sig":null,"attributes":[{"value":"/ Sets the timer to emit events periodically.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10284,"byte_end":10331,"line_start":333,"line_end":333,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10336,"byte_end":10339,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10344,"byte_end":10422,"line_start":335,"line_end":335,"column_start":5,"column_end":83}},{"value":"/ [`set_interval()`][`Timer::set_interval()`] does not remove the waker associated with the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10427,"byte_end":10520,"line_start":336,"line_end":336,"column_start":5,"column_end":98}},{"value":"/ task that is polling the timer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10525,"byte_end":10560,"line_start":337,"line_end":337,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10565,"byte_end":10568,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10573,"byte_end":10587,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10592,"byte_end":10595,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10600,"byte_end":10607,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10612,"byte_end":10636,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10641,"byte_end":10673,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10678,"byte_end":10717,"line_start":344,"line_end":344,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10722,"byte_end":10725,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10730,"byte_end":10774,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10779,"byte_end":10832,"line_start":347,"line_end":347,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10837,"byte_end":10840,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let period = Duration::from_secs(2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10845,"byte_end":10885,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/ t.set_interval(period);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10890,"byte_end":10917,"line_start":350,"line_end":350,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10922,"byte_end":10931,"line_start":351,"line_end":351,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":10936,"byte_end":10943,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":12031,"byte_end":12046,"line_start":385,"line_end":385,"column_start":12,"column_end":27},"name":"set_interval_at","qualname":"<Timer>::set_interval_at","value":"fn set_interval_at<'_>(&'_ mut Self, Instant, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit events periodically, starting at `start`.","sig":null,"attributes":[{"value":"/ Sets the timer to emit events periodically, starting at `start`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11287,"byte_end":11355,"line_start":364,"line_end":364,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11360,"byte_end":11363,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11368,"byte_end":11446,"line_start":366,"line_end":366,"column_start":5,"column_end":83}},{"value":"/ [`set_interval_at()`][`Timer::set_interval_at()`] does not remove the waker associated with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11451,"byte_end":11546,"line_start":367,"line_end":367,"column_start":5,"column_end":100}},{"value":"/ the task that is polling the timer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11551,"byte_end":11590,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11595,"byte_end":11598,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11603,"byte_end":11617,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11622,"byte_end":11625,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11630,"byte_end":11637,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11642,"byte_end":11666,"line_start":373,"line_end":373,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11671,"byte_end":11703,"line_start":374,"line_end":374,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11708,"byte_end":11747,"line_start":375,"line_end":375,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11752,"byte_end":11755,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11760,"byte_end":11804,"line_start":377,"line_end":377,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11809,"byte_end":11862,"line_start":378,"line_end":378,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11867,"byte_end":11870,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ let start = Instant::now();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11875,"byte_end":11906,"line_start":380,"line_end":380,"column_start":5,"column_end":36}},{"value":"/ let period = Duration::from_secs(2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11911,"byte_end":11951,"line_start":381,"line_end":381,"column_start":5,"column_end":45}},{"value":"/ t.set_interval_at(start, period);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11956,"byte_end":11993,"line_start":382,"line_end":382,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":11998,"byte_end":12007,"line_start":383,"line_end":383,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":12012,"byte_end":12019,"line_start":384,"line_end":384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":12701,"byte_end":12705,"line_start":407,"line_end":407,"column_start":8,"column_end":12},"name":"drop","qualname":"<Timer as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":12987,"byte_end":12991,"line_start":418,"line_end":418,"column_start":8,"column_end":12},"name":"poll","qualname":"<Timer as futures_lite::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":13322,"byte_end":13331,"line_start":430,"line_end":430,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Timer as futures_lite::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18872,"byte_end":18877,"line_start":564,"line_end":564,"column_start":12,"column_end":17},"name":"Async","qualname":"::Async","value":"Async {  }","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"decl_id":null,"docs":" Async adapter for I/O types.","sig":null,"attributes":[{"value":"/ Async adapter for I/O types.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15141,"byte_end":15173,"line_start":472,"line_end":472,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15174,"byte_end":15177,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ This type puts an I/O handle into non-blocking mode, registers it in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15178,"byte_end":15250,"line_start":474,"line_end":474,"column_start":1,"column_end":73}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll], and then provides an async interface for it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15251,"byte_end":15340,"line_start":475,"line_end":475,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15341,"byte_end":15344,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15345,"byte_end":15393,"line_start":477,"line_end":477,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15394,"byte_end":15444,"line_start":478,"line_end":478,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15445,"byte_end":15499,"line_start":479,"line_end":479,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15500,"byte_end":15552,"line_start":480,"line_end":480,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15553,"byte_end":15556,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15557,"byte_end":15570,"line_start":482,"line_end":482,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15571,"byte_end":15574,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ [`Async`] is a low-level primitive, and as such it comes with some caveats.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15575,"byte_end":15654,"line_start":484,"line_end":484,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15655,"byte_end":15658,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ For higher-level primitives built on top of [`Async`], look into [`async-net`] or","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15659,"byte_end":15744,"line_start":486,"line_end":486,"column_start":1,"column_end":86}},{"value":"/ [`async-process`] (on Unix).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15745,"byte_end":15777,"line_start":487,"line_end":487,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15778,"byte_end":15781,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ [`async-net`]: https://github.com/smol-rs/async-net","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15782,"byte_end":15837,"line_start":489,"line_end":489,"column_start":1,"column_end":56}},{"value":"/ [`async-process`]: https://github.com/smol-rs/async-process","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15838,"byte_end":15901,"line_start":490,"line_end":490,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15902,"byte_end":15905,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ ### Supported types","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15906,"byte_end":15929,"line_start":492,"line_end":492,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15930,"byte_end":15933,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ [`Async`] supports all networking types, as well as some OS-specific file descriptors like","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":15934,"byte_end":16028,"line_start":494,"line_end":494,"column_start":1,"column_end":95}},{"value":"/ [timerfd] and [inotify].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16029,"byte_end":16057,"line_start":495,"line_end":495,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16058,"byte_end":16061,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ However, do not use [`Async`] with types like [`File`][`std::fs::File`],","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16062,"byte_end":16138,"line_start":497,"line_end":497,"column_start":1,"column_end":77}},{"value":"/ [`Stdin`][`std::io::Stdin`], [`Stdout`][`std::io::Stdout`], or [`Stderr`][`std::io::Stderr`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16139,"byte_end":16235,"line_start":498,"line_end":498,"column_start":1,"column_end":97}},{"value":"/ because all operating systems have issues with them when put in non-blocking mode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16236,"byte_end":16322,"line_start":499,"line_end":499,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16323,"byte_end":16326,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [timerfd]: https://github.com/smol-rs/async-io/blob/master/examples/linux-timerfd.rs","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16327,"byte_end":16415,"line_start":501,"line_end":501,"column_start":1,"column_end":89}},{"value":"/ [inotify]: https://github.com/smol-rs/async-io/blob/master/examples/linux-inotify.rs","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16416,"byte_end":16504,"line_start":502,"line_end":502,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16505,"byte_end":16508,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ ### Concurrent I/O","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16509,"byte_end":16531,"line_start":504,"line_end":504,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16532,"byte_end":16535,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ Note that [`&Async<T>`][`Async`] implements [`AsyncRead`] and [`AsyncWrite`] if `&T`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16536,"byte_end":16624,"line_start":506,"line_end":506,"column_start":1,"column_end":89}},{"value":"/ implements those traits, which means tasks can concurrently read and write using shared","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16625,"byte_end":16716,"line_start":507,"line_end":507,"column_start":1,"column_end":92}},{"value":"/ references.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16717,"byte_end":16732,"line_start":508,"line_end":508,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16733,"byte_end":16736,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ But there is a catch: only one task can read a time, and only one task can write at a time. It","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16737,"byte_end":16835,"line_start":510,"line_end":510,"column_start":1,"column_end":99}},{"value":"/ is okay to have two tasks where one is reading and the other is writing at the same time, but","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16836,"byte_end":16933,"line_start":511,"line_end":511,"column_start":1,"column_end":98}},{"value":"/ it is not okay to have two tasks reading at the same time or writing at the same time. If you","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":16934,"byte_end":17031,"line_start":512,"line_end":512,"column_start":1,"column_end":98}},{"value":"/ try to do that, conflicting tasks will just keep waking each other in turn, thus wasting CPU","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17032,"byte_end":17128,"line_start":513,"line_end":513,"column_start":1,"column_end":97}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17129,"byte_end":17138,"line_start":514,"line_end":514,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17139,"byte_end":17142,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ Besides [`AsyncRead`] and [`AsyncWrite`], this caveat also applies to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17143,"byte_end":17216,"line_start":516,"line_end":516,"column_start":1,"column_end":74}},{"value":"/ [`poll_readable()`][`Async::poll_readable()`] and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17217,"byte_end":17270,"line_start":517,"line_end":517,"column_start":1,"column_end":54}},{"value":"/ [`poll_writable()`][`Async::poll_writable()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17271,"byte_end":17321,"line_start":518,"line_end":518,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17322,"byte_end":17325,"line_start":519,"line_end":519,"column_start":1,"column_end":4}},{"value":"/ However, any number of tasks can be concurrently calling other methods like","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17326,"byte_end":17405,"line_start":520,"line_end":520,"column_start":1,"column_end":80}},{"value":"/ [`readable()`][`Async::readable()`] or [`read_with()`][`Async::read_with()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17406,"byte_end":17487,"line_start":521,"line_end":521,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17488,"byte_end":17491,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ ### Closing","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17492,"byte_end":17507,"line_start":523,"line_end":523,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17508,"byte_end":17511,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ Closing the write side of [`Async`] with [`close()`][`futures_lite::AsyncWriteExt::close()`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17512,"byte_end":17608,"line_start":525,"line_end":525,"column_start":1,"column_end":97}},{"value":"/ simply flushes. If you want to shutdown a TCP or Unix socket, use","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17609,"byte_end":17678,"line_start":526,"line_end":526,"column_start":1,"column_end":70}},{"value":"/ [`Shutdown`][`std::net::Shutdown`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17679,"byte_end":17718,"line_start":527,"line_end":527,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17719,"byte_end":17722,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17723,"byte_end":17737,"line_start":529,"line_end":529,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17738,"byte_end":17741,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ Connect to a server and echo incoming messages back to the server:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17742,"byte_end":17812,"line_start":531,"line_end":531,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17813,"byte_end":17816,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17817,"byte_end":17830,"line_start":533,"line_end":533,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17831,"byte_end":17855,"line_start":534,"line_end":534,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17856,"byte_end":17881,"line_start":535,"line_end":535,"column_start":1,"column_end":26}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17882,"byte_end":17910,"line_start":536,"line_end":536,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17911,"byte_end":17914,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17915,"byte_end":17959,"line_start":538,"line_end":538,"column_start":1,"column_end":45}},{"value":"/ // Connect to a local server.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17960,"byte_end":17993,"line_start":539,"line_end":539,"column_start":1,"column_end":34}},{"value":"/ let stream = Async::<TcpStream>::connect(([127, 0, 0, 1], 8000)).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":17994,"byte_end":18070,"line_start":540,"line_end":540,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18071,"byte_end":18074,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ // Echo all messages from the read side of the stream into the write side.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18075,"byte_end":18153,"line_start":542,"line_end":542,"column_start":1,"column_end":79}},{"value":"/ io::copy(&stream, &stream).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18154,"byte_end":18192,"line_start":543,"line_end":543,"column_start":1,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18193,"byte_end":18226,"line_start":544,"line_end":544,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18227,"byte_end":18234,"line_start":545,"line_end":545,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18235,"byte_end":18238,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ You can use either predefined async methods or wrap blocking I/O operations in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18239,"byte_end":18321,"line_start":547,"line_end":547,"column_start":1,"column_end":83}},{"value":"/ [`Async::read_with()`], [`Async::read_with_mut()`], [`Async::write_with()`], and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18322,"byte_end":18406,"line_start":548,"line_end":548,"column_start":1,"column_end":85}},{"value":"/ [`Async::write_with_mut()`]:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18407,"byte_end":18439,"line_start":549,"line_end":549,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18440,"byte_end":18443,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18444,"byte_end":18457,"line_start":551,"line_end":551,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18458,"byte_end":18482,"line_start":552,"line_end":552,"column_start":1,"column_end":25}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18483,"byte_end":18513,"line_start":553,"line_end":553,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18514,"byte_end":18517,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18518,"byte_end":18562,"line_start":555,"line_end":555,"column_start":1,"column_end":45}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18563,"byte_end":18631,"line_start":556,"line_end":556,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18632,"byte_end":18635,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ // These two lines are equivalent:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18636,"byte_end":18674,"line_start":558,"line_end":558,"column_start":1,"column_end":39}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18675,"byte_end":18725,"line_start":559,"line_end":559,"column_start":1,"column_end":51}},{"value":"/ let (stream, addr) = listener.read_with(|inner| inner.accept()).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18726,"byte_end":18801,"line_start":560,"line_end":560,"column_start":1,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18802,"byte_end":18835,"line_start":561,"line_end":561,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":18836,"byte_end":18843,"line_start":562,"line_end":562,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":22253,"byte_end":22256,"line_start":679,"line_end":679,"column_start":12,"column_end":15},"name":"new","qualname":"<Async<T>>::new","value":"fn new(T) -> io::Result<Async<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an async I/O handle.","sig":null,"attributes":[{"value":"/ Creates an async I/O handle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21352,"byte_end":21384,"line_start":655,"line_end":655,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21389,"byte_end":21392,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ This method will put the handle in non-blocking mode and register it in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21397,"byte_end":21472,"line_start":657,"line_end":657,"column_start":5,"column_end":80}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21477,"byte_end":21521,"line_start":658,"line_end":658,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21526,"byte_end":21529,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ On Unix systems, the handle must implement `AsRawFd`, while on Windows it must implement","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21534,"byte_end":21626,"line_start":660,"line_end":660,"column_start":5,"column_end":97}},{"value":"/ `AsRawSocket`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21631,"byte_end":21649,"line_start":661,"line_end":661,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21654,"byte_end":21657,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21662,"byte_end":21710,"line_start":663,"line_end":663,"column_start":5,"column_end":53}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21715,"byte_end":21765,"line_start":664,"line_end":664,"column_start":5,"column_end":55}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21770,"byte_end":21824,"line_start":665,"line_end":665,"column_start":5,"column_end":59}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21829,"byte_end":21881,"line_start":666,"line_end":666,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21886,"byte_end":21889,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21894,"byte_end":21908,"line_start":668,"line_end":668,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21913,"byte_end":21916,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21921,"byte_end":21928,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21933,"byte_end":21957,"line_start":671,"line_end":671,"column_start":5,"column_end":29}},{"value":"/ use std::net::{SocketAddr, TcpListener};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21962,"byte_end":22006,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":22011,"byte_end":22014,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":22019,"byte_end":22063,"line_start":674,"line_end":674,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(SocketAddr::from(([127, 0, 0, 1], 0)))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":22068,"byte_end":22145,"line_start":675,"line_end":675,"column_start":5,"column_end":82}},{"value":"/ let listener = Async::new(listener)?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":22150,"byte_end":22191,"line_start":676,"line_end":676,"column_start":5,"column_end":46}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":22196,"byte_end":22229,"line_start":677,"line_end":677,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":22234,"byte_end":22241,"line_start":678,"line_end":678,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":22846,"byte_end":22859,"line_start":701,"line_end":701,"column_start":8,"column_end":21},"name":"as_raw_socket","qualname":"<Async<T> as std::os::windows::io::AsRawSocket>::as_raw_socket","value":"fn as_raw_socket<'_>(&'_ Self) -> RawSocket","parent":{"krate":1,"index":5951},"children":[],"decl_id":{"krate":1,"index":5952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23013,"byte_end":23022,"line_start":708,"line_end":708,"column_start":8,"column_end":17},"name":"as_socket","qualname":"<Async<T> as std::os::windows::io::AsSocket>::as_socket","value":"fn as_socket<'_>(&'_ Self) -> BorrowedSocket","parent":{"krate":1,"index":6037},"children":[],"decl_id":{"krate":1,"index":6038},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23260,"byte_end":23268,"line_start":717,"line_end":717,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Async<T> as std::convert::TryFrom>::try_from","value":"fn try_from(OwnedSocket) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3181},"children":[],"decl_id":{"krate":2,"index":3184},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23510,"byte_end":23518,"line_start":726,"line_end":726,"column_start":8,"column_end":16},"name":"try_from","qualname":"<OwnedSocket as std::convert::TryFrom>::try_from","value":"fn try_from(Async<T>) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3181},"children":[],"decl_id":{"krate":2,"index":3184},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24030,"byte_end":24037,"line_start":745,"line_end":745,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Async<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a reference to the inner I/O handle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23642,"byte_end":23687,"line_start":732,"line_end":732,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23692,"byte_end":23695,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23700,"byte_end":23714,"line_start":734,"line_end":734,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23719,"byte_end":23722,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23727,"byte_end":23734,"line_start":736,"line_end":736,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23739,"byte_end":23763,"line_start":737,"line_end":737,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23768,"byte_end":23798,"line_start":738,"line_end":738,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23803,"byte_end":23806,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23811,"byte_end":23855,"line_start":740,"line_end":740,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23860,"byte_end":23928,"line_start":741,"line_end":741,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.get_ref();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23933,"byte_end":23968,"line_start":742,"line_end":742,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23973,"byte_end":24006,"line_start":743,"line_end":743,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24011,"byte_end":24018,"line_start":744,"line_end":744,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24498,"byte_end":24505,"line_start":762,"line_end":762,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Async<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the inner I/O handle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24098,"byte_end":24151,"line_start":749,"line_end":749,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24156,"byte_end":24159,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24164,"byte_end":24178,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24183,"byte_end":24186,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24191,"byte_end":24198,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24203,"byte_end":24227,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24232,"byte_end":24262,"line_start":755,"line_end":755,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24267,"byte_end":24270,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24275,"byte_end":24319,"line_start":757,"line_end":757,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24324,"byte_end":24396,"line_start":758,"line_end":758,"column_start":5,"column_end":77}},{"value":"/ let inner = listener.get_mut();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24401,"byte_end":24436,"line_start":759,"line_end":759,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24441,"byte_end":24474,"line_start":760,"line_end":760,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24479,"byte_end":24486,"line_start":761,"line_end":761,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25139,"byte_end":25149,"line_start":784,"line_end":784,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Async<T>>::into_inner","value":"fn into_inner(Self) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the inner I/O handle.","sig":null,"attributes":[{"value":"/ Unwraps the inner I/O handle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24574,"byte_end":24607,"line_start":766,"line_end":766,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24612,"byte_end":24615,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This method will **not** put the I/O handle back into blocking mode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24620,"byte_end":24692,"line_start":768,"line_end":768,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24697,"byte_end":24700,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24705,"byte_end":24719,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24724,"byte_end":24727,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24732,"byte_end":24739,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24744,"byte_end":24768,"line_start":773,"line_end":773,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24773,"byte_end":24803,"line_start":774,"line_end":774,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24808,"byte_end":24811,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24816,"byte_end":24860,"line_start":776,"line_end":776,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24865,"byte_end":24933,"line_start":777,"line_end":777,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.into_inner()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24938,"byte_end":24977,"line_start":778,"line_end":778,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24982,"byte_end":24985,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ // Put the listener back into blocking mode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":24990,"byte_end":25038,"line_start":780,"line_end":780,"column_start":5,"column_end":53}},{"value":"/ inner.set_nonblocking(false)?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25043,"byte_end":25077,"line_start":781,"line_end":781,"column_start":5,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25082,"byte_end":25115,"line_start":782,"line_end":782,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25120,"byte_end":25127,"line_start":783,"line_end":783,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25839,"byte_end":25847,"line_start":807,"line_end":807,"column_start":12,"column_end":20},"name":"readable","qualname":"<Async<T>>::readable","value":"fn readable<'_>(&'_ Self) -> Readable","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is readable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is readable.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25296,"byte_end":25339,"line_start":790,"line_end":790,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25344,"byte_end":25347,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ This method completes when a read operation on this I/O handle wouldn't block.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25352,"byte_end":25434,"line_start":792,"line_end":792,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25439,"byte_end":25442,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25447,"byte_end":25461,"line_start":794,"line_end":794,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25466,"byte_end":25469,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25474,"byte_end":25487,"line_start":796,"line_end":796,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25492,"byte_end":25516,"line_start":797,"line_end":797,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25521,"byte_end":25551,"line_start":798,"line_end":798,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25556,"byte_end":25559,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25564,"byte_end":25608,"line_start":800,"line_end":800,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25613,"byte_end":25685,"line_start":801,"line_end":801,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25690,"byte_end":25693,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ // Wait until a client can be accepted.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25698,"byte_end":25741,"line_start":803,"line_end":803,"column_start":5,"column_end":48}},{"value":"/ listener.readable().await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25746,"byte_end":25777,"line_start":804,"line_end":804,"column_start":5,"column_end":36}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25782,"byte_end":25815,"line_start":805,"line_end":805,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25820,"byte_end":25827,"line_start":806,"line_end":806,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26068,"byte_end":26082,"line_start":814,"line_end":814,"column_start":12,"column_end":26},"name":"readable_owned","qualname":"<Async<T>>::readable_owned","value":"fn readable_owned(Arc<Self>) -> ReadableOwned<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is readable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is readable.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25918,"byte_end":25961,"line_start":811,"line_end":811,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25966,"byte_end":25969,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method completes when a read operation on this I/O handle wouldn't block.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":25974,"byte_end":26056,"line_start":813,"line_end":813,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26777,"byte_end":26785,"line_start":836,"line_end":836,"column_start":12,"column_end":20},"name":"writable","qualname":"<Async<T>>::writable","value":"fn writable<'_>(&'_ Self) -> Writable","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is writable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is writable.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26170,"byte_end":26213,"line_start":818,"line_end":818,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26218,"byte_end":26221,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ This method completes when a write operation on this I/O handle wouldn't block.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26226,"byte_end":26309,"line_start":820,"line_end":820,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26314,"byte_end":26317,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26322,"byte_end":26336,"line_start":822,"line_end":822,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26341,"byte_end":26344,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26349,"byte_end":26356,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26361,"byte_end":26385,"line_start":825,"line_end":825,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26390,"byte_end":26435,"line_start":826,"line_end":826,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26440,"byte_end":26443,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26448,"byte_end":26492,"line_start":828,"line_end":828,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26497,"byte_end":26564,"line_start":829,"line_end":829,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26569,"byte_end":26627,"line_start":830,"line_end":830,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26632,"byte_end":26635,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26640,"byte_end":26681,"line_start":832,"line_end":832,"column_start":5,"column_end":46}},{"value":"/ stream.writable().await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26686,"byte_end":26715,"line_start":833,"line_end":833,"column_start":5,"column_end":34}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26720,"byte_end":26753,"line_start":834,"line_end":834,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26758,"byte_end":26765,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27007,"byte_end":27021,"line_start":843,"line_end":843,"column_start":12,"column_end":26},"name":"writable_owned","qualname":"<Async<T>>::writable_owned","value":"fn writable_owned(Arc<Self>) -> WritableOwned<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is writable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is writable.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26856,"byte_end":26899,"line_start":840,"line_end":840,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26904,"byte_end":26907,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ This method completes when a write operation on this I/O handle wouldn't block.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":26912,"byte_end":26995,"line_start":842,"line_end":842,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28142,"byte_end":28155,"line_start":874,"line_end":874,"column_start":12,"column_end":25},"name":"poll_readable","qualname":"<Async<T>>::poll_readable","value":"fn poll_readable<'_, '_, '_>(&'_ Self, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the I/O handle for readability.","sig":null,"attributes":[{"value":"/ Polls the I/O handle for readability.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27109,"byte_end":27150,"line_start":847,"line_end":847,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27155,"byte_end":27158,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ When this method returns [`Poll::Ready`], that means the OS has delivered an event","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27163,"byte_end":27249,"line_start":849,"line_end":849,"column_start":5,"column_end":91}},{"value":"/ indicating readability since the last time this task has called the method and received","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27254,"byte_end":27345,"line_start":850,"line_end":850,"column_start":5,"column_end":96}},{"value":"/ [`Poll::Pending`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27350,"byte_end":27372,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27377,"byte_end":27380,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27385,"byte_end":27398,"line_start":853,"line_end":853,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27403,"byte_end":27406,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Two different tasks should not call this method concurrently. Otherwise, conflicting tasks","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27411,"byte_end":27505,"line_start":855,"line_end":855,"column_start":5,"column_end":99}},{"value":"/ will just keep waking each other in turn, thus wasting CPU time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27510,"byte_end":27578,"line_start":856,"line_end":856,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27583,"byte_end":27586,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ Note that the [`AsyncRead`] implementation for [`Async`] also uses this method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27591,"byte_end":27674,"line_start":858,"line_end":858,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27679,"byte_end":27682,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27687,"byte_end":27701,"line_start":860,"line_end":860,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27706,"byte_end":27709,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27714,"byte_end":27727,"line_start":862,"line_end":862,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27732,"byte_end":27756,"line_start":863,"line_end":863,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::future;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27761,"byte_end":27790,"line_start":864,"line_end":864,"column_start":5,"column_end":34}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27795,"byte_end":27825,"line_start":865,"line_end":865,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27830,"byte_end":27833,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27838,"byte_end":27882,"line_start":867,"line_end":867,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27887,"byte_end":27959,"line_start":868,"line_end":868,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27964,"byte_end":27967,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ // Wait until a client can be accepted.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":27972,"byte_end":28015,"line_start":870,"line_end":870,"column_start":5,"column_end":48}},{"value":"/ future::poll_fn(|cx| listener.poll_readable(cx)).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28020,"byte_end":28080,"line_start":871,"line_end":871,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28085,"byte_end":28118,"line_start":872,"line_end":872,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28123,"byte_end":28130,"line_start":873,"line_end":873,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29357,"byte_end":29370,"line_start":906,"line_end":906,"column_start":12,"column_end":25},"name":"poll_writable","qualname":"<Async<T>>::poll_writable","value":"fn poll_writable<'_, '_, '_>(&'_ Self, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the I/O handle for writability.","sig":null,"attributes":[{"value":"/ Polls the I/O handle for writability.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28260,"byte_end":28301,"line_start":878,"line_end":878,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28306,"byte_end":28309,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ When this method returns [`Poll::Ready`], that means the OS has delivered an event","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28314,"byte_end":28400,"line_start":880,"line_end":880,"column_start":5,"column_end":91}},{"value":"/ indicating writability since the last time this task has called the method and received","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28405,"byte_end":28496,"line_start":881,"line_end":881,"column_start":5,"column_end":96}},{"value":"/ [`Poll::Pending`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28501,"byte_end":28523,"line_start":882,"line_end":882,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28528,"byte_end":28531,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28536,"byte_end":28549,"line_start":884,"line_end":884,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28554,"byte_end":28557,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ Two different tasks should not call this method concurrently. Otherwise, conflicting tasks","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28562,"byte_end":28656,"line_start":886,"line_end":886,"column_start":5,"column_end":99}},{"value":"/ will just keep waking each other in turn, thus wasting CPU time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28661,"byte_end":28729,"line_start":887,"line_end":887,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28734,"byte_end":28737,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ Note that the [`AsyncWrite`] implementation for [`Async`] also uses this method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28742,"byte_end":28826,"line_start":889,"line_end":889,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28831,"byte_end":28834,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28839,"byte_end":28853,"line_start":891,"line_end":891,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28858,"byte_end":28861,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28866,"byte_end":28873,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28878,"byte_end":28902,"line_start":894,"line_end":894,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::future;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28907,"byte_end":28936,"line_start":895,"line_end":895,"column_start":5,"column_end":34}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28941,"byte_end":28986,"line_start":896,"line_end":896,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28991,"byte_end":28994,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":28999,"byte_end":29043,"line_start":898,"line_end":898,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29048,"byte_end":29115,"line_start":899,"line_end":899,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29120,"byte_end":29178,"line_start":900,"line_end":900,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29183,"byte_end":29186,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29191,"byte_end":29232,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ future::poll_fn(|cx| stream.poll_writable(cx)).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29237,"byte_end":29295,"line_start":903,"line_end":903,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29300,"byte_end":29333,"line_start":904,"line_end":904,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29338,"byte_end":29345,"line_start":905,"line_end":905,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30389,"byte_end":30398,"line_start":932,"line_end":932,"column_start":18,"column_end":27},"name":"read_with","qualname":"<Async<T>>::read_with","value":"async fn read_with<R, '_,\nimpl FnMut(&T) -> io::Result<R>>(&'_ Self, impl FnMut(&T) -> io::Result<R>)\n-> /*impl Trait*/ where impl FnMut(&T) -> io::Result<R>: for<'_> FnMut(&'_ T)\n-> io::Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29475,"byte_end":29520,"line_start":910,"line_end":910,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29525,"byte_end":29528,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29533,"byte_end":29622,"line_start":912,"line_end":912,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29627,"byte_end":29714,"line_start":913,"line_end":913,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29719,"byte_end":29810,"line_start":914,"line_end":914,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29815,"byte_end":29872,"line_start":915,"line_end":915,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29877,"byte_end":29880,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29885,"byte_end":29947,"line_start":917,"line_end":917,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29952,"byte_end":29955,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29960,"byte_end":29974,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29979,"byte_end":29982,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":29987,"byte_end":30000,"line_start":921,"line_end":921,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30005,"byte_end":30029,"line_start":922,"line_end":922,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30034,"byte_end":30064,"line_start":923,"line_end":923,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30069,"byte_end":30072,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30077,"byte_end":30121,"line_start":925,"line_end":925,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30126,"byte_end":30194,"line_start":926,"line_end":926,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30199,"byte_end":30202,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30207,"byte_end":30249,"line_start":928,"line_end":928,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with(|l| l.accept()).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30254,"byte_end":30321,"line_start":929,"line_end":929,"column_start":5,"column_end":72}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30326,"byte_end":30359,"line_start":930,"line_end":930,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30364,"byte_end":30371,"line_start":931,"line_end":931,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31659,"byte_end":31672,"line_start":965,"line_end":965,"column_start":18,"column_end":31},"name":"read_with_mut","qualname":"<Async<T>>::read_with_mut","value":"async fn read_with_mut<R, '_,\nimpl FnMut(&mut T) -> io::Result<R>>(&'_ mut Self,\nimpl FnMut(&mut T) -> io::Result<R>) -> /*impl Trait*/ where\nimpl FnMut(&mut T) -> io::Result<R>: for<'_> FnMut(&'_ mut T) -> io::Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30736,"byte_end":30781,"line_start":943,"line_end":943,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30786,"byte_end":30789,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30794,"byte_end":30883,"line_start":945,"line_end":945,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30888,"byte_end":30975,"line_start":946,"line_end":946,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":30980,"byte_end":31071,"line_start":947,"line_end":947,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31076,"byte_end":31133,"line_start":948,"line_end":948,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31138,"byte_end":31141,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31146,"byte_end":31209,"line_start":950,"line_end":950,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31214,"byte_end":31217,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31222,"byte_end":31236,"line_start":952,"line_end":952,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31241,"byte_end":31244,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31249,"byte_end":31262,"line_start":954,"line_end":954,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31267,"byte_end":31291,"line_start":955,"line_end":955,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31296,"byte_end":31326,"line_start":956,"line_end":956,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31331,"byte_end":31334,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31339,"byte_end":31383,"line_start":958,"line_end":958,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31388,"byte_end":31460,"line_start":959,"line_end":959,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31465,"byte_end":31468,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31473,"byte_end":31515,"line_start":961,"line_end":961,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with_mut(|l| l.accept()).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31520,"byte_end":31591,"line_start":962,"line_end":962,"column_start":5,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31596,"byte_end":31629,"line_start":963,"line_end":963,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":31634,"byte_end":31641,"line_start":964,"line_end":964,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32976,"byte_end":32986,"line_start":1002,"line_end":1002,"column_start":18,"column_end":28},"name":"write_with","qualname":"<Async<T>>::write_with","value":"async fn write_with<R, '_,\nimpl FnMut(&T) -> io::Result<R>>(&'_ Self, impl FnMut(&T) -> io::Result<R>)\n-> /*impl Trait*/ where impl FnMut(&T) -> io::Result<R>: for<'_> FnMut(&'_ T)\n-> io::Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32041,"byte_end":32087,"line_start":979,"line_end":979,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32092,"byte_end":32095,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32100,"byte_end":32189,"line_start":981,"line_end":981,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32194,"byte_end":32281,"line_start":982,"line_end":982,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32286,"byte_end":32377,"line_start":983,"line_end":983,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32382,"byte_end":32439,"line_start":984,"line_end":984,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32444,"byte_end":32447,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32452,"byte_end":32514,"line_start":986,"line_end":986,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32519,"byte_end":32522,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32527,"byte_end":32541,"line_start":988,"line_end":988,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32546,"byte_end":32549,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32554,"byte_end":32567,"line_start":990,"line_end":990,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32572,"byte_end":32596,"line_start":991,"line_end":991,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32601,"byte_end":32629,"line_start":992,"line_end":992,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32634,"byte_end":32637,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32642,"byte_end":32686,"line_start":994,"line_end":994,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32691,"byte_end":32758,"line_start":995,"line_end":995,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32763,"byte_end":32811,"line_start":996,"line_end":996,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32816,"byte_end":32819,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32824,"byte_end":32847,"line_start":998,"line_end":998,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with(|s| s.send(msg)).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32852,"byte_end":32908,"line_start":999,"line_end":999,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32913,"byte_end":32946,"line_start":1000,"line_end":1000,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":32951,"byte_end":32958,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34268,"byte_end":34282,"line_start":1036,"line_end":1036,"column_start":18,"column_end":32},"name":"write_with_mut","qualname":"<Async<T>>::write_with_mut","value":"async fn write_with_mut<R, '_,\nimpl FnMut(&mut T) -> io::Result<R>>(&'_ mut Self,\nimpl FnMut(&mut T) -> io::Result<R>) -> /*impl Trait*/ where\nimpl FnMut(&mut T) -> io::Result<R>: for<'_> FnMut(&'_ mut T) -> io::Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33324,"byte_end":33370,"line_start":1013,"line_end":1013,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33375,"byte_end":33378,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33383,"byte_end":33472,"line_start":1015,"line_end":1015,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33477,"byte_end":33564,"line_start":1016,"line_end":1016,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33569,"byte_end":33660,"line_start":1017,"line_end":1017,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33665,"byte_end":33722,"line_start":1018,"line_end":1018,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33727,"byte_end":33730,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33735,"byte_end":33798,"line_start":1020,"line_end":1020,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33803,"byte_end":33806,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33811,"byte_end":33825,"line_start":1022,"line_end":1022,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33830,"byte_end":33833,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33838,"byte_end":33851,"line_start":1024,"line_end":1024,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33856,"byte_end":33880,"line_start":1025,"line_end":1025,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33885,"byte_end":33913,"line_start":1026,"line_end":1026,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33918,"byte_end":33921,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33926,"byte_end":33970,"line_start":1028,"line_end":1028,"column_start":5,"column_end":49}},{"value":"/ let mut socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":33975,"byte_end":34046,"line_start":1029,"line_end":1029,"column_start":5,"column_end":76}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34051,"byte_end":34099,"line_start":1030,"line_end":1030,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34104,"byte_end":34107,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34112,"byte_end":34135,"line_start":1032,"line_end":1032,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with_mut(|s| s.send(msg)).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34140,"byte_end":34200,"line_start":1033,"line_end":1033,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34205,"byte_end":34238,"line_start":1034,"line_end":1034,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34243,"byte_end":34250,"line_start":1035,"line_end":1035,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34688,"byte_end":34694,"line_start":1052,"line_end":1052,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Async<T> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34781,"byte_end":34787,"line_start":1058,"line_end":1058,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<Async<T> as std::convert::AsMut>::as_mut","value":"fn as_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3168},"children":[],"decl_id":{"krate":2,"index":3170},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34878,"byte_end":34882,"line_start":1064,"line_end":1064,"column_start":8,"column_end":12},"name":"drop","qualname":"<Async<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":35208,"byte_end":35217,"line_start":1076,"line_end":1076,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Async<T> as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":39},"children":[],"decl_id":{"krate":21,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":35610,"byte_end":35628,"line_start":1090,"line_end":1090,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Async<T> as futures_lite::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":39},"children":[],"decl_id":{"krate":21,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":36111,"byte_end":36120,"line_start":1109,"line_end":1109,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<&'_ Async<T> as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":39},"children":[],"decl_id":{"krate":21,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":36509,"byte_end":36527,"line_start":1123,"line_end":1123,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<&'_ Async<T> as futures_lite::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":39},"children":[],"decl_id":{"krate":21,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":36982,"byte_end":36992,"line_start":1139,"line_end":1139,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Async<T> as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":37382,"byte_end":37401,"line_start":1153,"line_end":1153,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<Async<T> as futures_lite::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":37811,"byte_end":37821,"line_start":1167,"line_end":1167,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Async<T> as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":38162,"byte_end":38172,"line_start":1177,"line_end":1177,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Async<T> as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":38354,"byte_end":38364,"line_start":1186,"line_end":1186,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<&'_ Async<T> as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":38750,"byte_end":38769,"line_start":1200,"line_end":1200,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<&'_ Async<T> as futures_lite::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39175,"byte_end":39185,"line_start":1214,"line_end":1214,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<&'_ Async<T> as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39522,"byte_end":39532,"line_start":1224,"line_end":1224,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<&'_ Async<T> as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40189,"byte_end":40193,"line_start":1245,"line_end":1245,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<TcpListener>>::bind","value":"fn bind<A>(A) -> io::Result<Async<TcpListener>> where A: Into<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP listener bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP listener bound to the specified address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39670,"byte_end":39728,"line_start":1230,"line_end":1230,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39733,"byte_end":39736,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39741,"byte_end":39815,"line_start":1232,"line_end":1232,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39820,"byte_end":39823,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39828,"byte_end":39842,"line_start":1234,"line_end":1234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39847,"byte_end":39850,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39855,"byte_end":39862,"line_start":1236,"line_end":1236,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39867,"byte_end":39891,"line_start":1237,"line_end":1237,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39896,"byte_end":39926,"line_start":1238,"line_end":1238,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39931,"byte_end":39934,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39939,"byte_end":39983,"line_start":1240,"line_end":1240,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39988,"byte_end":40056,"line_start":1241,"line_end":1241,"column_start":5,"column_end":73}},{"value":"/ println!(\"Listening on {}\", listener.get_ref().local_addr()?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40061,"byte_end":40127,"line_start":1242,"line_end":1242,"column_start":5,"column_end":71}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40132,"byte_end":40165,"line_start":1243,"line_end":1243,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40170,"byte_end":40177,"line_start":1244,"line_end":1244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40938,"byte_end":40944,"line_start":1267,"line_end":1267,"column_start":18,"column_end":24},"name":"accept","qualname":"<Async<TcpListener>>::accept","value":"async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming TCP connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming TCP connection.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40348,"byte_end":40390,"line_start":1250,"line_end":1250,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40395,"byte_end":40398,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, it will be returned as a TCP stream together with its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40403,"byte_end":40494,"line_start":1252,"line_end":1252,"column_start":5,"column_end":96}},{"value":"/ remote address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40499,"byte_end":40518,"line_start":1253,"line_end":1253,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40523,"byte_end":40526,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40531,"byte_end":40545,"line_start":1255,"line_end":1255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40550,"byte_end":40553,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40558,"byte_end":40571,"line_start":1257,"line_end":1257,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40576,"byte_end":40600,"line_start":1258,"line_end":1258,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40605,"byte_end":40635,"line_start":1259,"line_end":1259,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40640,"byte_end":40643,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40648,"byte_end":40692,"line_start":1261,"line_end":1261,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40697,"byte_end":40768,"line_start":1262,"line_end":1262,"column_start":5,"column_end":76}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40773,"byte_end":40823,"line_start":1263,"line_end":1263,"column_start":5,"column_end":55}},{"value":"/ println!(\"Accepted client: {}\", addr);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40828,"byte_end":40870,"line_start":1264,"line_end":1264,"column_start":5,"column_end":47}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40875,"byte_end":40908,"line_start":1265,"line_end":1265,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":40913,"byte_end":40920,"line_start":1266,"line_end":1266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41864,"byte_end":41872,"line_start":1294,"line_end":1294,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Async<TcpListener>>::incoming","value":"fn incoming<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming TCP connections.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41121,"byte_end":41170,"line_start":1272,"line_end":1272,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41175,"byte_end":41178,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ The stream is infinite, i.e. it never stops with a [`None`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41183,"byte_end":41247,"line_start":1274,"line_end":1274,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41252,"byte_end":41255,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41260,"byte_end":41274,"line_start":1276,"line_end":1276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41279,"byte_end":41282,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41287,"byte_end":41300,"line_start":1278,"line_end":1278,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41305,"byte_end":41329,"line_start":1279,"line_end":1279,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{pin, stream::StreamExt};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41334,"byte_end":41381,"line_start":1280,"line_end":1280,"column_start":5,"column_end":52}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41386,"byte_end":41416,"line_start":1281,"line_end":1281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41421,"byte_end":41424,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41429,"byte_end":41473,"line_start":1283,"line_end":1283,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41478,"byte_end":41549,"line_start":1284,"line_end":1284,"column_start":5,"column_end":76}},{"value":"/ let incoming = listener.incoming();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41554,"byte_end":41593,"line_start":1285,"line_end":1285,"column_start":5,"column_end":44}},{"value":"/ pin!(incoming);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41598,"byte_end":41617,"line_start":1286,"line_end":1286,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41622,"byte_end":41625,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41630,"byte_end":41682,"line_start":1288,"line_end":1288,"column_start":5,"column_end":57}},{"value":"/     let stream = stream?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41687,"byte_end":41716,"line_start":1289,"line_end":1289,"column_start":5,"column_end":34}},{"value":"/     println!(\"Accepted client: {}\", stream.get_ref().peer_addr()?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41721,"byte_end":41792,"line_start":1290,"line_end":1290,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41797,"byte_end":41802,"line_start":1291,"line_end":1291,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41807,"byte_end":41840,"line_start":1292,"line_end":1292,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":41845,"byte_end":41852,"line_start":1293,"line_end":1293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42233,"byte_end":42241,"line_start":1305,"line_end":1305,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Async<std::net::TcpListener> as std::convert::TryFrom>::try_from","value":"fn try_from(std::net::TcpListener) -> io::Result<Self>","parent":{"krate":2,"index":3181},"children":[],"decl_id":{"krate":2,"index":3184},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42803,"byte_end":42810,"line_start":1324,"line_end":1324,"column_start":18,"column_end":25},"name":"connect","qualname":"<Async<TcpStream>>::connect","value":"async fn connect<A>(A) -> /*impl Trait*/ where A: Into<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP connection to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP connection to the specified address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42363,"byte_end":42417,"line_start":1311,"line_end":1311,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42422,"byte_end":42425,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42430,"byte_end":42444,"line_start":1313,"line_end":1313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42449,"byte_end":42452,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42457,"byte_end":42464,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42469,"byte_end":42493,"line_start":1316,"line_end":1316,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42498,"byte_end":42543,"line_start":1317,"line_end":1317,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42548,"byte_end":42551,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42556,"byte_end":42600,"line_start":1319,"line_end":1319,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42605,"byte_end":42672,"line_start":1320,"line_end":1320,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42677,"byte_end":42735,"line_start":1321,"line_end":1321,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42740,"byte_end":42773,"line_start":1322,"line_end":1322,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42778,"byte_end":42785,"line_start":1323,"line_end":1323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44233,"byte_end":44237,"line_start":1364,"line_end":1364,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<TcpStream>>::peek","value":"async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads data from the stream without removing it from the buffer.","sig":null,"attributes":[{"value":"/ Reads data from the stream without removing it from the buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43402,"byte_end":43469,"line_start":1341,"line_end":1341,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43474,"byte_end":43477,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read. Successive calls of this method read the same data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43482,"byte_end":43571,"line_start":1343,"line_end":1343,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43576,"byte_end":43579,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43584,"byte_end":43598,"line_start":1345,"line_end":1345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43603,"byte_end":43606,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43611,"byte_end":43618,"line_start":1347,"line_end":1347,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43623,"byte_end":43647,"line_start":1348,"line_end":1348,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{io::AsyncWriteExt, stream::StreamExt};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43652,"byte_end":43713,"line_start":1349,"line_end":1349,"column_start":5,"column_end":66}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43718,"byte_end":43763,"line_start":1350,"line_end":1350,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43768,"byte_end":43771,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43776,"byte_end":43820,"line_start":1352,"line_end":1352,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43825,"byte_end":43892,"line_start":1353,"line_end":1353,"column_start":5,"column_end":72}},{"value":"/ let mut stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43897,"byte_end":43959,"line_start":1354,"line_end":1354,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43964,"byte_end":43967,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ stream","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43972,"byte_end":43982,"line_start":1356,"line_end":1356,"column_start":5,"column_end":15}},{"value":"/     .write_all(b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":43987,"byte_end":44053,"line_start":1357,"line_end":1357,"column_start":5,"column_end":71}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44058,"byte_end":44074,"line_start":1358,"line_end":1358,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44079,"byte_end":44082,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44087,"byte_end":44117,"line_start":1360,"line_end":1360,"column_start":5,"column_end":35}},{"value":"/ let len = stream.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44122,"byte_end":44165,"line_start":1361,"line_end":1361,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44170,"byte_end":44203,"line_start":1362,"line_end":1362,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44208,"byte_end":44215,"line_start":1363,"line_end":1363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44444,"byte_end":44452,"line_start":1372,"line_end":1372,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Async<std::net::TcpStream> as std::convert::TryFrom>::try_from","value":"fn try_from(std::net::TcpStream) -> io::Result<Self>","parent":{"krate":2,"index":3181},"children":[],"decl_id":{"krate":2,"index":3184},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45073,"byte_end":45077,"line_start":1393,"line_end":1393,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UdpSocket>>::bind","value":"fn bind<A>(A) -> io::Result<Async<UdpSocket>> where A: Into<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket bound to the specified address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44568,"byte_end":44624,"line_start":1378,"line_end":1378,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44629,"byte_end":44632,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44637,"byte_end":44711,"line_start":1380,"line_end":1380,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44716,"byte_end":44719,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44724,"byte_end":44738,"line_start":1382,"line_end":1382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44743,"byte_end":44746,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44751,"byte_end":44758,"line_start":1384,"line_end":1384,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44763,"byte_end":44787,"line_start":1385,"line_end":1385,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44792,"byte_end":44820,"line_start":1386,"line_end":1386,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44825,"byte_end":44828,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44833,"byte_end":44877,"line_start":1388,"line_end":1388,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44882,"byte_end":44946,"line_start":1389,"line_end":1389,"column_start":5,"column_end":69}},{"value":"/ println!(\"Bound to {}\", socket.get_ref().local_addr()?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44951,"byte_end":45011,"line_start":1390,"line_end":1390,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45016,"byte_end":45049,"line_start":1391,"line_end":1391,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45054,"byte_end":45061,"line_start":1392,"line_end":1392,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45953,"byte_end":45962,"line_start":1418,"line_end":1418,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<Async<UdpSocket>>::recv_from","value":"async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message.","sig":null,"attributes":[{"value":"/ Receives a single datagram message.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45228,"byte_end":45267,"line_start":1398,"line_end":1398,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45272,"byte_end":45275,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45280,"byte_end":45355,"line_start":1400,"line_end":1400,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45360,"byte_end":45363,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45368,"byte_end":45462,"line_start":1402,"line_end":1402,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45467,"byte_end":45537,"line_start":1403,"line_end":1403,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45542,"byte_end":45545,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45550,"byte_end":45564,"line_start":1405,"line_end":1405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45569,"byte_end":45572,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45577,"byte_end":45590,"line_start":1407,"line_end":1407,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45595,"byte_end":45619,"line_start":1408,"line_end":1408,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45624,"byte_end":45652,"line_start":1409,"line_end":1409,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45657,"byte_end":45660,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45665,"byte_end":45709,"line_start":1411,"line_end":1411,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45714,"byte_end":45781,"line_start":1412,"line_end":1412,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45786,"byte_end":45789,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45794,"byte_end":45824,"line_start":1414,"line_end":1414,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45829,"byte_end":45885,"line_start":1415,"line_end":1415,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45890,"byte_end":45923,"line_start":1416,"line_end":1416,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":45928,"byte_end":45935,"line_start":1417,"line_end":1417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46847,"byte_end":46856,"line_start":1442,"line_end":1442,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<Async<UdpSocket>>::peek_from","value":"async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message without removing it from the queue.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46087,"byte_end":46161,"line_start":1422,"line_end":1422,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46166,"byte_end":46169,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46174,"byte_end":46249,"line_start":1424,"line_end":1424,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46254,"byte_end":46257,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46262,"byte_end":46356,"line_start":1426,"line_end":1426,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46361,"byte_end":46431,"line_start":1427,"line_end":1427,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46436,"byte_end":46439,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46444,"byte_end":46458,"line_start":1429,"line_end":1429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46463,"byte_end":46466,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46471,"byte_end":46484,"line_start":1431,"line_end":1431,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46489,"byte_end":46513,"line_start":1432,"line_end":1432,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46518,"byte_end":46546,"line_start":1433,"line_end":1433,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46551,"byte_end":46554,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46559,"byte_end":46603,"line_start":1435,"line_end":1435,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46608,"byte_end":46675,"line_start":1436,"line_end":1436,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46680,"byte_end":46683,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46688,"byte_end":46718,"line_start":1438,"line_end":1438,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46723,"byte_end":46779,"line_start":1439,"line_end":1439,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46784,"byte_end":46817,"line_start":1440,"line_end":1440,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46822,"byte_end":46829,"line_start":1441,"line_end":1441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47521,"byte_end":47528,"line_start":1464,"line_end":1464,"column_start":18,"column_end":25},"name":"send_to","qualname":"<Async<UdpSocket>>::send_to","value":"async fn send_to<A, '_, '_>(&'_ Self, &'_ [u8], A) -> /*impl Trait*/ where\nA: Into<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the specified address.","sig":null,"attributes":[{"value":"/ Sends data to the specified address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":46981,"byte_end":47021,"line_start":1446,"line_end":1446,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47026,"byte_end":47029,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes writen.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47034,"byte_end":47073,"line_start":1448,"line_end":1448,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47078,"byte_end":47081,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47086,"byte_end":47100,"line_start":1450,"line_end":1450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47105,"byte_end":47108,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47113,"byte_end":47126,"line_start":1452,"line_end":1452,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47131,"byte_end":47155,"line_start":1453,"line_end":1453,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47160,"byte_end":47188,"line_start":1454,"line_end":1454,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47193,"byte_end":47196,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47201,"byte_end":47245,"line_start":1456,"line_end":1456,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47250,"byte_end":47314,"line_start":1457,"line_end":1457,"column_start":5,"column_end":69}},{"value":"/ let addr = socket.get_ref().local_addr()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47319,"byte_end":47365,"line_start":1458,"line_end":1458,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47370,"byte_end":47373,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47378,"byte_end":47401,"line_start":1460,"line_end":1460,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send_to(msg, addr).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47406,"byte_end":47453,"line_start":1461,"line_end":1461,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47458,"byte_end":47491,"line_start":1462,"line_end":1462,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47496,"byte_end":47503,"line_start":1463,"line_end":1463,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48620,"byte_end":48624,"line_start":1493,"line_end":1493,"column_start":18,"column_end":22},"name":"recv","qualname":"<Async<UdpSocket>>::recv","value":"async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47702,"byte_end":47765,"line_start":1469,"line_end":1469,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47770,"byte_end":47773,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47778,"byte_end":47815,"line_start":1471,"line_end":1471,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47820,"byte_end":47823,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47828,"byte_end":47922,"line_start":1473,"line_end":1473,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":47927,"byte_end":47997,"line_start":1474,"line_end":1474,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48002,"byte_end":48005,"line_start":1475,"line_end":1475,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48010,"byte_end":48102,"line_start":1476,"line_end":1476,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48107,"byte_end":48164,"line_start":1477,"line_end":1477,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48169,"byte_end":48172,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48177,"byte_end":48191,"line_start":1479,"line_end":1479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48196,"byte_end":48199,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48204,"byte_end":48217,"line_start":1481,"line_end":1481,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48222,"byte_end":48246,"line_start":1482,"line_end":1482,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48251,"byte_end":48279,"line_start":1483,"line_end":1483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48284,"byte_end":48287,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48292,"byte_end":48336,"line_start":1485,"line_end":1485,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48341,"byte_end":48408,"line_start":1486,"line_end":1486,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48413,"byte_end":48461,"line_start":1487,"line_end":1487,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48466,"byte_end":48469,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48474,"byte_end":48504,"line_start":1489,"line_end":1489,"column_start":5,"column_end":35}},{"value":"/ let len = socket.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48509,"byte_end":48552,"line_start":1490,"line_end":1490,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48557,"byte_end":48590,"line_start":1491,"line_end":1491,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48595,"byte_end":48602,"line_start":1492,"line_end":1492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49729,"byte_end":49733,"line_start":1522,"line_end":1522,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<UdpSocket>>::peek","value":"async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer without removing it from the\n queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer without removing it from the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48730,"byte_end":48821,"line_start":1497,"line_end":1497,"column_start":5,"column_end":96}},{"value":"/ queue.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48826,"byte_end":48836,"line_start":1498,"line_end":1498,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48841,"byte_end":48844,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48849,"byte_end":48924,"line_start":1500,"line_end":1500,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48929,"byte_end":48932,"line_start":1501,"line_end":1501,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":48937,"byte_end":49031,"line_start":1502,"line_end":1502,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49036,"byte_end":49106,"line_start":1503,"line_end":1503,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49111,"byte_end":49114,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49119,"byte_end":49211,"line_start":1505,"line_end":1505,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49216,"byte_end":49273,"line_start":1506,"line_end":1506,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49278,"byte_end":49281,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49286,"byte_end":49300,"line_start":1508,"line_end":1508,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49305,"byte_end":49308,"line_start":1509,"line_end":1509,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49313,"byte_end":49326,"line_start":1510,"line_end":1510,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49331,"byte_end":49355,"line_start":1511,"line_end":1511,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49360,"byte_end":49388,"line_start":1512,"line_end":1512,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49393,"byte_end":49396,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49401,"byte_end":49445,"line_start":1514,"line_end":1514,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49450,"byte_end":49517,"line_start":1515,"line_end":1515,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49522,"byte_end":49570,"line_start":1516,"line_end":1516,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49575,"byte_end":49578,"line_start":1517,"line_end":1517,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49583,"byte_end":49613,"line_start":1518,"line_end":1518,"column_start":5,"column_end":35}},{"value":"/ let len = socket.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49618,"byte_end":49661,"line_start":1519,"line_end":1519,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49666,"byte_end":49699,"line_start":1520,"line_end":1520,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49704,"byte_end":49711,"line_start":1521,"line_end":1521,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50540,"byte_end":50544,"line_start":1547,"line_end":1547,"column_start":18,"column_end":22},"name":"send","qualname":"<Async<UdpSocket>>::send","value":"async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected peer.","sig":null,"attributes":[{"value":"/ Sends data to the connected peer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49839,"byte_end":49876,"line_start":1526,"line_end":1526,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49881,"byte_end":49884,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49889,"byte_end":49929,"line_start":1528,"line_end":1528,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49934,"byte_end":49937,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":49942,"byte_end":50034,"line_start":1530,"line_end":1530,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50039,"byte_end":50096,"line_start":1531,"line_end":1531,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50101,"byte_end":50104,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50109,"byte_end":50123,"line_start":1533,"line_end":1533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50128,"byte_end":50131,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50136,"byte_end":50149,"line_start":1535,"line_end":1535,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50154,"byte_end":50178,"line_start":1536,"line_end":1536,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50183,"byte_end":50211,"line_start":1537,"line_end":1537,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50216,"byte_end":50219,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50224,"byte_end":50268,"line_start":1539,"line_end":1539,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50273,"byte_end":50340,"line_start":1540,"line_end":1540,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50345,"byte_end":50393,"line_start":1541,"line_end":1541,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50398,"byte_end":50401,"line_start":1542,"line_end":1542,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50406,"byte_end":50429,"line_start":1543,"line_end":1543,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send(msg).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50434,"byte_end":50472,"line_start":1544,"line_end":1544,"column_start":5,"column_end":43}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50477,"byte_end":50510,"line_start":1545,"line_end":1545,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50515,"byte_end":50522,"line_start":1546,"line_end":1546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50748,"byte_end":50756,"line_start":1555,"line_end":1555,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Async<std::net::UdpSocket> as std::convert::TryFrom>::try_from","value":"fn try_from(std::net::UdpSocket) -> io::Result<Self>","parent":{"krate":2,"index":3181},"children":[],"decl_id":{"krate":2,"index":3184},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":70073,"byte_end":70083,"line_start":230,"line_end":230,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":72364,"byte_end":72371,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":78290,"byte_end":78301,"line_start":245,"line_end":245,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":82763,"byte_end":82772,"line_start":377,"line_end":377,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":83302,"byte_end":83308,"line_start":396,"line_end":396,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":86574,"byte_end":86582,"line_start":488,"line_end":488,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":86886,"byte_end":86894,"line_start":498,"line_end":498,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87241,"byte_end":87254,"line_start":508,"line_end":508,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87560,"byte_end":87573,"line_start":518,"line_end":518,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87907,"byte_end":87915,"line_start":528,"line_end":528,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":88219,"byte_end":88227,"line_start":538,"line_end":538,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":88574,"byte_end":88587,"line_start":548,"line_end":548,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":88893,"byte_end":88906,"line_start":558,"line_end":558,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":89260,"byte_end":89265,"line_start":572,"line_end":572,"column_start":47,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":89331,"byte_end":89336,"line_start":574,"line_end":574,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":91375,"byte_end":91387,"line_start":642,"line_end":642,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4824,"byte_end":4829,"line_start":152,"line_end":152,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":12686,"byte_end":12691,"line_start":406,"line_end":406,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":12944,"byte_end":12949,"line_start":415,"line_end":415,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":13281,"byte_end":13286,"line_start":427,"line_end":427,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":19023,"byte_end":19028,"line_start":572,"line_end":572,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21337,"byte_end":21342,"line_start":654,"line_end":654,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":22828,"byte_end":22833,"line_start":700,"line_end":700,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":22995,"byte_end":23000,"line_start":707,"line_end":707,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23213,"byte_end":23218,"line_start":714,"line_end":714,"column_start":67,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23460,"byte_end":23471,"line_start":723,"line_end":723,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23627,"byte_end":23632,"line_start":731,"line_end":731,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":494},{"krate":0,"index":499},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34670,"byte_end":34675,"line_start":1051,"line_end":1051,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34763,"byte_end":34768,"line_start":1057,"line_end":1057,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34860,"byte_end":34865,"line_start":1063,"line_end":1063,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":35190,"byte_end":35195,"line_start":1075,"line_end":1075,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":36964,"byte_end":36969,"line_start":1138,"line_end":1138,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39645,"byte_end":39650,"line_start":1229,"line_end":1229,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42166,"byte_end":42171,"line_start":1302,"line_end":1302,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42340,"byte_end":42345,"line_start":1310,"line_end":1310,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44379,"byte_end":44384,"line_start":1369,"line_end":1369,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44545,"byte_end":44550,"line_start":1377,"line_end":1377,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":574},{"krate":0,"index":578},{"krate":0,"index":583},{"krate":0,"index":587},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50683,"byte_end":50688,"line_start":1552,"line_end":1552,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\driver.rs","byte_start":70073,"byte_end":70083,"line_start":230,"line_end":230,"column_start":24,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":192},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":72364,"byte_end":72371,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":78290,"byte_end":78301,"line_start":245,"line_end":245,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":82763,"byte_end":82772,"line_start":377,"line_end":377,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":83302,"byte_end":83308,"line_start":396,"line_end":396,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":86574,"byte_end":86582,"line_start":488,"line_end":488,"column_start":20,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":346},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":86886,"byte_end":86894,"line_start":498,"line_end":498,"column_start":24,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":346},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87241,"byte_end":87254,"line_start":508,"line_end":508,"column_start":20,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87560,"byte_end":87573,"line_start":518,"line_end":518,"column_start":24,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":87907,"byte_end":87915,"line_start":528,"line_end":528,"column_start":20,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":88219,"byte_end":88227,"line_start":538,"line_end":538,"column_start":24,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":88574,"byte_end":88587,"line_start":548,"line_end":548,"column_start":20,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":88893,"byte_end":88906,"line_start":558,"line_end":558,"column_start":24,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":89260,"byte_end":89265,"line_start":572,"line_end":572,"column_start":47,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":89331,"byte_end":89336,"line_start":574,"line_end":574,"column_start":56,"column_end":61},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\reactor.rs","byte_start":91375,"byte_end":91387,"line_start":642,"line_end":642,"column_start":46,"column_end":58},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":4824,"byte_end":4829,"line_start":152,"line_end":152,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":12686,"byte_end":12691,"line_start":406,"line_end":406,"column_start":15,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":625},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":12944,"byte_end":12949,"line_start":415,"line_end":415,"column_start":17,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":625},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":13281,"byte_end":13286,"line_start":427,"line_end":427,"column_start":17,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":625},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":19023,"byte_end":19028,"line_start":572,"line_end":572,"column_start":19,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":21337,"byte_end":21342,"line_start":654,"line_end":654,"column_start":22,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":22828,"byte_end":22833,"line_start":700,"line_end":700,"column_start":38,"column_end":43},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":631},"to":{"krate":1,"index":5951}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":22995,"byte_end":23000,"line_start":707,"line_end":707,"column_start":32,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":631},"to":{"krate":1,"index":6037}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23213,"byte_end":23218,"line_start":714,"line_end":714,"column_start":67,"column_end":72},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":3181}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23460,"byte_end":23471,"line_start":723,"line_end":723,"column_start":50,"column_end":61},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":6013},"to":{"krate":2,"index":3181}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":23627,"byte_end":23632,"line_start":731,"line_end":731,"column_start":9,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34670,"byte_end":34675,"line_start":1051,"line_end":1051,"column_start":22,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34763,"byte_end":34768,"line_start":1057,"line_end":1057,"column_start":22,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":3168}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":34860,"byte_end":34865,"line_start":1063,"line_end":1063,"column_start":18,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":35190,"byte_end":35195,"line_start":1075,"line_end":1075,"column_start":29,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":631},"to":{"krate":21,"index":39}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":36964,"byte_end":36969,"line_start":1138,"line_end":1138,"column_start":31,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":631},"to":{"krate":21,"index":42}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":39645,"byte_end":39650,"line_start":1229,"line_end":1229,"column_start":6,"column_end":11},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42166,"byte_end":42171,"line_start":1302,"line_end":1302,"column_start":41,"column_end":46},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":3181}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":42340,"byte_end":42345,"line_start":1310,"line_end":1310,"column_start":6,"column_end":11},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44379,"byte_end":44384,"line_start":1369,"line_end":1369,"column_start":39,"column_end":44},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":3181}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":44545,"byte_end":44550,"line_start":1377,"line_end":1377,"column_start":6,"column_end":11},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.12.0\\src\\lib.rs","byte_start":50683,"byte_end":50688,"line_start":1552,"line_end":1552,"column_start":39,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":3181}}]}