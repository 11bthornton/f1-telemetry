{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0","program":"C:\\Users\\Ben\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","ron","--edition=2021","C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"integer128\"","-C","metadata=08f0965a486f471e","-C","extra-filename=-08f0965a486f471e","--out-dir","c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps","--extern","base64=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libbase64-e7179ae32ad4b7ef.rmeta","--extern","bitflags=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libbitflags-2782c434d426d8e6.rmeta","--extern","serde=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libserde-94655c80bf796087.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ben\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libron-08f0965a486f471e.rmeta"},"prelude":{"crate_id":{"name":"ron","disambiguator":[11333379201070446033,0]},"crate_root":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src","external_crates":[{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10288641326355699271,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5178777620647193466,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7203661724729889941,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17525700935344431946,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14114419768508526436,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[7430704726206783492,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12664251144516306473,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5349691386245612169,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7588176879124425336,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12802573245210436658,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[15058356585373963657,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11406058276128544710,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[12054102872615165506,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15575797803660711391,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[2170788131994516450,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","num":16,"id":{"name":"serde","disambiguator":[226809851131364859,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","num":17,"id":{"name":"serde_derive","disambiguator":[7049712192807757020,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","num":18,"id":{"name":"bitflags","disambiguator":[16296419251187714830,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","num":19,"id":{"name":"base64","disambiguator":[7630812310911628536,0]}}],"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":0,"byte_end":371,"line_start":1,"line_end":20,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":424,"byte_end":429,"line_start":2,"line_end":2,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":431,"byte_end":439,"line_start":2,"line_end":2,"column_start":31,"column_end":39},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":441,"byte_end":453,"line_start":2,"line_end":2,"column_start":41,"column_end":53},"alias_span":null,"name":"SpannedError","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":202,"byte_end":210,"line_start":14,"line_end":14,"column_start":14,"column_end":22},"alias_span":null,"name":"from_str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":212,"byte_end":224,"line_start":14,"line_end":14,"column_start":24,"column_end":36},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":243,"byte_end":248,"line_start":15,"line_end":15,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":250,"byte_end":256,"line_start":15,"line_end":15,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":276,"byte_end":283,"line_start":16,"line_end":16,"column_start":18,"column_end":25},"alias_span":null,"name":"Options","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":299,"byte_end":308,"line_start":17,"line_end":17,"column_start":15,"column_end":24},"alias_span":null,"name":"to_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":310,"byte_end":320,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":339,"byte_end":342,"line_start":18,"line_end":18,"column_start":17,"column_end":20},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":344,"byte_end":350,"line_start":18,"line_end":18,"column_start":22,"column_end":28},"alias_span":null,"name":"Number","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":352,"byte_end":357,"line_start":18,"line_end":18,"column_start":30,"column_end":35},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":0,"byte_end":371,"line_start":1,"line_end":20,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":490},{"krate":0,"index":720},{"krate":0,"index":793},{"krate":0,"index":970},{"krate":0,"index":982},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1093}],"decl_id":null,"docs":"# Rusty Object Notation","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":161},{"krate":0,"index":254},{"krate":0,"index":341},{"krate":0,"index":346},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":368},{"krate":0,"index":436},{"krate":0,"index":442},{"krate":0,"index":447},{"krate":0,"index":453},{"krate":0,"index":461},{"krate":0,"index":465},{"krate":0,"index":469},{"krate":0,"index":476},{"krate":0,"index":489}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":22896,"byte_end":22910,"line_start":5,"line_end":5,"column_start":12,"column_end":26},"name":"IdDeserializer","qualname":"::de::id::IdDeserializer","value":"IdDeserializer {  }","parent":null,"children":[{"krate":0,"index":89}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":23014,"byte_end":23017,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"new","qualname":"<IdDeserializer>::new","value":"fn new(&'a mut Deserializer) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":23206,"byte_end":23228,"line_start":18,"line_end":18,"column_start":8,"column_end":30},"name":"deserialize_identifier","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_identifier","value":"fn deserialize_identifier<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1693},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":23371,"byte_end":23386,"line_start":25,"line_end":25,"column_start":8,"column_end":23},"name":"deserialize_str","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_str","value":"fn deserialize_str<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1665},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":23527,"byte_end":23542,"line_start":32,"line_end":32,"column_start":8,"column_end":23},"name":"deserialize_any","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_any","value":"fn deserialize_any<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1639},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":23683,"byte_end":23699,"line_start":39,"line_end":39,"column_start":8,"column_end":24},"name":"deserialize_bool","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_bool","value":"fn deserialize_bool<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1641},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":23863,"byte_end":23877,"line_start":46,"line_end":46,"column_start":8,"column_end":22},"name":"deserialize_i8","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_i8","value":"fn deserialize_i8<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1643},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":24041,"byte_end":24056,"line_start":53,"line_end":53,"column_start":8,"column_end":23},"name":"deserialize_i16","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_i16","value":"fn deserialize_i16<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1645},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":24220,"byte_end":24235,"line_start":60,"line_end":60,"column_start":8,"column_end":23},"name":"deserialize_i32","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_i32","value":"fn deserialize_i32<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1647},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":24399,"byte_end":24414,"line_start":67,"line_end":67,"column_start":8,"column_end":23},"name":"deserialize_i64","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_i64","value":"fn deserialize_i64<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1649},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":24613,"byte_end":24629,"line_start":75,"line_end":75,"column_start":8,"column_end":24},"name":"deserialize_i128","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_i128","value":"fn deserialize_i128<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":9170},"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"integer128\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":24575,"byte_end":24605,"line_start":74,"line_end":74,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":24793,"byte_end":24807,"line_start":82,"line_end":82,"column_start":8,"column_end":22},"name":"deserialize_u8","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_u8","value":"fn deserialize_u8<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1651},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":24971,"byte_end":24986,"line_start":89,"line_end":89,"column_start":8,"column_end":23},"name":"deserialize_u16","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_u16","value":"fn deserialize_u16<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1653},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":25150,"byte_end":25165,"line_start":96,"line_end":96,"column_start":8,"column_end":23},"name":"deserialize_u32","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_u32","value":"fn deserialize_u32<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1655},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":25329,"byte_end":25344,"line_start":103,"line_end":103,"column_start":8,"column_end":23},"name":"deserialize_u64","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_u64","value":"fn deserialize_u64<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1657},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":25543,"byte_end":25559,"line_start":111,"line_end":111,"column_start":8,"column_end":24},"name":"deserialize_u128","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_u128","value":"fn deserialize_u128<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":9172},"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"integer128\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":25505,"byte_end":25535,"line_start":110,"line_end":110,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":25723,"byte_end":25738,"line_start":118,"line_end":118,"column_start":8,"column_end":23},"name":"deserialize_f32","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_f32","value":"fn deserialize_f32<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1659},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":25902,"byte_end":25917,"line_start":125,"line_end":125,"column_start":8,"column_end":23},"name":"deserialize_f64","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_f64","value":"fn deserialize_f64<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1661},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":26081,"byte_end":26097,"line_start":132,"line_end":132,"column_start":8,"column_end":24},"name":"deserialize_char","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_char","value":"fn deserialize_char<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1663},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":26261,"byte_end":26279,"line_start":139,"line_end":139,"column_start":8,"column_end":26},"name":"deserialize_string","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_string","value":"fn deserialize_string<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1667},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":26443,"byte_end":26460,"line_start":146,"line_end":146,"column_start":8,"column_end":25},"name":"deserialize_bytes","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_bytes","value":"fn deserialize_bytes<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":26624,"byte_end":26644,"line_start":153,"line_end":153,"column_start":8,"column_end":28},"name":"deserialize_byte_buf","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_byte_buf","value":"fn deserialize_byte_buf<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1671},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":26808,"byte_end":26826,"line_start":160,"line_end":160,"column_start":8,"column_end":26},"name":"deserialize_option","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_option","value":"fn deserialize_option<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1673},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":26990,"byte_end":27006,"line_start":167,"line_end":167,"column_start":8,"column_end":24},"name":"deserialize_unit","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_unit","value":"fn deserialize_unit<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":27170,"byte_end":27193,"line_start":174,"line_end":174,"column_start":8,"column_end":31},"name":"deserialize_unit_struct","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_unit_struct","value":"fn deserialize_unit_struct<V>(Self, &'static str, V) -> Result<V::Value> where\nV: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1677},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":27374,"byte_end":27400,"line_start":181,"line_end":181,"column_start":8,"column_end":34},"name":"deserialize_newtype_struct","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_newtype_struct","value":"fn deserialize_newtype_struct<V>(Self, &'static str, V) -> Result<V::Value>\nwhere V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1679},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":27581,"byte_end":27596,"line_start":188,"line_end":188,"column_start":8,"column_end":23},"name":"deserialize_seq","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_seq","value":"fn deserialize_seq<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1681},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":27760,"byte_end":27777,"line_start":195,"line_end":195,"column_start":8,"column_end":25},"name":"deserialize_tuple","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_tuple","value":"fn deserialize_tuple<V>(Self, usize, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1683},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":27951,"byte_end":27975,"line_start":202,"line_end":202,"column_start":8,"column_end":32},"name":"deserialize_tuple_struct","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_tuple_struct","value":"fn deserialize_tuple_struct<V>(Self, &'static str, usize, V)\n-> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1685},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":28166,"byte_end":28181,"line_start":209,"line_end":209,"column_start":8,"column_end":23},"name":"deserialize_map","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_map","value":"fn deserialize_map<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1687},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":28345,"byte_end":28363,"line_start":216,"line_end":216,"column_start":8,"column_end":26},"name":"deserialize_struct","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_struct","value":"fn deserialize_struct<V>(Self, &'static str, &'static [&'static str], V)\n-> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1689},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":28611,"byte_end":28627,"line_start":228,"line_end":228,"column_start":8,"column_end":24},"name":"deserialize_enum","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_enum","value":"fn deserialize_enum<V>(Self, &'static str, &'static [&'static str], V)\n-> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1691},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":28875,"byte_end":28898,"line_start":240,"line_end":240,"column_start":8,"column_end":31},"name":"deserialize_ignored_any","qualname":"<&'c mut IdDeserializer as ser::_::_serde::Deserializer>::deserialize_ignored_any","value":"fn deserialize_ignored_any<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1695},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":29114,"byte_end":29129,"line_start":5,"line_end":5,"column_start":12,"column_end":27},"name":"TagDeserializer","qualname":"::de::tag::TagDeserializer","value":"TagDeserializer {  }","parent":null,"children":[{"krate":0,"index":182}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":29234,"byte_end":29237,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"new","qualname":"<TagDeserializer>::new","value":"fn new(&'a mut Deserializer) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":29428,"byte_end":29443,"line_start":18,"line_end":18,"column_start":8,"column_end":23},"name":"deserialize_str","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_str","value":"fn deserialize_str<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1665},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":29579,"byte_end":29601,"line_start":25,"line_end":25,"column_start":8,"column_end":30},"name":"deserialize_identifier","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_identifier","value":"fn deserialize_identifier<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1693},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":29735,"byte_end":29750,"line_start":32,"line_end":32,"column_start":8,"column_end":23},"name":"deserialize_any","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_any","value":"fn deserialize_any<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1639},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":29886,"byte_end":29902,"line_start":39,"line_end":39,"column_start":8,"column_end":24},"name":"deserialize_bool","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_bool","value":"fn deserialize_bool<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1641},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":30039,"byte_end":30053,"line_start":46,"line_end":46,"column_start":8,"column_end":22},"name":"deserialize_i8","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_i8","value":"fn deserialize_i8<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1643},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":30188,"byte_end":30203,"line_start":53,"line_end":53,"column_start":8,"column_end":23},"name":"deserialize_i16","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_i16","value":"fn deserialize_i16<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1645},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":30339,"byte_end":30354,"line_start":60,"line_end":60,"column_start":8,"column_end":23},"name":"deserialize_i32","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_i32","value":"fn deserialize_i32<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1647},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":30490,"byte_end":30505,"line_start":67,"line_end":67,"column_start":8,"column_end":23},"name":"deserialize_i64","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_i64","value":"fn deserialize_i64<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1649},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":30676,"byte_end":30692,"line_start":75,"line_end":75,"column_start":8,"column_end":24},"name":"deserialize_i128","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_i128","value":"fn deserialize_i128<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":9170},"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"integer128\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":30638,"byte_end":30668,"line_start":74,"line_end":74,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":30829,"byte_end":30843,"line_start":82,"line_end":82,"column_start":8,"column_end":22},"name":"deserialize_u8","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_u8","value":"fn deserialize_u8<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1651},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":30978,"byte_end":30993,"line_start":89,"line_end":89,"column_start":8,"column_end":23},"name":"deserialize_u16","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_u16","value":"fn deserialize_u16<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1653},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":31129,"byte_end":31144,"line_start":96,"line_end":96,"column_start":8,"column_end":23},"name":"deserialize_u32","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_u32","value":"fn deserialize_u32<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1655},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":31280,"byte_end":31295,"line_start":103,"line_end":103,"column_start":8,"column_end":23},"name":"deserialize_u64","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_u64","value":"fn deserialize_u64<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1657},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":31466,"byte_end":31482,"line_start":111,"line_end":111,"column_start":8,"column_end":24},"name":"deserialize_u128","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_u128","value":"fn deserialize_u128<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":9172},"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"integer128\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":31428,"byte_end":31458,"line_start":110,"line_end":110,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":31619,"byte_end":31634,"line_start":118,"line_end":118,"column_start":8,"column_end":23},"name":"deserialize_f32","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_f32","value":"fn deserialize_f32<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1659},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":31770,"byte_end":31785,"line_start":125,"line_end":125,"column_start":8,"column_end":23},"name":"deserialize_f64","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_f64","value":"fn deserialize_f64<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1661},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":31921,"byte_end":31937,"line_start":132,"line_end":132,"column_start":8,"column_end":24},"name":"deserialize_char","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_char","value":"fn deserialize_char<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1663},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":32074,"byte_end":32092,"line_start":139,"line_end":139,"column_start":8,"column_end":26},"name":"deserialize_string","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_string","value":"fn deserialize_string<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1667},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":32231,"byte_end":32248,"line_start":146,"line_end":146,"column_start":8,"column_end":25},"name":"deserialize_bytes","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_bytes","value":"fn deserialize_bytes<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":32386,"byte_end":32406,"line_start":153,"line_end":153,"column_start":8,"column_end":28},"name":"deserialize_byte_buf","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_byte_buf","value":"fn deserialize_byte_buf<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1671},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":32547,"byte_end":32565,"line_start":160,"line_end":160,"column_start":8,"column_end":26},"name":"deserialize_option","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_option","value":"fn deserialize_option<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1673},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":32704,"byte_end":32720,"line_start":167,"line_end":167,"column_start":8,"column_end":24},"name":"deserialize_unit","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_unit","value":"fn deserialize_unit<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":32857,"byte_end":32880,"line_start":174,"line_end":174,"column_start":8,"column_end":31},"name":"deserialize_unit_struct","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_unit_struct","value":"fn deserialize_unit_struct<V>(Self, &'static str, V) -> Result<V::Value> where\nV: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1677},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":33050,"byte_end":33076,"line_start":181,"line_end":181,"column_start":8,"column_end":34},"name":"deserialize_newtype_struct","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_newtype_struct","value":"fn deserialize_newtype_struct<V>(Self, &'static str, V) -> Result<V::Value>\nwhere V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1679},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":33249,"byte_end":33264,"line_start":188,"line_end":188,"column_start":8,"column_end":23},"name":"deserialize_seq","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_seq","value":"fn deserialize_seq<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1681},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":33400,"byte_end":33417,"line_start":195,"line_end":195,"column_start":8,"column_end":25},"name":"deserialize_tuple","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_tuple","value":"fn deserialize_tuple<V>(Self, usize, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1683},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":33572,"byte_end":33596,"line_start":202,"line_end":202,"column_start":8,"column_end":32},"name":"deserialize_tuple_struct","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_tuple_struct","value":"fn deserialize_tuple_struct<V>(Self, &'static str, usize, V)\n-> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1685},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":33823,"byte_end":33838,"line_start":214,"line_end":214,"column_start":8,"column_end":23},"name":"deserialize_map","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_map","value":"fn deserialize_map<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1687},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":33974,"byte_end":33992,"line_start":221,"line_end":221,"column_start":8,"column_end":26},"name":"deserialize_struct","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_struct","value":"fn deserialize_struct<V>(Self, &'static str, &'static [&'static str], V)\n-> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1689},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":34237,"byte_end":34253,"line_start":233,"line_end":233,"column_start":8,"column_end":24},"name":"deserialize_enum","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_enum","value":"fn deserialize_enum<V>(Self, &'static str, &'static [&'static str], V)\n-> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1691},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":34500,"byte_end":34523,"line_start":245,"line_end":245,"column_start":8,"column_end":31},"name":"deserialize_ignored_any","qualname":"<&'c mut TagDeserializer as ser::_::_serde::Deserializer>::deserialize_ignored_any","value":"fn deserialize_ignored_any<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1695},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\value.rs","byte_start":34982,"byte_end":34990,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Value as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> SpannedResult<Self>","parent":{"krate":2,"index":12999},"children":[],"decl_id":{"krate":2,"index":13001},"docs":" Creates a value from a string reference.\n","sig":null,"attributes":[{"value":"/ Creates a value from a string reference.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\value.rs","byte_start":34930,"byte_end":34974,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\value.rs","byte_start":35281,"byte_end":35292,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<Value as ser::_::_serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: Deserializer","parent":{"krate":16,"index":1614},"children":[],"decl_id":{"krate":16,"index":1616},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":963,"byte_end":975,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"decl_id":null,"docs":" The RON deserializer.","sig":null,"attributes":[{"value":"/ The RON deserializer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":817,"byte_end":842,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":843,"byte_end":846,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ If you just want to simply deserialize a value,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":847,"byte_end":898,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ you can use the `from_str` convenience function.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":899,"byte_end":951,"line_start":24,"line_end":24,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":1240,"byte_end":1248,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"from_str","qualname":"<Deserializer>::from_str","value":"fn from_str(&'de str) -> SpannedResult<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":1188,"byte_end":1228,"line_start":33,"line_end":33,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":1372,"byte_end":1382,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Deserializer>::from_bytes","value":"fn from_bytes(&'de [u8]) -> SpannedResult<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":1509,"byte_end":1530,"line_start":42,"line_end":42,"column_start":12,"column_end":33},"name":"from_str_with_options","qualname":"<Deserializer>::from_str_with_options","value":"fn from_str_with_options(&'de str, Options) -> SpannedResult<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":1674,"byte_end":1697,"line_start":46,"line_end":46,"column_start":12,"column_end":35},"name":"from_bytes_with_options","qualname":"<Deserializer>::from_bytes_with_options","value":"fn from_bytes_with_options(&'de [u8], Options) -> SpannedResult<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2034,"byte_end":2043,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"remainder","qualname":"<Deserializer>::remainder","value":"fn remainder<'_>(&'_ Self) -> Cow","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2139,"byte_end":2149,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"span_error","qualname":"<Deserializer>::span_error","value":"fn span_error<'_>(&'_ Self, Error) -> SpannedError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2352,"byte_end":2363,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"from_reader","qualname":"::de::from_reader","value":"fn from_reader<R, T>(R) -> SpannedResult<T> where R: io::Read,\nT: de::DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for building a deserializer\n and deserializing a value of type `T` from a reader.\n","sig":null,"attributes":[{"value":"/ A convenience function for building a deserializer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2233,"byte_end":2287,"line_start":67,"line_end":67,"column_start":1,"column_end":55}},{"value":"/ and deserializing a value of type `T` from a reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2288,"byte_end":2344,"line_start":68,"line_end":68,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2614,"byte_end":2622,"line_start":79,"line_end":79,"column_start":8,"column_end":16},"name":"from_str","qualname":"::de::from_str","value":"fn from_str<'a, T>(&'a str) -> SpannedResult<T> where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for building a deserializer\n and deserializing a value of type `T` from a string.\n","sig":null,"attributes":[{"value":"/ A convenience function for building a deserializer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2495,"byte_end":2549,"line_start":77,"line_end":77,"column_start":1,"column_end":55}},{"value":"/ and deserializing a value of type `T` from a string.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2550,"byte_end":2606,"line_start":78,"line_end":78,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2852,"byte_end":2862,"line_start":88,"line_end":88,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::de::from_bytes","value":"fn from_bytes<'a, T>(&'a [u8]) -> SpannedResult<T> where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for building a deserializer\n and deserializing a value of type `T` from bytes.\n","sig":null,"attributes":[{"value":"/ A convenience function for building a deserializer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2736,"byte_end":2790,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/ and deserializing a value of type `T` from bytes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2791,"byte_end":2844,"line_start":87,"line_end":87,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":3113,"byte_end":3116,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"end","qualname":"<Deserializer>::end","value":"fn end<'_>(&'_ mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Check if the remaining bytes are whitespace only,\n otherwise return an error.\n","sig":null,"attributes":[{"value":"/ Check if the remaining bytes are whitespace only,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":3013,"byte_end":3066,"line_start":96,"line_end":96,"column_start":5,"column_end":58}},{"value":"/ otherwise return an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":3071,"byte_end":3101,"line_start":97,"line_end":97,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":4312,"byte_end":4327,"line_start":139,"line_end":139,"column_start":8,"column_end":23},"name":"deserialize_any","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_any","value":"fn deserialize_any<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1639},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":7088,"byte_end":7104,"line_start":205,"line_end":205,"column_start":8,"column_end":24},"name":"deserialize_bool","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_bool","value":"fn deserialize_bool<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1641},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":7248,"byte_end":7262,"line_start":212,"line_end":212,"column_start":8,"column_end":22},"name":"deserialize_i8","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_i8","value":"fn deserialize_i8<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1643},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":7414,"byte_end":7429,"line_start":219,"line_end":219,"column_start":8,"column_end":23},"name":"deserialize_i16","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_i16","value":"fn deserialize_i16<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1645},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":7582,"byte_end":7597,"line_start":226,"line_end":226,"column_start":8,"column_end":23},"name":"deserialize_i32","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_i32","value":"fn deserialize_i32<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1647},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":7750,"byte_end":7765,"line_start":233,"line_end":233,"column_start":8,"column_end":23},"name":"deserialize_i64","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_i64","value":"fn deserialize_i64<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1649},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":7953,"byte_end":7969,"line_start":241,"line_end":241,"column_start":8,"column_end":24},"name":"deserialize_i128","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_i128","value":"fn deserialize_i128<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":9170},"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"integer128\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":7915,"byte_end":7945,"line_start":240,"line_end":240,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":8123,"byte_end":8137,"line_start":248,"line_end":248,"column_start":8,"column_end":22},"name":"deserialize_u8","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_u8","value":"fn deserialize_u8<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1651},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":8291,"byte_end":8306,"line_start":255,"line_end":255,"column_start":8,"column_end":23},"name":"deserialize_u16","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_u16","value":"fn deserialize_u16<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1653},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":8461,"byte_end":8476,"line_start":262,"line_end":262,"column_start":8,"column_end":23},"name":"deserialize_u32","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_u32","value":"fn deserialize_u32<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1655},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":8631,"byte_end":8646,"line_start":269,"line_end":269,"column_start":8,"column_end":23},"name":"deserialize_u64","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_u64","value":"fn deserialize_u64<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1657},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":8836,"byte_end":8852,"line_start":277,"line_end":277,"column_start":8,"column_end":24},"name":"deserialize_u128","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_u128","value":"fn deserialize_u128<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":9172},"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"integer128\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":8798,"byte_end":8828,"line_start":276,"line_end":276,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":9008,"byte_end":9023,"line_start":284,"line_end":284,"column_start":8,"column_end":23},"name":"deserialize_f32","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_f32","value":"fn deserialize_f32<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1659},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":9167,"byte_end":9182,"line_start":291,"line_end":291,"column_start":8,"column_end":23},"name":"deserialize_f64","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_f64","value":"fn deserialize_f64<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1661},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":9326,"byte_end":9342,"line_start":298,"line_end":298,"column_start":8,"column_end":24},"name":"deserialize_char","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_char","value":"fn deserialize_char<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1663},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":9486,"byte_end":9501,"line_start":305,"line_end":305,"column_start":8,"column_end":23},"name":"deserialize_str","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_str","value":"fn deserialize_str<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1665},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":9775,"byte_end":9793,"line_start":315,"line_end":315,"column_start":8,"column_end":26},"name":"deserialize_string","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_string","value":"fn deserialize_string<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1667},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":9928,"byte_end":9945,"line_start":322,"line_end":322,"column_start":8,"column_end":25},"name":"deserialize_bytes","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_bytes","value":"fn deserialize_bytes<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":10085,"byte_end":10105,"line_start":329,"line_end":329,"column_start":8,"column_end":28},"name":"deserialize_byte_buf","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_byte_buf","value":"fn deserialize_byte_buf<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1671},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":10626,"byte_end":10644,"line_start":348,"line_end":348,"column_start":8,"column_end":26},"name":"deserialize_option","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_option","value":"fn deserialize_option<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1673},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":11465,"byte_end":11481,"line_start":377,"line_end":377,"column_start":8,"column_end":24},"name":"deserialize_unit","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_unit","value":"fn deserialize_unit<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":11780,"byte_end":11803,"line_start":390,"line_end":390,"column_start":8,"column_end":31},"name":"deserialize_unit_struct","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_unit_struct","value":"fn deserialize_unit_struct<V>(Self, &'static str, V) -> Result<V::Value> where\nV: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1677},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":12141,"byte_end":12167,"line_start":403,"line_end":403,"column_start":8,"column_end":34},"name":"deserialize_newtype_struct","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_newtype_struct","value":"fn deserialize_newtype_struct<V>(Self, &'static str, V) -> Result<V::Value>\nwhere V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1679},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":13055,"byte_end":13070,"line_start":434,"line_end":434,"column_start":8,"column_end":23},"name":"deserialize_seq","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_seq","value":"fn deserialize_seq<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1681},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":13570,"byte_end":13587,"line_start":454,"line_end":454,"column_start":8,"column_end":25},"name":"deserialize_tuple","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_tuple","value":"fn deserialize_tuple<V>(Self, usize, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1683},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":14221,"byte_end":14245,"line_start":475,"line_end":475,"column_start":8,"column_end":32},"name":"deserialize_tuple_struct","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_tuple_struct","value":"fn deserialize_tuple_struct<V>(Self, &'static str, usize, V)\n-> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1685},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":14707,"byte_end":14722,"line_start":494,"line_end":494,"column_start":8,"column_end":23},"name":"deserialize_map","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_map","value":"fn deserialize_map<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1687},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":15218,"byte_end":15236,"line_start":514,"line_end":514,"column_start":8,"column_end":26},"name":"deserialize_struct","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_struct","value":"fn deserialize_struct<V>(Self, &'static str, &'static [&'static str], V)\n-> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1689},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":16531,"byte_end":16547,"line_start":560,"line_end":560,"column_start":8,"column_end":24},"name":"deserialize_enum","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_enum","value":"fn deserialize_enum<V>(Self, &'static str, &'static [&'static str], V)\n-> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1691},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":17210,"byte_end":17232,"line_start":586,"line_end":586,"column_start":8,"column_end":30},"name":"deserialize_identifier","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_identifier","value":"fn deserialize_identifier<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1693},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":17507,"byte_end":17530,"line_start":597,"line_end":597,"column_start":8,"column_end":31},"name":"deserialize_ignored_any","qualname":"<&'a mut Deserializer as ser::_::_serde::Deserializer>::deserialize_ignored_any","value":"fn deserialize_ignored_any<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1695},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":1301},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1244},{"krate":0,"index":562},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":582},{"krate":0,"index":606},{"krate":0,"index":651},{"krate":0,"index":656},{"krate":0,"index":662},{"krate":0,"index":670},{"krate":0,"index":678},{"krate":0,"index":686},{"krate":0,"index":694},{"krate":0,"index":704},{"krate":0,"index":712}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\value.rs","byte_start":70826,"byte_end":70835,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"serialize","qualname":"<Value as ser::_::_serde::Serialize>::serialize","value":"fn serialize<S, '_>(&'_ Self, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":{"krate":16,"index":2162},"children":[],"decl_id":{"krate":16,"index":2163},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":43652,"byte_end":43661,"line_start":16,"line_end":16,"column_start":8,"column_end":17},"name":"to_writer","qualname":"::ser::to_writer","value":"fn to_writer<W, T, '_>(W, &'_ T) -> Result<()> where W: io::Write, T: ?Sized +\nSerialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes `value` into `writer`\n","sig":null,"attributes":[{"value":"/ Serializes `value` into `writer`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":43608,"byte_end":43644,"line_start":15,"line_end":15,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":43869,"byte_end":43885,"line_start":25,"line_end":25,"column_start":8,"column_end":24},"name":"to_writer_pretty","qualname":"::ser::to_writer_pretty","value":"fn to_writer_pretty<W, T, '_>(W, &'_ T, PrettyConfig) -> Result<()> where\nW: io::Write, T: ?Sized + Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes `value` into `writer` in a pretty way.\n","sig":null,"attributes":[{"value":"/ Serializes `value` into `writer` in a pretty way.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":43808,"byte_end":43861,"line_start":24,"line_end":24,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44260,"byte_end":44269,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"to_string","qualname":"::ser::to_string","value":"fn to_string<T, '_>(&'_ T) -> Result<String> where T: ?Sized + Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes `value` and returns it as string.","sig":null,"attributes":[{"value":"/ Serializes `value` and returns it as string.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44069,"byte_end":44117,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44118,"byte_end":44121,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This function does not generate any newlines or nice formatting;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44122,"byte_end":44190,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ if you want that, you can use `to_string_pretty` instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44191,"byte_end":44252,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44457,"byte_end":44473,"line_start":45,"line_end":45,"column_start":8,"column_end":24},"name":"to_string_pretty","qualname":"::ser::to_string_pretty","value":"fn to_string_pretty<T, '_>(&'_ T, PrettyConfig) -> Result<String> where\nT: ?Sized + Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes `value` in the recommended RON layout in a pretty way.\n","sig":null,"attributes":[{"value":"/ Serializes `value` in the recommended RON layout in a pretty way.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44380,"byte_end":44449,"line_start":44,"line_end":44,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45077,"byte_end":45089,"line_start":73,"line_end":73,"column_start":12,"column_end":24},"name":"PrettyConfig","qualname":"::ser::PrettyConfig","value":"PrettyConfig { depth_limit, new_line, indentor, separator, struct_names, separate_tuple_members, enumerate_arrays, extensions, compact_arrays }","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310}],"decl_id":null,"docs":" Pretty serializer configuration.","sig":null,"attributes":[{"value":"/ Pretty serializer configuration.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44719,"byte_end":44755,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44756,"byte_end":44759,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44760,"byte_end":44774,"line_start":60,"line_end":60,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44775,"byte_end":44778,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44779,"byte_end":44786,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use ron::ser::PrettyConfig;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44787,"byte_end":44818,"line_start":63,"line_end":63,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44819,"byte_end":44822,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let my_config = PrettyConfig::new()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44823,"byte_end":44862,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/     .depth_limit(4)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44863,"byte_end":44886,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/     // definitely superior (okay, just joking)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44887,"byte_end":44937,"line_start":67,"line_end":67,"column_start":1,"column_end":51}},{"value":"/     .indentor(\"\\t\".to_owned());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44938,"byte_end":44973,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":44974,"byte_end":44981,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"serde(default)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45030,"byte_end":45047,"line_start":71,"line_end":71,"column_start":1,"column_end":18}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45048,"byte_end":45065,"line_start":72,"line_end":72,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45153,"byte_end":45164,"line_start":75,"line_end":75,"column_start":9,"column_end":20},"name":"depth_limit","qualname":"::ser::PrettyConfig::depth_limit","value":"usize","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Limit the pretty-ness up to the given depth.\n","sig":null,"attributes":[{"value":"/ Limit the pretty-ness up to the given depth.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45096,"byte_end":45144,"line_start":74,"line_end":74,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45205,"byte_end":45213,"line_start":77,"line_end":77,"column_start":9,"column_end":17},"name":"new_line","qualname":"::ser::PrettyConfig::new_line","value":"std::string::String","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" New line string\n","sig":null,"attributes":[{"value":"/ New line string","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45177,"byte_end":45196,"line_start":76,"line_end":76,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45258,"byte_end":45266,"line_start":79,"line_end":79,"column_start":9,"column_end":17},"name":"indentor","qualname":"::ser::PrettyConfig::indentor","value":"std::string::String","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Indentation string\n","sig":null,"attributes":[{"value":"/ Indentation string","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45227,"byte_end":45249,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45309,"byte_end":45318,"line_start":81,"line_end":81,"column_start":9,"column_end":18},"name":"separator","qualname":"::ser::PrettyConfig::separator","value":"std::string::String","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Separator string\n","sig":null,"attributes":[{"value":"/ Separator string","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45280,"byte_end":45300,"line_start":80,"line_end":80,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45372,"byte_end":45384,"line_start":83,"line_end":83,"column_start":9,"column_end":21},"name":"struct_names","qualname":"::ser::PrettyConfig::struct_names","value":"bool","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45448,"byte_end":45470,"line_start":85,"line_end":85,"column_start":9,"column_end":31},"name":"separate_tuple_members","qualname":"::ser::PrettyConfig::separate_tuple_members","value":"bool","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Separate tuple members with indentation\n","sig":null,"attributes":[{"value":"/ Separate tuple members with indentation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45396,"byte_end":45439,"line_start":84,"line_end":84,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45528,"byte_end":45544,"line_start":87,"line_end":87,"column_start":9,"column_end":25},"name":"enumerate_arrays","qualname":"::ser::PrettyConfig::enumerate_arrays","value":"bool","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Enumerate array items in comments\n","sig":null,"attributes":[{"value":"/ Enumerate array items in comments","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45482,"byte_end":45519,"line_start":86,"line_end":86,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45687,"byte_end":45697,"line_start":90,"line_end":90,"column_start":9,"column_end":19},"name":"extensions","qualname":"::ser::PrettyConfig::extensions","value":"extensions::Extensions","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Enable extensions. Only configures 'implicit_some',\n  'unwrap_newtypes', and 'unwrap_variant_newtypes' for now.\n","sig":null,"attributes":[{"value":"/ Enable extensions. Only configures 'implicit_some',","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45556,"byte_end":45611,"line_start":88,"line_end":88,"column_start":5,"column_end":60}},{"value":"/  'unwrap_newtypes', and 'unwrap_variant_newtypes' for now.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45616,"byte_end":45678,"line_start":89,"line_end":89,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45749,"byte_end":45763,"line_start":92,"line_end":92,"column_start":9,"column_end":23},"name":"compact_arrays","qualname":"::ser::PrettyConfig::compact_arrays","value":"bool","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Enable compact arrays\n","sig":null,"attributes":[{"value":"/ Enable compact arrays","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45715,"byte_end":45740,"line_start":91,"line_end":91,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45847,"byte_end":45850,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<PrettyConfig>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a default `PrettyConfig`.\n","sig":null,"attributes":[{"value":"/ Creates a default `PrettyConfig`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45798,"byte_end":45835,"line_start":96,"line_end":96,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46207,"byte_end":46218,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"depth_limit","qualname":"<PrettyConfig>::depth_limit","value":"fn depth_limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limits the pretty-formatting based on the number of indentations.\n I.e., with a depth limit of 5, starting with an element of depth\n (indentation level) 6, everything will be put into the same line,\n without pretty formatting.","sig":null,"attributes":[{"value":"/ Limits the pretty-formatting based on the number of indentations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45901,"byte_end":45970,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ I.e., with a depth limit of 5, starting with an element of depth","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45975,"byte_end":46043,"line_start":102,"line_end":102,"column_start":5,"column_end":73}},{"value":"/ (indentation level) 6, everything will be put into the same line,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46048,"byte_end":46117,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ without pretty formatting.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46122,"byte_end":46152,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46157,"byte_end":46160,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Default: [std::usize::MAX]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46165,"byte_end":46195,"line_start":106,"line_end":106,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46446,"byte_end":46454,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"new_line","qualname":"<PrettyConfig>::new_line","value":"fn new_line(Self, String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the newlines used for serialization.","sig":null,"attributes":[{"value":"/ Configures the newlines used for serialization.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46324,"byte_end":46375,"line_start":113,"line_end":113,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46380,"byte_end":46383,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Default: `\\r\\n` on Windows, `\\n` otherwise","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46388,"byte_end":46434,"line_start":115,"line_end":115,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46654,"byte_end":46662,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"indentor","qualname":"<PrettyConfig>::indentor","value":"fn indentor(Self, String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the string sequence used for indentation.","sig":null,"attributes":[{"value":"/ Configures the string sequence used for indentation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46552,"byte_end":46608,"line_start":122,"line_end":122,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46613,"byte_end":46616,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Default: 4 spaces","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46621,"byte_end":46642,"line_start":124,"line_end":124,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46870,"byte_end":46879,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"separator","qualname":"<PrettyConfig>::separator","value":"fn separator(Self, String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the string sequence used to separate items inline.","sig":null,"attributes":[{"value":"/ Configures the string sequence used to separate items inline.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46760,"byte_end":46825,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46830,"byte_end":46833,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Default: 1 space","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46838,"byte_end":46858,"line_start":133,"line_end":133,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47069,"byte_end":47081,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"struct_names","qualname":"<PrettyConfig>::struct_names","value":"fn struct_names(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether to emit struct names.","sig":null,"attributes":[{"value":"/ Configures whether to emit struct names.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":46980,"byte_end":47024,"line_start":140,"line_end":140,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47029,"byte_end":47032,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Default: `false`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47037,"byte_end":47057,"line_start":142,"line_end":142,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47472,"byte_end":47494,"line_start":155,"line_end":155,"column_start":12,"column_end":34},"name":"separate_tuple_members","qualname":"<PrettyConfig>::separate_tuple_members","value":"fn separate_tuple_members(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether tuples are single- or multi-line.\n If set to `true`, tuples will have their fields indented and in new\n lines. If set to `false`, tuples will be serialized without any\n newlines or indentations.","sig":null,"attributes":[{"value":"/ Configures whether tuples are single- or multi-line.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47189,"byte_end":47245,"line_start":149,"line_end":149,"column_start":5,"column_end":61}},{"value":"/ If set to `true`, tuples will have their fields indented and in new","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47250,"byte_end":47321,"line_start":150,"line_end":150,"column_start":5,"column_end":76}},{"value":"/ lines. If set to `false`, tuples will be serialized without any","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47326,"byte_end":47393,"line_start":151,"line_end":151,"column_start":5,"column_end":72}},{"value":"/ newlines or indentations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47398,"byte_end":47427,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47432,"byte_end":47435,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Default: `false`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47440,"byte_end":47460,"line_start":154,"line_end":154,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47778,"byte_end":47794,"line_start":165,"line_end":165,"column_start":12,"column_end":28},"name":"enumerate_arrays","qualname":"<PrettyConfig>::enumerate_arrays","value":"fn enumerate_arrays(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether a comment shall be added to every array element,\n indicating the index.","sig":null,"attributes":[{"value":"/ Configures whether a comment shall be added to every array element,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47632,"byte_end":47703,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ indicating the index.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47708,"byte_end":47733,"line_start":162,"line_end":162,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47738,"byte_end":47741,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Default: `false`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47746,"byte_end":47766,"line_start":164,"line_end":164,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48279,"byte_end":48293,"line_start":182,"line_end":182,"column_start":12,"column_end":26},"name":"compact_arrays","qualname":"<PrettyConfig>::compact_arrays","value":"fn compact_arrays(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures whether every array should be a single line (true) or a multi line one (false)\n When false, `[\"a\",\"b\"]` (as well as any array) will serialize to\n `\n [\n   \"a\",\n   \"b\",\n ]\n `\n When true, `[\"a\",\"b\"]` (as well as any array) will serialize to `[\"a\",\"b\"]`","sig":null,"attributes":[{"value":"/ Configures whether every array should be a single line (true) or a multi line one (false)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":47914,"byte_end":48007,"line_start":171,"line_end":171,"column_start":5,"column_end":98}},{"value":"/ When false, `[\"a\",\"b\"]` (as well as any array) will serialize to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48012,"byte_end":48080,"line_start":172,"line_end":172,"column_start":5,"column_end":73}},{"value":"/ `","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48085,"byte_end":48090,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ [","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48095,"byte_end":48100,"line_start":174,"line_end":174,"column_start":5,"column_end":10}},{"value":"/   \"a\",","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48105,"byte_end":48115,"line_start":175,"line_end":175,"column_start":5,"column_end":15}},{"value":"/   \"b\",","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48120,"byte_end":48130,"line_start":176,"line_end":176,"column_start":5,"column_end":15}},{"value":"/ ]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48135,"byte_end":48140,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ `","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48145,"byte_end":48150,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ When true, `[\"a\",\"b\"]` (as well as any array) will serialize to `[\"a\",\"b\"]`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48155,"byte_end":48234,"line_start":179,"line_end":179,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48239,"byte_end":48242,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Default: `false`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48247,"byte_end":48267,"line_start":181,"line_end":181,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48489,"byte_end":48499,"line_start":191,"line_end":191,"column_start":12,"column_end":22},"name":"extensions","qualname":"<PrettyConfig>::extensions","value":"fn extensions(Self, Extensions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures extensions","sig":null,"attributes":[{"value":"/ Configures extensions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48407,"byte_end":48432,"line_start":188,"line_end":188,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48437,"byte_end":48440,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Default: Extensions::empty()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48445,"byte_end":48477,"line_start":190,"line_end":190,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48644,"byte_end":48651,"line_start":199,"line_end":199,"column_start":8,"column_end":15},"name":"default","qualname":"<PrettyConfig as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49352,"byte_end":49362,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" The RON serializer.","sig":null,"attributes":[{"value":"/ The RON serializer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49182,"byte_end":49205,"line_start":218,"line_end":218,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49206,"byte_end":49209,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ You can just use `to_string` for deserializing a value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49210,"byte_end":49269,"line_start":220,"line_end":220,"column_start":1,"column_end":60}},{"value":"/ If you want it pretty-printed, take a look at the `pretty` module.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49270,"byte_end":49340,"line_start":221,"line_end":221,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49699,"byte_end":49702,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer<W>>::new","value":"fn new(W, Option<PrettyConfig>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Serializer`.","sig":null,"attributes":[{"value":"/ Creates a new `Serializer`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49571,"byte_end":49602,"line_start":231,"line_end":231,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49607,"byte_end":49610,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Most of the time you can just use `to_string` or `to_string_pretty`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49615,"byte_end":49687,"line_start":233,"line_end":233,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49964,"byte_end":49976,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"with_options","qualname":"<Serializer<W>>::with_options","value":"fn with_options(W, Option<PrettyConfig>, Options) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Serializer`.","sig":null,"attributes":[{"value":"/ Creates a new `Serializer`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49836,"byte_end":49867,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49872,"byte_end":49875,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Most of the time you can just use `to_string` or `to_string_pretty`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49880,"byte_end":49952,"line_start":240,"line_end":240,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":54964,"byte_end":54978,"line_start":397,"line_end":397,"column_start":8,"column_end":22},"name":"serialize_bool","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_bool","value":"fn serialize_bool(Self, bool) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2175},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":55107,"byte_end":55119,"line_start":402,"line_end":402,"column_start":8,"column_end":20},"name":"serialize_i8","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_i8","value":"fn serialize_i8(Self, i8) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":55194,"byte_end":55207,"line_start":406,"line_end":406,"column_start":8,"column_end":21},"name":"serialize_i16","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_i16","value":"fn serialize_i16(Self, i16) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2177},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":55283,"byte_end":55296,"line_start":410,"line_end":410,"column_start":8,"column_end":21},"name":"serialize_i32","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_i32","value":"fn serialize_i32(Self, i32) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2178},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":55372,"byte_end":55385,"line_start":414,"line_end":414,"column_start":8,"column_end":21},"name":"serialize_i64","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_i64","value":"fn serialize_i64(Self, i64) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":55496,"byte_end":55510,"line_start":419,"line_end":419,"column_start":8,"column_end":22},"name":"serialize_i128","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_i128","value":"fn serialize_i128(Self, i128) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":9726},"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"integer128\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":55458,"byte_end":55488,"line_start":418,"line_end":418,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":55587,"byte_end":55599,"line_start":423,"line_end":423,"column_start":8,"column_end":20},"name":"serialize_u8","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_u8","value":"fn serialize_u8(Self, u8) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2180},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":55674,"byte_end":55687,"line_start":427,"line_end":427,"column_start":8,"column_end":21},"name":"serialize_u16","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_u16","value":"fn serialize_u16(Self, u16) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2181},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":55763,"byte_end":55776,"line_start":431,"line_end":431,"column_start":8,"column_end":21},"name":"serialize_u32","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_u32","value":"fn serialize_u32(Self, u32) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2182},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":55852,"byte_end":55865,"line_start":435,"line_end":435,"column_start":8,"column_end":21},"name":"serialize_u64","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_u64","value":"fn serialize_u64(Self, u64) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2183},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":55976,"byte_end":55990,"line_start":440,"line_end":440,"column_start":8,"column_end":22},"name":"serialize_u128","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_u128","value":"fn serialize_u128(Self, u128) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":9727},"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"integer128\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":55938,"byte_end":55968,"line_start":439,"line_end":439,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":56067,"byte_end":56080,"line_start":444,"line_end":444,"column_start":8,"column_end":21},"name":"serialize_f32","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_f32","value":"fn serialize_f32(Self, f32) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2184},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":56259,"byte_end":56272,"line_start":452,"line_end":452,"column_start":8,"column_end":21},"name":"serialize_f64","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_f64","value":"fn serialize_f64(Self, f64) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2185},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":56451,"byte_end":56465,"line_start":460,"line_end":460,"column_start":8,"column_end":22},"name":"serialize_char","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_char","value":"fn serialize_char(Self, char) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2186},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":56730,"byte_end":56743,"line_start":470,"line_end":470,"column_start":8,"column_end":21},"name":"serialize_str","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_str","value":"fn serialize_str<'_>(Self, &'_ str) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2187},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":56845,"byte_end":56860,"line_start":476,"line_end":476,"column_start":8,"column_end":23},"name":"serialize_bytes","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_bytes","value":"fn serialize_bytes<'_>(Self, &'_ [u8]) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":56962,"byte_end":56976,"line_start":480,"line_end":480,"column_start":8,"column_end":22},"name":"serialize_none","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_none","value":"fn serialize_none(Self) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2189},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":57070,"byte_end":57084,"line_start":486,"line_end":486,"column_start":8,"column_end":22},"name":"serialize_some","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_some","value":"fn serialize_some<T, '_>(Self, &'_ T) -> Result<()> where T: ?Sized +\nSerialize","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2190},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":57481,"byte_end":57495,"line_start":502,"line_end":502,"column_start":8,"column_end":22},"name":"serialize_unit","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_unit","value":"fn serialize_unit(Self) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2192},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":57675,"byte_end":57696,"line_start":512,"line_end":512,"column_start":8,"column_end":29},"name":"serialize_unit_struct","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_unit_struct","value":"fn serialize_unit_struct(Self, &'static str) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2193},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":57934,"byte_end":57956,"line_start":522,"line_end":522,"column_start":8,"column_end":30},"name":"serialize_unit_variant","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_unit_variant","value":"fn serialize_unit_variant(Self, &'static str, u32, &'static str) -> Result<()>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2194},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":58098,"byte_end":58122,"line_start":528,"line_end":528,"column_start":8,"column_end":32},"name":"serialize_newtype_struct","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_newtype_struct","value":"fn serialize_newtype_struct<T, '_>(Self, &'static str, &'_ T) -> Result<()>\nwhere T: ?Sized + Serialize","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":58648,"byte_end":58673,"line_start":548,"line_end":548,"column_start":8,"column_end":33},"name":"serialize_newtype_variant","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_newtype_variant","value":"fn serialize_newtype_variant<T,\n'_>(Self, &'static str, u32, &'static str, &'_ T) -> Result<()> where\nT: ?Sized + Serialize","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2197},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":59198,"byte_end":59211,"line_start":573,"line_end":573,"column_start":8,"column_end":21},"name":"serialize_seq","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_seq","value":"fn serialize_seq(Self, Option<usize>) -> Result<Self::SerializeSeq>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2199},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":59767,"byte_end":59782,"line_start":597,"line_end":597,"column_start":8,"column_end":23},"name":"serialize_tuple","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_tuple","value":"fn serialize_tuple(Self, usize) -> Result<Self::SerializeTuple>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2200},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":60303,"byte_end":60325,"line_start":618,"line_end":618,"column_start":8,"column_end":30},"name":"serialize_tuple_struct","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_tuple_struct","value":"fn serialize_tuple_struct(Self, &'static str, usize)\n-> Result<Self::SerializeTupleStruct>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2201},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":60594,"byte_end":60617,"line_start":630,"line_end":630,"column_start":8,"column_end":31},"name":"serialize_tuple_variant","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_tuple_variant","value":"fn serialize_tuple_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeTupleVariant>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2202},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":61163,"byte_end":61176,"line_start":655,"line_end":655,"column_start":8,"column_end":21},"name":"serialize_map","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_map","value":"fn serialize_map(Self, Option<usize>) -> Result<Self::SerializeMap>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2203},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":61571,"byte_end":61587,"line_start":673,"line_end":673,"column_start":8,"column_end":24},"name":"serialize_struct","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_struct","value":"fn serialize_struct(Self, &'static str, usize)\n-> Result<Self::SerializeStruct>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2204},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":62164,"byte_end":62188,"line_start":694,"line_end":694,"column_start":8,"column_end":32},"name":"serialize_struct_variant","qualname":"<&'a mut Serializer<W> as ser::_::_serde::Serializer>::serialize_struct_variant","value":"fn serialize_struct_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeStructVariant>","parent":{"krate":16,"index":2165},"children":[],"decl_id":{"krate":16,"index":2205},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":62731,"byte_end":62739,"line_start":723,"line_end":723,"column_start":12,"column_end":20},"name":"Compound","qualname":"::ser::Compound","value":"Compound {  }","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":62953,"byte_end":62970,"line_start":733,"line_end":733,"column_start":8,"column_end":25},"name":"serialize_element","qualname":"<Compound as ser::_::_serde::ser::SerializeSeq>::serialize_element","value":"fn serialize_element<T, '_, '_>(&'_ mut Self, &'_ T) -> Result<()> where\nT: ?Sized + Serialize","parent":{"krate":16,"index":2215},"children":[],"decl_id":{"krate":16,"index":2218},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":64075,"byte_end":64078,"line_start":767,"line_end":767,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as ser::_::_serde::ser::SerializeSeq>::end","value":"fn end(Self) -> Result<()>","parent":{"krate":16,"index":2215},"children":[],"decl_id":{"krate":16,"index":2220},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":64908,"byte_end":64925,"line_start":795,"line_end":795,"column_start":8,"column_end":25},"name":"serialize_element","qualname":"<Compound as ser::_::_serde::ser::SerializeTuple>::serialize_element","value":"fn serialize_element<T, '_, '_>(&'_ mut Self, &'_ T) -> Result<()> where\nT: ?Sized + Serialize","parent":{"krate":16,"index":2221},"children":[],"decl_id":{"krate":16,"index":2224},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":65703,"byte_end":65706,"line_start":821,"line_end":821,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as ser::_::_serde::ser::SerializeTuple>::end","value":"fn end(Self) -> Result<()>","parent":{"krate":16,"index":2221},"children":[],"decl_id":{"krate":16,"index":2226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":66475,"byte_end":66490,"line_start":847,"line_end":847,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"<Compound as ser::_::_serde::ser::SerializeTupleStruct>::serialize_field","value":"fn serialize_field<T, '_, '_>(&'_ mut Self, &'_ T) -> Result<()> where\nT: ?Sized + Serialize","parent":{"krate":16,"index":2227},"children":[],"decl_id":{"krate":16,"index":2230},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":66651,"byte_end":66654,"line_start":854,"line_end":854,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as ser::_::_serde::ser::SerializeTupleStruct>::end","value":"fn end(Self) -> Result<()>","parent":{"krate":16,"index":2227},"children":[],"decl_id":{"krate":16,"index":2232},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":66847,"byte_end":66862,"line_start":863,"line_end":863,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"<Compound as ser::_::_serde::ser::SerializeTupleVariant>::serialize_field","value":"fn serialize_field<T, '_, '_>(&'_ mut Self, &'_ T) -> Result<()> where\nT: ?Sized + Serialize","parent":{"krate":16,"index":2233},"children":[],"decl_id":{"krate":16,"index":2236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":67023,"byte_end":67026,"line_start":870,"line_end":870,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as ser::_::_serde::ser::SerializeTupleVariant>::end","value":"fn end(Self) -> Result<()>","parent":{"krate":16,"index":2233},"children":[],"decl_id":{"krate":16,"index":2238},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":67210,"byte_end":67223,"line_start":879,"line_end":879,"column_start":8,"column_end":21},"name":"serialize_key","qualname":"<Compound as ser::_::_serde::ser::SerializeMap>::serialize_key","value":"fn serialize_key<T, '_, '_>(&'_ mut Self, &'_ T) -> Result<()> where\nT: ?Sized + Serialize","parent":{"krate":16,"index":2239},"children":[],"decl_id":{"krate":16,"index":2242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":67880,"byte_end":67895,"line_start":900,"line_end":900,"column_start":8,"column_end":23},"name":"serialize_value","qualname":"<Compound as ser::_::_serde::ser::SerializeMap>::serialize_value","value":"fn serialize_value<T, '_, '_>(&'_ mut Self, &'_ T) -> Result<()> where\nT: ?Sized + Serialize","parent":{"krate":16,"index":2239},"children":[],"decl_id":{"krate":16,"index":2244},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":68234,"byte_end":68237,"line_start":915,"line_end":915,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as ser::_::_serde::ser::SerializeMap>::end","value":"fn end(Self) -> Result<()>","parent":{"krate":16,"index":2239},"children":[],"decl_id":{"krate":16,"index":2249},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":68869,"byte_end":68884,"line_start":935,"line_end":935,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"<Compound as ser::_::_serde::ser::SerializeStruct>::serialize_field","value":"fn serialize_field<T, '_, '_>(&'_ mut Self, &'static str, &'_ T) -> Result<()>\nwhere T: ?Sized + Serialize","parent":{"krate":16,"index":2250},"children":[],"decl_id":{"krate":16,"index":2253},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":69803,"byte_end":69806,"line_start":965,"line_end":965,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as ser::_::_serde::ser::SerializeStruct>::end","value":"fn end(Self) -> Result<()>","parent":{"krate":16,"index":2250},"children":[],"decl_id":{"krate":16,"index":2256},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":70440,"byte_end":70455,"line_start":986,"line_end":986,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"<Compound as ser::_::_serde::ser::SerializeStructVariant>::serialize_field","value":"fn serialize_field<T, '_, '_>(&'_ mut Self, &'static str, &'_ T) -> Result<()>\nwhere T: ?Sized + Serialize","parent":{"krate":16,"index":2257},"children":[],"decl_id":{"krate":16,"index":2260},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":70639,"byte_end":70642,"line_start":993,"line_end":993,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as ser::_::_serde::ser::SerializeStructVariant>::end","value":"fn end(Self) -> Result<()>","parent":{"krate":16,"index":2257},"children":[],"decl_id":{"krate":16,"index":2263},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":1325},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":791}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":71924,"byte_end":71936,"line_start":7,"line_end":7,"column_start":12,"column_end":24},"name":"SpannedError","qualname":"::error::SpannedError","value":"SpannedError { code, position }","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313}],"decl_id":null,"docs":" This type represents all possible errors that can occur when\n serializing or deserializing RON data.\n","sig":null,"attributes":[{"value":"/ This type represents all possible errors that can occur when","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":71766,"byte_end":71830,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/ serializing or deserializing RON data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":71831,"byte_end":71873,"line_start":5,"line_end":5,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":71947,"byte_end":71951,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"code","qualname":"::error::SpannedError::code","value":"error::Error","parent":{"krate":0,"index":1311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1313},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":71968,"byte_end":71976,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"name":"position","qualname":"::error::SpannedError::position","value":"error::Position","parent":{"krate":0,"index":1311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72000,"byte_end":72006,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72059,"byte_end":72072,"line_start":13,"line_end":13,"column_start":10,"column_end":23},"name":"SpannedResult","qualname":"::error::SpannedResult","value":"std::result::Result<T, SpannedError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72195,"byte_end":72197,"line_start":18,"line_end":18,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Error::Io","value":"Error::Io(String)","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72198,"byte_end":72204,"line_start":18,"line_end":18,"column_start":8,"column_end":14},"name":"0","qualname":"::error::Error::Io::0","value":"std::string::String","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72211,"byte_end":72218,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Message","qualname":"::error::Error::Message","value":"Error::Message(String)","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72219,"byte_end":72225,"line_start":19,"line_end":19,"column_start":13,"column_end":19},"name":"0","qualname":"::error::Error::Message::0","value":"std::string::String","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72232,"byte_end":72243,"line_start":20,"line_end":20,"column_start":5,"column_end":16},"name":"Base64Error","qualname":"::error::Error::Base64Error","value":"Error::Base64Error(base64::DecodeError)","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72244,"byte_end":72263,"line_start":20,"line_end":20,"column_start":17,"column_end":36},"name":"0","qualname":"::error::Error::Base64Error::0","value":"base64::DecodeError","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72270,"byte_end":72273,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"Eof","qualname":"::error::Error::Eof","value":"Error::Eof","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72279,"byte_end":72292,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"name":"ExpectedArray","qualname":"::error::Error::ExpectedArray","value":"Error::ExpectedArray","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72298,"byte_end":72314,"line_start":23,"line_end":23,"column_start":5,"column_end":21},"name":"ExpectedArrayEnd","qualname":"::error::Error::ExpectedArrayEnd","value":"Error::ExpectedArrayEnd","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1341},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72320,"byte_end":72337,"line_start":24,"line_end":24,"column_start":5,"column_end":22},"name":"ExpectedAttribute","qualname":"::error::Error::ExpectedAttribute","value":"Error::ExpectedAttribute","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72343,"byte_end":72363,"line_start":25,"line_end":25,"column_start":5,"column_end":25},"name":"ExpectedAttributeEnd","qualname":"::error::Error::ExpectedAttributeEnd","value":"Error::ExpectedAttributeEnd","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72369,"byte_end":72384,"line_start":26,"line_end":26,"column_start":5,"column_end":20},"name":"ExpectedBoolean","qualname":"::error::Error::ExpectedBoolean","value":"Error::ExpectedBoolean","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72390,"byte_end":72403,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"name":"ExpectedComma","qualname":"::error::Error::ExpectedComma","value":"Error::ExpectedComma","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1349},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72409,"byte_end":72421,"line_start":28,"line_end":28,"column_start":5,"column_end":17},"name":"ExpectedChar","qualname":"::error::Error::ExpectedChar","value":"Error::ExpectedChar","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72427,"byte_end":72440,"line_start":29,"line_end":29,"column_start":5,"column_end":18},"name":"ExpectedFloat","qualname":"::error::Error::ExpectedFloat","value":"Error::ExpectedFloat","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72446,"byte_end":72461,"line_start":30,"line_end":30,"column_start":5,"column_end":20},"name":"FloatUnderscore","qualname":"::error::Error::FloatUnderscore","value":"Error::FloatUnderscore","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1355},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72467,"byte_end":72482,"line_start":31,"line_end":31,"column_start":5,"column_end":20},"name":"ExpectedInteger","qualname":"::error::Error::ExpectedInteger","value":"Error::ExpectedInteger","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72488,"byte_end":72502,"line_start":32,"line_end":32,"column_start":5,"column_end":19},"name":"ExpectedOption","qualname":"::error::Error::ExpectedOption","value":"Error::ExpectedOption","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72508,"byte_end":72525,"line_start":33,"line_end":33,"column_start":5,"column_end":22},"name":"ExpectedOptionEnd","qualname":"::error::Error::ExpectedOptionEnd","value":"Error::ExpectedOptionEnd","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72531,"byte_end":72542,"line_start":34,"line_end":34,"column_start":5,"column_end":16},"name":"ExpectedMap","qualname":"::error::Error::ExpectedMap","value":"Error::ExpectedMap","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72548,"byte_end":72564,"line_start":35,"line_end":35,"column_start":5,"column_end":21},"name":"ExpectedMapColon","qualname":"::error::Error::ExpectedMapColon","value":"Error::ExpectedMapColon","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72570,"byte_end":72584,"line_start":36,"line_end":36,"column_start":5,"column_end":19},"name":"ExpectedMapEnd","qualname":"::error::Error::ExpectedMapEnd","value":"Error::ExpectedMapEnd","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72590,"byte_end":72617,"line_start":37,"line_end":37,"column_start":5,"column_end":32},"name":"ExpectedDifferentStructName","qualname":"::error::Error::ExpectedDifferentStructName","value":"Error::ExpectedDifferentStructName { expected, found }","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72628,"byte_end":72636,"line_start":38,"line_end":38,"column_start":9,"column_end":17},"name":"expected","qualname":"::error::Error::ExpectedDifferentStructName::expected","value":"&'static str","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72660,"byte_end":72665,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"name":"found","qualname":"::error::Error::ExpectedDifferentStructName::found","value":"std::string::String","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72686,"byte_end":72704,"line_start":41,"line_end":41,"column_start":5,"column_end":23},"name":"ExpectedStructLike","qualname":"::error::Error::ExpectedStructLike","value":"Error::ExpectedStructLike","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72710,"byte_end":72733,"line_start":42,"line_end":42,"column_start":5,"column_end":28},"name":"ExpectedNamedStructLike","qualname":"::error::Error::ExpectedNamedStructLike","value":"Error::ExpectedNamedStructLike(&'static str)","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72734,"byte_end":72746,"line_start":42,"line_end":42,"column_start":29,"column_end":41},"name":"0","qualname":"::error::Error::ExpectedNamedStructLike::0","value":"&'static str","parent":{"krate":0,"index":1372},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1375},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72753,"byte_end":72774,"line_start":43,"line_end":43,"column_start":5,"column_end":26},"name":"ExpectedStructLikeEnd","qualname":"::error::Error::ExpectedStructLikeEnd","value":"Error::ExpectedStructLikeEnd","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72780,"byte_end":72792,"line_start":44,"line_end":44,"column_start":5,"column_end":17},"name":"ExpectedUnit","qualname":"::error::Error::ExpectedUnit","value":"Error::ExpectedUnit","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72798,"byte_end":72812,"line_start":45,"line_end":45,"column_start":5,"column_end":19},"name":"ExpectedString","qualname":"::error::Error::ExpectedString","value":"Error::ExpectedString","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72818,"byte_end":72835,"line_start":46,"line_end":46,"column_start":5,"column_end":22},"name":"ExpectedStringEnd","qualname":"::error::Error::ExpectedStringEnd","value":"Error::ExpectedStringEnd","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72841,"byte_end":72859,"line_start":47,"line_end":47,"column_start":5,"column_end":23},"name":"ExpectedIdentifier","qualname":"::error::Error::ExpectedIdentifier","value":"Error::ExpectedIdentifier","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72866,"byte_end":72879,"line_start":49,"line_end":49,"column_start":5,"column_end":18},"name":"InvalidEscape","qualname":"::error::Error::InvalidEscape","value":"Error::InvalidEscape(&'static str)","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1387},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72880,"byte_end":72892,"line_start":49,"line_end":49,"column_start":19,"column_end":31},"name":"0","qualname":"::error::Error::InvalidEscape::0","value":"&'static str","parent":{"krate":0,"index":1385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72900,"byte_end":72918,"line_start":51,"line_end":51,"column_start":5,"column_end":23},"name":"IntegerOutOfBounds","qualname":"::error::Error::IntegerOutOfBounds","value":"Error::IntegerOutOfBounds","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72925,"byte_end":72940,"line_start":53,"line_end":53,"column_start":5,"column_end":20},"name":"NoSuchExtension","qualname":"::error::Error::NoSuchExtension","value":"Error::NoSuchExtension(String)","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72941,"byte_end":72947,"line_start":53,"line_end":53,"column_start":21,"column_end":27},"name":"0","qualname":"::error::Error::NoSuchExtension::0","value":"std::string::String","parent":{"krate":0,"index":1390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72955,"byte_end":72975,"line_start":55,"line_end":55,"column_start":5,"column_end":25},"name":"UnclosedBlockComment","qualname":"::error::Error::UnclosedBlockComment","value":"Error::UnclosedBlockComment","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1395},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72981,"byte_end":73002,"line_start":56,"line_end":56,"column_start":5,"column_end":26},"name":"UnderscoreAtBeginning","qualname":"::error::Error::UnderscoreAtBeginning","value":"Error::UnderscoreAtBeginning","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73008,"byte_end":73022,"line_start":57,"line_end":57,"column_start":5,"column_end":19},"name":"UnexpectedByte","qualname":"::error::Error::UnexpectedByte","value":"Error::UnexpectedByte(char)","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73023,"byte_end":73027,"line_start":57,"line_end":57,"column_start":20,"column_end":24},"name":"0","qualname":"::error::Error::UnexpectedByte::0","value":"char","parent":{"krate":0,"index":1397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73035,"byte_end":73044,"line_start":59,"line_end":59,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::error::Error::Utf8Error","value":"Error::Utf8Error(Utf8Error)","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1402},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73045,"byte_end":73054,"line_start":59,"line_end":59,"column_start":15,"column_end":24},"name":"0","qualname":"::error::Error::Utf8Error::0","value":"std::str::Utf8Error","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73061,"byte_end":73079,"line_start":60,"line_end":60,"column_start":5,"column_end":23},"name":"TrailingCharacters","qualname":"::error::Error::TrailingCharacters","value":"Error::TrailingCharacters","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1405},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73086,"byte_end":73105,"line_start":62,"line_end":62,"column_start":5,"column_end":24},"name":"InvalidValueForType","qualname":"::error::Error::InvalidValueForType","value":"Error::InvalidValueForType { expected, found }","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1406},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73116,"byte_end":73124,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"name":"expected","qualname":"::error::Error::InvalidValueForType::expected","value":"std::string::String","parent":{"krate":0,"index":1405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73142,"byte_end":73147,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"name":"found","qualname":"::error::Error::InvalidValueForType::found","value":"std::string::String","parent":{"krate":0,"index":1405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73168,"byte_end":73191,"line_start":66,"line_end":66,"column_start":5,"column_end":28},"name":"ExpectedDifferentLength","qualname":"::error::Error::ExpectedDifferentLength","value":"Error::ExpectedDifferentLength { expected, found }","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73202,"byte_end":73210,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"name":"expected","qualname":"::error::Error::ExpectedDifferentLength::expected","value":"std::string::String","parent":{"krate":0,"index":1408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73228,"byte_end":73233,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"name":"found","qualname":"::error::Error::ExpectedDifferentLength::found","value":"usize","parent":{"krate":0,"index":1408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73253,"byte_end":73270,"line_start":70,"line_end":70,"column_start":5,"column_end":22},"name":"NoSuchEnumVariant","qualname":"::error::Error::NoSuchEnumVariant","value":"Error::NoSuchEnumVariant { expected, found, outer }","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73281,"byte_end":73289,"line_start":71,"line_end":71,"column_start":9,"column_end":17},"name":"expected","qualname":"::error::Error::NoSuchEnumVariant::expected","value":"&'static [&'static str]","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73324,"byte_end":73329,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"name":"found","qualname":"::error::Error::NoSuchEnumVariant::found","value":"std::string::String","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73347,"byte_end":73352,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"name":"outer","qualname":"::error::Error::NoSuchEnumVariant::outer","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73381,"byte_end":73398,"line_start":75,"line_end":75,"column_start":5,"column_end":22},"name":"NoSuchStructField","qualname":"::error::Error::NoSuchStructField","value":"Error::NoSuchStructField { expected, found, outer }","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73409,"byte_end":73417,"line_start":76,"line_end":76,"column_start":9,"column_end":17},"name":"expected","qualname":"::error::Error::NoSuchStructField::expected","value":"&'static [&'static str]","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73452,"byte_end":73457,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"name":"found","qualname":"::error::Error::NoSuchStructField::found","value":"std::string::String","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1418},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73475,"byte_end":73480,"line_start":78,"line_end":78,"column_start":9,"column_end":14},"name":"outer","qualname":"::error::Error::NoSuchStructField::outer","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73509,"byte_end":73527,"line_start":80,"line_end":80,"column_start":5,"column_end":23},"name":"MissingStructField","qualname":"::error::Error::MissingStructField","value":"Error::MissingStructField { field, outer }","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1420},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73538,"byte_end":73543,"line_start":81,"line_end":81,"column_start":9,"column_end":14},"name":"field","qualname":"::error::Error::MissingStructField::field","value":"&'static str","parent":{"krate":0,"index":1419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1421},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73567,"byte_end":73572,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"name":"outer","qualname":"::error::Error::MissingStructField::outer","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73601,"byte_end":73621,"line_start":84,"line_end":84,"column_start":5,"column_end":25},"name":"DuplicateStructField","qualname":"::error::Error::DuplicateStructField","value":"Error::DuplicateStructField { field, outer }","parent":{"krate":0,"index":1325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73632,"byte_end":73637,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"name":"field","qualname":"::error::Error::DuplicateStructField::field","value":"&'static str","parent":{"krate":0,"index":1422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73661,"byte_end":73666,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"outer","qualname":"::error::Error::DuplicateStructField::outer","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72183,"byte_end":72188,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"enum Error {\n    Io(String),\n    Message(String),\n    Base64Error(base64::DecodeError),\n    Eof,\n    ExpectedArray,\n    ExpectedArrayEnd,\n    ExpectedAttribute,\n    ExpectedAttributeEnd,\n    ExpectedBoolean,\n    ExpectedComma,\n    ExpectedChar,\n    ExpectedFloat,\n    FloatUnderscore,\n    ExpectedInteger,\n    ExpectedOption,\n    ExpectedOptionEnd,\n    ExpectedMap,\n    ExpectedMapColon,\n    ExpectedMapEnd,\n    ExpectedDifferentStructName {\n            expected: &'static str,\n            found: String,\n        },\n    ExpectedStructLike,\n    ExpectedNamedStructLike(&'static str),\n    ExpectedStructLikeEnd,\n    ExpectedUnit,\n    ExpectedString,\n    ExpectedStringEnd,\n    ExpectedIdentifier,\n    InvalidEscape(&'static str),\n    IntegerOutOfBounds,\n    NoSuchExtension(String),\n    UnclosedBlockComment,\n    UnderscoreAtBeginning,\n    UnexpectedByte(char),\n    Utf8Error(Utf8Error),\n    TrailingCharacters,\n    InvalidValueForType {\n            expected: String,\n            found: String,\n        },\n    ExpectedDifferentLength {\n            expected: String,\n            found: usize,\n        },\n    NoSuchEnumVariant {\n            expected: &'static [&'static str],\n            found: String,\n            outer: Option<String>,\n        },\n    NoSuchStructField {\n            expected: &'static [&'static str],\n            found: String,\n            outer: Option<String>,\n        },\n    MissingStructField {\n            field: &'static str,\n            outer: Option<String>,\n        },\n    DuplicateStructField {\n            field: &'static str,\n            outer: Option<String>,\n        },\n}","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1343},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1415},{"krate":0,"index":1419},{"krate":0,"index":1422}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":72156,"byte_end":72173,"line_start":16,"line_end":16,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73738,"byte_end":73741,"line_start":91,"line_end":91,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SpannedError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":74025,"byte_end":74028,"line_start":101,"line_end":101,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79558,"byte_end":79566,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"Position","qualname":"::error::Position","value":"Position { line, col }","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79577,"byte_end":79581,"line_start":235,"line_end":235,"column_start":9,"column_end":13},"name":"line","qualname":"::error::Position::line","value":"usize","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79598,"byte_end":79601,"line_start":236,"line_end":236,"column_start":9,"column_end":12},"name":"col","qualname":"::error::Position::col","value":"usize","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79653,"byte_end":79656,"line_start":240,"line_end":240,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Position as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79813,"byte_end":79819,"line_start":247,"line_end":247,"column_start":8,"column_end":14},"name":"custom","qualname":"<Error as ser::_::_serde::ser::Error>::custom","value":"fn custom<T>(T) -> Self where T: fmt::Display","parent":{"krate":16,"index":9723},"children":[],"decl_id":{"krate":16,"index":9724},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79798,"byte_end":79805,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79950,"byte_end":79956,"line_start":254,"line_end":254,"column_start":8,"column_end":14},"name":"custom","qualname":"<Error as ser::_::_serde::de::Error>::custom","value":"fn custom<T>(T) -> Self where T: fmt::Display","parent":{"krate":16,"index":9100},"children":[],"decl_id":{"krate":16,"index":9101},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79935,"byte_end":79942,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":80058,"byte_end":80070,"line_start":259,"line_end":259,"column_start":8,"column_end":20},"name":"invalid_type","qualname":"<Error as ser::_::_serde::de::Error>::invalid_type","value":"fn invalid_type<'_, '_>(de::Unexpected, &'_ dyn de::Expected) -> Self","parent":{"krate":16,"index":9100},"children":[],"decl_id":{"krate":16,"index":9103},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":80043,"byte_end":80050,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":80277,"byte_end":80290,"line_start":265,"line_end":265,"column_start":8,"column_end":21},"name":"invalid_value","qualname":"<Error as ser::_::_serde::de::Error>::invalid_value","value":"fn invalid_value<'_, '_>(de::Unexpected, &'_ dyn de::Expected) -> Self","parent":{"krate":16,"index":9100},"children":[],"decl_id":{"krate":16,"index":9104},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":80262,"byte_end":80269,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":82205,"byte_end":82219,"line_start":310,"line_end":310,"column_start":8,"column_end":22},"name":"invalid_length","qualname":"<Error as ser::_::_serde::de::Error>::invalid_length","value":"fn invalid_length<'_>(usize, &'_ dyn de::Expected) -> Self","parent":{"krate":16,"index":9100},"children":[],"decl_id":{"krate":16,"index":9105},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":82190,"byte_end":82197,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":82406,"byte_end":82421,"line_start":318,"line_end":318,"column_start":8,"column_end":23},"name":"unknown_variant","qualname":"<Error as ser::_::_serde::de::Error>::unknown_variant","value":"fn unknown_variant<'_>(&'_ str, &'static [&'static str]) -> Self","parent":{"krate":16,"index":9100},"children":[],"decl_id":{"krate":16,"index":9106},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":82391,"byte_end":82398,"line_start":317,"line_end":317,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":82640,"byte_end":82653,"line_start":327,"line_end":327,"column_start":8,"column_end":21},"name":"unknown_field","qualname":"<Error as ser::_::_serde::de::Error>::unknown_field","value":"fn unknown_field<'_>(&'_ str, &'static [&'static str]) -> Self","parent":{"krate":16,"index":9100},"children":[],"decl_id":{"krate":16,"index":9107},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":82625,"byte_end":82632,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":82868,"byte_end":82881,"line_start":336,"line_end":336,"column_start":8,"column_end":21},"name":"missing_field","qualname":"<Error as ser::_::_serde::de::Error>::missing_field","value":"fn missing_field(&'static str) -> Self","parent":{"krate":16,"index":9100},"children":[],"decl_id":{"krate":16,"index":9108},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":82853,"byte_end":82860,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":82996,"byte_end":83011,"line_start":341,"line_end":341,"column_start":8,"column_end":23},"name":"duplicate_field","qualname":"<Error as ser::_::_serde::de::Error>::duplicate_field","value":"fn duplicate_field(&'static str) -> Self","parent":{"krate":16,"index":9100},"children":[],"decl_id":{"krate":16,"index":9109},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":82981,"byte_end":82988,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83213,"byte_end":83217,"line_start":350,"line_end":350,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(Utf8Error) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83323,"byte_end":83327,"line_start":356,"line_end":356,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(FromUtf8Error) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83446,"byte_end":83450,"line_start":362,"line_end":362,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(io::Error) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83564,"byte_end":83568,"line_start":368,"line_end":368,"column_start":8,"column_end":12},"name":"from","qualname":"<SpannedError as std::convert::From>::from","value":"fn from(io::Error) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83758,"byte_end":83762,"line_start":377,"line_end":377,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(SpannedError) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"value","qualname":"::value","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":1471},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1465},{"krate":0,"index":854},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":1474},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":1508},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":962},{"krate":0,"index":964}],"decl_id":null,"docs":" Value module.\n","sig":null,"attributes":[{"value":"/ Value module.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":84479,"byte_end":84496,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85203,"byte_end":85206,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"Map","qualname":"::value::Map","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Value` to `Value` map.","sig":null,"attributes":[{"value":"/ A `Value` to `Value` map.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":84828,"byte_end":84857,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":84858,"byte_end":84861,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This structure either uses a [BTreeMap](std::collections::BTreeMap) or the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":84862,"byte_end":84940,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ [IndexMap](indexmap::IndexMap) internally.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":84941,"byte_end":84987,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ The latter can be used by enabling the `indexmap` feature. This can be used","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":84988,"byte_end":85067,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ to preserve the order of the parsed map.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85068,"byte_end":85112,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"serde(transparent)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85170,"byte_end":85191,"line_start":25,"line_end":25,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85277,"byte_end":85280,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Map>::new","value":"fn new() -> Map","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty `Map`.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty `Map`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85234,"byte_end":85265,"line_start":29,"line_end":29,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85388,"byte_end":85391,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"len","qualname":"<Map>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85330,"byte_end":85376,"line_start":34,"line_end":34,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85513,"byte_end":85521,"line_start":40,"line_end":40,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Map>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self.len() == 0`, `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self.len() == 0`, `false` otherwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85442,"byte_end":85501,"line_start":39,"line_end":39,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85687,"byte_end":85693,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"insert","qualname":"<Map>::insert","value":"fn insert<'_>(&'_ mut Self, Value, Value) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element, returning the previous element with this `key` if\n there was any.\n","sig":null,"attributes":[{"value":"/ Inserts a new element, returning the previous element with this `key` if","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85576,"byte_end":85652,"line_start":44,"line_end":44,"column_start":5,"column_end":81}},{"value":"/ there was any.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85657,"byte_end":85675,"line_start":45,"line_end":45,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85843,"byte_end":85849,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map>::remove","value":"fn remove<'_, '_>(&'_ mut Self, &'_ Value) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Removes an element by its `key`.\n","sig":null,"attributes":[{"value":"/ Removes an element by its `key`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85795,"byte_end":85831,"line_start":50,"line_end":50,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85975,"byte_end":85979,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"iter","qualname":"<Map>::iter","value":"fn iter<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate all key-value pairs.\n","sig":null,"attributes":[{"value":"/ Iterate all key-value pairs.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85931,"byte_end":85963,"line_start":55,"line_end":55,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86138,"byte_end":86146,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Map>::iter_mut","value":"fn iter_mut<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate all key-value pairs mutably.\n","sig":null,"attributes":[{"value":"/ Iterate all key-value pairs mutably.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86086,"byte_end":86126,"line_start":60,"line_end":60,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86298,"byte_end":86302,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"fn keys<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate all keys.\n","sig":null,"attributes":[{"value":"/ Iterate all keys.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86265,"byte_end":86286,"line_start":65,"line_end":65,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86434,"byte_end":86440,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"values","qualname":"<Map>::values","value":"fn values<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate all values.\n","sig":null,"attributes":[{"value":"/ Iterate all values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86399,"byte_end":86422,"line_start":70,"line_end":70,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86582,"byte_end":86592,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<Map>::values_mut","value":"fn values_mut<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate all values mutably.\n","sig":null,"attributes":[{"value":"/ Iterate all values mutably.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86539,"byte_end":86570,"line_start":75,"line_end":75,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86752,"byte_end":86761,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<Map as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = (Value, Value)>","parent":{"krate":2,"index":8406},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86990,"byte_end":86994,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"hash","qualname":"<Map as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":2,"index":10536},"children":[],"decl_id":{"krate":2,"index":10537},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87150,"byte_end":87155,"line_start":99,"line_end":99,"column_start":8,"column_end":13},"name":"index","qualname":"<Map as std::ops::Index>::index","value":"fn index<'_, '_>(&'_ Self, &'_ Value) -> &'_ Self::Output","parent":{"krate":2,"index":3576},"children":[],"decl_id":{"krate":2,"index":3579},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87268,"byte_end":87277,"line_start":105,"line_end":105,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<Map as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_, '_>(&'_ mut Self, &'_ Value) -> &'_ mut Self::Output","parent":{"krate":2,"index":3580},"children":[],"decl_id":{"krate":2,"index":3582},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87425,"byte_end":87428,"line_start":111,"line_end":111,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Map as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Map) -> Ordering","parent":{"krate":2,"index":2956},"children":[],"decl_id":{"krate":2,"index":2957},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87616,"byte_end":87618,"line_start":118,"line_end":118,"column_start":8,"column_end":10},"name":"eq","qualname":"<Map as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Map) -> bool","parent":{"krate":2,"index":2920},"children":[],"decl_id":{"krate":2,"index":2922},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87750,"byte_end":87761,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Map as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Map) -> Option<Ordering>","parent":{"krate":2,"index":2966},"children":[],"decl_id":{"krate":2,"index":2968},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88185,"byte_end":88192,"line_start":137,"line_end":137,"column_start":5,"column_end":12},"name":"Integer","qualname":"::value::Number::Integer","value":"Number::Integer(i64)","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88193,"byte_end":88196,"line_start":137,"line_end":137,"column_start":13,"column_end":16},"name":"0","qualname":"::value::Number::Integer::0","value":"i64","parent":{"krate":0,"index":1475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88203,"byte_end":88208,"line_start":138,"line_end":138,"column_start":5,"column_end":10},"name":"Float","qualname":"::value::Number::Float","value":"Number::Float(Float)","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88209,"byte_end":88214,"line_start":138,"line_end":138,"column_start":11,"column_end":16},"name":"0","qualname":"::value::Number::Float::0","value":"value::Float","parent":{"krate":0,"index":1478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88172,"byte_end":88178,"line_start":136,"line_end":136,"column_start":10,"column_end":16},"name":"Number","qualname":"::value::Number","value":"enum Number { Integer(i64), Float(Float), }","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1478}],"decl_id":null,"docs":" A wrapper for a number, which can be either `f64` or `i64`.\n","sig":null,"attributes":[{"value":"/ A wrapper for a number, which can be either `f64` or `i64`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88031,"byte_end":88094,"line_start":134,"line_end":134,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88382,"byte_end":88387,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"Float","qualname":"::value::Float","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for `f64`, which guarantees that the inner value\n is finite and thus implements `Eq`, `Hash` and `Ord`.\n","sig":null,"attributes":[{"value":"/ A wrapper for `f64`, which guarantees that the inner value","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88220,"byte_end":88282,"line_start":141,"line_end":141,"column_start":1,"column_end":63}},{"value":"/ is finite and thus implements `Eq`, `Hash` and `Ord`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88283,"byte_end":88340,"line_start":142,"line_end":142,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88452,"byte_end":88455,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"new","qualname":"<Float>::new","value":"fn new(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Float`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Float`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88412,"byte_end":88440,"line_start":147,"line_end":147,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88544,"byte_end":88547,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"get","qualname":"<Float>::get","value":"fn get(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the wrapped float.\n","sig":null,"attributes":[{"value":"/ Returns the wrapped float.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88502,"byte_end":88532,"line_start":152,"line_end":152,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88644,"byte_end":88647,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"new","qualname":"<Number>::new","value":"fn new<impl Into<Number>>(impl Into<Number>) -> Self where\nimpl Into<Number>: Into<Number>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new number.\n","sig":null,"attributes":[{"value":"/ Construct a new number.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88605,"byte_end":88632,"line_start":159,"line_end":159,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89080,"byte_end":89088,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"into_f64","qualname":"<Number>::into_f64","value":"fn into_f64(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the `f64` representation of the number regardless of whether the number is stored\n as a float or integer.","sig":null,"attributes":[{"value":"/ Returns the `f64` representation of the number regardless of whether the number is stored","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88708,"byte_end":88801,"line_start":164,"line_end":164,"column_start":5,"column_end":98}},{"value":"/ as a float or integer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88806,"byte_end":88832,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88837,"byte_end":88840,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88845,"byte_end":88858,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88863,"byte_end":88866,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88871,"byte_end":88878,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # use ron::value::Number;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88883,"byte_end":88912,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/ let i = Number::new(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88917,"byte_end":88944,"line_start":171,"line_end":171,"column_start":5,"column_end":32}},{"value":"/ let f = Number::new(2.0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88949,"byte_end":88978,"line_start":172,"line_end":172,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(i.into_f64(), 5.0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88983,"byte_end":89017,"line_start":173,"line_end":173,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(f.into_f64(), 2.0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89022,"byte_end":89056,"line_start":174,"line_end":174,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89061,"byte_end":89068,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89474,"byte_end":89480,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<Number>::as_f64","value":"fn as_f64(Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" If the `Number` is a float, return it. Otherwise return `None`.","sig":null,"attributes":[{"value":"/ If the `Number` is a float, return it. Otherwise return `None`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89156,"byte_end":89223,"line_start":180,"line_end":180,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89228,"byte_end":89231,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89236,"byte_end":89249,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89254,"byte_end":89257,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89262,"byte_end":89269,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ # use ron::value::Number;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89274,"byte_end":89303,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/ let i = Number::new(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89308,"byte_end":89335,"line_start":186,"line_end":186,"column_start":5,"column_end":32}},{"value":"/ let f = Number::new(2.0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89340,"byte_end":89369,"line_start":187,"line_end":187,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(i.as_f64(), None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89374,"byte_end":89407,"line_start":188,"line_end":188,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(f.as_f64(), Some(2.0));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89412,"byte_end":89450,"line_start":189,"line_end":189,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89455,"byte_end":89462,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89870,"byte_end":89876,"line_start":206,"line_end":206,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<Number>::as_i64","value":"fn as_i64(Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" If the `Number` is an integer, return it. Otherwise return `None`.","sig":null,"attributes":[{"value":"/ If the `Number` is an integer, return it. Otherwise return `None`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89551,"byte_end":89621,"line_start":195,"line_end":195,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89626,"byte_end":89629,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89634,"byte_end":89647,"line_start":197,"line_end":197,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89652,"byte_end":89655,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89660,"byte_end":89667,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ # use ron::value::Number;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89672,"byte_end":89701,"line_start":200,"line_end":200,"column_start":5,"column_end":34}},{"value":"/ let i = Number::new(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89706,"byte_end":89733,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/ let f = Number::new(2.0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89738,"byte_end":89767,"line_start":202,"line_end":202,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(i.as_i64(), Some(5));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89772,"byte_end":89808,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(f.as_i64(), None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89813,"byte_end":89846,"line_start":204,"line_end":204,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89851,"byte_end":89858,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90287,"byte_end":90293,"line_start":221,"line_end":221,"column_start":12,"column_end":18},"name":"map_to","qualname":"<Number>::map_to","value":"fn map_to<T, impl FnOnce(i64) -> T,\nimpl FnOnce(f64) -> T>(Self, impl FnOnce(i64) -> T, impl FnOnce(f64) -> T)\n-> T where impl FnOnce(i64) -> T: FnOnce(i64) -> T,\nimpl FnOnce(f64) -> T: FnOnce(f64) -> T","parent":null,"children":[],"decl_id":null,"docs":" Map this number to a single type using the appropriate closure.","sig":null,"attributes":[{"value":"/ Map this number to a single type using the appropriate closure.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":89947,"byte_end":90014,"line_start":210,"line_end":210,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90019,"byte_end":90022,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90027,"byte_end":90040,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90045,"byte_end":90048,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90053,"byte_end":90060,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # use ron::value::Number;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90065,"byte_end":90094,"line_start":215,"line_end":215,"column_start":5,"column_end":34}},{"value":"/ let i = Number::new(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90099,"byte_end":90126,"line_start":216,"line_end":216,"column_start":5,"column_end":32}},{"value":"/ let f = Number::new(2.0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90131,"byte_end":90160,"line_start":217,"line_end":217,"column_start":5,"column_end":34}},{"value":"/ assert!(i.map_to(|i| i > 3, |f| f > 3.0));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90165,"byte_end":90211,"line_start":218,"line_end":218,"column_start":5,"column_end":51}},{"value":"/ assert!(!f.map_to(|i| i > 3, |f| f > 3.0));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90216,"byte_end":90263,"line_start":219,"line_end":219,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90268,"byte_end":90275,"line_start":220,"line_end":220,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90585,"byte_end":90589,"line_start":234,"line_end":234,"column_start":8,"column_end":12},"name":"from","qualname":"<Number as std::convert::From>::from","value":"fn from(f64) -> Number","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90686,"byte_end":90690,"line_start":240,"line_end":240,"column_start":8,"column_end":12},"name":"from","qualname":"<Number as std::convert::From>::from","value":"fn from(i64) -> Number","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90782,"byte_end":90786,"line_start":246,"line_end":246,"column_start":8,"column_end":12},"name":"from","qualname":"<Number as std::convert::From>::from","value":"fn from(i32) -> Number","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":91068,"byte_end":91072,"line_start":255,"line_end":255,"column_start":8,"column_end":12},"name":"from","qualname":"<Number as std::convert::From>::from","value":"fn from(u64) -> Number","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":91492,"byte_end":91494,"line_start":269,"line_end":269,"column_start":8,"column_end":10},"name":"eq","qualname":"<Float as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":2,"index":2920},"children":[],"decl_id":{"krate":2,"index":2922},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":91860,"byte_end":91864,"line_start":281,"line_end":281,"column_start":8,"column_end":12},"name":"hash","qualname":"<Float as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":2,"index":10536},"children":[],"decl_id":{"krate":2,"index":10537},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":92452,"byte_end":92463,"line_start":296,"line_end":296,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Float as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Self) -> Option<Ordering>","parent":{"krate":2,"index":2966},"children":[],"decl_id":{"krate":2,"index":2968},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93101,"byte_end":93104,"line_start":312,"line_end":312,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Float as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Self) -> Ordering","parent":{"krate":2,"index":2956},"children":[],"decl_id":{"krate":2,"index":2957},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93298,"byte_end":93302,"line_start":319,"line_end":319,"column_start":5,"column_end":9},"name":"Bool","qualname":"::value::Value::Bool","value":"Value::Bool(bool)","parent":{"krate":0,"index":1508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1511},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93303,"byte_end":93307,"line_start":319,"line_end":319,"column_start":10,"column_end":14},"name":"0","qualname":"::value::Value::Bool::0","value":"bool","parent":{"krate":0,"index":1509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93314,"byte_end":93318,"line_start":320,"line_end":320,"column_start":5,"column_end":9},"name":"Char","qualname":"::value::Value::Char","value":"Value::Char(char)","parent":{"krate":0,"index":1508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1514},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93319,"byte_end":93323,"line_start":320,"line_end":320,"column_start":10,"column_end":14},"name":"0","qualname":"::value::Value::Char::0","value":"char","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1515},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93330,"byte_end":93333,"line_start":321,"line_end":321,"column_start":5,"column_end":8},"name":"Map","qualname":"::value::Value::Map","value":"Value::Map(Map)","parent":{"krate":0,"index":1508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1517},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93334,"byte_end":93337,"line_start":321,"line_end":321,"column_start":9,"column_end":12},"name":"0","qualname":"::value::Value::Map::0","value":"value::Map","parent":{"krate":0,"index":1515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1518},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93344,"byte_end":93350,"line_start":322,"line_end":322,"column_start":5,"column_end":11},"name":"Number","qualname":"::value::Value::Number","value":"Value::Number(Number)","parent":{"krate":0,"index":1508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1520},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93351,"byte_end":93357,"line_start":322,"line_end":322,"column_start":12,"column_end":18},"name":"0","qualname":"::value::Value::Number::0","value":"value::Number","parent":{"krate":0,"index":1518},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1521},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93364,"byte_end":93370,"line_start":323,"line_end":323,"column_start":5,"column_end":11},"name":"Option","qualname":"::value::Value::Option","value":"Value::Option(Option<Box<Value>>)","parent":{"krate":0,"index":1508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93371,"byte_end":93389,"line_start":323,"line_end":323,"column_start":12,"column_end":30},"name":"0","qualname":"::value::Value::Option::0","value":"std::option::Option<std::boxed::Box<value::Value>>","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1524},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93396,"byte_end":93402,"line_start":324,"line_end":324,"column_start":5,"column_end":11},"name":"String","qualname":"::value::Value::String","value":"Value::String(String)","parent":{"krate":0,"index":1508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1526},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93403,"byte_end":93409,"line_start":324,"line_end":324,"column_start":12,"column_end":18},"name":"0","qualname":"::value::Value::String::0","value":"std::string::String","parent":{"krate":0,"index":1524},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1527},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93416,"byte_end":93419,"line_start":325,"line_end":325,"column_start":5,"column_end":8},"name":"Seq","qualname":"::value::Value::Seq","value":"Value::Seq(Vec<Value>)","parent":{"krate":0,"index":1508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1529},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93420,"byte_end":93430,"line_start":325,"line_end":325,"column_start":9,"column_end":19},"name":"0","qualname":"::value::Value::Seq::0","value":"std::vec::Vec<value::Value>","parent":{"krate":0,"index":1527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93437,"byte_end":93441,"line_start":326,"line_end":326,"column_start":5,"column_end":9},"name":"Unit","qualname":"::value::Value::Unit","value":"Value::Unit","parent":{"krate":0,"index":1508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93286,"byte_end":93291,"line_start":318,"line_end":318,"column_start":10,"column_end":15},"name":"Value","qualname":"::value::Value","value":"enum Value {\n    Bool(bool),\n    Char(char),\n    Map(Map),\n    Number(Number),\n    Option(Option<Box<Value>>),\n    String(String),\n    Seq(Vec<Value>),\n    Unit,\n}","parent":null,"children":[{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1518},{"krate":0,"index":1521},{"krate":0,"index":1524},{"krate":0,"index":1527},{"krate":0,"index":1530}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93522,"byte_end":93531,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"into_rust","qualname":"<Value>::into_rust","value":"fn into_rust<T>(Self) -> Result<T> where T: DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Tries to deserialize this `Value` into `T`.\n","sig":null,"attributes":[{"value":"/ Tries to deserialize this `Value` into `T`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93463,"byte_end":93510,"line_start":330,"line_end":330,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":94038,"byte_end":94053,"line_start":350,"line_end":350,"column_start":8,"column_end":23},"name":"deserialize_any","qualname":"<Value as ser::_::_serde::Deserializer>::deserialize_any","value":"fn deserialize_any<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1639},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":94986,"byte_end":95000,"line_start":374,"line_end":374,"column_start":8,"column_end":22},"name":"deserialize_i8","qualname":"<Value as ser::_::_serde::Deserializer>::deserialize_i8","value":"fn deserialize_i8<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1643},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":95135,"byte_end":95150,"line_start":381,"line_end":381,"column_start":8,"column_end":23},"name":"deserialize_i16","qualname":"<Value as ser::_::_serde::Deserializer>::deserialize_i16","value":"fn deserialize_i16<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1645},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":95285,"byte_end":95300,"line_start":388,"line_end":388,"column_start":8,"column_end":23},"name":"deserialize_i32","qualname":"<Value as ser::_::_serde::Deserializer>::deserialize_i32","value":"fn deserialize_i32<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1647},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":95435,"byte_end":95450,"line_start":395,"line_end":395,"column_start":8,"column_end":23},"name":"deserialize_i64","qualname":"<Value as ser::_::_serde::Deserializer>::deserialize_i64","value":"fn deserialize_i64<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1649},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":95730,"byte_end":95744,"line_start":405,"line_end":405,"column_start":8,"column_end":22},"name":"deserialize_u8","qualname":"<Value as ser::_::_serde::Deserializer>::deserialize_u8","value":"fn deserialize_u8<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1651},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":95879,"byte_end":95894,"line_start":412,"line_end":412,"column_start":8,"column_end":23},"name":"deserialize_u16","qualname":"<Value as ser::_::_serde::Deserializer>::deserialize_u16","value":"fn deserialize_u16<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1653},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":96029,"byte_end":96044,"line_start":419,"line_end":419,"column_start":8,"column_end":23},"name":"deserialize_u32","qualname":"<Value as ser::_::_serde::Deserializer>::deserialize_u32","value":"fn deserialize_u32<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1655},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":96179,"byte_end":96194,"line_start":426,"line_end":426,"column_start":8,"column_end":23},"name":"deserialize_u64","qualname":"<Value as ser::_::_serde::Deserializer>::deserialize_u64","value":"fn deserialize_u64<V>(Self, V) -> Result<V::Value> where V: Visitor","parent":{"krate":16,"index":1636},"children":[],"decl_id":{"krate":16,"index":1657},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":970},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"extensions","qualname":"::extensions","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1590},{"krate":0,"index":1596},{"krate":0,"index":1656},{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1669},{"krate":0,"index":1671},{"krate":0,"index":1694},{"krate":0,"index":1697},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":978},{"krate":0,"index":980}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","byte_start":99162,"byte_end":99172,"line_start":5,"line_end":5,"column_start":16,"column_end":26},"name":"Extensions","qualname":"::extensions::Extensions","value":"Extensions {  }","parent":null,"children":[{"krate":0,"index":1638}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","byte_start":99196,"byte_end":99211,"line_start":6,"line_end":6,"column_start":15,"column_end":30},"name":"UNWRAP_NEWTYPES","qualname":"::extensions::Extensions::UNWRAP_NEWTYPES","value":"Self","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","byte_start":99233,"byte_end":99246,"line_start":7,"line_end":7,"column_start":15,"column_end":28},"name":"IMPLICIT_SOME","qualname":"::extensions::Extensions::IMPLICIT_SOME","value":"Self","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","byte_start":99268,"byte_end":99291,"line_start":8,"line_end":8,"column_start":15,"column_end":38},"name":"UNWRAP_VARIANT_NEWTYPES","qualname":"::extensions::Extensions::UNWRAP_VARIANT_NEWTYPES","value":"Self","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","byte_start":99386,"byte_end":99396,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"from_ident","qualname":"<Extensions>::from_ident","value":"fn from_ident<'_>(&'_ [u8]) -> Option<Extensions>","parent":null,"children":[],"decl_id":null,"docs":" Creates an extension flag from an ident.\n","sig":null,"attributes":[{"value":"/ Creates an extension flag from an ident.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","byte_start":99330,"byte_end":99374,"line_start":13,"line_end":13,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","byte_start":99755,"byte_end":99762,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"default","qualname":"<Extensions as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"options","qualname":"::options","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1785},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1744},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1024}],"decl_id":null,"docs":" Roundtrip serde Options module.\n","sig":null,"attributes":[{"value":"/ Roundtrip serde Options module.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":99812,"byte_end":99847,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100503,"byte_end":100510,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Options","qualname":"::options::Options","value":"Options { default_extensions }","parent":null,"children":[{"krate":0,"index":1786}],"decl_id":null,"docs":" Roundtrip serde options.","sig":null,"attributes":[{"value":"/ Roundtrip serde options.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100062,"byte_end":100090,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100091,"byte_end":100094,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100095,"byte_end":100109,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100110,"byte_end":100113,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100114,"byte_end":100121,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use ron::{Options, extensions::Extensions};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100122,"byte_end":100169,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100170,"byte_end":100173,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let ron = Options::default()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100174,"byte_end":100206,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/     .with_default_extension(Extensions::IMPLICIT_SOME);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100207,"byte_end":100266,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100267,"byte_end":100270,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let de: Option<i32> = ron.from_str(\"42\").unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100271,"byte_end":100325,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/ let ser = ron.to_string(&de).unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100326,"byte_end":100368,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100369,"byte_end":100372,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(ser, \"42\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100373,"byte_end":100399,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100400,"byte_end":100407,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"serde(default)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100456,"byte_end":100473,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100474,"byte_end":100491,"line_start":29,"line_end":29,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100910,"byte_end":100928,"line_start":38,"line_end":38,"column_start":9,"column_end":27},"name":"default_extensions","qualname":"::options::Options::default_extensions","value":"extensions::Extensions","parent":{"krate":0,"index":1785},"children":[],"decl_id":null,"docs":" Extensions that are enabled by default during serialization and\n  deserialization.\n During serialization, these extensions do NOT have to be explicitly\n  enabled in the parsed RON.\n During deserialization, these extensions are used, but their explicit\n  activation is NOT included in the output RON.\n No extensions are enabled by default.\n","sig":null,"attributes":[{"value":"/ Extensions that are enabled by default during serialization and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100517,"byte_end":100584,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/  deserialization.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100589,"byte_end":100610,"line_start":32,"line_end":32,"column_start":5,"column_end":26}},{"value":"/ During serialization, these extensions do NOT have to be explicitly","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100615,"byte_end":100686,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/  enabled in the parsed RON.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100691,"byte_end":100722,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/ During deserialization, these extensions are used, but their explicit","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100727,"byte_end":100800,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/  activation is NOT included in the output RON.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100805,"byte_end":100855,"line_start":36,"line_end":36,"column_start":5,"column_end":55}},{"value":"/ No extensions are enabled by default.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100860,"byte_end":100901,"line_start":37,"line_end":37,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100979,"byte_end":100986,"line_start":42,"line_end":42,"column_start":8,"column_end":15},"name":"default","qualname":"<Options as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101216,"byte_end":101238,"line_start":52,"line_end":52,"column_start":12,"column_end":34},"name":"with_default_extension","qualname":"<Options>::with_default_extension","value":"fn with_default_extension(Self, Extensions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable `default_extension` by default during serialization and deserialization.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101105,"byte_end":101116,"line_start":50,"line_end":50,"column_start":5,"column_end":16}},{"value":"/ Enable `default_extension` by default during serialization and deserialization.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101121,"byte_end":101204,"line_start":51,"line_end":51,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101486,"byte_end":101511,"line_start":59,"line_end":59,"column_start":12,"column_end":37},"name":"without_default_extension","qualname":"<Options>::without_default_extension","value":"fn without_default_extension(Self, Extensions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Do NOT enable `default_extension` by default during serialization and deserialization.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101368,"byte_end":101379,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ Do NOT enable `default_extension` by default during serialization and deserialization.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101384,"byte_end":101474,"line_start":58,"line_end":58,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101786,"byte_end":101797,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Options>::from_reader","value":"fn from_reader<R, T, '_>(&'_ Self, R) -> SpannedResult<T> where R: io::Read,\nT: de::DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for building a deserializer\n and deserializing a value of type `T` from a reader.\n","sig":null,"attributes":[{"value":"/ A convenience function for building a deserializer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101659,"byte_end":101713,"line_start":66,"line_end":66,"column_start":5,"column_end":59}},{"value":"/ and deserializing a value of type `T` from a reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101718,"byte_end":101774,"line_start":67,"line_end":67,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":102158,"byte_end":102166,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"from_str","qualname":"<Options>::from_str","value":"fn from_str<'a, T, '_>(&'_ Self, &'a str) -> SpannedResult<T> where\nT: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for building a deserializer\n and deserializing a value of type `T` from a string.\n","sig":null,"attributes":[{"value":"/ A convenience function for building a deserializer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":102031,"byte_end":102085,"line_start":79,"line_end":79,"column_start":5,"column_end":59}},{"value":"/ and deserializing a value of type `T` from a string.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":102090,"byte_end":102146,"line_start":80,"line_end":80,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":102434,"byte_end":102444,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Options>::from_bytes","value":"fn from_bytes<'a, T, '_>(&'_ Self, &'a [u8]) -> SpannedResult<T> where\nT: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for building a deserializer\n and deserializing a value of type `T` from bytes.\n","sig":null,"attributes":[{"value":"/ A convenience function for building a deserializer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":102310,"byte_end":102364,"line_start":88,"line_end":88,"column_start":5,"column_end":59}},{"value":"/ and deserializing a value of type `T` from bytes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":102369,"byte_end":102422,"line_start":89,"line_end":89,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":102755,"byte_end":102771,"line_start":100,"line_end":100,"column_start":12,"column_end":28},"name":"from_reader_seed","qualname":"<Options>::from_reader_seed","value":"fn from_reader_seed<R, S, T, '_>(&'_ Self, R, S) -> SpannedResult<T> where\nR: io::Read, S: for<'a> de::DeserializeSeed<Value = T>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for building a deserializer\n and deserializing a value of type `T` from a reader\n and a seed.\n","sig":null,"attributes":[{"value":"/ A convenience function for building a deserializer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":102609,"byte_end":102663,"line_start":97,"line_end":97,"column_start":5,"column_end":59}},{"value":"/ and deserializing a value of type `T` from a reader","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":102668,"byte_end":102723,"line_start":98,"line_end":98,"column_start":5,"column_end":60}},{"value":"/ and a seed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":102728,"byte_end":102743,"line_start":99,"line_end":99,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":103196,"byte_end":103209,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"from_str_seed","qualname":"<Options>::from_str_seed","value":"fn from_str_seed<'a, S, T, '_>(&'_ Self, &'a str, S) -> SpannedResult<T> where\nS: de::DeserializeSeed<Value = T>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for building a deserializer\n and deserializing a value of type `T` from a string\n and a seed.\n","sig":null,"attributes":[{"value":"/ A convenience function for building a deserializer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":103050,"byte_end":103104,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/ and deserializing a value of type `T` from a string","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":103109,"byte_end":103164,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ and a seed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":103169,"byte_end":103184,"line_start":113,"line_end":113,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":103534,"byte_end":103549,"line_start":124,"line_end":124,"column_start":12,"column_end":27},"name":"from_bytes_seed","qualname":"<Options>::from_bytes_seed","value":"fn from_bytes_seed<'a, S, T, '_>(&'_ Self, &'a [u8], S) -> SpannedResult<T>\nwhere S: de::DeserializeSeed<Value = T>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for building a deserializer\n and deserializing a value of type `T` from bytes\n and a seed.\n","sig":null,"attributes":[{"value":"/ A convenience function for building a deserializer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":103391,"byte_end":103445,"line_start":121,"line_end":121,"column_start":5,"column_end":59}},{"value":"/ and deserializing a value of type `T` from bytes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":103450,"byte_end":103502,"line_start":122,"line_end":122,"column_start":5,"column_end":57}},{"value":"/ and a seed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":103507,"byte_end":103522,"line_start":123,"line_end":123,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":104033,"byte_end":104042,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"to_writer","qualname":"<Options>::to_writer","value":"fn to_writer<W, T, '_, '_>(&'_ Self, W, &'_ T) -> Result<()> where\nW: io::Write, T: ?Sized + ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes `value` into `writer`\n","sig":null,"attributes":[{"value":"/ Serializes `value` into `writer`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":103985,"byte_end":104021,"line_start":139,"line_end":139,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":104349,"byte_end":104365,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"to_writer_pretty","qualname":"<Options>::to_writer_pretty","value":"fn to_writer_pretty<W, T, '_, '_>(&'_ Self, W, &'_ T, PrettyConfig)\n-> Result<()> where W: io::Write, T: ?Sized + ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes `value` into `writer` in a pretty way.\n","sig":null,"attributes":[{"value":"/ Serializes `value` into `writer` in a pretty way.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":104284,"byte_end":104337,"line_start":149,"line_end":149,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":104844,"byte_end":104853,"line_start":163,"line_end":163,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Options>::to_string","value":"fn to_string<T, '_, '_>(&'_ Self, &'_ T) -> Result<String> where T: ?Sized +\nser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes `value` and returns it as string.","sig":null,"attributes":[{"value":"/ Serializes `value` and returns it as string.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":104637,"byte_end":104685,"line_start":159,"line_end":159,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":104690,"byte_end":104693,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This function does not generate any newlines or nice formatting;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":104698,"byte_end":104766,"line_start":161,"line_end":161,"column_start":5,"column_end":73}},{"value":"/ if you want that, you can use `to_string_pretty` instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":104771,"byte_end":104832,"line_start":162,"line_end":162,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":105256,"byte_end":105272,"line_start":174,"line_end":174,"column_start":12,"column_end":28},"name":"to_string_pretty","qualname":"<Options>::to_string_pretty","value":"fn to_string_pretty<T, '_, '_>(&'_ Self, &'_ T, PrettyConfig)\n-> Result<String> where T: ?Sized + ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes `value` in the recommended RON layout in a pretty way.\n","sig":null,"attributes":[{"value":"/ Serializes `value` in the recommended RON layout in a pretty way.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":105175,"byte_end":105244,"line_start":173,"line_end":173,"column_start":5,"column_end":74}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":22978,"byte_end":22992,"line_start":9,"line_end":9,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":29197,"byte_end":29212,"line_start":9,"line_end":9,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\value.rs","byte_start":34874,"byte_end":34879,"line_start":11,"line_end":11,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\value.rs","byte_start":35266,"byte_end":35271,"line_start":25,"line_end":25,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\value.rs","byte_start":35494,"byte_end":35506,"line_start":36,"line_end":36,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":1085,"byte_end":1097,"line_start":31,"line_end":31,"column_start":11,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2989,"byte_end":3001,"line_start":95,"line_end":95,"column_start":11,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":17790,"byte_end":17804,"line_start":611,"line_end":611,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":18551,"byte_end":18565,"line_start":637,"line_end":637,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":18991,"byte_end":19005,"line_start":656,"line_end":656,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":20033,"byte_end":20037,"line_start":699,"line_end":699,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":20168,"byte_end":20172,"line_start":705,"line_end":705,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":20524,"byte_end":20528,"line_start":721,"line_end":721,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\value.rs","byte_start":70811,"byte_end":70816,"line_start":5,"line_end":5,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45779,"byte_end":45791,"line_start":95,"line_end":95,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48622,"byte_end":48634,"line_start":198,"line_end":198,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49551,"byte_end":49561,"line_start":230,"line_end":230,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":62885,"byte_end":62893,"line_start":729,"line_end":729,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":64840,"byte_end":64848,"line_start":791,"line_end":791,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":66407,"byte_end":66415,"line_start":843,"line_end":843,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":66779,"byte_end":66787,"line_start":859,"line_end":859,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":67142,"byte_end":67150,"line_start":875,"line_end":875,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":68801,"byte_end":68809,"line_start":931,"line_end":931,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":70372,"byte_end":70380,"line_start":982,"line_end":982,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73716,"byte_end":73728,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":74010,"byte_end":74015,"line_start":100,"line_end":100,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79635,"byte_end":79643,"line_start":239,"line_end":239,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79786,"byte_end":79791,"line_start":245,"line_end":245,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79923,"byte_end":79928,"line_start":252,"line_end":252,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":80448,"byte_end":80472,"line_start":268,"line_end":268,"column_start":35,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83129,"byte_end":83141,"line_start":346,"line_end":346,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83163,"byte_end":83168,"line_start":347,"line_end":347,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83198,"byte_end":83203,"line_start":349,"line_end":349,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83308,"byte_end":83313,"line_start":355,"line_end":355,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83431,"byte_end":83436,"line_start":361,"line_end":361,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83542,"byte_end":83554,"line_start":367,"line_end":367,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83743,"byte_end":83748,"line_start":376,"line_end":376,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83913,"byte_end":83918,"line_start":387,"line_end":387,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85224,"byte_end":85227,"line_start":28,"line_end":28,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86739,"byte_end":86742,"line_start":81,"line_end":81,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86955,"byte_end":86958,"line_start":88,"line_end":88,"column_start":13,"column_end":16},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86977,"byte_end":86980,"line_start":90,"line_end":90,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87111,"byte_end":87114,"line_start":96,"line_end":96,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87255,"byte_end":87258,"line_start":104,"line_end":104,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87412,"byte_end":87415,"line_start":110,"line_end":110,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87603,"byte_end":87606,"line_start":117,"line_end":117,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87737,"byte_end":87740,"line_start":123,"line_end":123,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88400,"byte_end":88405,"line_start":146,"line_end":146,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88592,"byte_end":88598,"line_start":158,"line_end":158,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90569,"byte_end":90575,"line_start":233,"line_end":233,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90670,"byte_end":90676,"line_start":239,"line_end":239,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90766,"byte_end":90772,"line_start":245,"line_end":245,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":91052,"byte_end":91058,"line_start":254,"line_end":254,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":91477,"byte_end":91482,"line_start":268,"line_end":268,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":91821,"byte_end":91826,"line_start":278,"line_end":278,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":91845,"byte_end":91850,"line_start":280,"line_end":280,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":92437,"byte_end":92442,"line_start":295,"line_end":295,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93086,"byte_end":93091,"line_start":311,"line_end":311,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93451,"byte_end":93456,"line_start":329,"line_end":329,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93788,"byte_end":93793,"line_start":341,"line_end":341,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":96575,"byte_end":96586,"line_start":442,"line_end":442,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":97325,"byte_end":97328,"line_start":471,"line_end":471,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","byte_start":99313,"byte_end":99323,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","byte_start":99735,"byte_end":99745,"line_start":24,"line_end":24,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100962,"byte_end":100969,"line_start":41,"line_end":41,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101091,"byte_end":101098,"line_start":49,"line_end":49,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101645,"byte_end":101652,"line_start":65,"line_end":65,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1039},{"krate":0,"index":1043},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\parse.rs","byte_start":111037,"byte_end":111042,"line_start":123,"line_end":123,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":101,"byte_end":103,"line_start":4,"line_end":4,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":113,"byte_end":116,"line_start":5,"line_end":5,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":490}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":127,"byte_end":132,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":720}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":142,"byte_end":147,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":793}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":158,"byte_end":168,"line_start":10,"line_end":10,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":970}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\lib.rs","byte_start":179,"byte_end":186,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":982}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\id.rs","byte_start":22978,"byte_end":22992,"line_start":9,"line_end":9,"column_start":18,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\tag.rs","byte_start":29197,"byte_end":29212,"line_start":9,"line_end":9,"column_start":18,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\value.rs","byte_start":34874,"byte_end":34879,"line_start":11,"line_end":11,"column_start":28,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1508},"to":{"krate":2,"index":12999}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\value.rs","byte_start":35266,"byte_end":35271,"line_start":25,"line_end":25,"column_start":32,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1508},"to":{"krate":16,"index":1614}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\value.rs","byte_start":35494,"byte_end":35506,"line_start":36,"line_end":36,"column_start":28,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":300},"to":{"krate":16,"index":1700}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":1085,"byte_end":1097,"line_start":31,"line_end":31,"column_start":11,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":2989,"byte_end":3001,"line_start":95,"line_end":95,"column_start":11,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":17790,"byte_end":17804,"line_start":611,"line_end":611,"column_start":15,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":18551,"byte_end":18565,"line_start":637,"line_end":637,"column_start":38,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":436},"to":{"krate":16,"index":1756}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":18991,"byte_end":19005,"line_start":656,"line_end":656,"column_start":38,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":436},"to":{"krate":16,"index":1774}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":20033,"byte_end":20037,"line_start":699,"line_end":699,"column_start":15,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":20168,"byte_end":20172,"line_start":705,"line_end":705,"column_start":39,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":461},"to":{"krate":16,"index":1812}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\de\\mod.rs","byte_start":20524,"byte_end":20528,"line_start":721,"line_end":721,"column_start":42,"column_end":46},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":461},"to":{"krate":16,"index":1820}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\value.rs","byte_start":70811,"byte_end":70816,"line_start":5,"line_end":5,"column_start":20,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1508},"to":{"krate":16,"index":2162}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":45779,"byte_end":45791,"line_start":95,"line_end":95,"column_start":6,"column_end":18},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":48622,"byte_end":48634,"line_start":198,"line_end":198,"column_start":18,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":49551,"byte_end":49561,"line_start":230,"line_end":230,"column_start":20,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":62885,"byte_end":62893,"line_start":729,"line_end":729,"column_start":46,"column_end":54},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":656},"to":{"krate":16,"index":2215}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":64840,"byte_end":64848,"line_start":791,"line_end":791,"column_start":48,"column_end":56},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":656},"to":{"krate":16,"index":2221}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":66407,"byte_end":66415,"line_start":843,"line_end":843,"column_start":54,"column_end":62},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":656},"to":{"krate":16,"index":2227}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":66779,"byte_end":66787,"line_start":859,"line_end":859,"column_start":55,"column_end":63},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":656},"to":{"krate":16,"index":2233}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":67142,"byte_end":67150,"line_start":875,"line_end":875,"column_start":46,"column_end":54},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":656},"to":{"krate":16,"index":2239}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":68801,"byte_end":68809,"line_start":931,"line_end":931,"column_start":49,"column_end":57},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":656},"to":{"krate":16,"index":2250}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\ser\\mod.rs","byte_start":70372,"byte_end":70380,"line_start":982,"line_end":982,"column_start":56,"column_end":64},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":656},"to":{"krate":16,"index":2257}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":73716,"byte_end":73728,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1311},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":74010,"byte_end":74015,"line_start":100,"line_end":100,"column_start":23,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1325},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79635,"byte_end":79643,"line_start":239,"line_end":239,"column_start":23,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79786,"byte_end":79791,"line_start":245,"line_end":245,"column_start":21,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1325},"to":{"krate":16,"index":9723}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":79923,"byte_end":79928,"line_start":252,"line_end":252,"column_start":20,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1325},"to":{"krate":16,"index":9100}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":80448,"byte_end":80472,"line_start":268,"line_end":268,"column_start":35,"column_end":59},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":763},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83129,"byte_end":83141,"line_start":346,"line_end":346,"column_start":19,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1311},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83163,"byte_end":83168,"line_start":347,"line_end":347,"column_start":19,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1325},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83198,"byte_end":83203,"line_start":349,"line_end":349,"column_start":26,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1325},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83308,"byte_end":83313,"line_start":355,"line_end":355,"column_start":30,"column_end":35},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1325},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83431,"byte_end":83436,"line_start":361,"line_end":361,"column_start":26,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1325},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83542,"byte_end":83554,"line_start":367,"line_end":367,"column_start":26,"column_end":38},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1311},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83743,"byte_end":83748,"line_start":376,"line_end":376,"column_start":29,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1325},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\error.rs","byte_start":83913,"byte_end":83918,"line_start":387,"line_end":387,"column_start":23,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":85224,"byte_end":85227,"line_start":28,"line_end":28,"column_start":6,"column_end":9},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86739,"byte_end":86742,"line_start":81,"line_end":81,"column_start":39,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":8406}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86955,"byte_end":86958,"line_start":88,"line_end":88,"column_start":13,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":86977,"byte_end":86980,"line_start":90,"line_end":90,"column_start":15,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":10536}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87111,"byte_end":87114,"line_start":96,"line_end":96,"column_start":24,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":3576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87255,"byte_end":87258,"line_start":104,"line_end":104,"column_start":27,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":3580}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87412,"byte_end":87415,"line_start":110,"line_end":110,"column_start":14,"column_end":17},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":2956}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87603,"byte_end":87606,"line_start":117,"line_end":117,"column_start":20,"column_end":23},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":2920}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":87737,"byte_end":87740,"line_start":123,"line_end":123,"column_start":21,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":2966}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88400,"byte_end":88405,"line_start":146,"line_end":146,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":88592,"byte_end":88598,"line_start":158,"line_end":158,"column_start":6,"column_end":12},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90569,"byte_end":90575,"line_start":233,"line_end":233,"column_start":20,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1474},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90670,"byte_end":90676,"line_start":239,"line_end":239,"column_start":20,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1474},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":90766,"byte_end":90772,"line_start":245,"line_end":245,"column_start":20,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1474},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":91052,"byte_end":91058,"line_start":254,"line_end":254,"column_start":20,"column_end":26},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1474},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":91477,"byte_end":91482,"line_start":268,"line_end":268,"column_start":20,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1500},"to":{"krate":2,"index":2920}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":91821,"byte_end":91826,"line_start":278,"line_end":278,"column_start":13,"column_end":18},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1500},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":91845,"byte_end":91850,"line_start":280,"line_end":280,"column_start":15,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1500},"to":{"krate":2,"index":10536}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":92437,"byte_end":92442,"line_start":295,"line_end":295,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1500},"to":{"krate":2,"index":2966}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93086,"byte_end":93091,"line_start":311,"line_end":311,"column_start":14,"column_end":19},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1500},"to":{"krate":2,"index":2956}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93451,"byte_end":93456,"line_start":329,"line_end":329,"column_start":6,"column_end":11},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":93788,"byte_end":93793,"line_start":341,"line_end":341,"column_start":33,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1508},"to":{"krate":16,"index":1636}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":96575,"byte_end":96586,"line_start":442,"line_end":442,"column_start":30,"column_end":41},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":950},"to":{"krate":16,"index":1774}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\value.rs","byte_start":97325,"byte_end":97328,"line_start":471,"line_end":471,"column_start":30,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":962},"to":{"krate":16,"index":1756}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","byte_start":99313,"byte_end":99323,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\extensions.rs","byte_start":99735,"byte_end":99745,"line_start":24,"line_end":24,"column_start":18,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1637},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":100962,"byte_end":100969,"line_start":41,"line_end":41,"column_start":18,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1785},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101091,"byte_end":101098,"line_start":49,"line_end":49,"column_start":6,"column_end":13},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\options.rs","byte_start":101645,"byte_end":101652,"line_start":65,"line_end":65,"column_start":6,"column_end":13},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ron-0.8.0\\src\\parse.rs","byte_start":111037,"byte_end":111042,"line_start":123,"line_end":123,"column_start":10,"column_end":15},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1834},"to":{"krate":4294967295,"index":4294967295}}]}