{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12","program":"C:\\Users\\Ben\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","pin_project","--edition=2018","C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=6f7a1ea1146f63c4","-C","extra-filename=-6f7a1ea1146f63c4","--out-dir","c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps","--extern","pin_project_internal=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\pin_project_internal-c3f1550e35564b53.dll","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ben\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libpin_project-6f7a1ea1146f63c4.rmeta"},"prelude":{"crate_id":{"name":"pin_project","disambiguator":[16823998681754556694,0]},"crate_root":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src","external_crates":[{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[5178777620647193466,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7203661724729889941,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17525700935344431946,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","num":4,"id":{"name":"pin_project_internal","disambiguator":[9715180092680908338,0]}}],"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":0,"byte_end":11453,"line_start":1,"line_end":315,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":642},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":2764,"byte_end":2775,"line_start":95,"line_end":95,"column_start":31,"column_end":42},"alias_span":null,"name":"pin_project","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":643},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":2822,"byte_end":2833,"line_start":97,"line_end":97,"column_start":31,"column_end":42},"alias_span":null,"name":"pinned_drop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":3286},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5709,"byte_end":5720,"line_start":167,"line_end":167,"column_start":18,"column_end":29},"alias_span":null,"name":"PhantomData","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":1,"index":3287},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5709,"byte_end":5720,"line_start":167,"line_end":167,"column_start":18,"column_end":29},"alias_span":null,"name":"PhantomData","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":1,"index":38875},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5722,"byte_end":5735,"line_start":167,"line_end":167,"column_start":31,"column_end":44},"alias_span":null,"name":"PhantomPinned","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":1,"index":38876},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5722,"byte_end":5735,"line_start":167,"line_end":167,"column_start":31,"column_end":44},"alias_span":null,"name":"PhantomPinned","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":1,"index":3309},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5737,"byte_end":5742,"line_start":167,"line_end":167,"column_start":46,"column_end":51},"alias_span":null,"name":"Unpin","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":1,"index":3515},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5758,"byte_end":5762,"line_start":168,"line_end":168,"column_start":14,"column_end":18},"alias_span":null,"name":"Drop","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":1,"index":47608},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5777,"byte_end":5780,"line_start":169,"line_end":169,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":1,"index":2218},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5790,"byte_end":5793,"line_start":170,"line_end":170,"column_start":9,"column_end":12},"alias_span":null,"name":"ptr","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":4,"index":644},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5856,"byte_end":5882,"line_start":174,"line_end":174,"column_start":35,"column_end":61},"alias_span":null,"name":"__PinProjectInternalDerive","value":"","parent":{"krate":0,"index":11}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":0,"byte_end":11453,"line_start":1,"line_end":315,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11}],"decl_id":null,"docs":" A crate for safe and ergonomic [pin-projection].","sig":null,"attributes":[{"value":"/ A crate for safe and ergonomic [pin-projection].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":0,"byte_end":52,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":53,"byte_end":56,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":57,"byte_end":71,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":72,"byte_end":75,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`#[pin_project]`][`pin_project`] attribute creates projection types","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":76,"byte_end":148,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ covering all the fields of struct or enum.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":149,"byte_end":195,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":196,"byte_end":199,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":200,"byte_end":211,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":212,"byte_end":234,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":235,"byte_end":238,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ use pin_project::pin_project;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":239,"byte_end":272,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":273,"byte_end":276,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ #[pin_project]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":277,"byte_end":295,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/ struct Struct<T, U> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":296,"byte_end":321,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/     #[pin]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":322,"byte_end":336,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/     pinned: T,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":337,"byte_end":355,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/     unpinned: U,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":356,"byte_end":376,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":377,"byte_end":382,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":383,"byte_end":386,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ impl<T, U> Struct<T, U> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":387,"byte_end":416,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/     fn method(self: Pin<&mut Self>) {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":417,"byte_end":458,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/         let this = self.project();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":459,"byte_end":497,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/         let _: Pin<&mut T> = this.pinned; // Pinned reference to the field","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":498,"byte_end":576,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/         let _: &mut U = this.unpinned; // Normal reference to the field","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":577,"byte_end":652,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":653,"byte_end":662,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":663,"byte_end":668,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":669,"byte_end":676,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":677,"byte_end":680,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [*code like this will be generated*][struct-default-expanded]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":681,"byte_end":746,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":747,"byte_end":750,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ To use `#[pin_project]` on enums, you need to name the projection type","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":751,"byte_end":825,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ returned from the method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":826,"byte_end":855,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":856,"byte_end":859,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":860,"byte_end":871,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":872,"byte_end":894,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":895,"byte_end":898,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use pin_project::pin_project;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":899,"byte_end":932,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":933,"byte_end":936,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ #[pin_project(project = EnumProj)]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":937,"byte_end":975,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ enum Enum<T, U> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":976,"byte_end":997,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     Pinned(#[pin] T),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":998,"byte_end":1023,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     Unpinned(U),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1024,"byte_end":1044,"line_start":42,"line_end":42,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1045,"byte_end":1050,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1051,"byte_end":1054,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ impl<T, U> Enum<T, U> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1055,"byte_end":1082,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/     fn method(self: Pin<&mut Self>) {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1083,"byte_end":1124,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/         match self.project() {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1125,"byte_end":1159,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"/             EnumProj::Pinned(x) => {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1160,"byte_end":1200,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/                 let _: Pin<&mut T> = x;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1201,"byte_end":1244,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/             }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1245,"byte_end":1262,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/             EnumProj::Unpinned(y) => {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1263,"byte_end":1305,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/                 let _: &mut U = y;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1306,"byte_end":1344,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1345,"byte_end":1362,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1363,"byte_end":1376,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1377,"byte_end":1386,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1387,"byte_end":1392,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1393,"byte_end":1400,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1401,"byte_end":1404,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [*code like this will be generated*][enum-default-expanded]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1405,"byte_end":1468,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1469,"byte_end":1472,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ See [`#[pin_project]`][`pin_project`] attribute for more details, and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1473,"byte_end":1546,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"/ see [examples] directory for more examples and generated code.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1547,"byte_end":1613,"line_start":62,"line_end":62,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1614,"byte_end":1617,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [examples]: https://github.com/taiki-e/pin-project/blob/HEAD/examples/README.md","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1618,"byte_end":1701,"line_start":64,"line_end":64,"column_start":1,"column_end":84}},{"value":"/ [enum-default-expanded]: https://github.com/taiki-e/pin-project/blob/HEAD/examples/enum-default-expanded.rs","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1702,"byte_end":1813,"line_start":65,"line_end":65,"column_start":1,"column_end":112}},{"value":"/ [pin-projection]: core::pin#projections-and-structural-pinning","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1814,"byte_end":1880,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ [struct-default-expanded]: https://github.com/taiki-e/pin-project/blob/HEAD/examples/struct-default-expanded.rs","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1881,"byte_end":1996,"line_start":67,"line_end":67,"column_start":1,"column_end":116}},{"value":"no_std","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":1998,"byte_end":2008,"line_start":69,"line_end":69,"column_start":1,"column_end":11}},{"value":"warn(missing_docs, rust_2018_idioms, single_use_lifetimes, unreachable_pub)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":2170,"byte_end":2249,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"warn(clippy :: pedantic, clippy :: alloc_instead_of_core, clippy ::\nexhaustive_enums, clippy :: exhaustive_structs, clippy ::\nstd_instead_of_alloc, clippy :: std_instead_of_core, clippy ::\ndefault_union_representation, clippy :: trailing_empty_array, clippy ::\ntransmute_undefined_repr, clippy :: undocumented_unsafe_blocks,)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":2250,"byte_end":2676,"line_start":78,"line_end":91,"column_start":1,"column_end":3}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":2677,"byte_end":2717,"line_start":92,"line_end":92,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5550,"byte_end":5561,"line_start":159,"line_end":159,"column_start":18,"column_end":29},"name":"UnsafeUnpin","qualname":"::UnsafeUnpin","value":"UnsafeUnpin","parent":null,"children":[],"decl_id":null,"docs":" A trait used for custom implementations of [`Unpin`].","sig":null,"attributes":[{"value":"/ A trait used for custom implementations of [`Unpin`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":2836,"byte_end":2893,"line_start":99,"line_end":99,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":2894,"byte_end":2897,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ This trait is used in conjunction with the `UnsafeUnpin` argument to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":2898,"byte_end":2970,"line_start":101,"line_end":101,"column_start":1,"column_end":73}},{"value":"/ the [`#[pin_project]`][macro@pin_project] attribute.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":2971,"byte_end":3027,"line_start":102,"line_end":102,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3028,"byte_end":3031,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3032,"byte_end":3044,"line_start":104,"line_end":104,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3045,"byte_end":3048,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ The Rust [`Unpin`] trait is safe to implement - by itself,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3049,"byte_end":3111,"line_start":106,"line_end":106,"column_start":1,"column_end":63}},{"value":"/ implementing it cannot lead to [undefined behavior][undefined-behavior].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3112,"byte_end":3188,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ Undefined behavior can only occur when other unsafe code is used.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3189,"byte_end":3258,"line_start":108,"line_end":108,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3259,"byte_end":3262,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ It turns out that using pin projections, which requires unsafe code,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3263,"byte_end":3335,"line_start":110,"line_end":110,"column_start":1,"column_end":73}},{"value":"/ imposes additional requirements on an [`Unpin`] impl. Normally, all of this","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3336,"byte_end":3415,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/ unsafety is contained within this crate, ensuring that it's impossible for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3416,"byte_end":3494,"line_start":112,"line_end":112,"column_start":1,"column_end":79}},{"value":"/ you to violate any of the guarantees required by pin projection.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3495,"byte_end":3563,"line_start":113,"line_end":113,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3564,"byte_end":3567,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ However, things change if you want to provide a custom [`Unpin`] impl","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3568,"byte_end":3641,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"/ for your `#[pin_project]` type. As stated in [the Rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3642,"byte_end":3700,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/ documentation][pin-projection], you must be sure to only implement [`Unpin`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3701,"byte_end":3781,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ when all of your `#[pin]` fields (i.e. structurally pinned fields) are also","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3782,"byte_end":3861,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ [`Unpin`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3862,"byte_end":3876,"line_start":119,"line_end":119,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3877,"byte_end":3880,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ To help highlight this unsafety, the `UnsafeUnpin` trait is provided.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3881,"byte_end":3954,"line_start":121,"line_end":121,"column_start":1,"column_end":74}},{"value":"/ Implementing this trait is logically equivalent to implementing [`Unpin`] -","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":3955,"byte_end":4034,"line_start":122,"line_end":122,"column_start":1,"column_end":80}},{"value":"/ this crate will generate an [`Unpin`] impl for your type that 'forwards' to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4035,"byte_end":4114,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/ your `UnsafeUnpin` impl. However, this trait is `unsafe` - since your type","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4115,"byte_end":4193,"line_start":124,"line_end":124,"column_start":1,"column_end":79}},{"value":"/ uses structural pinning (otherwise, you wouldn't be using this crate!),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4194,"byte_end":4269,"line_start":125,"line_end":125,"column_start":1,"column_end":76}},{"value":"/ you must be sure that your `UnsafeUnpin` impls follows all of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4270,"byte_end":4335,"line_start":126,"line_end":126,"column_start":1,"column_end":66}},{"value":"/ the requirements for an [`Unpin`] impl of a structurally-pinned type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4336,"byte_end":4409,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4410,"byte_end":4413,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Note that if you specify `#[pin_project(UnsafeUnpin)]`, but do *not*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4414,"byte_end":4486,"line_start":129,"line_end":129,"column_start":1,"column_end":73}},{"value":"/ provide an impl of `UnsafeUnpin`, your type will never implement [`Unpin`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4487,"byte_end":4566,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ This is effectively the same thing as adding a [`PhantomPinned`] to your","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4567,"byte_end":4643,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4644,"byte_end":4653,"line_start":132,"line_end":132,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4654,"byte_end":4657,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Since this trait is `unsafe`, impls of it will be detected by the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4658,"byte_end":4727,"line_start":134,"line_end":134,"column_start":1,"column_end":70}},{"value":"/ `unsafe_code` lint, and by tools like [`cargo geiger`][cargo-geiger].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4728,"byte_end":4801,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4802,"byte_end":4805,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4806,"byte_end":4820,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4821,"byte_end":4824,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ An `UnsafeUnpin` impl which, in addition to requiring that structurally","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4825,"byte_end":4900,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/ pinned fields be [`Unpin`], imposes an additional requirement:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4901,"byte_end":4967,"line_start":140,"line_end":140,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4968,"byte_end":4971,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4972,"byte_end":4983,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ use pin_project::{pin_project, UnsafeUnpin};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":4984,"byte_end":5032,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5033,"byte_end":5036,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[pin_project(UnsafeUnpin)]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5037,"byte_end":5068,"line_start":145,"line_end":145,"column_start":1,"column_end":32}},{"value":"/ struct Struct<K, V> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5069,"byte_end":5094,"line_start":146,"line_end":146,"column_start":1,"column_end":26}},{"value":"/     #[pin]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5095,"byte_end":5109,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/     field_1: K,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5110,"byte_end":5129,"line_start":148,"line_end":148,"column_start":1,"column_end":20}},{"value":"/     field_2: V,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5130,"byte_end":5149,"line_start":149,"line_end":149,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5150,"byte_end":5155,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5156,"byte_end":5159,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ unsafe impl<K, V> UnsafeUnpin for Struct<K, V> where K: Unpin + Clone {}","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5160,"byte_end":5236,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5237,"byte_end":5244,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5245,"byte_end":5248,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`PhantomPinned`]: core::marker::PhantomPinned","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5249,"byte_end":5299,"line_start":155,"line_end":155,"column_start":1,"column_end":51}},{"value":"/ [cargo-geiger]: https://github.com/rust-secure-code/cargo-geiger","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5300,"byte_end":5368,"line_start":156,"line_end":156,"column_start":1,"column_end":69}},{"value":"/ [pin-projection]: core::pin#projections-and-structural-pinning","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5369,"byte_end":5435,"line_start":157,"line_end":157,"column_start":1,"column_end":67}},{"value":"/ [undefined-behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5436,"byte_end":5532,"line_start":158,"line_end":158,"column_start":1,"column_end":97}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":5608,"byte_end":5617,"line_start":163,"line_end":163,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":73},{"krate":0,"index":76}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":7010,"byte_end":7020,"line_start":199,"line_end":199,"column_start":15,"column_end":25},"name":"PinnedDrop","qualname":"::__private::PinnedDrop","value":"PinnedDrop","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":7064,"byte_end":7068,"line_start":201,"line_end":201,"column_start":19,"column_end":23},"name":"drop","qualname":"::__private::PinnedDrop::drop","value":"unsafe fn drop<'_>(Pin<&'_ mut Self>)","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":9553,"byte_end":9560,"line_start":257,"line_end":257,"column_start":16,"column_end":23},"name":"Wrapper","qualname":"::__private::Wrapper","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":9911,"byte_end":9922,"line_start":266,"line_end":266,"column_start":16,"column_end":27},"name":"AlwaysUnpin","qualname":"::__private::AlwaysUnpin","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":10117,"byte_end":10139,"line_start":272,"line_end":272,"column_start":16,"column_end":38},"name":"UnsafeDropInPlaceGuard","qualname":"::__private::UnsafeDropInPlaceGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":10254,"byte_end":10257,"line_start":276,"line_end":276,"column_start":23,"column_end":26},"name":"new","qualname":"<UnsafeDropInPlaceGuard<T>>::new","value":"unsafe fn new(*mut T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":10388,"byte_end":10392,"line_start":282,"line_end":282,"column_start":12,"column_end":16},"name":"drop","qualname":"<UnsafeDropInPlaceGuard<T> as core::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":1,"index":3515},"children":[],"decl_id":{"krate":1,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":10809,"byte_end":10829,"line_start":294,"line_end":294,"column_start":16,"column_end":36},"name":"UnsafeOverwriteGuard","qualname":"::__private::UnsafeOverwriteGuard","value":"UnsafeOverwriteGuard {  }","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":10981,"byte_end":10984,"line_start":301,"line_end":301,"column_start":23,"column_end":26},"name":"new","qualname":"<UnsafeOverwriteGuard<T>>::new","value":"unsafe fn new(*mut T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":11157,"byte_end":11161,"line_start":307,"line_end":307,"column_start":12,"column_end":16},"name":"drop","qualname":"<UnsafeOverwriteGuard<T> as core::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":1,"index":3515},"children":[],"decl_id":{"krate":1,"index":3516},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":9702,"byte_end":9709,"line_start":260,"line_end":260,"column_start":58,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":9991,"byte_end":10002,"line_start":268,"line_end":268,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":10181,"byte_end":10203,"line_start":274,"line_end":274,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":10349,"byte_end":10371,"line_start":281,"line_end":281,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":10910,"byte_end":10930,"line_start":299,"line_end":299,"column_start":13,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":11120,"byte_end":11140,"line_start":306,"line_end":306,"column_start":22,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":9702,"byte_end":9709,"line_start":260,"line_end":260,"column_start":58,"column_end":65},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":43},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":9991,"byte_end":10002,"line_start":268,"line_end":268,"column_start":23,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":51},"to":{"krate":1,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":10181,"byte_end":10203,"line_start":274,"line_end":274,"column_start":21,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":59},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":10349,"byte_end":10371,"line_start":281,"line_end":281,"column_start":30,"column_end":52},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":59},"to":{"krate":1,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":10910,"byte_end":10930,"line_start":299,"line_end":299,"column_start":13,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":69},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-1.0.12\\src\\lib.rs","byte_start":11120,"byte_end":11140,"line_start":306,"line_end":306,"column_start":22,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":69},"to":{"krate":1,"index":3515}}]}