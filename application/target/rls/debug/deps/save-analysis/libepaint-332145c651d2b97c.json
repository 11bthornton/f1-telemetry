{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0","program":"C:\\Users\\Ben\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","epaint","--edition=2021","C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytemuck\"","--cfg","feature=\"default_fonts\"","--cfg","feature=\"serde\"","-C","metadata=332145c651d2b97c","-C","extra-filename=-332145c651d2b97c","--out-dir","c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps","--extern","ab_glyph=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libab_glyph-c54a345e22016695.rmeta","--extern","ahash=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libahash-d9266cded79a9b4c.rmeta","--extern","bytemuck=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libbytemuck-00fcd7dca4ccccf1.rmeta","--extern","emath=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libemath-705a8c4f7738142f.rmeta","--extern","nohash_hasher=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libnohash_hasher-c8842ef324247587.rmeta","--extern","parking_lot=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libparking_lot-bc080d783e2973cb.rmeta","--extern","serde=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libserde-94655c80bf796087.rmeta","--cap-lints","allow","-L","native=C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.42.0\\lib","--error-format=json","--sysroot","C:\\Users\\Ben\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libepaint-332145c651d2b97c.rmeta"},"prelude":{"crate_id":{"name":"epaint","disambiguator":[186319933373941023,0]},"crate_root":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src","external_crates":[{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10288641326355699271,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","num":2,"id":{"name":"core","disambiguator":[5178777620647193466,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7203661724729889941,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17525700935344431946,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14114419768508526436,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[7430704726206783492,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12664251144516306473,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5349691386245612169,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7588176879124425336,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12802573245210436658,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[15058356585373963657,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11406058276128544710,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[12054102872615165506,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15575797803660711391,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[2170788131994516450,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","num":16,"id":{"name":"emath","disambiguator":[11311028471918619171,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":17,"id":{"name":"serde","disambiguator":[226809851131364859,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":18,"id":{"name":"serde_derive","disambiguator":[7049712192807757020,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","num":19,"id":{"name":"bytemuck","disambiguator":[12474186806860358612,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","num":20,"id":{"name":"bytemuck_derive","disambiguator":[15746579042910254411,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","num":21,"id":{"name":"parking_lot","disambiguator":[9803409037347105818,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","num":22,"id":{"name":"lock_api","disambiguator":[5282362868738777283,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","num":23,"id":{"name":"scopeguard","disambiguator":[6110210485670846652,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","num":24,"id":{"name":"parking_lot_core","disambiguator":[9085526294295934367,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","num":25,"id":{"name":"smallvec","disambiguator":[3142930680554501111,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","num":26,"id":{"name":"cfg_if","disambiguator":[7872221195650628815,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","num":27,"id":{"name":"windows_sys","disambiguator":[12860283537905889122,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","num":28,"id":{"name":"ab_glyph","disambiguator":[415284283810391617,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","num":29,"id":{"name":"ab_glyph_rasterizer","disambiguator":[3824368558333404478,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","num":30,"id":{"name":"owned_ttf_parser","disambiguator":[900269849856247089,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","num":31,"id":{"name":"ttf_parser","disambiguator":[5935717363750618687,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":32,"id":{"name":"ahash","disambiguator":[14949227901135022770,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":33,"id":{"name":"once_cell","disambiguator":[10393899279476839872,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","num":34,"id":{"name":"getrandom","disambiguator":[15237022176755909937,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","num":35,"id":{"name":"nohash_hasher","disambiguator":[13304172010932220083,0]}}],"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":0,"byte_end":4568,"line_start":1,"line_end":160,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":21,"index":538},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94697,"byte_end":94718,"line_start":117,"line_end":117,"column_start":26,"column_end":47},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":366}},{"kind":"Use","ref_id":{"krate":21,"index":541},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94814,"byte_end":94836,"line_start":120,"line_end":120,"column_start":26,"column_end":48},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":366}},{"kind":"Use","ref_id":{"krate":0,"index":2236},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":100136,"byte_end":100141,"line_start":287,"line_end":287,"column_start":22,"column_end":27},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":338}},{"kind":"Use","ref_id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":100143,"byte_end":100153,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":338}},{"kind":"Use","ref_id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":100179,"byte_end":100185,"line_start":288,"line_end":288,"column_start":24,"column_end":30},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":338}},{"kind":"Use","ref_id":{"krate":21,"index":538},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":100187,"byte_end":100202,"line_start":288,"line_end":288,"column_start":32,"column_end":47},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":338}},{"kind":"Use","ref_id":{"krate":21,"index":541},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":100204,"byte_end":100220,"line_start":288,"line_end":288,"column_start":49,"column_end":65},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":338}},{"kind":"Use","ref_id":{"krate":0,"index":3404},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196475,"byte_end":196483,"line_start":13,"line_end":13,"column_start":13,"column_end":21},"alias_span":null,"name":"FontData","value":"","parent":{"krate":0,"index":729}},{"kind":"Use","ref_id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196485,"byte_end":196500,"line_start":13,"line_end":13,"column_start":23,"column_end":38},"alias_span":null,"name":"FontDefinitions","value":"","parent":{"krate":0,"index":729}},{"kind":"Use","ref_id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196502,"byte_end":196512,"line_start":13,"line_end":13,"column_start":40,"column_end":50},"alias_span":null,"name":"FontFamily","value":"","parent":{"krate":0,"index":729}},{"kind":"Use","ref_id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196514,"byte_end":196520,"line_start":13,"line_end":13,"column_start":52,"column_end":58},"alias_span":null,"name":"FontId","value":"","parent":{"krate":0,"index":729}},{"kind":"Use","ref_id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196522,"byte_end":196531,"line_start":13,"line_end":13,"column_start":60,"column_end":69},"alias_span":null,"name":"FontTweak","value":"","parent":{"krate":0,"index":729}},{"kind":"Use","ref_id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196533,"byte_end":196538,"line_start":13,"line_end":13,"column_start":71,"column_end":76},"alias_span":null,"name":"Fonts","value":"","parent":{"krate":0,"index":729}},{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196540,"byte_end":196549,"line_start":13,"line_end":13,"column_start":78,"column_end":87},"alias_span":null,"name":"FontsImpl","value":"","parent":{"krate":0,"index":729}},{"kind":"Use","ref_id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196569,"byte_end":196575,"line_start":14,"line_end":14,"column_start":18,"column_end":24},"alias_span":null,"name":"layout","value":"","parent":{"krate":0,"index":729}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196600,"byte_end":196601,"line_start":15,"line_end":15,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Galley, Glyph, Row, LayoutJob, RowVisuals, LayoutSection","parent":{"krate":0,"index":729}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\mod.rs","byte_start":311538,"byte_end":311539,"line_start":3,"line_end":3,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1299}},{"kind":"Use","ref_id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":796,"byte_end":812,"line_start":33,"line_end":33,"column_start":14,"column_end":30},"alias_span":null,"name":"CubicBezierShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1584},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":814,"byte_end":834,"line_start":33,"line_end":33,"column_start":32,"column_end":52},"alias_span":null,"name":"QuadraticBezierShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":849,"byte_end":856,"line_start":34,"line_end":34,"column_start":13,"column_end":20},"alias_span":null,"name":"Color32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":849,"byte_end":856,"line_start":34,"line_end":34,"column_start":13,"column_end":20},"alias_span":null,"name":"Color32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":858,"byte_end":862,"line_start":34,"line_end":34,"column_start":22,"column_end":26},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1759},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":858,"byte_end":862,"line_start":34,"line_end":34,"column_start":22,"column_end":26},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1881},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":877,"byte_end":887,"line_start":35,"line_end":35,"column_start":13,"column_end":23},"alias_span":null,"name":"ColorImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":889,"byte_end":898,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"alias_span":null,"name":"FontImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":900,"byte_end":909,"line_start":35,"line_end":35,"column_start":36,"column_end":45},"alias_span":null,"name":"ImageData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2007},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":911,"byte_end":921,"line_start":35,"line_end":35,"column_start":47,"column_end":57},"alias_span":null,"name":"ImageDelta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2180},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":935,"byte_end":939,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"alias_span":null,"name":"Mesh","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":941,"byte_end":947,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"alias_span":null,"name":"Mesh16","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":949,"byte_end":955,"line_start":36,"line_end":36,"column_start":26,"column_end":32},"alias_span":null,"name":"Vertex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2271},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":970,"byte_end":976,"line_start":37,"line_end":37,"column_start":13,"column_end":19},"alias_span":null,"name":"Shadow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2374},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":999,"byte_end":1010,"line_start":39,"line_end":39,"column_start":9,"column_end":20},"alias_span":null,"name":"CircleShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2701},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1012,"byte_end":1025,"line_start":39,"line_end":39,"column_start":22,"column_end":35},"alias_span":null,"name":"PaintCallback","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1027,"byte_end":1044,"line_start":39,"line_end":39,"column_start":37,"column_end":54},"alias_span":null,"name":"PaintCallbackInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2440},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1046,"byte_end":1055,"line_start":39,"line_end":39,"column_start":56,"column_end":65},"alias_span":null,"name":"PathShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2507},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1057,"byte_end":1066,"line_start":39,"line_end":39,"column_start":67,"column_end":76},"alias_span":null,"name":"RectShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1068,"byte_end":1076,"line_start":39,"line_end":39,"column_start":78,"column_end":86},"alias_span":null,"name":"Rounding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2323},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1078,"byte_end":1083,"line_start":39,"line_end":39,"column_start":88,"column_end":93},"alias_span":null,"name":"Shape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1093,"byte_end":1102,"line_start":40,"line_end":40,"column_start":9,"column_end":18},"alias_span":null,"name":"TextShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1122,"byte_end":1132,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"alias_span":null,"name":"PaintStats","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2763},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1146,"byte_end":1152,"line_start":43,"line_end":43,"column_start":13,"column_end":19},"alias_span":null,"name":"Stroke","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1172,"byte_end":1189,"line_start":44,"line_end":44,"column_start":19,"column_end":36},"alias_span":null,"name":"tessellate_shapes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2918},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1191,"byte_end":1210,"line_start":44,"line_end":44,"column_start":38,"column_end":57},"alias_span":null,"name":"TessellationOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1212,"byte_end":1223,"line_start":44,"line_end":44,"column_start":59,"column_end":70},"alias_span":null,"name":"Tessellator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1237,"byte_end":1247,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"alias_span":null,"name":"FontFamily","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1249,"byte_end":1255,"line_start":45,"line_end":45,"column_start":24,"column_end":30},"alias_span":null,"name":"FontId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1257,"byte_end":1262,"line_start":45,"line_end":45,"column_start":32,"column_end":37},"alias_span":null,"name":"Fonts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3909},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1264,"byte_end":1270,"line_start":45,"line_end":45,"column_start":39,"column_end":45},"alias_span":null,"name":"Galley","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4209},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1292,"byte_end":1304,"line_start":46,"line_end":46,"column_start":20,"column_end":32},"alias_span":null,"name":"TextureAtlas","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1326,"byte_end":1339,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"alias_span":null,"name":"TextureHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4218},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1355,"byte_end":1369,"line_start":48,"line_end":48,"column_start":15,"column_end":29},"alias_span":null,"name":"TextureManager","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":78},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1391,"byte_end":1395,"line_start":51,"line_end":51,"column_start":17,"column_end":21},"alias_span":null,"name":"pos2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":307},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1397,"byte_end":1401,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"alias_span":null,"name":"vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":693},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1403,"byte_end":1407,"line_start":51,"line_end":51,"column_start":29,"column_end":33},"alias_span":null,"name":"Pos2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":783},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1409,"byte_end":1413,"line_start":51,"line_end":51,"column_start":35,"column_end":39},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":1048},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1415,"byte_end":1419,"line_start":51,"line_end":51,"column_start":41,"column_end":45},"alias_span":null,"name":"Vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":32,"index":0},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1431,"byte_end":1436,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"alias_span":null,"name":"ahash","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":0},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1446,"byte_end":1451,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"alias_span":null,"name":"emath","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":0,"byte_end":4568,"line_start":1,"line_end":160,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":86},{"krate":0,"index":250},{"krate":0,"index":306},{"krate":0,"index":338},{"krate":0,"index":400},{"krate":0,"index":411},{"krate":0,"index":568},{"krate":0,"index":572},{"krate":0,"index":616},{"krate":0,"index":630},{"krate":0,"index":729},{"krate":0,"index":1172},{"krate":0,"index":1207},{"krate":0,"index":1263},{"krate":0,"index":1299},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":1463},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":4376},{"krate":0,"index":4383},{"krate":0,"index":4422},{"krate":0,"index":4357},{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4369},{"krate":0,"index":4371},{"krate":0,"index":4373},{"krate":0,"index":1489},{"krate":0,"index":4428},{"krate":0,"index":4432},{"krate":0,"index":4434},{"krate":0,"index":4436},{"krate":0,"index":4437},{"krate":0,"index":4440},{"krate":0,"index":4443},{"krate":0,"index":4445},{"krate":0,"index":4447},{"krate":0,"index":4454},{"krate":0,"index":4456},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1497}],"decl_id":null,"docs":" A simple 2D graphics library for turning simple 2D shapes and text into textured triangles.","sig":null,"attributes":[{"value":"/ A simple 2D graphics library for turning simple 2D shapes and text into textured triangles.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":0,"byte_end":95,"line_start":1,"line_end":1,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":96,"byte_end":99,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Made for [`egui`](https://github.com/emilk/egui/).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":100,"byte_end":154,"line_start":3,"line_end":3,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":155,"byte_end":158,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Create some [`Shape`]:s and pass them to [`tessellate_shapes`] to generate [`Mesh`]:es","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":159,"byte_end":249,"line_start":5,"line_end":5,"column_start":1,"column_end":91}},{"value":"/ that you can then paint using some graphics API of your choice (e.g. OpenGL).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":250,"byte_end":331,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":332,"byte_end":335,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":336,"byte_end":356,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":448,"byte_end":451,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"allow(clippy :: float_cmp)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":453,"byte_end":481,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"allow(clippy :: manual_range_contains)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":482,"byte_end":522,"line_start":13,"line_end":13,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5035,"byte_end":5051,"line_start":14,"line_end":14,"column_start":12,"column_end":28},"name":"CubicBezierShape","qualname":"::bezier::CubicBezierShape","value":"CubicBezierShape { points, closed, fill, stroke }","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517}],"decl_id":null,"docs":" A cubic [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).","sig":null,"attributes":[{"value":"/ A cubic [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":4785,"byte_end":4862,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":4863,"byte_end":4866,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See also [`QuadraticBezierShape`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":4867,"byte_end":4905,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5209,"byte_end":5215,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"points","qualname":"::bezier::CubicBezierShape::points","value":"[emath::Pos2; 4]","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":" The first point is the starting point and the last one is the ending point of the curve.\n The middle points are the control points.\n","sig":null,"attributes":[{"value":"/ The first point is the starting point and the last one is the ending point of the curve.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5058,"byte_end":5150,"line_start":15,"line_end":15,"column_start":5,"column_end":97}},{"value":"/ The middle points are the control points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5155,"byte_end":5200,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1515},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5236,"byte_end":5242,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"name":"closed","qualname":"::bezier::CubicBezierShape::closed","value":"bool","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5259,"byte_end":5263,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"name":"fill","qualname":"::bezier::CubicBezierShape::fill","value":"color::Color32","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1517},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5282,"byte_end":5288,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"name":"stroke","qualname":"::bezier::CubicBezierShape::stroke","value":"stroke::Stroke","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5559,"byte_end":5577,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"from_points_stroke","qualname":"<CubicBezierShape>::from_points_stroke","value":"fn from_points_stroke<impl Into<Stroke>>([Pos2; ], bool, Color32,\nimpl Into<Stroke>) -> Self where impl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" Creates a cubic Bézier curve based on 4 points and stroke.","sig":null,"attributes":[{"value":"/ Creates a cubic Bézier curve based on 4 points and stroke.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5329,"byte_end":5392,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5397,"byte_end":5400,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The first point is the starting point and the last one is the ending point of the curve.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5405,"byte_end":5497,"line_start":27,"line_end":27,"column_start":5,"column_end":97}},{"value":"/ The middle points are the control points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5502,"byte_end":5547,"line_start":28,"line_end":28,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5892,"byte_end":5901,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"transform","qualname":"<CubicBezierShape>::transform","value":"fn transform<'_, '_>(&'_ Self, &'_ RectTransform) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transform the curve with the given transform.\n","sig":null,"attributes":[{"value":"/ Transform the curve with the given transform.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5831,"byte_end":5880,"line_start":43,"line_end":43,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":6691,"byte_end":6705,"line_start":62,"line_end":62,"column_start":12,"column_end":26},"name":"to_path_shapes","qualname":"<CubicBezierShape>::to_path_shapes","value":"fn to_path_shapes<'_>(&'_ Self, Option<f32>, Option<f32>) -> Vec<PathShape>","parent":null,"children":[],"decl_id":null,"docs":" Convert the cubic Bézier curve to one or two [`PathShape`]'s.\n When the curve is closed and it has to intersect with the base line, it will be converted into two shapes.\n Otherwise, it will be converted into one shape.\n The `tolerance` will be used to control the max distance between the curve and the base line.\n The `epsilon` is used when comparing two floats.\n","sig":null,"attributes":[{"value":"/ Convert the cubic Bézier curve to one or two [`PathShape`]'s.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":6283,"byte_end":6349,"line_start":57,"line_end":57,"column_start":5,"column_end":70}},{"value":"/ When the curve is closed and it has to intersect with the base line, it will be converted into two shapes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":6354,"byte_end":6464,"line_start":58,"line_end":58,"column_start":5,"column_end":115}},{"value":"/ Otherwise, it will be converted into one shape.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":6469,"byte_end":6520,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/ The `tolerance` will be used to control the max distance between the curve and the base line.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":6525,"byte_end":6622,"line_start":60,"line_end":60,"column_start":5,"column_end":102}},{"value":"/ The `epsilon` is used when comparing two floats.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":6627,"byte_end":6679,"line_start":61,"line_end":61,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":7270,"byte_end":7290,"line_start":78,"line_end":78,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<CubicBezierShape>::visual_bounding_rect","value":"fn visual_bounding_rect<'_>(&'_ Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle (includes stroke width)\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle (includes stroke width)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":7201,"byte_end":7258,"line_start":77,"line_end":77,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":7584,"byte_end":7605,"line_start":87,"line_end":87,"column_start":12,"column_end":33},"name":"logical_bounding_rect","qualname":"<CubicBezierShape>::logical_bounding_rect","value":"fn logical_bounding_rect<'_>(&'_ Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Logical bounding rectangle (ignoring stroke width)\n","sig":null,"attributes":[{"value":"/ Logical bounding rectangle (ignoring stroke width)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":7518,"byte_end":7572,"line_start":86,"line_end":86,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":9204,"byte_end":9215,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"split_range","qualname":"<CubicBezierShape>::split_range","value":"fn split_range<'_>(&'_ Self, Range<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" split the original cubic curve into a new one within a range.\n","sig":null,"attributes":[{"value":"/ split the original cubic curve into a new one within a range.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":9127,"byte_end":9192,"line_start":140,"line_end":140,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":10772,"byte_end":10786,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"num_quadratics","qualname":"<CubicBezierShape>::num_quadratics","value":"fn num_quadratics<'_>(&'_ Self, f32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13839,"byte_end":13851,"line_start":226,"line_end":226,"column_start":12,"column_end":24},"name":"find_cross_t","qualname":"<CubicBezierShape>::find_cross_t","value":"fn find_cross_t<'_>(&'_ Self, f32) -> Option<f32>","parent":null,"children":[],"decl_id":null,"docs":" Find out the t value for the point where the curve is intersected with the base line.\n The base line is the line from P0 to P3.\n If the curve only has two intersection points with the base line, they should be 0.0 and 1.0.\n In this case, the \"fill\" will be simple since the curve is a convex line.\n If the curve has more than two intersection points with the base line, the \"fill\" will be a problem.\n We need to find out where is the 3rd t value (0<t<1)\n And the original cubic curve will be split into two curves (0.0..t and t..1.0).\n B(t) = (1-t)^3*P0 + 3*t*(1-t)^2*P1 + 3*t^2*(1-t)*P2 + t^3*P3\n or B(t) = (P3 - 3*P2 + 3*P1 - P0)*t^3 + (3*P2 - 6*P1 + 3*P0)*t^2 + (3*P1 - 3*P0)*t + P0\n this B(t) should be on the line between P0 and P3. Therefore:\n (B.x - P0.x)/(P3.x - P0.x) = (B.y - P0.y)/(P3.y - P0.y), or:\n B.x * (P3.y - P0.y) - B.y * (P3.x - P0.x) + P0.x * (P0.y - P3.y) + P0.y * (P3.x - P0.x) = 0\n B.x = (P3.x - 3 * P2.x + 3 * P1.x - P0.x) * t^3 + (3 * P2.x - 6 * P1.x + 3 * P0.x) * t^2 + (3 * P1.x - 3 * P0.x) * t + P0.x\n B.y = (P3.y - 3 * P2.y + 3 * P1.y - P0.y) * t^3 + (3 * P2.y - 6 * P1.y + 3 * P0.y) * t^2 + (3 * P1.y - 3 * P0.y) * t + P0.y\n Combine the above three equations and iliminate B.x and B.y, we get:\n t^3 * ( (P3.x - 3*P2.x + 3*P1.x - P0.x) * (P3.y - P0.y) - (P3.y - 3*P2.y + 3*P1.y - P0.y) * (P3.x - P0.x))\n + t^2 * ( (3 * P2.x - 6 * P1.x + 3 * P0.x) * (P3.y - P0.y) - (3 * P2.y - 6 * P1.y + 3 * P0.y) * (P3.x - P0.x))\n + t^1 * ( (3 * P1.x - 3 * P0.x) * (P3.y - P0.y) - (3 * P1.y - 3 * P0.y) * (P3.x - P0.x))\n + (P0.x * (P3.y - P0.y) - P0.y * (P3.x - P0.x)) + P0.x * (P0.y - P3.y) + P0.y * (P3.x - P0.x)\n = 0\n or a * t^3 + b * t^2 + c * t + d = 0","sig":null,"attributes":[{"value":"/ Find out the t value for the point where the curve is intersected with the base line.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":11305,"byte_end":11394,"line_start":192,"line_end":192,"column_start":5,"column_end":94}},{"value":"/ The base line is the line from P0 to P3.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":11399,"byte_end":11443,"line_start":193,"line_end":193,"column_start":5,"column_end":49}},{"value":"/ If the curve only has two intersection points with the base line, they should be 0.0 and 1.0.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":11448,"byte_end":11545,"line_start":194,"line_end":194,"column_start":5,"column_end":102}},{"value":"/ In this case, the \"fill\" will be simple since the curve is a convex line.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":11550,"byte_end":11627,"line_start":195,"line_end":195,"column_start":5,"column_end":82}},{"value":"/ If the curve has more than two intersection points with the base line, the \"fill\" will be a problem.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":11632,"byte_end":11736,"line_start":196,"line_end":196,"column_start":5,"column_end":109}},{"value":"/ We need to find out where is the 3rd t value (0<t<1)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":11741,"byte_end":11797,"line_start":197,"line_end":197,"column_start":5,"column_end":61}},{"value":"/ And the original cubic curve will be split into two curves (0.0..t and t..1.0).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":11802,"byte_end":11885,"line_start":198,"line_end":198,"column_start":5,"column_end":88}},{"value":"/ B(t) = (1-t)^3*P0 + 3*t*(1-t)^2*P1 + 3*t^2*(1-t)*P2 + t^3*P3","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":11890,"byte_end":11954,"line_start":199,"line_end":199,"column_start":5,"column_end":69}},{"value":"/ or B(t) = (P3 - 3*P2 + 3*P1 - P0)*t^3 + (3*P2 - 6*P1 + 3*P0)*t^2 + (3*P1 - 3*P0)*t + P0","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":11959,"byte_end":12050,"line_start":200,"line_end":200,"column_start":5,"column_end":96}},{"value":"/ this B(t) should be on the line between P0 and P3. Therefore:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":12055,"byte_end":12120,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/ (B.x - P0.x)/(P3.x - P0.x) = (B.y - P0.y)/(P3.y - P0.y), or:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":12125,"byte_end":12189,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/ B.x * (P3.y - P0.y) - B.y * (P3.x - P0.x) + P0.x * (P0.y - P3.y) + P0.y * (P3.x - P0.x) = 0","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":12194,"byte_end":12289,"line_start":203,"line_end":203,"column_start":5,"column_end":100}},{"value":"/ B.x = (P3.x - 3 * P2.x + 3 * P1.x - P0.x) * t^3 + (3 * P2.x - 6 * P1.x + 3 * P0.x) * t^2 + (3 * P1.x - 3 * P0.x) * t + P0.x","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":12294,"byte_end":12421,"line_start":204,"line_end":204,"column_start":5,"column_end":132}},{"value":"/ B.y = (P3.y - 3 * P2.y + 3 * P1.y - P0.y) * t^3 + (3 * P2.y - 6 * P1.y + 3 * P0.y) * t^2 + (3 * P1.y - 3 * P0.y) * t + P0.y","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":12426,"byte_end":12553,"line_start":205,"line_end":205,"column_start":5,"column_end":132}},{"value":"/ Combine the above three equations and iliminate B.x and B.y, we get:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":12558,"byte_end":12630,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ t^3 * ( (P3.x - 3*P2.x + 3*P1.x - P0.x) * (P3.y - P0.y) - (P3.y - 3*P2.y + 3*P1.y - P0.y) * (P3.x - P0.x))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":12635,"byte_end":12745,"line_start":207,"line_end":207,"column_start":5,"column_end":115}},{"value":"/ + t^2 * ( (3 * P2.x - 6 * P1.x + 3 * P0.x) * (P3.y - P0.y) - (3 * P2.y - 6 * P1.y + 3 * P0.y) * (P3.x - P0.x))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":12750,"byte_end":12864,"line_start":208,"line_end":208,"column_start":5,"column_end":119}},{"value":"/ + t^1 * ( (3 * P1.x - 3 * P0.x) * (P3.y - P0.y) - (3 * P1.y - 3 * P0.y) * (P3.x - P0.x))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":12869,"byte_end":12961,"line_start":209,"line_end":209,"column_start":5,"column_end":97}},{"value":"/ + (P0.x * (P3.y - P0.y) - P0.y * (P3.x - P0.x)) + P0.x * (P0.y - P3.y) + P0.y * (P3.x - P0.x)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":12966,"byte_end":13063,"line_start":210,"line_end":210,"column_start":5,"column_end":102}},{"value":"/ = 0","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13068,"byte_end":13075,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ or a * t^3 + b * t^2 + c * t + d = 0","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13080,"byte_end":13120,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13125,"byte_end":13128,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let x = t - b / (3 * a), then we have:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13133,"byte_end":13175,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/ x^3 + p * x + q = 0, where:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13180,"byte_end":13211,"line_start":215,"line_end":215,"column_start":5,"column_end":36}},{"value":"/ p = (3.0 * a * c - b^2) / (3.0 * a^2)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13216,"byte_end":13257,"line_start":216,"line_end":216,"column_start":5,"column_end":46}},{"value":"/ q = (2.0 * b^3 - 9.0 * a * b * c + 27.0 * a^2 * d) / (27.0 * a^3)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13262,"byte_end":13331,"line_start":217,"line_end":217,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13336,"byte_end":13339,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ when p > 0, there will be one real root, two complex roots","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13344,"byte_end":13406,"line_start":219,"line_end":219,"column_start":5,"column_end":67}},{"value":"/ when p = 0, there will be two real roots, when p=q=0, there will be three real roots but all 0.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13411,"byte_end":13510,"line_start":220,"line_end":220,"column_start":5,"column_end":104}},{"value":"/ when p < 0, there will be three unique real roots. this is what we need. (x1, x2, x3)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13515,"byte_end":13604,"line_start":221,"line_end":221,"column_start":5,"column_end":94}},{"value":"/  t = x + b / (3 * a), then we have: t1, t2, t3.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13609,"byte_end":13660,"line_start":222,"line_end":222,"column_start":5,"column_end":56}},{"value":"/ the one between 0.0 and 1.0 is what we need.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13665,"byte_end":13713,"line_start":223,"line_end":223,"column_start":5,"column_end":53}},{"value":"/ <`https://baike.baidu.com/item/%E4%B8%80%E5%85%83%E4%B8%89%E6%AC%A1%E6%96%B9%E7%A8%8B/8388473 /`>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13718,"byte_end":13819,"line_start":224,"line_end":224,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":13824,"byte_end":13827,"line_start":225,"line_end":225,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":15642,"byte_end":15648,"line_start":272,"line_end":272,"column_start":12,"column_end":18},"name":"sample","qualname":"<CubicBezierShape>::sample","value":"fn sample<'_>(&'_ Self, f32) -> Pos2","parent":null,"children":[],"decl_id":null,"docs":" Calculate the point (x,y) at t based on the cubic Bézier curve equation.\n t is in [0.0,1.0]\n [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Cubic_B.C3.A9zier_curves)","sig":null,"attributes":[{"value":"/ Calculate the point (x,y) at t based on the cubic Bézier curve equation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":15421,"byte_end":15498,"line_start":268,"line_end":268,"column_start":5,"column_end":81}},{"value":"/ t is in [0.0,1.0]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":15503,"byte_end":15524,"line_start":269,"line_end":269,"column_start":5,"column_end":26}},{"value":"/ [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Cubic_B.C3.A9zier_curves)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":15529,"byte_end":15622,"line_start":270,"line_end":270,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":15627,"byte_end":15630,"line_start":271,"line_end":271,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":16387,"byte_end":16394,"line_start":293,"line_end":293,"column_start":12,"column_end":19},"name":"flatten","qualname":"<CubicBezierShape>::flatten","value":"fn flatten<'_>(&'_ Self, Option<f32>) -> Vec<Pos2>","parent":null,"children":[],"decl_id":null,"docs":" find a set of points that approximate the cubic Bézier curve.\n the number of points is determined by the tolerance.\n the points may not be evenly distributed in the range [0.0,1.0] (t value)\n","sig":null,"attributes":[{"value":"/ find a set of points that approximate the cubic Bézier curve.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":16166,"byte_end":16232,"line_start":290,"line_end":290,"column_start":5,"column_end":70}},{"value":"/ the number of points is determined by the tolerance.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":16237,"byte_end":16293,"line_start":291,"line_end":291,"column_start":5,"column_end":61}},{"value":"/ the points may not be evenly distributed in the range [0.0,1.0] (t value)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":16298,"byte_end":16375,"line_start":292,"line_end":292,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":17187,"byte_end":17201,"line_start":308,"line_end":308,"column_start":12,"column_end":26},"name":"flatten_closed","qualname":"<CubicBezierShape>::flatten_closed","value":"fn flatten_closed<'_>(&'_ Self, Option<f32>, Option<f32>) -> Vec<Vec<Pos2>>","parent":null,"children":[],"decl_id":null,"docs":" find a set of points that approximate the cubic Bézier curve.\n the number of points is determined by the tolerance.\n the points may not be evenly distributed in the range [0.0,1.0] (t value)\n this api will check whether the curve will cross the base line or not when closed = true.\n The result will be a vec of vec of Pos2. it will store two closed aren in different vec.\n The epsilon is used to compare a float value.\n","sig":null,"attributes":[{"value":"/ find a set of points that approximate the cubic Bézier curve.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":16717,"byte_end":16783,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/ the number of points is determined by the tolerance.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":16788,"byte_end":16844,"line_start":303,"line_end":303,"column_start":5,"column_end":61}},{"value":"/ the points may not be evenly distributed in the range [0.0,1.0] (t value)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":16849,"byte_end":16926,"line_start":304,"line_end":304,"column_start":5,"column_end":82}},{"value":"/ this api will check whether the curve will cross the base line or not when closed = true.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":16931,"byte_end":17024,"line_start":305,"line_end":305,"column_start":5,"column_end":98}},{"value":"/ The result will be a vec of vec of Pos2. it will store two closed aren in different vec.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":17029,"byte_end":17121,"line_start":306,"line_end":306,"column_start":5,"column_end":97}},{"value":"/ The epsilon is used to compare a float value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":17126,"byte_end":17175,"line_start":307,"line_end":307,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":19285,"byte_end":19310,"line_start":358,"line_end":358,"column_start":12,"column_end":37},"name":"for_each_flattened_with_t","qualname":"<CubicBezierShape>::for_each_flattened_with_t","value":"fn for_each_flattened_with_t<F, '_, '_>(&'_ Self, f32, &'_ mut F) where\nF: FnMut(Pos2, f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Iterates through the curve invoking a callback at each point.\n","sig":null,"attributes":[{"value":"/ Iterates through the curve invoking a callback at each point.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":19208,"byte_end":19273,"line_start":357,"line_end":357,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":19517,"byte_end":19521,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"from","qualname":"<Shape as std::convert::From>::from","value":"fn from(CubicBezierShape) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":19492,"byte_end":19509,"line_start":364,"line_end":364,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1584},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":19930,"byte_end":19950,"line_start":377,"line_end":377,"column_start":12,"column_end":32},"name":"QuadraticBezierShape","qualname":"::bezier::QuadraticBezierShape","value":"QuadraticBezierShape { points, closed, fill, stroke }","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589}],"decl_id":null,"docs":" A quadratic [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).","sig":null,"attributes":[{"value":"/ A quadratic [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":19680,"byte_end":19761,"line_start":372,"line_end":372,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":19762,"byte_end":19765,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ See also [`CubicBezierShape`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":19766,"byte_end":19800,"line_start":374,"line_end":374,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20106,"byte_end":20112,"line_start":380,"line_end":380,"column_start":9,"column_end":15},"name":"points","qualname":"::bezier::QuadraticBezierShape::points","value":"[emath::Pos2; 3]","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":" The first point is the starting point and the last one is the ending point of the curve.\n The middle point is the control points.\n","sig":null,"attributes":[{"value":"/ The first point is the starting point and the last one is the ending point of the curve.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":19957,"byte_end":20049,"line_start":378,"line_end":378,"column_start":5,"column_end":97}},{"value":"/ The middle point is the control points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20054,"byte_end":20097,"line_start":379,"line_end":379,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1587},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20133,"byte_end":20139,"line_start":381,"line_end":381,"column_start":9,"column_end":15},"name":"closed","qualname":"::bezier::QuadraticBezierShape::closed","value":"bool","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20156,"byte_end":20160,"line_start":383,"line_end":383,"column_start":9,"column_end":13},"name":"fill","qualname":"::bezier::QuadraticBezierShape::fill","value":"color::Color32","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1589},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20179,"byte_end":20185,"line_start":384,"line_end":384,"column_start":9,"column_end":15},"name":"stroke","qualname":"::bezier::QuadraticBezierShape::stroke","value":"stroke::Stroke","parent":{"krate":0,"index":1584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20533,"byte_end":20551,"line_start":393,"line_end":393,"column_start":12,"column_end":30},"name":"from_points_stroke","qualname":"<QuadraticBezierShape>::from_points_stroke","value":"fn from_points_stroke<impl Into<Stroke>>([Pos2; ], bool, Color32,\nimpl Into<Stroke>) -> Self where impl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" Create a new quadratic Bézier shape based on the 3 points and stroke.","sig":null,"attributes":[{"value":"/ Create a new quadratic Bézier shape based on the 3 points and stroke.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20230,"byte_end":20304,"line_start":388,"line_end":388,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20309,"byte_end":20312,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ The first point is the starting point and the last one is the ending point of the curve.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20317,"byte_end":20409,"line_start":390,"line_end":390,"column_start":5,"column_end":97}},{"value":"/ The middle point is the control points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20414,"byte_end":20457,"line_start":391,"line_end":391,"column_start":5,"column_end":48}},{"value":"/ The points should be in the order [start, control, end]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20462,"byte_end":20521,"line_start":392,"line_end":392,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20882,"byte_end":20891,"line_start":408,"line_end":408,"column_start":12,"column_end":21},"name":"transform","qualname":"<QuadraticBezierShape>::transform","value":"fn transform<'_, '_>(&'_ Self, &'_ RectTransform) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transform the curve with the given transform.\n","sig":null,"attributes":[{"value":"/ Transform the curve with the given transform.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20821,"byte_end":20870,"line_start":407,"line_end":407,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":21452,"byte_end":21465,"line_start":423,"line_end":423,"column_start":12,"column_end":25},"name":"to_path_shape","qualname":"<QuadraticBezierShape>::to_path_shape","value":"fn to_path_shape<'_>(&'_ Self, Option<f32>) -> PathShape","parent":null,"children":[],"decl_id":null,"docs":" Convert the quadratic Bézier curve to one [`PathShape`].\n The `tolerance` will be used to control the max distance between the curve and the base line.\n","sig":null,"attributes":[{"value":"/ Convert the quadratic Bézier curve to one [`PathShape`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":21277,"byte_end":21338,"line_start":421,"line_end":421,"column_start":5,"column_end":65}},{"value":"/ The `tolerance` will be used to control the max distance between the curve and the base line.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":21343,"byte_end":21440,"line_start":422,"line_end":422,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":21783,"byte_end":21803,"line_start":434,"line_end":434,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<QuadraticBezierShape>::visual_bounding_rect","value":"fn visual_bounding_rect<'_>(&'_ Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle (includes stroke width)\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle (includes stroke width)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":21714,"byte_end":21771,"line_start":433,"line_end":433,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":22097,"byte_end":22118,"line_start":443,"line_end":443,"column_start":12,"column_end":33},"name":"logical_bounding_rect","qualname":"<QuadraticBezierShape>::logical_bounding_rect","value":"fn logical_bounding_rect<'_>(&'_ Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Logical bounding rectangle (ignoring stroke width)\n","sig":null,"attributes":[{"value":"/ Logical bounding rectangle (ignoring stroke width)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":22031,"byte_end":22085,"line_start":442,"line_end":442,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":23672,"byte_end":23678,"line_start":495,"line_end":495,"column_start":12,"column_end":18},"name":"sample","qualname":"<QuadraticBezierShape>::sample","value":"fn sample<'_>(&'_ Self, f32) -> Pos2","parent":null,"children":[],"decl_id":null,"docs":" Calculate the point (x,y) at t based on the quadratic Bézier curve equation.\n t is in [0.0,1.0]\n [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Quadratic_B.C3.A9zier_curves)","sig":null,"attributes":[{"value":"/ Calculate the point (x,y) at t based on the quadratic Bézier curve equation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":23443,"byte_end":23524,"line_start":491,"line_end":491,"column_start":5,"column_end":85}},{"value":"/ t is in [0.0,1.0]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":23529,"byte_end":23550,"line_start":492,"line_end":492,"column_start":5,"column_end":26}},{"value":"/ [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Quadratic_B.C3.A9zier_curves)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":23555,"byte_end":23652,"line_start":493,"line_end":493,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":23657,"byte_end":23660,"line_start":494,"line_end":494,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":24333,"byte_end":24340,"line_start":514,"line_end":514,"column_start":12,"column_end":19},"name":"flatten","qualname":"<QuadraticBezierShape>::flatten","value":"fn flatten<'_>(&'_ Self, Option<f32>) -> Vec<Pos2>","parent":null,"children":[],"decl_id":null,"docs":" find a set of points that approximate the quadratic Bézier curve.\n the number of points is determined by the tolerance.\n the points may not be evenly distributed in the range [0.0,1.0] (t value)\n","sig":null,"attributes":[{"value":"/ find a set of points that approximate the quadratic Bézier curve.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":24108,"byte_end":24178,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"/ the number of points is determined by the tolerance.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":24183,"byte_end":24239,"line_start":512,"line_end":512,"column_start":5,"column_end":61}},{"value":"/ the points may not be evenly distributed in the range [0.0,1.0] (t value)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":24244,"byte_end":24321,"line_start":513,"line_end":513,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":25084,"byte_end":25109,"line_start":531,"line_end":531,"column_start":12,"column_end":37},"name":"for_each_flattened_with_t","qualname":"<QuadraticBezierShape>::for_each_flattened_with_t","value":"fn for_each_flattened_with_t<F, '_, '_>(&'_ Self, f32, &'_ mut F) where\nF: FnMut(Pos2, f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute a flattened approximation of the curve, invoking a callback at\n each step.","sig":null,"attributes":[{"value":"/ Compute a flattened approximation of the curve, invoking a callback at","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":24726,"byte_end":24800,"line_start":524,"line_end":524,"column_start":5,"column_end":79}},{"value":"/ each step.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":24805,"byte_end":24819,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":24824,"byte_end":24827,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ The callback takes the point and corresponding curve parameter at each step.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":24832,"byte_end":24912,"line_start":527,"line_end":527,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":24917,"byte_end":24920,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This implements the algorithm described by Raph Levien at","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":24925,"byte_end":24986,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/ <https://raphlinus.github.io/graphics/curves/2019/12/23/flatten-quadbez.html>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":24991,"byte_end":25072,"line_start":530,"line_end":530,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":25637,"byte_end":25641,"line_start":553,"line_end":553,"column_start":8,"column_end":12},"name":"from","qualname":"<Shape as std::convert::From>::from","value":"fn from(QuadraticBezierShape) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":25612,"byte_end":25629,"line_start":552,"line_end":552,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"color","qualname":"::color","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1697},{"krate":0,"index":1704},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1717},{"krate":0,"index":1665},{"krate":0,"index":1687},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":1758},{"krate":0,"index":1762},{"krate":0,"index":1769},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1782},{"krate":0,"index":1730},{"krate":0,"index":1752},{"krate":0,"index":1718},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":1783},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":198},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":1799},{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249}],"decl_id":null,"docs":" Color conversions and types.","sig":null,"attributes":[{"value":"/ Color conversions and types.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":43540,"byte_end":43572,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":43573,"byte_end":43576,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ If you want a compact color representation, use [`Color32`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":43577,"byte_end":43641,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ If you want to manipulate RGBA colors use [`Rgba`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":43642,"byte_end":43697,"line_start":4,"line_end":4,"column_start":1,"column_end":56}},{"value":"/ If you want to manipulate colors in a way closer to how humans think about colors, use [`HsvaGamma`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":43698,"byte_end":43803,"line_start":5,"line_end":5,"column_start":1,"column_end":106}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":43805,"byte_end":43845,"line_start":7,"line_end":7,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44405,"byte_end":44412,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"Color32","qualname":"::color::Color32","value":"","parent":null,"children":[],"decl_id":null,"docs":" This format is used for space-efficient color representation (32 bits).","sig":null,"attributes":[{"value":"/ This format is used for space-efficient color representation (32 bits).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":43847,"byte_end":43922,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":43923,"byte_end":43926,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Instead of manipulating this directly it is often better","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":43927,"byte_end":43987,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/ to first convert it to either [`Rgba`] or [`Hsva`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":43988,"byte_end":44043,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44044,"byte_end":44047,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Internally this uses 0-255 gamma space `sRGBA` color with premultiplied alpha.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44048,"byte_end":44130,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/ Alpha channel is in linear space.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44131,"byte_end":44168,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44169,"byte_end":44179,"line_start":16,"line_end":16,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44529,"byte_end":44534,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"index","qualname":"<Color32 as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, usize) -> &'_ u8","parent":{"krate":2,"index":3576},"children":[],"decl_id":{"krate":2,"index":3579},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44504,"byte_end":44521,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44671,"byte_end":44680,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<Color32 as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, usize) -> &'_ mut u8","parent":{"krate":2,"index":3580},"children":[],"decl_id":{"krate":2,"index":3582},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44646,"byte_end":44663,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44818,"byte_end":44829,"line_start":41,"line_end":41,"column_start":15,"column_end":26},"name":"TRANSPARENT","qualname":"::color::Color32::TRANSPARENT","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44901,"byte_end":44906,"line_start":42,"line_end":42,"column_start":15,"column_end":20},"name":"BLACK","qualname":"::color::Color32::BLACK","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44960,"byte_end":44969,"line_start":43,"line_end":43,"column_start":15,"column_end":24},"name":"DARK_GRAY","qualname":"::color::Color32::DARK_GRAY","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45026,"byte_end":45030,"line_start":44,"line_end":44,"column_start":15,"column_end":19},"name":"GRAY","qualname":"::color::Color32::GRAY","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45090,"byte_end":45100,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"name":"LIGHT_GRAY","qualname":"::color::Color32::LIGHT_GRAY","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45160,"byte_end":45165,"line_start":46,"line_end":46,"column_start":15,"column_end":20},"name":"WHITE","qualname":"::color::Color32::WHITE","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45226,"byte_end":45231,"line_start":48,"line_end":48,"column_start":15,"column_end":20},"name":"BROWN","qualname":"::color::Color32::BROWN","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45289,"byte_end":45297,"line_start":49,"line_end":49,"column_start":15,"column_end":23},"name":"DARK_RED","qualname":"::color::Color32::DARK_RED","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45354,"byte_end":45357,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"RED","qualname":"::color::Color32::RED","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45413,"byte_end":45422,"line_start":51,"line_end":51,"column_start":15,"column_end":24},"name":"LIGHT_RED","qualname":"::color::Color32::LIGHT_RED","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45483,"byte_end":45489,"line_start":53,"line_end":53,"column_start":15,"column_end":21},"name":"YELLOW","qualname":"::color::Color32::YELLOW","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45547,"byte_end":45559,"line_start":54,"line_end":54,"column_start":15,"column_end":27},"name":"LIGHT_YELLOW","qualname":"::color::Color32::LIGHT_YELLOW","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45620,"byte_end":45625,"line_start":55,"line_end":55,"column_start":15,"column_end":20},"name":"KHAKI","qualname":"::color::Color32::KHAKI","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45686,"byte_end":45696,"line_start":57,"line_end":57,"column_start":15,"column_end":25},"name":"DARK_GREEN","qualname":"::color::Color32::DARK_GREEN","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45753,"byte_end":45758,"line_start":58,"line_end":58,"column_start":15,"column_end":20},"name":"GREEN","qualname":"::color::Color32::GREEN","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45814,"byte_end":45825,"line_start":59,"line_end":59,"column_start":15,"column_end":26},"name":"LIGHT_GREEN","qualname":"::color::Color32::LIGHT_GREEN","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45889,"byte_end":45898,"line_start":61,"line_end":61,"column_start":15,"column_end":24},"name":"DARK_BLUE","qualname":"::color::Color32::DARK_BLUE","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":45955,"byte_end":45959,"line_start":62,"line_end":62,"column_start":15,"column_end":19},"name":"BLUE","qualname":"::color::Color32::BLUE","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46015,"byte_end":46025,"line_start":63,"line_end":63,"column_start":15,"column_end":25},"name":"LIGHT_BLUE","qualname":"::color::Color32::LIGHT_BLUE","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46089,"byte_end":46093,"line_start":65,"line_end":65,"column_start":15,"column_end":19},"name":"GOLD","qualname":"::color::Color32::GOLD","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46152,"byte_end":46163,"line_start":67,"line_end":67,"column_start":15,"column_end":26},"name":"DEBUG_COLOR","qualname":"::color::Color32::DEBUG_COLOR","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46325,"byte_end":46340,"line_start":70,"line_end":70,"column_start":15,"column_end":30},"name":"TEMPORARY_COLOR","qualname":"::color::Color32::TEMPORARY_COLOR","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" An ugly color that is planned to be replaced before making it to the screen.\n","sig":null,"attributes":[{"value":"/ An ugly color that is planned to be replaced before making it to the screen.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46230,"byte_end":46310,"line_start":69,"line_end":69,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46423,"byte_end":46431,"line_start":73,"line_end":73,"column_start":18,"column_end":26},"name":"from_rgb","qualname":"<Color32>::from_rgb","value":"const fn from_rgb(u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46388,"byte_end":46405,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46538,"byte_end":46555,"line_start":78,"line_end":78,"column_start":18,"column_end":35},"name":"from_rgb_additive","qualname":"<Color32>::from_rgb_additive","value":"const fn from_rgb_additive(u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46503,"byte_end":46520,"line_start":77,"line_end":77,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46707,"byte_end":46730,"line_start":84,"line_end":84,"column_start":18,"column_end":41},"name":"from_rgba_premultiplied","qualname":"<Color32>::from_rgba_premultiplied","value":"const fn from_rgba_premultiplied(u8, u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From `sRGBA` with premultiplied alpha.\n","sig":null,"attributes":[{"value":"/ From `sRGBA` with premultiplied alpha.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46625,"byte_end":46667,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46672,"byte_end":46689,"line_start":83,"line_end":83,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46864,"byte_end":46886,"line_start":89,"line_end":89,"column_start":12,"column_end":34},"name":"from_rgba_unmultiplied","qualname":"<Color32>::from_rgba_unmultiplied","value":"fn from_rgba_unmultiplied(u8, u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From `sRGBA` WITHOUT premultiplied alpha.\n","sig":null,"attributes":[{"value":"/ From `sRGBA` WITHOUT premultiplied alpha.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":46807,"byte_end":46852,"line_start":88,"line_end":88,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":47621,"byte_end":47630,"line_start":109,"line_end":109,"column_start":18,"column_end":27},"name":"from_gray","qualname":"<Color32>::from_gray","value":"const fn from_gray(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":47586,"byte_end":47603,"line_start":108,"line_end":108,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":47723,"byte_end":47739,"line_start":114,"line_end":114,"column_start":18,"column_end":34},"name":"from_black_alpha","qualname":"<Color32>::from_black_alpha","value":"const fn from_black_alpha(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":47688,"byte_end":47705,"line_start":113,"line_end":113,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":47802,"byte_end":47818,"line_start":118,"line_end":118,"column_start":12,"column_end":28},"name":"from_white_alpha","qualname":"<Color32>::from_white_alpha","value":"fn from_white_alpha(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":47950,"byte_end":47973,"line_start":123,"line_end":123,"column_start":18,"column_end":41},"name":"from_additive_luminance","qualname":"<Color32>::from_additive_luminance","value":"const fn from_additive_luminance(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":47915,"byte_end":47932,"line_start":122,"line_end":122,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48064,"byte_end":48073,"line_start":128,"line_end":128,"column_start":18,"column_end":27},"name":"is_opaque","qualname":"<Color32>::is_opaque","value":"const fn is_opaque<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48029,"byte_end":48046,"line_start":127,"line_end":127,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48161,"byte_end":48162,"line_start":133,"line_end":133,"column_start":18,"column_end":19},"name":"r","qualname":"<Color32>::r","value":"const fn r<'_>(&'_ Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48126,"byte_end":48143,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48242,"byte_end":48243,"line_start":138,"line_end":138,"column_start":18,"column_end":19},"name":"g","qualname":"<Color32>::g","value":"const fn g<'_>(&'_ Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48207,"byte_end":48224,"line_start":137,"line_end":137,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48323,"byte_end":48324,"line_start":143,"line_end":143,"column_start":18,"column_end":19},"name":"b","qualname":"<Color32>::b","value":"const fn b<'_>(&'_ Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48288,"byte_end":48305,"line_start":142,"line_end":142,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48404,"byte_end":48405,"line_start":148,"line_end":148,"column_start":18,"column_end":19},"name":"a","qualname":"<Color32>::a","value":"const fn a<'_>(&'_ Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48369,"byte_end":48386,"line_start":147,"line_end":147,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48499,"byte_end":48508,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"to_opaque","qualname":"<Color32>::to_opaque","value":"fn to_opaque(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an opaque version of self\n","sig":null,"attributes":[{"value":"/ Returns an opaque version of self","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48450,"byte_end":48487,"line_start":152,"line_end":152,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48659,"byte_end":48667,"line_start":159,"line_end":159,"column_start":18,"column_end":26},"name":"additive","qualname":"<Color32>::additive","value":"const fn additive(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an additive version of self\n","sig":null,"attributes":[{"value":"/ Returns an additive version of self","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48580,"byte_end":48619,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48624,"byte_end":48641,"line_start":158,"line_end":158,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48828,"byte_end":48836,"line_start":166,"line_end":166,"column_start":18,"column_end":26},"name":"to_array","qualname":"<Color32>::to_array","value":"const fn to_array<'_>(&'_ Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Premultiplied RGBA\n","sig":null,"attributes":[{"value":"/ Premultiplied RGBA","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48766,"byte_end":48788,"line_start":164,"line_end":164,"column_start":5,"column_end":27}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48793,"byte_end":48810,"line_start":165,"line_end":165,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48979,"byte_end":48987,"line_start":172,"line_end":172,"column_start":18,"column_end":26},"name":"to_tuple","qualname":"<Color32>::to_tuple","value":"const fn to_tuple<'_>(&'_ Self) -> (u8, u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Premultiplied RGBA\n","sig":null,"attributes":[{"value":"/ Premultiplied RGBA","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48917,"byte_end":48939,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":48944,"byte_end":48961,"line_start":171,"line_end":171,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":49084,"byte_end":49105,"line_start":176,"line_end":176,"column_start":12,"column_end":33},"name":"to_srgba_unmultiplied","qualname":"<Color32>::to_srgba_unmultiplied","value":"fn to_srgba_unmultiplied<'_>(&'_ Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":49250,"byte_end":49265,"line_start":181,"line_end":181,"column_start":12,"column_end":27},"name":"linear_multiply","qualname":"<Color32>::linear_multiply","value":"fn linear_multiply(Self, f32) -> Color32","parent":null,"children":[],"decl_id":null,"docs":" Multiply with 0.5 to make color half as opaque.\n","sig":null,"attributes":[{"value":"/ Multiply with 0.5 to make color half as opaque.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":49187,"byte_end":49238,"line_start":180,"line_end":180,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51177,"byte_end":51181,"line_start":238,"line_end":238,"column_start":12,"column_end":16},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":" 0-1 linear space `RGBA` color with premultiplied alpha.\n","sig":null,"attributes":[{"value":"/ 0-1 linear space `RGBA` color with premultiplied alpha.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":50891,"byte_end":50950,"line_start":233,"line_end":233,"column_start":1,"column_end":60}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":50951,"byte_end":50961,"line_start":234,"line_end":234,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51297,"byte_end":51302,"line_start":244,"line_end":244,"column_start":8,"column_end":13},"name":"index","qualname":"<Rgba as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, usize) -> &'_ f32","parent":{"krate":2,"index":3576},"children":[],"decl_id":{"krate":2,"index":3579},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51272,"byte_end":51289,"line_start":243,"line_end":243,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51437,"byte_end":51446,"line_start":251,"line_end":251,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<Rgba as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, usize) -> &'_ mut f32","parent":{"krate":2,"index":3580},"children":[],"decl_id":{"krate":2,"index":3582},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51412,"byte_end":51429,"line_start":250,"line_end":250,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51612,"byte_end":51616,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"hash","qualname":"<Rgba as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: std::hash::Hasher","parent":{"krate":2,"index":10536},"children":[],"decl_id":{"krate":2,"index":10537},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51595,"byte_end":51604,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51870,"byte_end":51881,"line_start":268,"line_end":268,"column_start":15,"column_end":26},"name":"TRANSPARENT","qualname":"::color::Rgba::TRANSPARENT","value":"Rgba","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51955,"byte_end":51960,"line_start":269,"line_end":269,"column_start":15,"column_end":20},"name":"BLACK","qualname":"::color::Rgba::BLACK","value":"Rgba","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":52014,"byte_end":52019,"line_start":270,"line_end":270,"column_start":15,"column_end":20},"name":"WHITE","qualname":"::color::Rgba::WHITE","value":"Rgba","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":52073,"byte_end":52076,"line_start":271,"line_end":271,"column_start":15,"column_end":18},"name":"RED","qualname":"::color::Rgba::RED","value":"Rgba","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":52130,"byte_end":52135,"line_start":272,"line_end":272,"column_start":15,"column_end":20},"name":"GREEN","qualname":"::color::Rgba::GREEN","value":"Rgba","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":52189,"byte_end":52193,"line_start":273,"line_end":273,"column_start":15,"column_end":19},"name":"BLUE","qualname":"::color::Rgba::BLUE","value":"Rgba","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":52273,"byte_end":52296,"line_start":276,"line_end":276,"column_start":18,"column_end":41},"name":"from_rgba_premultiplied","qualname":"<Rgba>::from_rgba_premultiplied","value":"const fn from_rgba_premultiplied(f32, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":52238,"byte_end":52255,"line_start":275,"line_end":275,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":52406,"byte_end":52428,"line_start":281,"line_end":281,"column_start":12,"column_end":34},"name":"from_rgba_unmultiplied","qualname":"<Rgba>::from_rgba_unmultiplied","value":"fn from_rgba_unmultiplied(f32, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":52377,"byte_end":52394,"line_start":280,"line_end":280,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":52550,"byte_end":52574,"line_start":286,"line_end":286,"column_start":12,"column_end":36},"name":"from_srgba_premultiplied","qualname":"<Rgba>::from_srgba_premultiplied","value":"fn from_srgba_premultiplied(u8, u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":52521,"byte_end":52538,"line_start":285,"line_end":285,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":52884,"byte_end":52907,"line_start":295,"line_end":295,"column_start":12,"column_end":35},"name":"from_srgba_unmultiplied","qualname":"<Rgba>::from_srgba_unmultiplied","value":"fn from_srgba_unmultiplied(u8, u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":52855,"byte_end":52872,"line_start":294,"line_end":294,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":53235,"byte_end":53243,"line_start":304,"line_end":304,"column_start":18,"column_end":26},"name":"from_rgb","qualname":"<Rgba>::from_rgb","value":"const fn from_rgb(f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":53200,"byte_end":53217,"line_start":303,"line_end":303,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":53353,"byte_end":53362,"line_start":309,"line_end":309,"column_start":18,"column_end":27},"name":"from_gray","qualname":"<Rgba>::from_gray","value":"const fn from_gray(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":53318,"byte_end":53335,"line_start":308,"line_end":308,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":53428,"byte_end":53448,"line_start":313,"line_end":313,"column_start":12,"column_end":32},"name":"from_luminance_alpha","qualname":"<Rgba>::from_luminance_alpha","value":"fn from_luminance_alpha(f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":53686,"byte_end":53702,"line_start":321,"line_end":321,"column_start":12,"column_end":28},"name":"from_black_alpha","qualname":"<Rgba>::from_black_alpha","value":"fn from_black_alpha(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transparent black\n","sig":null,"attributes":[{"value":"/ Transparent black","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":53631,"byte_end":53652,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":53657,"byte_end":53674,"line_start":320,"line_end":320,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":53873,"byte_end":53889,"line_start":328,"line_end":328,"column_start":12,"column_end":28},"name":"from_white_alpha","qualname":"<Rgba>::from_white_alpha","value":"fn from_white_alpha(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transparent white\n","sig":null,"attributes":[{"value":"/ Transparent white","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":53818,"byte_end":53839,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":53844,"byte_end":53861,"line_start":327,"line_end":327,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54089,"byte_end":54097,"line_start":335,"line_end":335,"column_start":12,"column_end":20},"name":"additive","qualname":"<Rgba>::additive","value":"fn additive(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return an additive version of this color (alpha = 0)\n","sig":null,"attributes":[{"value":"/ Return an additive version of this color (alpha = 0)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":53999,"byte_end":54055,"line_start":333,"line_end":333,"column_start":5,"column_end":61}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54060,"byte_end":54077,"line_start":334,"line_end":334,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54277,"byte_end":54285,"line_start":342,"line_end":342,"column_start":12,"column_end":20},"name":"multiply","qualname":"<Rgba>::multiply","value":"fn multiply(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiply with e.g. 0.5 to make us half transparent\n","sig":null,"attributes":[{"value":"/ Multiply with e.g. 0.5 to make us half transparent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54189,"byte_end":54243,"line_start":340,"line_end":340,"column_start":5,"column_end":59}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54248,"byte_end":54265,"line_start":341,"line_end":341,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54496,"byte_end":54497,"line_start":352,"line_end":352,"column_start":12,"column_end":13},"name":"r","qualname":"<Rgba>::r","value":"fn r<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54467,"byte_end":54484,"line_start":351,"line_end":351,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54572,"byte_end":54573,"line_start":357,"line_end":357,"column_start":12,"column_end":13},"name":"g","qualname":"<Rgba>::g","value":"fn g<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54543,"byte_end":54560,"line_start":356,"line_end":356,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54648,"byte_end":54649,"line_start":362,"line_end":362,"column_start":12,"column_end":13},"name":"b","qualname":"<Rgba>::b","value":"fn b<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54619,"byte_end":54636,"line_start":361,"line_end":361,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54724,"byte_end":54725,"line_start":367,"line_end":367,"column_start":12,"column_end":13},"name":"a","qualname":"<Rgba>::a","value":"fn a<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54695,"byte_end":54712,"line_start":366,"line_end":366,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54848,"byte_end":54857,"line_start":373,"line_end":373,"column_start":12,"column_end":21},"name":"intensity","qualname":"<Rgba>::intensity","value":"fn intensity<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" How perceptually intense (bright) is the color?\n","sig":null,"attributes":[{"value":"/ How perceptually intense (bright) is the color?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54771,"byte_end":54822,"line_start":371,"line_end":371,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54827,"byte_end":54836,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54993,"byte_end":55002,"line_start":378,"line_end":378,"column_start":12,"column_end":21},"name":"to_opaque","qualname":"<Rgba>::to_opaque","value":"fn to_opaque<'_>(&'_ Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an opaque version of self\n","sig":null,"attributes":[{"value":"/ Returns an opaque version of self","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":54944,"byte_end":54981,"line_start":377,"line_end":377,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":55439,"byte_end":55447,"line_start":394,"line_end":394,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Rgba>::to_array","value":"fn to_array<'_>(&'_ Self) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":" Premultiplied RGBA\n","sig":null,"attributes":[{"value":"/ Premultiplied RGBA","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":55383,"byte_end":55405,"line_start":392,"line_end":392,"column_start":5,"column_end":27}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":55410,"byte_end":55427,"line_start":393,"line_end":393,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":55585,"byte_end":55593,"line_start":400,"line_end":400,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Rgba>::to_tuple","value":"fn to_tuple<'_>(&'_ Self) -> (f32, f32, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Premultiplied RGBA\n","sig":null,"attributes":[{"value":"/ Premultiplied RGBA","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":55529,"byte_end":55551,"line_start":398,"line_end":398,"column_start":5,"column_end":27}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":55556,"byte_end":55573,"line_start":399,"line_end":399,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":55723,"byte_end":55743,"line_start":405,"line_end":405,"column_start":12,"column_end":32},"name":"to_rgba_unmultiplied","qualname":"<Rgba>::to_rgba_unmultiplied","value":"fn to_rgba_unmultiplied<'_>(&'_ Self) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":" unmultiply the alpha\n","sig":null,"attributes":[{"value":"/ unmultiply the alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":55687,"byte_end":55711,"line_start":404,"line_end":404,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56015,"byte_end":56036,"line_start":416,"line_end":416,"column_start":12,"column_end":33},"name":"to_srgba_unmultiplied","qualname":"<Rgba>::to_srgba_unmultiplied","value":"fn to_srgba_unmultiplied<'_>(&'_ Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" unmultiply the alpha\n","sig":null,"attributes":[{"value":"/ unmultiply the alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":55979,"byte_end":56003,"line_start":415,"line_end":415,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56397,"byte_end":56400,"line_start":431,"line_end":431,"column_start":8,"column_end":11},"name":"add","qualname":"<Rgba as std::ops::Add>::add","value":"fn add(Self, Rgba) -> Rgba","parent":{"krate":2,"index":3336},"children":[],"decl_id":{"krate":2,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56372,"byte_end":56389,"line_start":430,"line_end":430,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56673,"byte_end":56676,"line_start":445,"line_end":445,"column_start":8,"column_end":11},"name":"mul","qualname":"<Rgba as std::ops::Mul>::mul","value":"fn mul(Self, Rgba) -> Rgba","parent":{"krate":2,"index":3346},"children":[],"decl_id":{"krate":2,"index":3349},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56648,"byte_end":56665,"line_start":444,"line_end":444,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56958,"byte_end":56961,"line_start":459,"line_end":459,"column_start":8,"column_end":11},"name":"mul","qualname":"<Rgba as std::ops::Mul>::mul","value":"fn mul(Self, f32) -> Rgba","parent":{"krate":2,"index":3346},"children":[],"decl_id":{"krate":2,"index":3349},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56933,"byte_end":56950,"line_start":458,"line_end":458,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":57235,"byte_end":57238,"line_start":473,"line_end":473,"column_start":8,"column_end":11},"name":"mul","qualname":"<f32 as std::ops::Mul>::mul","value":"fn mul(Self, Rgba) -> Rgba","parent":{"krate":2,"index":3346},"children":[],"decl_id":{"krate":2,"index":3349},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":57210,"byte_end":57227,"line_start":472,"line_end":472,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":57553,"byte_end":57557,"line_start":487,"line_end":487,"column_start":8,"column_end":12},"name":"from","qualname":"<Rgba as std::convert::From>::from","value":"fn from(Color32) -> Rgba","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":57857,"byte_end":57861,"line_start":498,"line_end":498,"column_start":8,"column_end":12},"name":"from","qualname":"<Color32 as std::convert::From>::from","value":"fn from(Rgba) -> Color32","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58166,"byte_end":58190,"line_start":509,"line_end":509,"column_start":8,"column_end":32},"name":"linear_f32_from_gamma_u8","qualname":"::color::linear_f32_from_gamma_u8","value":"fn linear_f32_from_gamma_u8(u8) -> f32","parent":null,"children":[],"decl_id":null,"docs":" gamma [0, 255] -> linear [0, 1].\n","sig":null,"attributes":[{"value":"/ gamma [0, 255] -> linear [0, 1].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58122,"byte_end":58158,"line_start":508,"line_end":508,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58415,"byte_end":58440,"line_start":520,"line_end":520,"column_start":8,"column_end":33},"name":"linear_f32_from_linear_u8","qualname":"::color::linear_f32_from_linear_u8","value":"fn linear_f32_from_linear_u8(u8) -> f32","parent":null,"children":[],"decl_id":null,"docs":" linear [0, 255] -> linear [0, 1].\n Useful for alpha-channel.\n","sig":null,"attributes":[{"value":"/ linear [0, 255] -> linear [0, 1].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58322,"byte_end":58359,"line_start":517,"line_end":517,"column_start":1,"column_end":38}},{"value":"/ Useful for alpha-channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58360,"byte_end":58389,"line_start":518,"line_end":518,"column_start":1,"column_end":30}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58390,"byte_end":58407,"line_start":519,"line_end":519,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58595,"byte_end":58619,"line_start":526,"line_end":526,"column_start":8,"column_end":32},"name":"gamma_u8_from_linear_f32","qualname":"::color::gamma_u8_from_linear_f32","value":"fn gamma_u8_from_linear_f32(f32) -> u8","parent":null,"children":[],"decl_id":null,"docs":" linear [0, 1] -> gamma [0, 255] (clamped).\n Values outside this range will be clamped to the range.\n","sig":null,"attributes":[{"value":"/ linear [0, 1] -> gamma [0, 255] (clamped).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58481,"byte_end":58527,"line_start":524,"line_end":524,"column_start":1,"column_end":47}},{"value":"/ Values outside this range will be clamped to the range.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58528,"byte_end":58587,"line_start":525,"line_end":525,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58945,"byte_end":58970,"line_start":541,"line_end":541,"column_start":8,"column_end":33},"name":"linear_u8_from_linear_f32","qualname":"::color::linear_u8_from_linear_f32","value":"fn linear_u8_from_linear_f32(f32) -> u8","parent":null,"children":[],"decl_id":null,"docs":" linear [0, 1] -> linear [0, 255] (clamped).\n Useful for alpha-channel.\n","sig":null,"attributes":[{"value":"/ linear [0, 1] -> linear [0, 255] (clamped).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58842,"byte_end":58889,"line_start":538,"line_end":538,"column_start":1,"column_end":48}},{"value":"/ Useful for alpha-channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58890,"byte_end":58919,"line_start":539,"line_end":539,"column_start":1,"column_end":30}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":58920,"byte_end":58937,"line_start":540,"line_end":540,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":59449,"byte_end":59466,"line_start":560,"line_end":560,"column_start":8,"column_end":25},"name":"linear_from_gamma","qualname":"::color::linear_from_gamma","value":"fn linear_from_gamma(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" gamma [0, 1] -> linear [0, 1] (not clamped).\n Works for numbers outside this range (e.g. negative numbers).\n","sig":null,"attributes":[{"value":"/ gamma [0, 1] -> linear [0, 1] (not clamped).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":59327,"byte_end":59375,"line_start":558,"line_end":558,"column_start":1,"column_end":49}},{"value":"/ Works for numbers outside this range (e.g. negative numbers).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":59376,"byte_end":59441,"line_start":559,"line_end":559,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":59787,"byte_end":59804,"line_start":572,"line_end":572,"column_start":8,"column_end":25},"name":"gamma_from_linear","qualname":"::color::gamma_from_linear","value":"fn gamma_from_linear(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" linear [0, 1] -> gamma [0, 1] (not clamped).\n Works for numbers outside this range (e.g. negative numbers).\n","sig":null,"attributes":[{"value":"/ linear [0, 1] -> gamma [0, 1] (not clamped).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":59665,"byte_end":59713,"line_start":570,"line_end":570,"column_start":1,"column_end":49}},{"value":"/ Works for numbers outside this range (e.g. negative numbers).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":59714,"byte_end":59779,"line_start":571,"line_end":571,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60243,"byte_end":60247,"line_start":587,"line_end":587,"column_start":12,"column_end":16},"name":"Hsva","qualname":"::color::Hsva","value":"Hsva { h, s, v, a }","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787}],"decl_id":null,"docs":" Hue, saturation, value, alpha. All in the range [0, 1].\n No premultiplied alpha.\n","sig":null,"attributes":[{"value":"/ Hue, saturation, value, alpha. All in the range [0, 1].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60094,"byte_end":60153,"line_start":584,"line_end":584,"column_start":1,"column_end":60}},{"value":"/ No premultiplied alpha.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60154,"byte_end":60181,"line_start":585,"line_end":585,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1784},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60274,"byte_end":60275,"line_start":589,"line_end":589,"column_start":9,"column_end":10},"name":"h","qualname":"::color::Hsva::h","value":"f32","parent":{"krate":0,"index":1783},"children":[],"decl_id":null,"docs":" hue 0-1\n","sig":null,"attributes":[{"value":"/ hue 0-1","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60254,"byte_end":60265,"line_start":588,"line_end":588,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60314,"byte_end":60315,"line_start":592,"line_end":592,"column_start":9,"column_end":10},"name":"s","qualname":"::color::Hsva::s","value":"f32","parent":{"krate":0,"index":1783},"children":[],"decl_id":null,"docs":" saturation 0-1\n","sig":null,"attributes":[{"value":"/ saturation 0-1","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60287,"byte_end":60305,"line_start":591,"line_end":591,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60349,"byte_end":60350,"line_start":595,"line_end":595,"column_start":9,"column_end":10},"name":"v","qualname":"::color::Hsva::v","value":"f32","parent":{"krate":0,"index":1783},"children":[],"decl_id":null,"docs":" value 0-1\n","sig":null,"attributes":[{"value":"/ value 0-1","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60327,"byte_end":60340,"line_start":594,"line_end":594,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1787},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60454,"byte_end":60455,"line_start":598,"line_end":598,"column_start":9,"column_end":10},"name":"a","qualname":"::color::Hsva::a","value":"f32","parent":{"krate":0,"index":1783},"children":[],"decl_id":null,"docs":" alpha 0-1. A negative value signifies an additive color (and alpha is ignored).\n","sig":null,"attributes":[{"value":"/ alpha 0-1. A negative value signifies an additive color (and alpha is ignored).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60362,"byte_end":60445,"line_start":597,"line_end":597,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60488,"byte_end":60491,"line_start":602,"line_end":602,"column_start":12,"column_end":15},"name":"new","qualname":"<Hsva>::new","value":"fn new(f32, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60626,"byte_end":60650,"line_start":607,"line_end":607,"column_start":12,"column_end":36},"name":"from_srgba_premultiplied","qualname":"<Hsva>::from_srgba_premultiplied","value":"fn from_srgba_premultiplied([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From `sRGBA` with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ From `sRGBA` with premultiplied alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60573,"byte_end":60614,"line_start":606,"line_end":606,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60986,"byte_end":61009,"line_start":617,"line_end":617,"column_start":12,"column_end":35},"name":"from_srgba_unmultiplied","qualname":"<Hsva>::from_srgba_unmultiplied","value":"fn from_srgba_unmultiplied([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From `sRGBA` without premultiplied alpha\n","sig":null,"attributes":[{"value":"/ From `sRGBA` without premultiplied alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60930,"byte_end":60974,"line_start":616,"line_end":616,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":61345,"byte_end":61368,"line_start":627,"line_end":627,"column_start":12,"column_end":35},"name":"from_rgba_premultiplied","qualname":"<Hsva>::from_rgba_premultiplied","value":"fn from_rgba_premultiplied(f32, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From linear RGBA with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ From linear RGBA with premultiplied alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":61288,"byte_end":61333,"line_start":626,"line_end":626,"column_start":5,"column_end":50}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":61419,"byte_end":61460,"line_start":628,"line_end":628,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":61846,"byte_end":61868,"line_start":642,"line_end":642,"column_start":12,"column_end":34},"name":"from_rgba_unmultiplied","qualname":"<Hsva>::from_rgba_unmultiplied","value":"fn from_rgba_unmultiplied(f32, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From linear RGBA without premultiplied alpha\n","sig":null,"attributes":[{"value":"/ From linear RGBA without premultiplied alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":61786,"byte_end":61834,"line_start":641,"line_end":641,"column_start":5,"column_end":53}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":61919,"byte_end":61960,"line_start":643,"line_end":643,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":62056,"byte_end":62073,"line_start":648,"line_end":648,"column_start":12,"column_end":29},"name":"from_additive_rgb","qualname":"<Hsva>::from_additive_rgb","value":"fn from_additive_rgb([f32; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":62295,"byte_end":62303,"line_start":658,"line_end":658,"column_start":12,"column_end":20},"name":"from_rgb","qualname":"<Hsva>::from_rgb","value":"fn from_rgb([f32; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":62423,"byte_end":62432,"line_start":663,"line_end":663,"column_start":12,"column_end":21},"name":"from_srgb","qualname":"<Hsva>::from_srgb","value":"fn from_srgb([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":62721,"byte_end":62730,"line_start":673,"line_end":673,"column_start":12,"column_end":21},"name":"to_opaque","qualname":"<Hsva>::to_opaque","value":"fn to_opaque(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":62797,"byte_end":62803,"line_start":677,"line_end":677,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<Hsva>::to_rgb","value":"fn to_rgb<'_>(&'_ Self) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":62890,"byte_end":62897,"line_start":681,"line_end":681,"column_start":12,"column_end":19},"name":"to_srgb","qualname":"<Hsva>::to_srgb","value":"fn to_srgb<'_>(&'_ Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":63118,"byte_end":63139,"line_start":690,"line_end":690,"column_start":12,"column_end":33},"name":"to_rgba_premultiplied","qualname":"<Hsva>::to_rgba_premultiplied","value":"fn to_rgba_premultiplied<'_>(&'_ Self) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":63439,"byte_end":63459,"line_start":701,"line_end":701,"column_start":12,"column_end":32},"name":"to_rgba_unmultiplied","qualname":"<Hsva>::to_rgba_unmultiplied","value":"fn to_rgba_unmultiplied<'_>(&'_ Self) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":" Represents additive colors using a negative alpha.\n","sig":null,"attributes":[{"value":"/ Represents additive colors using a negative alpha.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":63373,"byte_end":63427,"line_start":700,"line_end":700,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":63610,"byte_end":63632,"line_start":707,"line_end":707,"column_start":12,"column_end":34},"name":"to_srgba_premultiplied","qualname":"<Hsva>::to_srgba_premultiplied","value":"fn to_srgba_premultiplied<'_>(&'_ Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":63913,"byte_end":63934,"line_start":717,"line_end":717,"column_start":12,"column_end":33},"name":"to_srgba_unmultiplied","qualname":"<Hsva>::to_srgba_unmultiplied","value":"fn to_srgba_unmultiplied<'_>(&'_ Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64245,"byte_end":64249,"line_start":729,"line_end":729,"column_start":8,"column_end":12},"name":"from","qualname":"<Rgba as std::convert::From>::from","value":"fn from(Hsva) -> Rgba","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64358,"byte_end":64362,"line_start":735,"line_end":735,"column_start":8,"column_end":12},"name":"from","qualname":"<Hsva as std::convert::From>::from","value":"fn from(Rgba) -> Hsva","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64513,"byte_end":64517,"line_start":741,"line_end":741,"column_start":8,"column_end":12},"name":"from","qualname":"<Color32 as std::convert::From>::from","value":"fn from(Hsva) -> Color32","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64629,"byte_end":64633,"line_start":747,"line_end":747,"column_start":8,"column_end":12},"name":"from","qualname":"<Hsva as std::convert::From>::from","value":"fn from(Color32) -> Hsva","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64752,"byte_end":64764,"line_start":753,"line_end":753,"column_start":8,"column_end":20},"name":"hsv_from_rgb","qualname":"::color::hsv_from_rgb","value":"fn hsv_from_rgb([f32; ]) -> (f32, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" All ranges in 0-1, rgb is linear.\n","sig":null,"attributes":[{"value":"/ All ranges in 0-1, rgb is linear.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64707,"byte_end":64744,"line_start":752,"line_end":752,"column_start":1,"column_end":38}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64811,"byte_end":64852,"line_start":754,"line_end":754,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":65386,"byte_end":65398,"line_start":776,"line_end":776,"column_start":8,"column_end":20},"name":"rgb_from_hsv","qualname":"::color::rgb_from_hsv","value":"fn rgb_from_hsv((f32, f32, f32)) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":" All ranges in 0-1, rgb is linear.\n","sig":null,"attributes":[{"value":"/ All ranges in 0-1, rgb is linear.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":65341,"byte_end":65378,"line_start":775,"line_end":775,"column_start":1,"column_end":38}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":65445,"byte_end":65486,"line_start":777,"line_end":777,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66523,"byte_end":66532,"line_start":816,"line_end":816,"column_start":12,"column_end":21},"name":"HsvaGamma","qualname":"::color::HsvaGamma","value":"HsvaGamma { h, s, v, a }","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803}],"decl_id":null,"docs":" Like Hsva but with the `v` value (brightness) being gamma corrected\n so that it is somewhat perceptually even.\n","sig":null,"attributes":[{"value":"/ Like Hsva but with the `v` value (brightness) being gamma corrected","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66344,"byte_end":66415,"line_start":813,"line_end":813,"column_start":1,"column_end":72}},{"value":"/ so that it is somewhat perceptually even.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66416,"byte_end":66461,"line_start":814,"line_end":814,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66559,"byte_end":66560,"line_start":818,"line_end":818,"column_start":9,"column_end":10},"name":"h","qualname":"::color::HsvaGamma::h","value":"f32","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" hue 0-1\n","sig":null,"attributes":[{"value":"/ hue 0-1","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66539,"byte_end":66550,"line_start":817,"line_end":817,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":1801},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66599,"byte_end":66600,"line_start":821,"line_end":821,"column_start":9,"column_end":10},"name":"s","qualname":"::color::HsvaGamma::s","value":"f32","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" saturation 0-1\n","sig":null,"attributes":[{"value":"/ saturation 0-1","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66572,"byte_end":66590,"line_start":820,"line_end":820,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66671,"byte_end":66672,"line_start":824,"line_end":824,"column_start":9,"column_end":10},"name":"v","qualname":"::color::HsvaGamma::v","value":"f32","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" value 0-1, in gamma-space (~perceptually even)\n","sig":null,"attributes":[{"value":"/ value 0-1, in gamma-space (~perceptually even)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66612,"byte_end":66662,"line_start":823,"line_end":823,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1803},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66776,"byte_end":66777,"line_start":827,"line_end":827,"column_start":9,"column_end":10},"name":"a","qualname":"::color::HsvaGamma::a","value":"f32","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" alpha 0-1. A negative value signifies an additive color (and alpha is ignored).\n","sig":null,"attributes":[{"value":"/ alpha 0-1. A negative value signifies an additive color (and alpha is ignored).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66684,"byte_end":66767,"line_start":826,"line_end":826,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66826,"byte_end":66830,"line_start":831,"line_end":831,"column_start":8,"column_end":12},"name":"from","qualname":"<Rgba as std::convert::From>::from","value":"fn from(HsvaGamma) -> Rgba","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66943,"byte_end":66947,"line_start":837,"line_end":837,"column_start":8,"column_end":12},"name":"from","qualname":"<Color32 as std::convert::From>::from","value":"fn from(HsvaGamma) -> Color32","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67060,"byte_end":67064,"line_start":843,"line_end":843,"column_start":8,"column_end":12},"name":"from","qualname":"<Hsva as std::convert::From>::from","value":"fn from(HsvaGamma) -> Hsva","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67294,"byte_end":67298,"line_start":855,"line_end":855,"column_start":8,"column_end":12},"name":"from","qualname":"<HsvaGamma as std::convert::From>::from","value":"fn from(Rgba) -> HsvaGamma","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67409,"byte_end":67413,"line_start":861,"line_end":861,"column_start":8,"column_end":12},"name":"from","qualname":"<HsvaGamma as std::convert::From>::from","value":"fn from(Color32) -> HsvaGamma","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67526,"byte_end":67530,"line_start":867,"line_end":867,"column_start":8,"column_end":12},"name":"from","qualname":"<HsvaGamma as std::convert::From>::from","value":"fn from(Hsva) -> HsvaGamma","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67868,"byte_end":67886,"line_start":882,"line_end":882,"column_start":8,"column_end":26},"name":"tint_color_towards","qualname":"::color::tint_color_towards","value":"fn tint_color_towards(Color32, Color32) -> Color32","parent":null,"children":[],"decl_id":null,"docs":" Cheap and ugly.\n Made for graying out disabled `Ui`s.\n","sig":null,"attributes":[{"value":"/ Cheap and ugly.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67800,"byte_end":67819,"line_start":880,"line_end":880,"column_start":1,"column_end":20}},{"value":"/ Made for graying out disabled `Ui`s.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67820,"byte_end":67860,"line_start":881,"line_end":881,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"image","qualname":"::image","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":1821},{"krate":0,"index":1828},{"krate":0,"index":1867},{"krate":0,"index":1815},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":258},{"krate":0,"index":1881},{"krate":0,"index":1885},{"krate":0,"index":1931},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":264},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":1945},{"krate":0,"index":1949},{"krate":0,"index":1995},{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":280},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":2007},{"krate":0,"index":2012},{"krate":0,"index":2060},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":299}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73397,"byte_end":73402,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Color","qualname":"::image::ImageData::Color","value":"ImageData::Color(ColorImage)","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":" RGBA image.\n","sig":null,"attributes":[{"value":"/ RGBA image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73377,"byte_end":73392,"line_start":13,"line_end":13,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":1824},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73403,"byte_end":73413,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"name":"0","qualname":"::image::ImageData::Color::0","value":"image::ColorImage","parent":{"krate":0,"index":1822},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1825},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73456,"byte_end":73460,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Font","qualname":"::image::ImageData::Font","value":"ImageData::Font(FontImage)","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":" Used for the font texture.\n","sig":null,"attributes":[{"value":"/ Used for the font texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73421,"byte_end":73451,"line_start":16,"line_end":16,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73461,"byte_end":73470,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"0","qualname":"::image::ImageData::Font::0","value":"image::FontImage","parent":{"krate":0,"index":1825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73361,"byte_end":73370,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"ImageData","qualname":"::image::ImageData","value":"enum ImageData { Color(ColorImage), Font(FontImage), }","parent":null,"children":[{"krate":0,"index":1822},{"krate":0,"index":1825}],"decl_id":null,"docs":" An image stored in RAM.","sig":null,"attributes":[{"value":"/ An image stored in RAM.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73016,"byte_end":73043,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73044,"byte_end":73047,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ To load an image file, see [`ColorImage::from_rgba_unmultiplied`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73048,"byte_end":73118,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73119,"byte_end":73122,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ In order to paint the image on screen, you first need to convert it to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73123,"byte_end":73197,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73198,"byte_end":73201,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See also: [`ColorImage`], [`FontImage`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73202,"byte_end":73246,"line_start":9,"line_end":9,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73504,"byte_end":73508,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"size","qualname":"<ImageData>::size","value":"fn size<'_>(&'_ Self) -> [usize; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73672,"byte_end":73677,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageData>::width","value":"fn width<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73737,"byte_end":73743,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageData>::height","value":"fn height<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73803,"byte_end":73818,"line_start":36,"line_end":36,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ImageData>::bytes_per_pixel","value":"fn bytes_per_pixel<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1881},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74166,"byte_end":74176,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"ColorImage","qualname":"::image::ColorImage","value":"ColorImage { size, pixels }","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1884}],"decl_id":null,"docs":" A 2D RGBA color image in RAM.\n","sig":null,"attributes":[{"value":"/ A 2D RGBA color image in RAM.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74007,"byte_end":74040,"line_start":45,"line_end":45,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1882},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74210,"byte_end":74214,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"name":"size","qualname":"::image::ColorImage::size","value":"[usize; 2]","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":" width, height.\n","sig":null,"attributes":[{"value":"/ width, height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74183,"byte_end":74201,"line_start":49,"line_end":49,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1884},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74289,"byte_end":74295,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"pixels","qualname":"::image::ColorImage::pixels","value":"std::vec::Vec<color::Color32>","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":" The pixels, row by row, from top to bottom.\n","sig":null,"attributes":[{"value":"/ The pixels, row by row, from top to bottom.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74233,"byte_end":74280,"line_start":52,"line_end":52,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74396,"byte_end":74399,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<ColorImage>::new","value":"fn new([usize; ], Color32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an image filled with the given color.\n","sig":null,"attributes":[{"value":"/ Create an image filled with the given color.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74336,"byte_end":74384,"line_start":57,"line_end":57,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75839,"byte_end":75861,"line_start":95,"line_end":95,"column_start":12,"column_end":34},"name":"from_rgba_unmultiplied","qualname":"<ColorImage>::from_rgba_unmultiplied","value":"fn from_rgba_unmultiplied<'_>([usize; ], &'_ [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a [`ColorImage`] from flat un-multiplied RGBA data.","sig":null,"attributes":[{"value":"/ Create a [`ColorImage`] from flat un-multiplied RGBA data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74550,"byte_end":74612,"line_start":65,"line_end":65,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74617,"byte_end":74620,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This is usually what you want to use after having loaded an image file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74625,"byte_end":74700,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74705,"byte_end":74708,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Panics if `size[0] * size[1] * 4 != rgba.len()`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74713,"byte_end":74765,"line_start":69,"line_end":69,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74770,"byte_end":74773,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ## Example using the [`image`](crates.io/crates/image) crate:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74778,"byte_end":74843,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/ ``` ignore","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74848,"byte_end":74862,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/ fn load_image_from_path(path: &std::path::Path) -> Result<egui::ColorImage, image::ImageError> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74867,"byte_end":74967,"line_start":73,"line_end":73,"column_start":5,"column_end":105}},{"value":"/     let image = image::io::Reader::open(path)?.decode()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74972,"byte_end":75033,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/     let size = [image.width() as _, image.height() as _];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75038,"byte_end":75099,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/     let image_buffer = image.to_rgba8();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75104,"byte_end":75148,"line_start":76,"line_end":76,"column_start":5,"column_end":49}},{"value":"/     let pixels = image_buffer.as_flat_samples();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75153,"byte_end":75205,"line_start":77,"line_end":77,"column_start":5,"column_end":57}},{"value":"/     Ok(egui::ColorImage::from_rgba_unmultiplied(","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75210,"byte_end":75262,"line_start":78,"line_end":78,"column_start":5,"column_end":57}},{"value":"/         size,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75267,"byte_end":75284,"line_start":79,"line_end":79,"column_start":5,"column_end":22}},{"value":"/         pixels.as_slice(),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75289,"byte_end":75319,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/     ))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75324,"byte_end":75334,"line_start":81,"line_end":81,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75339,"byte_end":75344,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75349,"byte_end":75352,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ fn load_image_from_memory(image_data: &[u8]) -> Result<ColorImage, image::ImageError> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75357,"byte_end":75448,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/     let image = image::load_from_memory(image_data)?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75453,"byte_end":75510,"line_start":85,"line_end":85,"column_start":5,"column_end":62}},{"value":"/     let size = [image.width() as _, image.height() as _];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75515,"byte_end":75576,"line_start":86,"line_end":86,"column_start":5,"column_end":66}},{"value":"/     let image_buffer = image.to_rgba8();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75581,"byte_end":75625,"line_start":87,"line_end":87,"column_start":5,"column_end":49}},{"value":"/     let pixels = image_buffer.as_flat_samples();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75630,"byte_end":75682,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/     Ok(ColorImage::from_rgba_unmultiplied(","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75687,"byte_end":75733,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/         size,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75738,"byte_end":75755,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/         pixels.as_slice(),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75760,"byte_end":75790,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/     ))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75795,"byte_end":75805,"line_start":92,"line_end":92,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75810,"byte_end":75815,"line_start":93,"line_end":93,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":75820,"byte_end":75827,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":76213,"byte_end":76220,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"example","qualname":"<ColorImage>::example","value":"fn example() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An example color image, useful for tests.\n","sig":null,"attributes":[{"value":"/ An example color image, useful for tests.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":76156,"byte_end":76201,"line_start":104,"line_end":104,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":76713,"byte_end":76718,"line_start":122,"line_end":122,"column_start":12,"column_end":17},"name":"width","qualname":"<ColorImage>::width","value":"fn width<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":76692,"byte_end":76701,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":76790,"byte_end":76796,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"height","qualname":"<ColorImage>::height","value":"fn height<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":76769,"byte_end":76778,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":76948,"byte_end":76953,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"index","qualname":"<ColorImage as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, (usize, usize)) -> &'_ Color32","parent":{"krate":2,"index":3576},"children":[],"decl_id":{"krate":2,"index":3579},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":76931,"byte_end":76940,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77183,"byte_end":77192,"line_start":145,"line_end":145,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<ColorImage as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, (usize, usize)) -> &'_ mut Color32","parent":{"krate":2,"index":3580},"children":[],"decl_id":{"krate":2,"index":3582},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77166,"byte_end":77175,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77423,"byte_end":77427,"line_start":154,"line_end":154,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageData as std::convert::From>::from","value":"fn from(ColorImage) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77398,"byte_end":77415,"line_start":153,"line_end":153,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77917,"byte_end":77926,"line_start":168,"line_end":168,"column_start":12,"column_end":21},"name":"FontImage","qualname":"::image::FontImage","value":"FontImage { size, pixels }","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1948}],"decl_id":null,"docs":" A single-channel image designed for the font texture.","sig":null,"attributes":[{"value":"/ A single-channel image designed for the font texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77574,"byte_end":77631,"line_start":161,"line_end":161,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77632,"byte_end":77635,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Each value represents \"coverage\", i.e. how much a texel is covered by a character.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77636,"byte_end":77722,"line_start":163,"line_end":163,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77723,"byte_end":77726,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ This is roughly interpreted as the opacity of a white image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77727,"byte_end":77791,"line_start":165,"line_end":165,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77959,"byte_end":77963,"line_start":170,"line_end":170,"column_start":9,"column_end":13},"name":"size","qualname":"::image::FontImage::size","value":"[usize; 2]","parent":{"krate":0,"index":1945},"children":[],"decl_id":null,"docs":" width, height\n","sig":null,"attributes":[{"value":"/ width, height","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77933,"byte_end":77950,"line_start":169,"line_end":169,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1948},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78084,"byte_end":78090,"line_start":175,"line_end":175,"column_start":9,"column_end":15},"name":"pixels","qualname":"::image::FontImage::pixels","value":"std::vec::Vec<f32>","parent":{"krate":0,"index":1945},"children":[],"decl_id":null,"docs":" The coverage value.","sig":null,"attributes":[{"value":"/ The coverage value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77982,"byte_end":78005,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78010,"byte_end":78013,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ Often you want to use [`Self::srgba_pixels`] instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78018,"byte_end":78075,"line_start":174,"line_end":174,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78133,"byte_end":78136,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"new","qualname":"<FontImage>::new","value":"fn new([usize; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78290,"byte_end":78295,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"width","qualname":"<FontImage>::width","value":"fn width<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78269,"byte_end":78278,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78367,"byte_end":78373,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"height","qualname":"<FontImage>::height","value":"fn height<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78346,"byte_end":78355,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78697,"byte_end":78709,"line_start":201,"line_end":201,"column_start":12,"column_end":24},"name":"srgba_pixels","qualname":"<FontImage>::srgba_pixels","value":"fn srgba_pixels<'_>(&'_ Self, f32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the textures as `sRGBA` premultiplied pixels, row by row, top to bottom.","sig":null,"attributes":[{"value":"/ Returns the textures as `sRGBA` premultiplied pixels, row by row, top to bottom.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78424,"byte_end":78508,"line_start":196,"line_end":196,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78513,"byte_end":78516,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ `gamma` should normally be set to 1.0.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78521,"byte_end":78563,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/ If you are having problems with text looking skinny and pixelated, try","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78568,"byte_end":78642,"line_start":199,"line_end":199,"column_start":5,"column_end":79}},{"value":"/ setting a lower gamma, e.g. `0.5`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78647,"byte_end":78685,"line_start":200,"line_end":200,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":79335,"byte_end":79341,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"region","qualname":"<FontImage>::region","value":"fn region<'_>(&'_ Self, [usize; ], [usize; ]) -> FontImage","parent":null,"children":[],"decl_id":null,"docs":" Clone a sub-region as a new image.\n","sig":null,"attributes":[{"value":"/ Clone a sub-region as a new image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":79285,"byte_end":79323,"line_start":212,"line_end":212,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":79910,"byte_end":79915,"line_start":234,"line_end":234,"column_start":8,"column_end":13},"name":"index","qualname":"<FontImage as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, (usize, usize)) -> &'_ f32","parent":{"krate":2,"index":3576},"children":[],"decl_id":{"krate":2,"index":3579},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":79893,"byte_end":79902,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80140,"byte_end":80149,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<FontImage as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, (usize, usize)) -> &'_ mut f32","parent":{"krate":2,"index":3580},"children":[],"decl_id":{"krate":2,"index":3582},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80123,"byte_end":80132,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80375,"byte_end":80379,"line_start":252,"line_end":252,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageData as std::convert::From>::from","value":"fn from(FontImage) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80350,"byte_end":80367,"line_start":251,"line_end":251,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2007},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80897,"byte_end":80907,"line_start":269,"line_end":269,"column_start":12,"column_end":22},"name":"ImageDelta","qualname":"::image::ImageDelta","value":"ImageDelta { image, filter, pos }","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010}],"decl_id":null,"docs":" A change to an image.","sig":null,"attributes":[{"value":"/ A change to an image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80626,"byte_end":80651,"line_start":263,"line_end":263,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80652,"byte_end":80655,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Either a whole new image, or an update to a rectangular region of it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80656,"byte_end":80729,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"must_use = \"The painter must take care of this\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80835,"byte_end":80885,"line_start":268,"line_end":268,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2008},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81145,"byte_end":81150,"line_start":275,"line_end":275,"column_start":9,"column_end":14},"name":"image","qualname":"::image::ImageDelta::image","value":"image::ImageData","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" What to set the texture to.","sig":null,"attributes":[{"value":"/ What to set the texture to.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80914,"byte_end":80945,"line_start":270,"line_end":270,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80950,"byte_end":80953,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ If [`Self::pos`] is `None`, this describes the whole texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80958,"byte_end":81023,"line_start":272,"line_end":272,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81028,"byte_end":81031,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If [`Self::pos`] is `Some`, this describes a patch of the whole image starting at [`Self::pos`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81036,"byte_end":81136,"line_start":274,"line_end":274,"column_start":5,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":2009},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81172,"byte_end":81178,"line_start":277,"line_end":277,"column_start":9,"column_end":15},"name":"filter","qualname":"::image::ImageDelta::filter","value":"textures::TextureFilter","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2010},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81384,"byte_end":81387,"line_start":282,"line_end":282,"column_start":9,"column_end":12},"name":"pos","qualname":"::image::ImageDelta::pos","value":"std::option::Option<[usize; 2]>","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" If `None`, set the whole texture to [`Self::image`].","sig":null,"attributes":[{"value":"/ If `None`, set the whole texture to [`Self::image`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81200,"byte_end":81256,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81261,"byte_end":81264,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ If `Some(pos)`, update a sub-region of an already allocated texture with the patch in [`Self::image`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81269,"byte_end":81375,"line_start":281,"line_end":281,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81475,"byte_end":81479,"line_start":287,"line_end":287,"column_start":12,"column_end":16},"name":"full","qualname":"<ImageDelta>::full","value":"fn full<impl Into<ImageData>>(impl Into<ImageData>, TextureFilter) -> Self\nwhere impl Into<ImageData>: Into<ImageData>","parent":null,"children":[],"decl_id":null,"docs":" Update the whole texture.\n","sig":null,"attributes":[{"value":"/ Update the whole texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81434,"byte_end":81463,"line_start":286,"line_end":286,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81713,"byte_end":81720,"line_start":296,"line_end":296,"column_start":12,"column_end":19},"name":"partial","qualname":"<ImageDelta>::partial","value":"fn partial<impl Into<ImageData>>([usize; ], impl Into<ImageData>,\nTextureFilter) -> Self where impl Into<ImageData>: Into<ImageData>","parent":null,"children":[],"decl_id":null,"docs":" Update a sub-region of an existing texture.\n","sig":null,"attributes":[{"value":"/ Update a sub-region of an existing texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81654,"byte_end":81701,"line_start":295,"line_end":295,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":82028,"byte_end":82036,"line_start":306,"line_end":306,"column_start":12,"column_end":20},"name":"is_whole","qualname":"<ImageDelta>::is_whole","value":"fn is_whole<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this affecting the whole texture?\n If `false`, this is a partial (sub-region) update.\n","sig":null,"attributes":[{"value":"/ Is this affecting the whole texture?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81917,"byte_end":81957,"line_start":304,"line_end":304,"column_start":5,"column_end":45}},{"value":"/ If `false`, this is a partial (sub-region) update.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81962,"byte_end":82016,"line_start":305,"line_end":305,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82418,"byte_end":82424,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Vertex","qualname":"::mesh::Vertex","value":"Vertex { pos, uv, color }","parent":null,"children":[{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131}],"decl_id":null,"docs":" The 2D vertex type.","sig":null,"attributes":[{"value":"/ The 2D vertex type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82119,"byte_end":82142,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82143,"byte_end":82146,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Should be friendly to send to GPU as is.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82147,"byte_end":82191,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82192,"byte_end":82202,"line_start":7,"line_end":7,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82531,"byte_end":82534,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"name":"pos","qualname":"::mesh::Vertex::pos","value":"emath::Pos2","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Logical pixel coordinates (points).\n (0,0) is the top left corner of the screen.\n","sig":null,"attributes":[{"value":"/ Logical pixel coordinates (points).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82431,"byte_end":82470,"line_start":12,"line_end":12,"column_start":5,"column_end":44}},{"value":"/ (0,0) is the top left corner of the screen.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82475,"byte_end":82522,"line_start":13,"line_end":13,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82713,"byte_end":82715,"line_start":19,"line_end":19,"column_start":9,"column_end":11},"name":"uv","qualname":"::mesh::Vertex::uv","value":"emath::Pos2","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Normalized texture coordinates.\n (0, 0) is the top left corner of the texture.\n (1, 1) is the bottom right corner of the texture.\n","sig":null,"attributes":[{"value":"/ Normalized texture coordinates.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82557,"byte_end":82592,"line_start":16,"line_end":16,"column_start":5,"column_end":40}},{"value":"/ (0, 0) is the top left corner of the texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82597,"byte_end":82646,"line_start":17,"line_end":17,"column_start":5,"column_end":54}},{"value":"/ (1, 1) is the bottom right corner of the texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82651,"byte_end":82704,"line_start":18,"line_end":18,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82781,"byte_end":82786,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"color","qualname":"::mesh::Vertex::color","value":"color::Color32","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" sRGBA with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ sRGBA with premultiplied alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82738,"byte_end":82772,"line_start":21,"line_end":21,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2180},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82984,"byte_end":82988,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"Mesh","qualname":"::mesh::Mesh","value":"Mesh { indices, vertices, texture_id }","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183}],"decl_id":null,"docs":" Textured triangles in two dimensions.\n","sig":null,"attributes":[{"value":"/ Textured triangles in two dimensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82810,"byte_end":82851,"line_start":25,"line_end":25,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83261,"byte_end":83268,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"indices","qualname":"::mesh::Mesh::indices","value":"std::vec::Vec<u32>","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" Draw as triangles (i.e. the length is always multiple of three).","sig":null,"attributes":[{"value":"/ Draw as triangles (i.e. the length is always multiple of three).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":82995,"byte_end":83063,"line_start":29,"line_end":29,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83068,"byte_end":83071,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ If you only support 16-bit indices you can use [`Mesh::split_to_u16`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83076,"byte_end":83150,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83155,"byte_end":83158,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ egui is NOT consistent with what winding order it uses, so turn off backface culling.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83163,"byte_end":83252,"line_start":33,"line_end":33,"column_start":5,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83335,"byte_end":83343,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"name":"vertices","qualname":"::mesh::Mesh::vertices","value":"std::vec::Vec<mesh::Vertex>","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" The vertex data indexed by `indices`.\n","sig":null,"attributes":[{"value":"/ The vertex data indexed by `indices`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83285,"byte_end":83326,"line_start":36,"line_end":36,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2183},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83424,"byte_end":83434,"line_start":40,"line_end":40,"column_start":9,"column_end":19},"name":"texture_id","qualname":"::mesh::Mesh::texture_id","value":"TextureId","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" The texture to use when drawing these triangles.\n","sig":null,"attributes":[{"value":"/ The texture to use when drawing these triangles.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83363,"byte_end":83415,"line_start":39,"line_end":39,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83512,"byte_end":83524,"line_start":45,"line_end":45,"column_start":12,"column_end":24},"name":"with_texture","qualname":"<Mesh>::with_texture","value":"fn with_texture(TextureId) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83720,"byte_end":83725,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"clear","qualname":"<Mesh>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Restore to default state, but without freeing memory.\n","sig":null,"attributes":[{"value":"/ Restore to default state, but without freeing memory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83651,"byte_end":83708,"line_start":52,"line_end":52,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83862,"byte_end":83872,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"bytes_used","qualname":"<Mesh>::bytes_used","value":"fn bytes_used<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":84142,"byte_end":84150,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Mesh>::is_valid","value":"fn is_valid<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are all indices within the bounds of the contained vertices?\n","sig":null,"attributes":[{"value":"/ Are all indices within the bounds of the contained vertices?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":84066,"byte_end":84130,"line_start":65,"line_end":65,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":84339,"byte_end":84347,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Mesh>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":84483,"byte_end":84494,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"calc_bounds","qualname":"<Mesh>::calc_bounds","value":"fn calc_bounds<'_>(&'_ Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Calculate a bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Calculate a bounding rectangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":84436,"byte_end":84471,"line_start":78,"line_end":78,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":84734,"byte_end":84740,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"append","qualname":"<Mesh>::append","value":"fn append<'_>(&'_ mut Self, Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Append all the indices and vertices of `other` to `self`.\n","sig":null,"attributes":[{"value":"/ Append all the indices and vertices of `other` to `self`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":84661,"byte_end":84722,"line_start":87,"line_end":87,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":85054,"byte_end":85064,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"append_ref","qualname":"<Mesh>::append_ref","value":"fn append_ref<'_, '_>(&'_ mut Self, &'_ Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Append all the indices and vertices of `other` to `self` without\n taking ownership.\n","sig":null,"attributes":[{"value":"/ Append all the indices and vertices of `other` to `self` without","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":84948,"byte_end":85016,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ taking ownership.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":85021,"byte_end":85042,"line_start":99,"line_end":99,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":85644,"byte_end":85658,"line_start":119,"line_end":119,"column_start":12,"column_end":26},"name":"colored_vertex","qualname":"<Mesh>::colored_vertex","value":"fn colored_vertex<'_>(&'_ mut Self, Pos2, Color32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":85615,"byte_end":85632,"line_start":118,"line_end":118,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":85945,"byte_end":85957,"line_start":130,"line_end":130,"column_start":12,"column_end":24},"name":"add_triangle","qualname":"<Mesh>::add_triangle","value":"fn add_triangle<'_>(&'_ mut Self, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Add a triangle.\n","sig":null,"attributes":[{"value":"/ Add a triangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":85892,"byte_end":85911,"line_start":128,"line_end":128,"column_start":5,"column_end":24}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":85916,"byte_end":85933,"line_start":129,"line_end":129,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":86250,"byte_end":86267,"line_start":139,"line_end":139,"column_start":12,"column_end":29},"name":"reserve_triangles","qualname":"<Mesh>::reserve_triangles","value":"fn reserve_triangles<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Make room for this many additional triangles (will reserve 3x as many indices).\n See also `reserve_vertices`.\n","sig":null,"attributes":[{"value":"/ Make room for this many additional triangles (will reserve 3x as many indices).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":86096,"byte_end":86179,"line_start":136,"line_end":136,"column_start":5,"column_end":88}},{"value":"/ See also `reserve_vertices`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":86184,"byte_end":86216,"line_start":137,"line_end":137,"column_start":5,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":86221,"byte_end":86238,"line_start":138,"line_end":138,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":86497,"byte_end":86513,"line_start":146,"line_end":146,"column_start":12,"column_end":28},"name":"reserve_vertices","qualname":"<Mesh>::reserve_vertices","value":"fn reserve_vertices<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Make room for this many additional vertices.\n See also `reserve_triangles`.\n","sig":null,"attributes":[{"value":"/ Make room for this many additional vertices.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":86377,"byte_end":86425,"line_start":143,"line_end":143,"column_start":5,"column_end":53}},{"value":"/ See also `reserve_triangles`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":86430,"byte_end":86463,"line_start":144,"line_end":144,"column_start":5,"column_end":38}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":86468,"byte_end":86485,"line_start":145,"line_end":145,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":86651,"byte_end":86667,"line_start":151,"line_end":151,"column_start":12,"column_end":28},"name":"add_rect_with_uv","qualname":"<Mesh>::add_rect_with_uv","value":"fn add_rect_with_uv<'_>(&'_ mut Self, Rect, Rect, Color32)","parent":null,"children":[],"decl_id":null,"docs":" Rectangle with a texture and color.\n","sig":null,"attributes":[{"value":"/ Rectangle with a texture and color.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":86600,"byte_end":86639,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":86727,"byte_end":86757,"line_start":152,"line_end":152,"column_start":9,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":87535,"byte_end":87551,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"add_colored_rect","qualname":"<Mesh>::add_colored_rect","value":"fn add_colored_rect<'_>(&'_ mut Self, Rect, Color32)","parent":null,"children":[],"decl_id":null,"docs":" Uniformly colored rectangle.\n","sig":null,"attributes":[{"value":"/ Uniformly colored rectangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":87469,"byte_end":87501,"line_start":180,"line_end":180,"column_start":5,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":87506,"byte_end":87523,"line_start":181,"line_end":181,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":87950,"byte_end":87962,"line_start":191,"line_end":191,"column_start":12,"column_end":24},"name":"split_to_u16","qualname":"<Mesh>::split_to_u16","value":"fn split_to_u16(Self) -> Vec<Mesh16>","parent":null,"children":[],"decl_id":null,"docs":" This is for platforms that only support 16-bit index buffers.","sig":null,"attributes":[{"value":"/ This is for platforms that only support 16-bit index buffers.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":87749,"byte_end":87814,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":87819,"byte_end":87822,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Splits this mesh into many smaller meshes (if needed)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":87827,"byte_end":87884,"line_start":189,"line_end":189,"column_start":5,"column_end":62}},{"value":"/ where the smaller meshes have 16-bit indices.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":87889,"byte_end":87938,"line_start":190,"line_end":190,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90034,"byte_end":90043,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"translate","qualname":"<Mesh>::translate","value":"fn translate<'_>(&'_ mut Self, Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Translate location by this much, in-place\n","sig":null,"attributes":[{"value":"/ Translate location by this much, in-place","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":89977,"byte_end":90022,"line_start":251,"line_end":251,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90274,"byte_end":90280,"line_start":261,"line_end":261,"column_start":12,"column_end":18},"name":"rotate","qualname":"<Mesh>::rotate","value":"fn rotate<'_>(&'_ mut Self, Rot2, Pos2)","parent":null,"children":[],"decl_id":null,"docs":" Rotate by some angle about an origin, in-place.","sig":null,"attributes":[{"value":"/ Rotate by some angle about an origin, in-place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90157,"byte_end":90208,"line_start":258,"line_end":258,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90213,"byte_end":90216,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Origin is a position in screen space.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90221,"byte_end":90262,"line_start":260,"line_end":260,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90676,"byte_end":90682,"line_start":273,"line_end":273,"column_start":12,"column_end":18},"name":"Mesh16","qualname":"::mesh::Mesh16","value":"Mesh16 { indices, vertices, texture_id }","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"decl_id":null,"docs":" A version of [`Mesh`] that uses 16-bit indices.","sig":null,"attributes":[{"value":"/ A version of [`Mesh`] that uses 16-bit indices.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90510,"byte_end":90561,"line_start":270,"line_end":270,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90562,"byte_end":90565,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ This is produced by [`Mesh::split_to_u16`] and is meant to be used for legacy render backends.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90566,"byte_end":90664,"line_start":272,"line_end":272,"column_start":1,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90868,"byte_end":90875,"line_start":277,"line_end":277,"column_start":9,"column_end":16},"name":"indices","qualname":"::mesh::Mesh16::indices","value":"std::vec::Vec<u16>","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":" Draw as triangles (i.e. the length is always multiple of three).","sig":null,"attributes":[{"value":"/ Draw as triangles (i.e. the length is always multiple of three).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90689,"byte_end":90757,"line_start":274,"line_end":274,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90762,"byte_end":90765,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ egui is NOT consistent with what winding order it uses, so turn off backface culling.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90770,"byte_end":90859,"line_start":276,"line_end":276,"column_start":5,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90942,"byte_end":90950,"line_start":280,"line_end":280,"column_start":9,"column_end":17},"name":"vertices","qualname":"::mesh::Mesh16::vertices","value":"std::vec::Vec<mesh::Vertex>","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":" The vertex data indexed by `indices`.\n","sig":null,"attributes":[{"value":"/ The vertex data indexed by `indices`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90892,"byte_end":90933,"line_start":279,"line_end":279,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":91031,"byte_end":91041,"line_start":283,"line_end":283,"column_start":9,"column_end":19},"name":"texture_id","qualname":"::mesh::Mesh16::texture_id","value":"TextureId","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":" The texture to use when drawing these triangles.\n","sig":null,"attributes":[{"value":"/ The texture to use when drawing these triangles.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":90970,"byte_end":91022,"line_start":282,"line_end":282,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":91151,"byte_end":91159,"line_start":288,"line_end":288,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Mesh16>::is_valid","value":"fn is_valid<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are all indices within the bounds of the contained vertices?\n","sig":null,"attributes":[{"value":"/ Are all indices within the bounds of the contained vertices?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":91075,"byte_end":91139,"line_start":287,"line_end":287,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mutex","qualname":"::mutex","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":366},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397}],"decl_id":null,"docs":" Helper module that wraps some Mutex types with different implementations.\n","sig":null,"attributes":[{"value":"/ Helper module that wraps some Mutex types with different implementations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":91339,"byte_end":91416,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2236},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":92394,"byte_end":92399,"line_start":37,"line_end":37,"column_start":16,"column_end":21},"name":"Mutex","qualname":"::mutex::mutex_impl::Mutex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Provides interior mutability.","sig":null,"attributes":[{"value":"/ Provides interior mutability.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":92220,"byte_end":92253,"line_start":33,"line_end":33,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":92258,"byte_end":92261,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Uses `parking_lot` crate on native targets, and `atomic_refcell` on `wasm32` targets.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":92266,"byte_end":92355,"line_start":35,"line_end":35,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":92484,"byte_end":92494,"line_start":40,"line_end":40,"column_start":16,"column_end":26},"name":"MutexGuard","qualname":"::mutex::mutex_impl::MutexGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" The lock you get from [`Mutex`].\n","sig":null,"attributes":[{"value":"/ The lock you get from [`Mutex`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":92432,"byte_end":92468,"line_start":39,"line_end":39,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":93310,"byte_end":93313,"line_start":68,"line_end":68,"column_start":16,"column_end":19},"name":"new","qualname":"<Mutex<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":93277,"byte_end":93294,"line_start":67,"line_end":67,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":93405,"byte_end":93409,"line_start":72,"line_end":72,"column_start":16,"column_end":20},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn lock<'_>(&'_ Self) -> MutexGuard","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":93981,"byte_end":93985,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"drop","qualname":"<MutexGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94277,"byte_end":94282,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"deref","qualname":"<MutexGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3491},"children":[],"decl_id":{"krate":2,"index":3493},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94248,"byte_end":94265,"line_start":99,"line_end":99,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94438,"byte_end":94447,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"deref_mut","qualname":"<MutexGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut Self::Target","parent":{"krate":2,"index":3504},"children":[],"decl_id":{"krate":2,"index":3505},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94409,"byte_end":94426,"line_start":106,"line_end":106,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":95037,"byte_end":95043,"line_start":126,"line_end":126,"column_start":16,"column_end":22},"name":"RwLock","qualname":"::mutex::rw_lock_impl::RwLock","value":"","parent":null,"children":[],"decl_id":null,"docs":" Provides interior mutability.","sig":null,"attributes":[{"value":"/ Provides interior mutability.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94863,"byte_end":94896,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94901,"byte_end":94904,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Uses `parking_lot` crate on native targets, and `atomic_refcell` on `wasm32` targets.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94909,"byte_end":94998,"line_start":124,"line_end":124,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":95138,"byte_end":95141,"line_start":130,"line_end":130,"column_start":16,"column_end":19},"name":"new","qualname":"<RwLock<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":95105,"byte_end":95122,"line_start":129,"line_end":129,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":95260,"byte_end":95264,"line_start":135,"line_end":135,"column_start":16,"column_end":20},"name":"read","qualname":"<RwLock<T>>::read","value":"fn read<'_>(&'_ Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":95227,"byte_end":95244,"line_start":134,"line_end":134,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":95420,"byte_end":95425,"line_start":140,"line_end":140,"column_start":16,"column_end":21},"name":"write","qualname":"<RwLock<T>>::write","value":"fn write<'_>(&'_ Self) -> RwLockWriteGuard","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":95387,"byte_end":95404,"line_start":139,"line_end":139,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":100280,"byte_end":100285,"line_start":294,"line_end":294,"column_start":8,"column_end":13},"name":"clone","qualname":"<Mutex<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2887},"children":[],"decl_id":{"krate":2,"index":2888},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2271},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":101606,"byte_end":101612,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Shadow","qualname":"::shadow::Shadow","value":"Shadow { extrusion, color }","parent":null,"children":[{"krate":0,"index":2272},{"krate":0,"index":2273}],"decl_id":null,"docs":" The color and fuzziness of a fuzzy shape.\n Can be used for a rectangular shadow with a soft penumbra.\n","sig":null,"attributes":[{"value":"/ The color and fuzziness of a fuzzy shape.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":101359,"byte_end":101404,"line_start":3,"line_end":3,"column_start":1,"column_end":46}},{"value":"/ Can be used for a rectangular shadow with a soft penumbra.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":101405,"byte_end":101467,"line_start":4,"line_end":4,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2272},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":101718,"byte_end":101727,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"name":"extrusion","qualname":"::shadow::Shadow::extrusion","value":"f32","parent":{"krate":0,"index":2271},"children":[],"decl_id":null,"docs":" The shadow extends this much outside the rect.\n The size of the fuzzy penumbra.\n","sig":null,"attributes":[{"value":"/ The shadow extends this much outside the rect.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":101619,"byte_end":101669,"line_start":8,"line_end":8,"column_start":5,"column_end":55}},{"value":"/ The size of the fuzzy penumbra.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":101674,"byte_end":101709,"line_start":9,"line_end":9,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":101793,"byte_end":101798,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"color","qualname":"::shadow::Shadow::color","value":"color::Color32","parent":{"krate":0,"index":2271},"children":[],"decl_id":null,"docs":" Color of the opaque center of the shadow.\n","sig":null,"attributes":[{"value":"/ Color of the opaque center of the shadow.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":101739,"byte_end":101784,"line_start":12,"line_end":12,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":101866,"byte_end":101876,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"small_dark","qualname":"<Shadow>::small_dark","value":"fn small_dark() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tooltips, menus, …\n","sig":null,"attributes":[{"value":"/ Tooltips, menus, …","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":101830,"byte_end":101854,"line_start":17,"line_end":17,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":102040,"byte_end":102051,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"small_light","qualname":"<Shadow>::small_light","value":"fn small_light() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tooltips, menus, …\n","sig":null,"attributes":[{"value":"/ Tooltips, menus, …","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":102004,"byte_end":102028,"line_start":25,"line_end":25,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":102230,"byte_end":102238,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"big_dark","qualname":"<Shadow>::big_dark","value":"fn big_dark() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtle and nice on dark backgrounds\n","sig":null,"attributes":[{"value":"/ Subtle and nice on dark backgrounds","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":102179,"byte_end":102218,"line_start":33,"line_end":33,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":102418,"byte_end":102427,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"big_light","qualname":"<Shadow>::big_light","value":"fn big_light() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtle and nice on white backgrounds\n","sig":null,"attributes":[{"value":"/ Subtle and nice on white backgrounds","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":102366,"byte_end":102406,"line_start":41,"line_end":41,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":102562,"byte_end":102572,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"tessellate","qualname":"<Shadow>::tessellate","value":"fn tessellate<'_,\nimpl Into<Rounding>>(&'_ Self, emath::Rect, impl Into<Rounding>) -> Mesh where\nimpl Into<Rounding>: Into<Rounding>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2324},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104587,"byte_end":104591,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Noop","qualname":"::shape::Shape::Noop","value":"Shape::Noop","parent":{"krate":0,"index":2323},"children":[],"decl_id":null,"docs":" Paint nothing. This can be useful as a placeholder.\n","sig":null,"attributes":[{"value":"/ Paint nothing. This can be useful as a placeholder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104527,"byte_end":104582,"line_start":24,"line_end":24,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2326},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104737,"byte_end":104740,"line_start":29,"line_end":29,"column_start":5,"column_end":8},"name":"Vec","qualname":"::shape::Shape::Vec","value":"Shape::Vec(Vec<Shape>)","parent":{"krate":0,"index":2323},"children":[],"decl_id":null,"docs":" Recursively nest more shapes - sometimes a convenience to be able to do.\n For performance reasons it is better to avoid it.\n","sig":null,"attributes":[{"value":"/ Recursively nest more shapes - sometimes a convenience to be able to do.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104598,"byte_end":104674,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ For performance reasons it is better to avoid it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104679,"byte_end":104732,"line_start":28,"line_end":28,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2328},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104741,"byte_end":104751,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"name":"0","qualname":"::shape::Shape::Vec::0","value":"std::vec::Vec<shape::Shape>","parent":{"krate":0,"index":2326},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2329},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104806,"byte_end":104812,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Circle","qualname":"::shape::Shape::Circle","value":"Shape::Circle(CircleShape)","parent":{"krate":0,"index":2323},"children":[],"decl_id":null,"docs":" Circle with optional outline and fill.\n","sig":null,"attributes":[{"value":"/ Circle with optional outline and fill.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104759,"byte_end":104801,"line_start":31,"line_end":31,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104813,"byte_end":104824,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"0","qualname":"::shape::Shape::Circle::0","value":"shape::CircleShape","parent":{"krate":0,"index":2329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2332},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104867,"byte_end":104878,"line_start":35,"line_end":35,"column_start":5,"column_end":16},"name":"LineSegment","qualname":"::shape::Shape::LineSegment","value":"Shape::LineSegment { points, stroke }","parent":{"krate":0,"index":2323},"children":[],"decl_id":null,"docs":" A line between two points.\n","sig":null,"attributes":[{"value":"/ A line between two points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104832,"byte_end":104862,"line_start":34,"line_end":34,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2333},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104881,"byte_end":104887,"line_start":35,"line_end":35,"column_start":19,"column_end":25},"name":"points","qualname":"::shape::Shape::LineSegment::points","value":"[emath::Pos2; 2]","parent":{"krate":0,"index":2332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104900,"byte_end":104906,"line_start":35,"line_end":35,"column_start":38,"column_end":44},"name":"stroke","qualname":"::shape::Shape::LineSegment::stroke","value":"stroke::Stroke","parent":{"krate":0,"index":2332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105025,"byte_end":105029,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Path","qualname":"::shape::Shape::Path","value":"Shape::Path(PathShape)","parent":{"krate":0,"index":2323},"children":[],"decl_id":null,"docs":" A series of lines between points.\n The path can have a stroke and/or fill (if closed).\n","sig":null,"attributes":[{"value":"/ A series of lines between points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104923,"byte_end":104960,"line_start":37,"line_end":37,"column_start":5,"column_end":42}},{"value":"/ The path can have a stroke and/or fill (if closed).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104965,"byte_end":105020,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2338},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105030,"byte_end":105039,"line_start":39,"line_end":39,"column_start":10,"column_end":19},"name":"0","qualname":"::shape::Shape::Path::0","value":"shape::PathShape","parent":{"krate":0,"index":2336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105097,"byte_end":105101,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Rect","qualname":"::shape::Shape::Rect","value":"Shape::Rect(RectShape)","parent":{"krate":0,"index":2323},"children":[],"decl_id":null,"docs":" Rectangle with optional outline and fill.\n","sig":null,"attributes":[{"value":"/ Rectangle with optional outline and fill.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105047,"byte_end":105092,"line_start":41,"line_end":41,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2341},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105102,"byte_end":105111,"line_start":42,"line_end":42,"column_start":10,"column_end":19},"name":"0","qualname":"::shape::Shape::Rect::0","value":"shape::RectShape","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2342},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105219,"byte_end":105223,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"Text","qualname":"::shape::Shape::Text","value":"Shape::Text(TextShape)","parent":{"krate":0,"index":2323},"children":[],"decl_id":null,"docs":" Text.","sig":null,"attributes":[{"value":"/ Text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105119,"byte_end":105128,"line_start":44,"line_end":44,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105133,"byte_end":105136,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This needs to be recreated if `pixels_per_point` (dpi scale) changes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105141,"byte_end":105214,"line_start":46,"line_end":46,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105224,"byte_end":105233,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"name":"0","qualname":"::shape::Shape::Text::0","value":"shape::TextShape","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2345},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105321,"byte_end":105325,"line_start":52,"line_end":52,"column_start":5,"column_end":9},"name":"Mesh","qualname":"::shape::Shape::Mesh","value":"Shape::Mesh(Mesh)","parent":{"krate":0,"index":2323},"children":[],"decl_id":null,"docs":" A general triangle mesh.","sig":null,"attributes":[{"value":"/ A general triangle mesh.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105241,"byte_end":105269,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105274,"byte_end":105277,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Can be used to display images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105282,"byte_end":105316,"line_start":51,"line_end":51,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2347},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105326,"byte_end":105330,"line_start":52,"line_end":52,"column_start":10,"column_end":14},"name":"0","qualname":"::shape::Shape::Mesh::0","value":"mesh::Mesh","parent":{"krate":0,"index":2345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2348},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105424,"byte_end":105439,"line_start":55,"line_end":55,"column_start":5,"column_end":20},"name":"QuadraticBezier","qualname":"::shape::Shape::QuadraticBezier","value":"Shape::QuadraticBezier(QuadraticBezierShape)","parent":{"krate":0,"index":2323},"children":[],"decl_id":null,"docs":" A quadratic [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).\n","sig":null,"attributes":[{"value":"/ A quadratic [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105338,"byte_end":105419,"line_start":54,"line_end":54,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":2350},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105440,"byte_end":105460,"line_start":55,"line_end":55,"column_start":21,"column_end":41},"name":"0","qualname":"::shape::Shape::QuadraticBezier::0","value":"bezier::QuadraticBezierShape","parent":{"krate":0,"index":2348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2351},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105550,"byte_end":105561,"line_start":58,"line_end":58,"column_start":5,"column_end":16},"name":"CubicBezier","qualname":"::shape::Shape::CubicBezier","value":"Shape::CubicBezier(CubicBezierShape)","parent":{"krate":0,"index":2323},"children":[],"decl_id":null,"docs":" A cubic [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).\n","sig":null,"attributes":[{"value":"/ A cubic [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105468,"byte_end":105545,"line_start":57,"line_end":57,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105562,"byte_end":105578,"line_start":58,"line_end":58,"column_start":17,"column_end":33},"name":"0","qualname":"::shape::Shape::CubicBezier::0","value":"bezier::CubicBezierShape","parent":{"krate":0,"index":2351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2354},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105621,"byte_end":105629,"line_start":61,"line_end":61,"column_start":5,"column_end":13},"name":"Callback","qualname":"::shape::Shape::Callback","value":"Shape::Callback(PaintCallback)","parent":{"krate":0,"index":2323},"children":[],"decl_id":null,"docs":" Backend-specific painting.\n","sig":null,"attributes":[{"value":"/ Backend-specific painting.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105586,"byte_end":105616,"line_start":60,"line_end":60,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2356},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105630,"byte_end":105643,"line_start":61,"line_end":61,"column_start":14,"column_end":27},"name":"0","qualname":"::shape::Shape::Callback::0","value":"shape::PaintCallback","parent":{"krate":0,"index":2354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2323},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104515,"byte_end":104520,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Shape","qualname":"::shape::Shape","value":"enum Shape {\n    Noop,\n    Vec(Vec<Shape>),\n    Circle(CircleShape),\n    LineSegment {\n            points: [Pos2; ],\n            stroke: Stroke,\n        },\n    Path(PathShape),\n    Rect(RectShape),\n    Text(TextShape),\n    Mesh(Mesh),\n    QuadraticBezier(QuadraticBezierShape),\n    CubicBezier(CubicBezierShape),\n    Callback(PaintCallback),\n}","parent":null,"children":[{"krate":0,"index":2324},{"krate":0,"index":2326},{"krate":0,"index":2329},{"krate":0,"index":2332},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354}],"decl_id":null,"docs":" A paint primitive such as a circle or a piece of text.\n Coordinates are all screen space points (not physical pixels).","sig":null,"attributes":[{"value":"/ A paint primitive such as a circle or a piece of text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104035,"byte_end":104093,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/ Coordinates are all screen space points (not physical pixels).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104094,"byte_end":104160,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104161,"byte_end":104164,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ You should generally recreate your [`Shape`]s each frame,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104165,"byte_end":104226,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/ but storing them should also be fine with one exception:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104227,"byte_end":104287,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/ [`Shape::Text`] depends on the current `pixels_per_point` (dpi scale)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104288,"byte_end":104361,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ and so must be recreated every time `pixels_per_point` changes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104362,"byte_end":104429,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"must_use = \"Add a Shape to a Painter\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":104430,"byte_end":104470,"line_start":21,"line_end":21,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105829,"byte_end":105833,"line_start":72,"line_end":72,"column_start":8,"column_end":12},"name":"from","qualname":"<Shape as std::convert::From>::from","value":"fn from(Vec<Shape>) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105804,"byte_end":105821,"line_start":71,"line_end":71,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105956,"byte_end":105960,"line_start":79,"line_end":79,"column_start":8,"column_end":12},"name":"from","qualname":"<Shape as std::convert::From>::from","value":"fn from(Mesh) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105931,"byte_end":105948,"line_start":78,"line_end":78,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106162,"byte_end":106174,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"line_segment","qualname":"<Shape>::line_segment","value":"fn line_segment<impl Into<Stroke>>([Pos2; ], impl Into<Stroke>) -> Self where\nimpl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" A line between two points.\n More efficient than calling [`Self::line`].\n","sig":null,"attributes":[{"value":"/ A line between two points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106054,"byte_end":106084,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/ More efficient than calling [`Self::line`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106089,"byte_end":106136,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106141,"byte_end":106150,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106369,"byte_end":106374,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"hline","qualname":"<Shape>::hline","value":"fn hline<impl Into<Stroke>>(RangeInclusive<f32>, f32, impl Into<Stroke>)\n-> Self where impl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" A horizontal line.\n","sig":null,"attributes":[{"value":"/ A horizontal line.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106335,"byte_end":106357,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106623,"byte_end":106628,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"vline","qualname":"<Shape>::vline","value":"fn vline<impl Into<Stroke>>(f32, RangeInclusive<f32>, impl Into<Stroke>)\n-> Self where impl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" A vertical line.\n","sig":null,"attributes":[{"value":"/ A vertical line.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106591,"byte_end":106611,"line_start":104,"line_end":104,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106992,"byte_end":106996,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"line","qualname":"<Shape>::line","value":"fn line<impl Into<Stroke>>(Vec<Pos2>, impl Into<Stroke>) -> Self where\nimpl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" A line through many points.","sig":null,"attributes":[{"value":"/ A line through many points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106845,"byte_end":106876,"line_start":112,"line_end":112,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106881,"byte_end":106884,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Use [`Self::line_segment`] instead if your line only connects two points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106889,"byte_end":106966,"line_start":114,"line_end":114,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106971,"byte_end":106980,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":107195,"byte_end":107206,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"closed_line","qualname":"<Shape>::closed_line","value":"fn closed_line<impl Into<Stroke>>(Vec<Pos2>, impl Into<Stroke>) -> Self where\nimpl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" A line that closes back to the start point again.\n","sig":null,"attributes":[{"value":"/ A line that closes back to the start point again.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":107116,"byte_end":107169,"line_start":120,"line_end":120,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":107174,"byte_end":107183,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":107386,"byte_end":107397,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"dotted_line","qualname":"<Shape>::dotted_line","value":"fn dotted_line<'_,\nimpl Into<Color32>>(&'_ [Pos2], impl Into<Color32>, f32, f32) -> Vec<Self>\nwhere impl Into<Color32>: Into<Color32>","parent":null,"children":[],"decl_id":null,"docs":" Turn a line into equally spaced dots.\n","sig":null,"attributes":[{"value":"/ Turn a line into equally spaced dots.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":107333,"byte_end":107374,"line_start":126,"line_end":126,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":107700,"byte_end":107711,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"dashed_line","qualname":"<Shape>::dashed_line","value":"fn dashed_line<'_, impl Into<Stroke>>(&'_ [Pos2], impl Into<Stroke>, f32, f32)\n-> Vec<Self> where impl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" Turn a line into dashes.\n","sig":null,"attributes":[{"value":"/ Turn a line into dashes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":107660,"byte_end":107688,"line_start":138,"line_end":138,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":108121,"byte_end":108137,"line_start":152,"line_end":152,"column_start":12,"column_end":28},"name":"dashed_line_many","qualname":"<Shape>::dashed_line_many","value":"fn dashed_line_many<'_, '_,\nimpl Into<Stroke>>(&'_ [Pos2], impl Into<Stroke>, f32, f32,\n&'_ mut Vec<Shape>) where impl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" Turn a line into dashes. If you need to create many dashed lines use this instead of\n [`Self::dashed_line`]\n","sig":null,"attributes":[{"value":"/ Turn a line into dashes. If you need to create many dashed lines use this instead of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":107991,"byte_end":108079,"line_start":150,"line_end":150,"column_start":5,"column_end":93}},{"value":"/ [`Self::dashed_line`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":108084,"byte_end":108109,"line_start":151,"line_end":151,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":108527,"byte_end":108541,"line_start":166,"line_end":166,"column_start":12,"column_end":26},"name":"convex_polygon","qualname":"<Shape>::convex_polygon","value":"fn convex_polygon<impl Into<Color32>,\nimpl Into<Stroke>>(Vec<Pos2>, impl Into<Color32>, impl Into<Stroke>) -> Self\nwhere impl Into<Color32>: Into<Color32>, impl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" A convex polygon with a fill and optional stroke.","sig":null,"attributes":[{"value":"/ A convex polygon with a fill and optional stroke.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":108384,"byte_end":108437,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":108442,"byte_end":108445,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The most performant winding order is clockwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":108450,"byte_end":108501,"line_start":164,"line_end":164,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":108506,"byte_end":108515,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":108755,"byte_end":108768,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"name":"circle_filled","qualname":"<Shape>::circle_filled","value":"fn circle_filled<impl Into<Color32>>(Pos2, f32, impl Into<Color32>) -> Self\nwhere impl Into<Color32>: Into<Color32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":108734,"byte_end":108743,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":108940,"byte_end":108953,"line_start":180,"line_end":180,"column_start":12,"column_end":25},"name":"circle_stroke","qualname":"<Shape>::circle_stroke","value":"fn circle_stroke<impl Into<Stroke>>(Pos2, f32, impl Into<Stroke>) -> Self\nwhere impl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":108919,"byte_end":108928,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":109116,"byte_end":109127,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"rect_filled","qualname":"<Shape>::rect_filled","value":"fn rect_filled<impl Into<Rounding>,\nimpl Into<Color32>>(Rect, impl Into<Rounding>, impl Into<Color32>) -> Self\nwhere impl Into<Rounding>: Into<Rounding>, impl Into<Color32>: Into<Color32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":109095,"byte_end":109104,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":109342,"byte_end":109353,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"rect_stroke","qualname":"<Shape>::rect_stroke","value":"fn rect_stroke<impl Into<Rounding>,\nimpl Into<Stroke>>(Rect, impl Into<Rounding>, impl Into<Stroke>) -> Self where\nimpl Into<Rounding>: Into<Rounding>, impl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":109321,"byte_end":109330,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":109590,"byte_end":109594,"line_start":203,"line_end":203,"column_start":12,"column_end":16},"name":"text","qualname":"<Shape>::text","value":"fn text<'_,\nimpl ToString>(&'_ Fonts, Pos2, Align2, impl ToString, FontId, Color32)\n-> Self where impl ToString: ToString","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":109538,"byte_end":109578,"line_start":202,"line_end":202,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":109984,"byte_end":109990,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"galley","qualname":"<Shape>::galley","value":"fn galley(Pos2, Arc<Galley>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":109963,"byte_end":109972,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":110188,"byte_end":110205,"line_start":223,"line_end":223,"column_start":12,"column_end":29},"name":"galley_with_color","qualname":"<Shape>::galley_with_color","value":"fn galley_with_color(Pos2, Arc<Galley>, Color32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The text color in the [`Galley`] will be replaced with the given color.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":110087,"byte_end":110096,"line_start":221,"line_end":221,"column_start":5,"column_end":14}},{"value":"/ The text color in the [`Galley`] will be replaced with the given color.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":110101,"byte_end":110176,"line_start":222,"line_end":222,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":110426,"byte_end":110430,"line_start":231,"line_end":231,"column_start":12,"column_end":16},"name":"mesh","qualname":"<Shape>::mesh","value":"fn mesh(Mesh) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":110544,"byte_end":110549,"line_start":236,"line_end":236,"column_start":12,"column_end":17},"name":"image","qualname":"<Shape>::image","value":"fn image(TextureId, Rect, Rect, Color32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":110829,"byte_end":110849,"line_start":243,"line_end":243,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<Shape>::visual_bounding_rect","value":"fn visual_bounding_rect<'_>(&'_ Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle (includes stroke widths)\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle (includes stroke widths)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":110759,"byte_end":110817,"line_start":242,"line_end":242,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":112089,"byte_end":112099,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"texture_id","qualname":"<Shape>::texture_id","value":"fn texture_id<'_>(&'_ Self) -> super::TextureId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":112060,"byte_end":112077,"line_start":274,"line_end":274,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":112338,"byte_end":112347,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"translate","qualname":"<Shape>::translate","value":"fn translate<'_>(&'_ mut Self, Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Move the shape by this many points, in-place.\n","sig":null,"attributes":[{"value":"/ Move the shape by this many points, in-place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":112277,"byte_end":112326,"line_start":283,"line_end":283,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2374},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114041,"byte_end":114052,"line_start":336,"line_end":336,"column_start":12,"column_end":23},"name":"CircleShape","qualname":"::shape::CircleShape","value":"CircleShape { center, radius, fill, stroke }","parent":null,"children":[{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378}],"decl_id":null,"docs":" How to paint a circle.\n","sig":null,"attributes":[{"value":"/ How to paint a circle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":113885,"byte_end":113911,"line_start":333,"line_end":333,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2375},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114063,"byte_end":114069,"line_start":337,"line_end":337,"column_start":9,"column_end":15},"name":"center","qualname":"::shape::CircleShape::center","value":"emath::Pos2","parent":{"krate":0,"index":2374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2376},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114085,"byte_end":114091,"line_start":338,"line_end":338,"column_start":9,"column_end":15},"name":"radius","qualname":"::shape::CircleShape::radius","value":"f32","parent":{"krate":0,"index":2374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2377},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114106,"byte_end":114110,"line_start":339,"line_end":339,"column_start":9,"column_end":13},"name":"fill","qualname":"::shape::CircleShape::fill","value":"color::Color32","parent":{"krate":0,"index":2374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2378},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114129,"byte_end":114135,"line_start":340,"line_end":340,"column_start":9,"column_end":15},"name":"stroke","qualname":"::shape::CircleShape::stroke","value":"stroke::Stroke","parent":{"krate":0,"index":2374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114192,"byte_end":114198,"line_start":345,"line_end":345,"column_start":12,"column_end":18},"name":"filled","qualname":"<CircleShape>::filled","value":"fn filled<impl Into<Color32>>(Pos2, f32, impl Into<Color32>) -> Self where\nimpl Into<Color32>: Into<Color32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114171,"byte_end":114180,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114442,"byte_end":114448,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"stroke","qualname":"<CircleShape>::stroke","value":"fn stroke<impl Into<Stroke>>(Pos2, f32, impl Into<Stroke>) -> Self where\nimpl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114421,"byte_end":114430,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114731,"byte_end":114751,"line_start":365,"line_end":365,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<CircleShape>::visual_bounding_rect","value":"fn visual_bounding_rect<'_>(&'_ Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle (includes stroke width)\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle (includes stroke width)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114662,"byte_end":114719,"line_start":364,"line_end":364,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115115,"byte_end":115119,"line_start":379,"line_end":379,"column_start":8,"column_end":12},"name":"from","qualname":"<Shape as std::convert::From>::from","value":"fn from(CircleShape) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115090,"byte_end":115107,"line_start":378,"line_end":378,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2440},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115450,"byte_end":115459,"line_start":389,"line_end":389,"column_start":12,"column_end":21},"name":"PathShape","qualname":"::shape::PathShape","value":"PathShape { points, closed, fill, stroke }","parent":null,"children":[{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444}],"decl_id":null,"docs":" A path which can be stroked and/or filled (if closed).\n","sig":null,"attributes":[{"value":"/ A path which can be stroked and/or filled (if closed).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115268,"byte_end":115326,"line_start":386,"line_end":386,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2441},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115522,"byte_end":115528,"line_start":391,"line_end":391,"column_start":9,"column_end":15},"name":"points","qualname":"::shape::PathShape::points","value":"std::vec::Vec<emath::Pos2>","parent":{"krate":0,"index":2440},"children":[],"decl_id":null,"docs":" Filled paths should prefer clockwise order.\n","sig":null,"attributes":[{"value":"/ Filled paths should prefer clockwise order.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115466,"byte_end":115513,"line_start":390,"line_end":390,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2442},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115669,"byte_end":115675,"line_start":395,"line_end":395,"column_start":9,"column_end":15},"name":"closed","qualname":"::shape::PathShape::closed","value":"bool","parent":{"krate":0,"index":2440},"children":[],"decl_id":null,"docs":" If true, connect the first and last of the points together.\n This is required if `fill != TRANSPARENT`.\n","sig":null,"attributes":[{"value":"/ If true, connect the first and last of the points together.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115546,"byte_end":115609,"line_start":393,"line_end":393,"column_start":5,"column_end":68}},{"value":"/ This is required if `fill != TRANSPARENT`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115614,"byte_end":115660,"line_start":394,"line_end":394,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2443},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115744,"byte_end":115748,"line_start":398,"line_end":398,"column_start":9,"column_end":13},"name":"fill","qualname":"::shape::PathShape::fill","value":"color::Color32","parent":{"krate":0,"index":2440},"children":[],"decl_id":null,"docs":" Fill is only supported for convex polygons.\n","sig":null,"attributes":[{"value":"/ Fill is only supported for convex polygons.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115688,"byte_end":115735,"line_start":397,"line_end":397,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2444},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115809,"byte_end":115815,"line_start":401,"line_end":401,"column_start":9,"column_end":15},"name":"stroke","qualname":"::shape::PathShape::stroke","value":"stroke::Stroke","parent":{"krate":0,"index":2440},"children":[],"decl_id":null,"docs":" Color and thickness of the line.\n","sig":null,"attributes":[{"value":"/ Color and thickness of the line.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115764,"byte_end":115800,"line_start":400,"line_end":400,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115997,"byte_end":116001,"line_start":409,"line_end":409,"column_start":12,"column_end":16},"name":"line","qualname":"<PathShape>::line","value":"fn line<impl Into<Stroke>>(Vec<Pos2>, impl Into<Stroke>) -> Self where\nimpl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" A line through many points.","sig":null,"attributes":[{"value":"/ A line through many points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115849,"byte_end":115880,"line_start":405,"line_end":405,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115885,"byte_end":115888,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Use [`Shape::line_segment`] instead if your line only connects two points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115893,"byte_end":115971,"line_start":407,"line_end":407,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115976,"byte_end":115985,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":116298,"byte_end":116309,"line_start":420,"line_end":420,"column_start":12,"column_end":23},"name":"closed_line","qualname":"<PathShape>::closed_line","value":"fn closed_line<impl Into<Stroke>>(Vec<Pos2>, impl Into<Stroke>) -> Self where\nimpl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" A line that closes back to the start point again.\n","sig":null,"attributes":[{"value":"/ A line that closes back to the start point again.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":116219,"byte_end":116272,"line_start":418,"line_end":418,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":116277,"byte_end":116286,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":116669,"byte_end":116683,"line_start":433,"line_end":433,"column_start":12,"column_end":26},"name":"convex_polygon","qualname":"<PathShape>::convex_polygon","value":"fn convex_polygon<impl Into<Color32>,\nimpl Into<Stroke>>(Vec<Pos2>, impl Into<Color32>, impl Into<Stroke>) -> Self\nwhere impl Into<Color32>: Into<Color32>, impl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":" A convex polygon with a fill and optional stroke.","sig":null,"attributes":[{"value":"/ A convex polygon with a fill and optional stroke.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":116526,"byte_end":116579,"line_start":429,"line_end":429,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":116584,"byte_end":116587,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The most performant winding order is clockwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":116592,"byte_end":116643,"line_start":431,"line_end":431,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":116648,"byte_end":116657,"line_start":432,"line_end":432,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117033,"byte_end":117053,"line_start":448,"line_end":448,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<PathShape>::visual_bounding_rect","value":"fn visual_bounding_rect<'_>(&'_ Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle (includes stroke width)\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle (includes stroke width)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":116950,"byte_end":117007,"line_start":446,"line_end":446,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117012,"byte_end":117021,"line_start":447,"line_end":447,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117344,"byte_end":117348,"line_start":459,"line_end":459,"column_start":8,"column_end":12},"name":"from","qualname":"<Shape as std::convert::From>::from","value":"fn from(PathShape) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117319,"byte_end":117336,"line_start":458,"line_end":458,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2507},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117652,"byte_end":117661,"line_start":469,"line_end":469,"column_start":12,"column_end":21},"name":"RectShape","qualname":"::shape::RectShape","value":"RectShape { rect, rounding, fill, stroke }","parent":null,"children":[{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511}],"decl_id":null,"docs":" How to paint a rectangle.\n","sig":null,"attributes":[{"value":"/ How to paint a rectangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117493,"byte_end":117522,"line_start":466,"line_end":466,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2508},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117672,"byte_end":117676,"line_start":470,"line_end":470,"column_start":9,"column_end":13},"name":"rect","qualname":"::shape::RectShape::rect","value":"emath::Rect","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117770,"byte_end":117778,"line_start":473,"line_end":473,"column_start":9,"column_end":17},"name":"rounding","qualname":"::shape::RectShape::rounding","value":"shape::Rounding","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":" How rounded the corners are. Use `Rounding::none()` for no rounding.\n","sig":null,"attributes":[{"value":"/ How rounded the corners are. Use `Rounding::none()` for no rounding.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117689,"byte_end":117761,"line_start":472,"line_end":472,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2510},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117834,"byte_end":117838,"line_start":476,"line_end":476,"column_start":9,"column_end":13},"name":"fill","qualname":"::shape::RectShape::fill","value":"color::Color32","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":" How to fill the rectangle.\n","sig":null,"attributes":[{"value":"/ How to fill the rectangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117795,"byte_end":117825,"line_start":475,"line_end":475,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117906,"byte_end":117912,"line_start":479,"line_end":479,"column_start":9,"column_end":15},"name":"stroke","qualname":"::shape::RectShape::stroke","value":"stroke::Stroke","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":" The thickness and color of the outline.\n","sig":null,"attributes":[{"value":"/ The thickness and color of the outline.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117854,"byte_end":117897,"line_start":478,"line_end":478,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117967,"byte_end":117973,"line_start":484,"line_end":484,"column_start":12,"column_end":18},"name":"filled","qualname":"<RectShape>::filled","value":"fn filled<impl Into<Rounding>,\nimpl Into<Color32>>(Rect, impl Into<Rounding>, impl Into<Color32>) -> Self\nwhere impl Into<Rounding>: Into<Rounding>, impl Into<Color32>: Into<Color32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117946,"byte_end":117955,"line_start":483,"line_end":483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":118281,"byte_end":118287,"line_start":498,"line_end":498,"column_start":12,"column_end":18},"name":"stroke","qualname":"<RectShape>::stroke","value":"fn stroke<impl Into<Rounding>,\nimpl Into<Stroke>>(Rect, impl Into<Rounding>, impl Into<Stroke>) -> Self where\nimpl Into<Rounding>: Into<Rounding>, impl Into<Stroke>: Into<Stroke>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":118260,"byte_end":118269,"line_start":497,"line_end":497,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":118617,"byte_end":118637,"line_start":509,"line_end":509,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<RectShape>::visual_bounding_rect","value":"fn visual_bounding_rect<'_>(&'_ Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle (includes stroke width)\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle (includes stroke width)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":118534,"byte_end":118591,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":118596,"byte_end":118605,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":118906,"byte_end":118910,"line_start":520,"line_end":520,"column_start":8,"column_end":12},"name":"from","qualname":"<Shape as std::convert::From>::from","value":"fn from(RectShape) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":118881,"byte_end":118898,"line_start":519,"line_end":519,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119151,"byte_end":119159,"line_start":528,"line_end":528,"column_start":12,"column_end":20},"name":"Rounding","qualname":"::shape::Rounding","value":"Rounding { nw, ne, sw, se }","parent":null,"children":[{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578}],"decl_id":null,"docs":" How rounded the corners of things should be\n","sig":null,"attributes":[{"value":"/ How rounded the corners of things should be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119092,"byte_end":119139,"line_start":527,"line_end":527,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2575},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119238,"byte_end":119240,"line_start":530,"line_end":530,"column_start":9,"column_end":11},"name":"nw","qualname":"::shape::Rounding::nw","value":"f32","parent":{"krate":0,"index":2574},"children":[],"decl_id":null,"docs":" Radius of the rounding of the North-West (left top) corner.\n","sig":null,"attributes":[{"value":"/ Radius of the rounding of the North-West (left top) corner.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119166,"byte_end":119229,"line_start":529,"line_end":529,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119325,"byte_end":119327,"line_start":533,"line_end":533,"column_start":9,"column_end":11},"name":"ne","qualname":"::shape::Rounding::ne","value":"f32","parent":{"krate":0,"index":2574},"children":[],"decl_id":null,"docs":" Radius of the rounding of the North-East (right top) corner.\n","sig":null,"attributes":[{"value":"/ Radius of the rounding of the North-East (right top) corner.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119252,"byte_end":119316,"line_start":532,"line_end":532,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2577},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119414,"byte_end":119416,"line_start":536,"line_end":536,"column_start":9,"column_end":11},"name":"sw","qualname":"::shape::Rounding::sw","value":"f32","parent":{"krate":0,"index":2574},"children":[],"decl_id":null,"docs":" Radius of the rounding of the South-West (left bottom) corner.\n","sig":null,"attributes":[{"value":"/ Radius of the rounding of the South-West (left bottom) corner.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119339,"byte_end":119405,"line_start":535,"line_end":535,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119504,"byte_end":119506,"line_start":539,"line_end":539,"column_start":9,"column_end":11},"name":"se","qualname":"::shape::Rounding::se","value":"f32","parent":{"krate":0,"index":2574},"children":[],"decl_id":null,"docs":" Radius of the rounding of the South-East (right bottom) corner.\n","sig":null,"attributes":[{"value":"/ Radius of the rounding of the South-East (right bottom) corner.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119428,"byte_end":119495,"line_start":538,"line_end":538,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119565,"byte_end":119572,"line_start":544,"line_end":544,"column_start":8,"column_end":15},"name":"default","qualname":"<Rounding as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119548,"byte_end":119557,"line_start":543,"line_end":543,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119666,"byte_end":119670,"line_start":551,"line_end":551,"column_start":8,"column_end":12},"name":"from","qualname":"<Rounding as std::convert::From>::from","value":"fn from(f32) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119649,"byte_end":119658,"line_start":550,"line_end":550,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119865,"byte_end":119869,"line_start":563,"line_end":563,"column_start":12,"column_end":16},"name":"same","qualname":"<Rounding>::same","value":"fn same(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119844,"byte_end":119853,"line_start":562,"line_end":562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":120046,"byte_end":120050,"line_start":573,"line_end":573,"column_start":12,"column_end":16},"name":"none","qualname":"<Rounding>::none","value":"fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":120025,"byte_end":120034,"line_start":572,"line_end":572,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":120251,"byte_end":120258,"line_start":584,"line_end":584,"column_start":12,"column_end":19},"name":"is_same","qualname":"<Rounding>::is_same","value":"fn is_same<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Do all corners have the same rounding?\n","sig":null,"attributes":[{"value":"/ Do all corners have the same rounding?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":120183,"byte_end":120225,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":120230,"byte_end":120239,"line_start":583,"line_end":583,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":120442,"byte_end":120450,"line_start":590,"line_end":590,"column_start":12,"column_end":20},"name":"at_least","qualname":"<Rounding>::at_least","value":"fn at_least<'_>(&'_ Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Make sure each corner has a rounding of at least this.\n","sig":null,"attributes":[{"value":"/ Make sure each corner has a rounding of at least this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":120358,"byte_end":120416,"line_start":588,"line_end":588,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":120421,"byte_end":120430,"line_start":589,"line_end":589,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":120733,"byte_end":120740,"line_start":601,"line_end":601,"column_start":12,"column_end":19},"name":"at_most","qualname":"<Rounding>::at_most","value":"fn at_most<'_>(&'_ Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Make sure each corner has a rounding of at most this.\n","sig":null,"attributes":[{"value":"/ Make sure each corner has a rounding of at most this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":120650,"byte_end":120707,"line_start":599,"line_end":599,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":120712,"byte_end":120721,"line_start":600,"line_end":600,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121258,"byte_end":121267,"line_start":618,"line_end":618,"column_start":12,"column_end":21},"name":"TextShape","qualname":"::shape::TextShape","value":"TextShape { pos, galley, underline, override_text_color, angle }","parent":null,"children":[{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645}],"decl_id":null,"docs":" How to paint some text on screen.","sig":null,"attributes":[{"value":"/ How to paint some text on screen.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121019,"byte_end":121056,"line_start":613,"line_end":613,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121057,"byte_end":121060,"line_start":614,"line_end":614,"column_start":1,"column_end":4}},{"value":"/ This needs to be recreated if `pixels_per_point` (dpi scale) changes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121061,"byte_end":121134,"line_start":615,"line_end":615,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":2641},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121326,"byte_end":121329,"line_start":620,"line_end":620,"column_start":9,"column_end":12},"name":"pos","qualname":"::shape::TextShape::pos","value":"emath::Pos2","parent":{"krate":0,"index":2640},"children":[],"decl_id":null,"docs":" Top left corner of the first character.\n","sig":null,"attributes":[{"value":"/ Top left corner of the first character.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121274,"byte_end":121317,"line_start":619,"line_end":619,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2642},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121402,"byte_end":121408,"line_start":623,"line_end":623,"column_start":9,"column_end":15},"name":"galley","qualname":"::shape::TextShape::galley","value":"std::sync::Arc<text::text_layout_types::Galley>","parent":{"krate":0,"index":2640},"children":[],"decl_id":null,"docs":" The layed out text, from [`Fonts::layout_job`].\n","sig":null,"attributes":[{"value":"/ The layed out text, from [`Fonts::layout_job`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121342,"byte_end":121393,"line_start":622,"line_end":622,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2643},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121542,"byte_end":121551,"line_start":627,"line_end":627,"column_start":9,"column_end":18},"name":"underline","qualname":"::shape::TextShape::underline","value":"stroke::Stroke","parent":{"krate":0,"index":2640},"children":[],"decl_id":null,"docs":" Add this underline to the whole text.\n You can also set an underline when creating the galley.\n","sig":null,"attributes":[{"value":"/ Add this underline to the whole text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121428,"byte_end":121469,"line_start":625,"line_end":625,"column_start":5,"column_end":46}},{"value":"/ You can also set an underline when creating the galley.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121474,"byte_end":121533,"line_start":626,"line_end":626,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2644},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121756,"byte_end":121775,"line_start":632,"line_end":632,"column_start":9,"column_end":28},"name":"override_text_color","qualname":"::shape::TextShape::override_text_color","value":"std::option::Option<color::Color32>","parent":{"krate":0,"index":2640},"children":[],"decl_id":null,"docs":" If set, the text color in the galley will be ignored and replaced\n with the given color.\n This will NOT replace background color nor strikethrough/underline color.\n","sig":null,"attributes":[{"value":"/ If set, the text color in the galley will be ignored and replaced","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121566,"byte_end":121635,"line_start":629,"line_end":629,"column_start":5,"column_end":74}},{"value":"/ with the given color.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121640,"byte_end":121665,"line_start":630,"line_end":630,"column_start":5,"column_end":30}},{"value":"/ This will NOT replace background color nor strikethrough/underline color.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121670,"byte_end":121747,"line_start":631,"line_end":631,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121919,"byte_end":121924,"line_start":636,"line_end":636,"column_start":9,"column_end":14},"name":"angle","qualname":"::shape::TextShape::angle","value":"f32","parent":{"krate":0,"index":2640},"children":[],"decl_id":null,"docs":" Rotate text by this many radians clockwise.\n The pivot is `pos` (the upper left corner of the text).\n","sig":null,"attributes":[{"value":"/ Rotate text by this many radians clockwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121799,"byte_end":121846,"line_start":634,"line_end":634,"column_start":5,"column_end":52}},{"value":"/ The pivot is `pos` (the upper left corner of the text).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121851,"byte_end":121910,"line_start":635,"line_end":635,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121976,"byte_end":121979,"line_start":641,"line_end":641,"column_start":12,"column_end":15},"name":"new","qualname":"<TextShape>::new","value":"fn new(Pos2, Arc<Galley>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121955,"byte_end":121964,"line_start":640,"line_end":640,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":122256,"byte_end":122276,"line_start":653,"line_end":653,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<TextShape>::visual_bounding_rect","value":"fn visual_bounding_rect<'_>(&'_ Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":122197,"byte_end":122230,"line_start":651,"line_end":651,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":122235,"byte_end":122244,"line_start":652,"line_end":652,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":122427,"byte_end":122431,"line_start":660,"line_end":660,"column_start":8,"column_end":12},"name":"from","qualname":"<Shape as std::convert::From>::from","value":"fn from(TextShape) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":122402,"byte_end":122419,"line_start":659,"line_end":659,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":124731,"byte_end":124748,"line_start":731,"line_end":731,"column_start":12,"column_end":29},"name":"PaintCallbackInfo","qualname":"::shape::PaintCallbackInfo","value":"PaintCallbackInfo { viewport, clip_rect, pixels_per_point, screen_size_px }","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"decl_id":null,"docs":" Information passed along with [`PaintCallback`] ([`Shape::Callback`]).\n","sig":null,"attributes":[{"value":"/ Information passed along with [`PaintCallback`] ([`Shape::Callback`]).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":124645,"byte_end":124719,"line_start":730,"line_end":730,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125031,"byte_end":125039,"line_start":738,"line_end":738,"column_start":9,"column_end":17},"name":"viewport","qualname":"::shape::PaintCallbackInfo::viewport","value":"emath::Rect","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Viewport in points.","sig":null,"attributes":[{"value":"/ Viewport in points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":124755,"byte_end":124778,"line_start":732,"line_end":732,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":124783,"byte_end":124786,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ This specifies where on the screen to paint, and the borders of this","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":124791,"byte_end":124863,"line_start":734,"line_end":734,"column_start":5,"column_end":77}},{"value":"/ Rect is the [-1, +1] of the Normalized Device Coordinates.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":124868,"byte_end":124930,"line_start":735,"line_end":735,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":124935,"byte_end":124938,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ Note than only a portion of this may be visible due to [`Self::clip_rect`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":124943,"byte_end":125022,"line_start":737,"line_end":737,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125090,"byte_end":125099,"line_start":741,"line_end":741,"column_start":9,"column_end":18},"name":"clip_rect","qualname":"::shape::PaintCallbackInfo::clip_rect","value":"emath::Rect","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Clip rectangle in points.\n","sig":null,"attributes":[{"value":"/ Clip rectangle in points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125052,"byte_end":125081,"line_start":740,"line_end":740,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125142,"byte_end":125158,"line_start":744,"line_end":744,"column_start":9,"column_end":25},"name":"pixels_per_point","qualname":"::shape::PaintCallbackInfo::pixels_per_point","value":"f32","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Pixels per point.\n","sig":null,"attributes":[{"value":"/ Pixels per point.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125112,"byte_end":125133,"line_start":743,"line_end":743,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125218,"byte_end":125232,"line_start":747,"line_end":747,"column_start":9,"column_end":23},"name":"screen_size_px","qualname":"::shape::PaintCallbackInfo::screen_size_px","value":"[u32; 2]","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Full size of the screen, in pixels.\n","sig":null,"attributes":[{"value":"/ Full size of the screen, in pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125170,"byte_end":125209,"line_start":746,"line_end":746,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125258,"byte_end":125274,"line_start":750,"line_end":750,"column_start":12,"column_end":28},"name":"ViewportInPixels","qualname":"::shape::ViewportInPixels","value":"ViewportInPixels { left_px, top_px, from_bottom_px, width_px, height_px }","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125346,"byte_end":125353,"line_start":752,"line_end":752,"column_start":9,"column_end":16},"name":"left_px","qualname":"::shape::ViewportInPixels::left_px","value":"f32","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Physical pixel offset for left side of the viewport.\n","sig":null,"attributes":[{"value":"/ Physical pixel offset for left side of the viewport.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125281,"byte_end":125337,"line_start":751,"line_end":751,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125429,"byte_end":125435,"line_start":755,"line_end":755,"column_start":9,"column_end":15},"name":"top_px","qualname":"::shape::ViewportInPixels::top_px","value":"f32","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Physical pixel offset for top side of the viewport.\n","sig":null,"attributes":[{"value":"/ Physical pixel offset for top side of the viewport.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125365,"byte_end":125420,"line_start":754,"line_end":754,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125597,"byte_end":125611,"line_start":760,"line_end":760,"column_start":9,"column_end":23},"name":"from_bottom_px","qualname":"::shape::ViewportInPixels::from_bottom_px","value":"f32","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Physical pixel offset for bottom side of the viewport.","sig":null,"attributes":[{"value":"/ Physical pixel offset for bottom side of the viewport.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125447,"byte_end":125505,"line_start":757,"line_end":757,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125510,"byte_end":125513,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ This is what `glViewport`, `glScissor` etc expects for the y axis.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125518,"byte_end":125588,"line_start":759,"line_end":759,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125670,"byte_end":125678,"line_start":763,"line_end":763,"column_start":9,"column_end":17},"name":"width_px","qualname":"::shape::ViewportInPixels::width_px","value":"f32","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Viewport width in physical pixels.\n","sig":null,"attributes":[{"value":"/ Viewport width in physical pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125623,"byte_end":125661,"line_start":762,"line_end":762,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125737,"byte_end":125746,"line_start":766,"line_end":766,"column_start":9,"column_end":18},"name":"height_px","qualname":"::shape::ViewportInPixels::height_px","value":"f32","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Viewport width in physical pixels.\n","sig":null,"attributes":[{"value":"/ Viewport width in physical pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125690,"byte_end":125728,"line_start":765,"line_end":765,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126314,"byte_end":126332,"line_start":781,"line_end":781,"column_start":12,"column_end":30},"name":"viewport_in_pixels","qualname":"<PaintCallbackInfo>::viewport_in_pixels","value":"fn viewport_in_pixels<'_>(&'_ Self) -> ViewportInPixels","parent":null,"children":[],"decl_id":null,"docs":" The viewport rectangle. This is what you would use in e.g. `glViewport`.\n","sig":null,"attributes":[{"value":"/ The viewport rectangle. This is what you would use in e.g. `glViewport`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126226,"byte_end":126302,"line_start":780,"line_end":780,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126517,"byte_end":126536,"line_start":786,"line_end":786,"column_start":12,"column_end":31},"name":"clip_rect_in_pixels","qualname":"<PaintCallbackInfo>::clip_rect_in_pixels","value":"fn clip_rect_in_pixels<'_>(&'_ Self) -> ViewportInPixels","parent":null,"children":[],"decl_id":null,"docs":" The \"scissor\" or \"clip\" rectangle. This is what you would use in e.g. `glScissor`.\n","sig":null,"attributes":[{"value":"/ The \"scissor\" or \"clip\" rectangle. This is what you would use in e.g. `glScissor`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126419,"byte_end":126505,"line_start":785,"line_end":785,"column_start":5,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":2701},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126788,"byte_end":126801,"line_start":795,"line_end":795,"column_start":12,"column_end":25},"name":"PaintCallback","qualname":"::shape::PaintCallback","value":"PaintCallback { rect, callback }","parent":null,"children":[{"krate":0,"index":2702},{"krate":0,"index":2703}],"decl_id":null,"docs":" If you want to paint some 3D shapes inside an egui region, you can use this.","sig":null,"attributes":[{"value":"/ If you want to paint some 3D shapes inside an egui region, you can use this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126622,"byte_end":126702,"line_start":791,"line_end":791,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126703,"byte_end":126706,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/ This is advanced usage, and is backend specific.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126707,"byte_end":126759,"line_start":793,"line_end":793,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126836,"byte_end":126840,"line_start":797,"line_end":797,"column_start":9,"column_end":13},"name":"rect","qualname":"::shape::PaintCallback::rect","value":"emath::Rect","parent":{"krate":0,"index":2701},"children":[],"decl_id":null,"docs":" Where to paint.\n","sig":null,"attributes":[{"value":"/ Where to paint.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126808,"byte_end":126827,"line_start":796,"line_end":796,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127550,"byte_end":127558,"line_start":813,"line_end":813,"column_start":9,"column_end":17},"name":"callback","qualname":"::shape::PaintCallback::callback","value":"std::sync::Arc<(dyn std::any::Any + std::marker::Send + std::marker::Sync + 'static)>","parent":{"krate":0,"index":2701},"children":[],"decl_id":null,"docs":" Paint something custom (e.g. 3D stuff).","sig":null,"attributes":[{"value":"/ Paint something custom (e.g. 3D stuff).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126853,"byte_end":126896,"line_start":799,"line_end":799,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126901,"byte_end":126904,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ The concrete value of `callback` depends on the rendering backend used. For instance, the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":126909,"byte_end":127002,"line_start":801,"line_end":801,"column_start":5,"column_end":98}},{"value":"/ `glow` backend requires that callback be an `egui_glow::CallbackFn` while the `wgpu`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127007,"byte_end":127095,"line_start":802,"line_end":802,"column_start":5,"column_end":93}},{"value":"/ backend requires a `egui_wgpu::CallbackFn`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127100,"byte_end":127147,"line_start":803,"line_end":803,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127152,"byte_end":127155,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ If the type cannnot be downcast to the type expected by the current backend the callback","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127160,"byte_end":127252,"line_start":805,"line_end":805,"column_start":5,"column_end":97}},{"value":"/ will not be drawn.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127257,"byte_end":127279,"line_start":806,"line_end":806,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127284,"byte_end":127287,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ The rendering backend is responsible for first setting the active viewport to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127292,"byte_end":127373,"line_start":808,"line_end":808,"column_start":5,"column_end":86}},{"value":"/ [`Self::rect`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127378,"byte_end":127397,"line_start":809,"line_end":809,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127402,"byte_end":127405,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ The rendering backend is also responsible for restoring any state, such as the bound shader","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127410,"byte_end":127505,"line_start":811,"line_end":811,"column_start":5,"column_end":100}},{"value":"/ program, vertex array, etc.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127510,"byte_end":127541,"line_start":812,"line_end":812,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127639,"byte_end":127642,"line_start":817,"line_end":817,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PaintCallback as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut std::fmt::Formatter) -> std::fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127880,"byte_end":127882,"line_start":825,"line_end":825,"column_start":8,"column_end":10},"name":"eq","qualname":"<PaintCallback as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":2,"index":2920},"children":[],"decl_id":{"krate":2,"index":2922},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":128336,"byte_end":128340,"line_start":837,"line_end":837,"column_start":8,"column_end":12},"name":"from","qualname":"<Shape as std::convert::From>::from","value":"fn from(PaintCallback) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":128311,"byte_end":128328,"line_start":836,"line_end":836,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape_transform.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shape_transform","qualname":"::shape_transform","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape_transform.rs","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape_transform.rs","byte_start":128434,"byte_end":128447,"line_start":3,"line_end":3,"column_start":8,"column_end":21},"name":"adjust_colors","qualname":"::shape_transform::adjust_colors","value":"fn adjust_colors<'_, '_,\nimpl Fn(&mut Color32)>(&'_ mut Shape, &'_ impl Fn(&mut Color32)) where\nimpl Fn(&mut Color32): for<'_> Fn(&'_ mut Color32) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: match_same_arms)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape_transform.rs","byte_start":128511,"byte_end":128545,"line_start":4,"line_end":4,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stats","qualname":"::stats","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":2706},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":574},{"krate":0,"index":2721},{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":2735},{"krate":0,"index":2747},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":611},{"krate":0,"index":615}],"decl_id":null,"docs":" Collect statistics about what is being painted.\n","sig":null,"attributes":[{"value":"/ Collect statistics about what is being painted.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":130385,"byte_end":130436,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2721},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":130807,"byte_end":130816,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"AllocInfo","qualname":"::stats::AllocInfo","value":"AllocInfo {  }","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725}],"decl_id":null,"docs":" Aggregate information about a bunch of allocations.\n","sig":null,"attributes":[{"value":"/ Aggregate information about a bunch of allocations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":130697,"byte_end":130752,"line_start":19,"line_end":19,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":130965,"byte_end":130969,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"from","qualname":"<AllocInfo as std::convert::From>::from","value":"fn from<'_>(&'_ [T]) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":131106,"byte_end":131109,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"add","qualname":"<AllocInfo as std::ops::Add>::add","value":"fn add(Self, AllocInfo) -> AllocInfo","parent":{"krate":2,"index":3336},"children":[],"decl_id":{"krate":2,"index":3339},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":131825,"byte_end":131835,"line_start":56,"line_end":56,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<AllocInfo as std::ops::AddAssign>::add_assign","value":"fn add_assign<'_>(&'_ mut Self, AllocInfo)","parent":{"krate":2,"index":3367},"children":[],"decl_id":{"krate":2,"index":3369},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":131946,"byte_end":131949,"line_start":62,"line_end":62,"column_start":8,"column_end":11},"name":"sum","qualname":"<AllocInfo as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = Self>","parent":{"krate":2,"index":8369},"children":[],"decl_id":{"krate":2,"index":8371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":132699,"byte_end":132710,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"from_galley","qualname":"<AllocInfo>::from_galley","value":"fn from_galley<'_>(&'_ Galley) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":133057,"byte_end":133066,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"from_mesh","qualname":"<AllocInfo>::from_mesh","value":"fn from_mesh<'_>(&'_ Mesh) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":133183,"byte_end":133193,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<AllocInfo>::from_slice","value":"fn from_slice<T, '_>(&'_ [T]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":133520,"byte_end":133532,"line_start":113,"line_end":113,"column_start":12,"column_end":24},"name":"num_elements","qualname":"<AllocInfo>::num_elements","value":"fn num_elements<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":133660,"byte_end":133670,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"num_allocs","qualname":"<AllocInfo>::num_allocs","value":"fn num_allocs<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":133731,"byte_end":133740,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"num_bytes","qualname":"<AllocInfo>::num_bytes","value":"fn num_bytes<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":133800,"byte_end":133809,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"megabytes","qualname":"<AllocInfo>::megabytes","value":"fn megabytes<'_>(&'_ Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":133883,"byte_end":133889,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"format","qualname":"<AllocInfo>::format","value":"fn format<'_, '_>(&'_ Self, &'_ str) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":134843,"byte_end":134853,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"PaintStats","qualname":"::stats::PaintStats","value":"PaintStats { shapes, shape_text, shape_path, shape_mesh, shape_vec, num_callbacks, text_shape_vertices, text_shape_indices, clipped_primitives, vertices, indices }","parent":null,"children":[{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746}],"decl_id":null,"docs":" Collected allocation statistics for shapes and meshes.\n","sig":null,"attributes":[{"value":"/ Collected allocation statistics for shapes and meshes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":134741,"byte_end":134799,"line_start":160,"line_end":160,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":134864,"byte_end":134870,"line_start":163,"line_end":163,"column_start":9,"column_end":15},"name":"shapes","qualname":"::stats::PaintStats::shapes","value":"stats::AllocInfo","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":134891,"byte_end":134901,"line_start":164,"line_end":164,"column_start":9,"column_end":19},"name":"shape_text","qualname":"::stats::PaintStats::shape_text","value":"stats::AllocInfo","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2738},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":134922,"byte_end":134932,"line_start":165,"line_end":165,"column_start":9,"column_end":19},"name":"shape_path","qualname":"::stats::PaintStats::shape_path","value":"stats::AllocInfo","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2739},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":134953,"byte_end":134963,"line_start":166,"line_end":166,"column_start":9,"column_end":19},"name":"shape_mesh","qualname":"::stats::PaintStats::shape_mesh","value":"stats::AllocInfo","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":134984,"byte_end":134993,"line_start":167,"line_end":167,"column_start":9,"column_end":18},"name":"shape_vec","qualname":"::stats::PaintStats::shape_vec","value":"stats::AllocInfo","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":135014,"byte_end":135027,"line_start":168,"line_end":168,"column_start":9,"column_end":22},"name":"num_callbacks","qualname":"::stats::PaintStats::num_callbacks","value":"usize","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":135045,"byte_end":135064,"line_start":170,"line_end":170,"column_start":9,"column_end":28},"name":"text_shape_vertices","qualname":"::stats::PaintStats::text_shape_vertices","value":"stats::AllocInfo","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2743},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":135085,"byte_end":135103,"line_start":171,"line_end":171,"column_start":9,"column_end":27},"name":"text_shape_indices","qualname":"::stats::PaintStats::text_shape_indices","value":"stats::AllocInfo","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":135168,"byte_end":135186,"line_start":174,"line_end":174,"column_start":9,"column_end":27},"name":"clipped_primitives","qualname":"::stats::PaintStats::clipped_primitives","value":"stats::AllocInfo","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" Number of separate clip rectangles\n","sig":null,"attributes":[{"value":"/ Number of separate clip rectangles","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":135121,"byte_end":135159,"line_start":173,"line_end":173,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":135207,"byte_end":135215,"line_start":175,"line_end":175,"column_start":9,"column_end":17},"name":"vertices","qualname":"::stats::PaintStats::vertices","value":"stats::AllocInfo","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2746},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":135236,"byte_end":135243,"line_start":176,"line_end":176,"column_start":9,"column_end":16},"name":"indices","qualname":"::stats::PaintStats::indices","value":"stats::AllocInfo","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":135288,"byte_end":135299,"line_start":180,"line_end":180,"column_start":12,"column_end":23},"name":"from_shapes","qualname":"<PaintStats>::from_shapes","value":"fn from_shapes<'_>(&'_ [ClippedShape]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":137098,"byte_end":137121,"line_start":228,"line_end":228,"column_start":12,"column_end":35},"name":"with_clipped_primitives","qualname":"<PaintStats>::with_clipped_primitives","value":"fn with_clipped_primitives<'_>(Self, &'_ [crate::ClippedPrimitive]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2763},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138062,"byte_end":138068,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Stroke","qualname":"::stroke::Stroke","value":"Stroke { width, color }","parent":null,"children":[{"krate":0,"index":2764},{"krate":0,"index":2765}],"decl_id":null,"docs":" Describes the width and color of a line.","sig":null,"attributes":[{"value":"/ Describes the width and color of a line.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":137819,"byte_end":137863,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":137864,"byte_end":137867,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The default stroke is the same as [`Stroke::none`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":137868,"byte_end":137923,"line_start":7,"line_end":7,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2764},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138079,"byte_end":138084,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"width","qualname":"::stroke::Stroke::width","value":"f32","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138099,"byte_end":138104,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"color","qualname":"::stroke::Stroke::color","value":"color::Color32","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138202,"byte_end":138206,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"none","qualname":"<Stroke>::none","value":"fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Stroke::default`].\n","sig":null,"attributes":[{"value":"/ Same as [`Stroke::default`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138136,"byte_end":138168,"line_start":16,"line_end":16,"column_start":5,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138173,"byte_end":138190,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138296,"byte_end":138299,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Stroke>::new","value":"fn new<impl Into<f32>, impl Into<Color32>>(impl Into<f32>, impl Into<Color32>)\n-> Self where impl Into<f32>: Into<f32>, impl Into<Color32>: Into<Color32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138275,"byte_end":138284,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138537,"byte_end":138545,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Stroke>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if width is zero or color is transparent\n","sig":null,"attributes":[{"value":"/ True if width is zero or color is transparent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138462,"byte_end":138511,"line_start":30,"line_end":30,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138516,"byte_end":138525,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138741,"byte_end":138745,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"from","qualname":"<Stroke as std::convert::From>::from","value":"fn from((f32, Color)) -> Stroke","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138716,"byte_end":138733,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138894,"byte_end":138898,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"hash","qualname":"<Stroke as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: std::hash::Hasher","parent":{"krate":2,"index":10536},"children":[],"decl_id":{"krate":2,"index":10537},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138869,"byte_end":138886,"line_start":48,"line_end":48,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tessellator","qualname":"::tessellator","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":654},{"krate":0,"index":674},{"krate":0,"index":2833},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2918},{"krate":0,"index":2853},{"krate":0,"index":2912},{"krate":0,"index":2844},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":705},{"krate":0,"index":724},{"krate":0,"index":727}],"decl_id":null,"docs":" Converts graphics primitives into textured triangles.","sig":null,"attributes":[{"value":"/ Converts graphics primitives into textured triangles.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":139063,"byte_end":139120,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":139121,"byte_end":139124,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module converts lines, circles, text and more represented by [`Shape`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":139125,"byte_end":139204,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ into textured triangles represented by [`Mesh`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":139205,"byte_end":139257,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":139259,"byte_end":139289,"line_start":6,"line_end":6,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":149767,"byte_end":149771,"line_start":321,"line_end":321,"column_start":12,"column_end":16},"name":"Path","qualname":"::tessellator::Path","value":"","parent":null,"children":[],"decl_id":null,"docs":" A connected line (without thickness or gaps) which can be tessellated\n to either to a stroke (with thickness) or a filled convex area.\n Used as a scratch-pad during tessellation.\n","sig":null,"attributes":[{"value":"/ A connected line (without thickness or gaps) which can be tessellated","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":149534,"byte_end":149607,"line_start":317,"line_end":317,"column_start":1,"column_end":74}},{"value":"/ to either to a stroke (with thickness) or a filled convex area.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":149608,"byte_end":149675,"line_start":318,"line_end":318,"column_start":1,"column_end":68}},{"value":"/ Used as a scratch-pad during tessellation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":149676,"byte_end":149722,"line_start":319,"line_end":319,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":149835,"byte_end":149840,"line_start":325,"line_end":325,"column_start":12,"column_end":17},"name":"clear","qualname":"<Path>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":149806,"byte_end":149823,"line_start":324,"line_end":324,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":149918,"byte_end":149925,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Path>::reserve","value":"fn reserve<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":149889,"byte_end":149906,"line_start":329,"line_end":329,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":150034,"byte_end":150043,"line_start":335,"line_end":335,"column_start":12,"column_end":21},"name":"add_point","qualname":"<Path>::add_point","value":"fn add_point<'_>(&'_ mut Self, Pos2, Vec2)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":150005,"byte_end":150022,"line_start":334,"line_end":334,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":150148,"byte_end":150158,"line_start":339,"line_end":339,"column_start":12,"column_end":22},"name":"add_circle","qualname":"<Path>::add_circle","value":"fn add_circle<'_>(&'_ mut Self, Pos2, f32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":151310,"byte_end":151326,"line_start":373,"line_end":373,"column_start":12,"column_end":28},"name":"add_line_segment","qualname":"<Path>::add_line_segment","value":"fn add_line_segment<'_>(&'_ mut Self, [Pos2; ])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":151555,"byte_end":151570,"line_start":380,"line_end":380,"column_start":12,"column_end":27},"name":"add_open_points","qualname":"<Path>::add_open_points","value":"fn add_open_points<'_, '_>(&'_ mut Self, &'_ [Pos2])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":153321,"byte_end":153334,"line_start":426,"line_end":426,"column_start":12,"column_end":25},"name":"add_line_loop","qualname":"<Path>::add_line_loop","value":"fn add_line_loop<'_, '_>(&'_ mut Self, &'_ [Pos2])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":155290,"byte_end":155301,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"stroke_open","qualname":"<Path>::stroke_open","value":"fn stroke_open<'_, '_>(&'_ Self, f32, Stroke, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Open-ended.\n","sig":null,"attributes":[{"value":"/ Open-ended.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":155263,"byte_end":155278,"line_start":475,"line_end":475,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":155503,"byte_end":155516,"line_start":481,"line_end":481,"column_start":12,"column_end":25},"name":"stroke_closed","qualname":"<Path>::stroke_closed","value":"fn stroke_closed<'_, '_>(&'_ Self, f32, Stroke, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" A closed path (returning to the first point).\n","sig":null,"attributes":[{"value":"/ A closed path (returning to the first point).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":155442,"byte_end":155491,"line_start":480,"line_end":480,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":155666,"byte_end":155672,"line_start":485,"line_end":485,"column_start":12,"column_end":18},"name":"stroke","qualname":"<Path>::stroke","value":"fn stroke<'_, '_>(&'_ Self, f32, PathType, Stroke, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":156069,"byte_end":156073,"line_start":494,"line_end":494,"column_start":12,"column_end":16},"name":"fill","qualname":"<Path>::fill","value":"fn fill<'_, '_>(&'_ mut Self, f32, Color32, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" The path is taken to be closed (i.e. returning to the start again).","sig":null,"attributes":[{"value":"/ The path is taken to be closed (i.e. returning to the start again).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":155829,"byte_end":155900,"line_start":489,"line_end":489,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":155905,"byte_end":155908,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ Calling this may reverse the vertices in the path if they are wrong winding order.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":155913,"byte_end":155999,"line_start":491,"line_end":491,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":156004,"byte_end":156007,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The preferred winding order is clockwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":156012,"byte_end":156057,"line_start":493,"line_end":493,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":156216,"byte_end":156220,"line_start":499,"line_end":499,"column_start":9,"column_end":13},"name":"path","qualname":"::tessellator::path","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":687}],"decl_id":null,"docs":" Helpers for constructing paths\n","sig":null,"attributes":[{"value":"/ Helpers for constructing paths","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":156227,"byte_end":156261,"line_start":500,"line_end":500,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":156359,"byte_end":156376,"line_start":505,"line_end":505,"column_start":12,"column_end":29},"name":"rounded_rectangle","qualname":"::tessellator::path::rounded_rectangle","value":"fn rounded_rectangle<'_>(&'_ mut Vec<Pos2>, Rect, Rounding)","parent":null,"children":[],"decl_id":null,"docs":" overwrites existing points\n","sig":null,"attributes":[{"value":"/ overwrites existing points","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":156317,"byte_end":156347,"line_start":504,"line_end":504,"column_start":5,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":157816,"byte_end":157835,"line_start":547,"line_end":547,"column_start":12,"column_end":31},"name":"add_circle_quadrant","qualname":"::tessellator::path::add_circle_quadrant","value":"fn add_circle_quadrant<'_>(&'_ mut Vec<Pos2>, Pos2, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Add one quadrant of a circle","sig":null,"attributes":[{"value":"/ Add one quadrant of a circle","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":157290,"byte_end":157322,"line_start":529,"line_end":529,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":157327,"byte_end":157330,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ * quadrant 0: right bottom","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":157335,"byte_end":157365,"line_start":531,"line_end":531,"column_start":5,"column_end":35}},{"value":"/ * quadrant 1: left bottom","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":157370,"byte_end":157399,"line_start":532,"line_end":532,"column_start":5,"column_end":34}},{"value":"/ * quadrant 2: left top","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":157404,"byte_end":157430,"line_start":533,"line_end":533,"column_start":5,"column_end":31}},{"value":"/ * quadrant 3: right top","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":157435,"byte_end":157462,"line_start":534,"line_end":534,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":159777,"byte_end":159781,"line_start":591,"line_end":591,"column_start":5,"column_end":9},"name":"Open","qualname":"::tessellator::PathType::Open","value":"PathType::Open","parent":{"krate":0,"index":2833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2836},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":159787,"byte_end":159793,"line_start":592,"line_end":592,"column_start":5,"column_end":11},"name":"Closed","qualname":"::tessellator::PathType::Closed","value":"PathType::Closed","parent":{"krate":0,"index":2833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2833},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":159762,"byte_end":159770,"line_start":590,"line_end":590,"column_start":10,"column_end":18},"name":"PathType","qualname":"::tessellator::PathType","value":"enum PathType { Open, Closed, }","parent":null,"children":[{"krate":0,"index":2834},{"krate":0,"index":2836}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2918},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160007,"byte_end":160026,"line_start":599,"line_end":599,"column_start":12,"column_end":31},"name":"TessellationOptions","qualname":"::tessellator::TessellationOptions","value":"TessellationOptions { feathering, feathering_size_in_pixels, coarse_tessellation_culling, prerasterized_discs, round_text_to_pixels, debug_paint_clip_rects, debug_paint_text_rects, debug_ignore_clip_rects, bezier_tolerance, epsilon }","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928}],"decl_id":null,"docs":" Tessellation quality options\n","sig":null,"attributes":[{"value":"/ Tessellation quality options","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":159798,"byte_end":159830,"line_start":595,"line_end":595,"column_start":1,"column_end":33}},{"value":"serde(default)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":159979,"byte_end":159993,"line_start":598,"line_end":598,"column_start":31,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2919},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160489,"byte_end":160499,"line_start":610,"line_end":610,"column_start":9,"column_end":19},"name":"feathering","qualname":"::tessellator::TessellationOptions::feathering","value":"bool","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" Use \"feathering\" to smooth out the edges of shapes as a form of anti-aliasing.","sig":null,"attributes":[{"value":"/ Use \"feathering\" to smooth out the edges of shapes as a form of anti-aliasing.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160033,"byte_end":160115,"line_start":600,"line_end":600,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160120,"byte_end":160123,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ Feathering works by making each edge into a thin gradient into transparency.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160128,"byte_end":160208,"line_start":602,"line_end":602,"column_start":5,"column_end":85}},{"value":"/ The size of this edge is controlled by [`Self::feathering_size_in_pixels`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160213,"byte_end":160292,"line_start":603,"line_end":603,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160297,"byte_end":160300,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ This makes shapes appear smoother, but requires more triangles and is therefore slower.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160305,"byte_end":160396,"line_start":605,"line_end":605,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160401,"byte_end":160404,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ This setting does not affect text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160409,"byte_end":160447,"line_start":607,"line_end":607,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160452,"byte_end":160455,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Default: `true`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160460,"byte_end":160480,"line_start":609,"line_end":609,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2920},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160706,"byte_end":160731,"line_start":616,"line_end":616,"column_start":9,"column_end":34},"name":"feathering_size_in_pixels","qualname":"::tessellator::TessellationOptions::feathering_size_in_pixels","value":"f32","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" The size of the the feathering, in physical pixels.","sig":null,"attributes":[{"value":"/ The size of the the feathering, in physical pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160512,"byte_end":160567,"line_start":612,"line_end":612,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160572,"byte_end":160575,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ The default, and suggested, value for this is `1.0`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160580,"byte_end":160636,"line_start":614,"line_end":614,"column_start":5,"column_end":61}},{"value":"/ If you use a larger value, edges will appear blurry.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160641,"byte_end":160697,"line_start":615,"line_end":615,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":2921},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160851,"byte_end":160878,"line_start":620,"line_end":620,"column_start":9,"column_end":36},"name":"coarse_tessellation_culling","qualname":"::tessellator::TessellationOptions::coarse_tessellation_culling","value":"bool","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" If `true` (default) cull certain primitives before tessellating them.\n This likely makes\n","sig":null,"attributes":[{"value":"/ If `true` (default) cull certain primitives before tessellating them.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160743,"byte_end":160816,"line_start":618,"line_end":618,"column_start":5,"column_end":78}},{"value":"/ This likely makes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160821,"byte_end":160842,"line_start":619,"line_end":619,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2922},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161014,"byte_end":161033,"line_start":624,"line_end":624,"column_start":9,"column_end":28},"name":"prerasterized_discs","qualname":"::tessellator::TessellationOptions::prerasterized_discs","value":"bool","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" If `true`, small filled circled will be optimized by using pre-rasterized circled\n from the font atlas.\n","sig":null,"attributes":[{"value":"/ If `true`, small filled circled will be optimized by using pre-rasterized circled","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160891,"byte_end":160976,"line_start":622,"line_end":622,"column_start":5,"column_end":90}},{"value":"/ from the font atlas.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":160981,"byte_end":161005,"line_start":623,"line_end":623,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2923},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161158,"byte_end":161178,"line_start":628,"line_end":628,"column_start":9,"column_end":29},"name":"round_text_to_pixels","qualname":"::tessellator::TessellationOptions::round_text_to_pixels","value":"bool","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" If `true` (default) align text to mesh grid.\n This makes the text sharper on most platforms.\n","sig":null,"attributes":[{"value":"/ If `true` (default) align text to mesh grid.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161046,"byte_end":161094,"line_start":626,"line_end":626,"column_start":5,"column_end":53}},{"value":"/ This makes the text sharper on most platforms.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161099,"byte_end":161149,"line_start":627,"line_end":627,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2924},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161245,"byte_end":161267,"line_start":631,"line_end":631,"column_start":9,"column_end":31},"name":"debug_paint_clip_rects","qualname":"::tessellator::TessellationOptions::debug_paint_clip_rects","value":"bool","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" Output the clip rectangles to be painted.\n","sig":null,"attributes":[{"value":"/ Output the clip rectangles to be painted.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161191,"byte_end":161236,"line_start":630,"line_end":630,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2925},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161331,"byte_end":161353,"line_start":634,"line_end":634,"column_start":9,"column_end":31},"name":"debug_paint_text_rects","qualname":"::tessellator::TessellationOptions::debug_paint_text_rects","value":"bool","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" Output the text-containing rectangles.\n","sig":null,"attributes":[{"value":"/ Output the text-containing rectangles.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161280,"byte_end":161322,"line_start":633,"line_end":633,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2926},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161413,"byte_end":161436,"line_start":637,"line_end":637,"column_start":9,"column_end":32},"name":"debug_ignore_clip_rects","qualname":"::tessellator::TessellationOptions::debug_ignore_clip_rects","value":"bool","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" If true, no clipping will be done.\n","sig":null,"attributes":[{"value":"/ If true, no clipping will be done.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161366,"byte_end":161404,"line_start":636,"line_end":636,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161534,"byte_end":161550,"line_start":640,"line_end":640,"column_start":9,"column_end":25},"name":"bezier_tolerance","qualname":"::tessellator::TessellationOptions::bezier_tolerance","value":"f32","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" The maximum distance between the original curve and the flattened curve.\n","sig":null,"attributes":[{"value":"/ The maximum distance between the original curve and the flattened curve.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161449,"byte_end":161525,"line_start":639,"line_end":639,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":2928},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161646,"byte_end":161653,"line_start":643,"line_end":643,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::tessellator::TessellationOptions::epsilon","value":"f32","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" The default value will be 1.0e-5, it will be used during float compare.\n","sig":null,"attributes":[{"value":"/ The default value will be 1.0e-5, it will be used during float compare.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161562,"byte_end":161637,"line_start":642,"line_end":642,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161709,"byte_end":161716,"line_start":647,"line_end":647,"column_start":8,"column_end":15},"name":"default","qualname":"<TessellationOptions as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":174484,"byte_end":174495,"line_start":973,"line_end":973,"column_start":12,"column_end":23},"name":"Tessellator","qualname":"::tessellator::Tessellator","value":"Tessellator {  }","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"decl_id":null,"docs":" Converts [`Shape`]s into triangles ([`Mesh`]).","sig":null,"attributes":[{"value":"/ Converts [`Shape`]s into triangles ([`Mesh`]).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":174259,"byte_end":174309,"line_start":968,"line_end":968,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":174310,"byte_end":174313,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ For performance reasons it is smart to reuse the same [`Tessellator`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":174314,"byte_end":174388,"line_start":970,"line_end":970,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":174389,"byte_end":174392,"line_start":971,"line_end":971,"column_start":1,"column_end":4}},{"value":"/ Se also [`tessellate_shapes`], a convenient wrapper around [`Tessellator`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":174393,"byte_end":174472,"line_start":972,"line_end":972,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":175209,"byte_end":175212,"line_start":992,"line_end":992,"column_start":12,"column_end":15},"name":"new","qualname":"<Tessellator>::new","value":"fn new(f32, TessellationOptions, [usize; ], Vec<PreparedDisc>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Tessellator`].","sig":null,"attributes":[{"value":"/ Create a new [`Tessellator`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":174927,"byte_end":174960,"line_start":988,"line_end":988,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":174965,"byte_end":174968,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ * `font_tex_size`: size of the font texture. Required to normalize glyph uv rectangles when tessellating text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":174973,"byte_end":175087,"line_start":990,"line_end":990,"column_start":5,"column_end":119}},{"value":"/ * `prepared_discs`: What [`TextureAtlas::prepared_discs`] returns. Can safely be set to an empty vec.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":175092,"byte_end":175197,"line_start":991,"line_end":991,"column_start":5,"column_end":110}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":175941,"byte_end":175954,"line_start":1017,"line_end":1017,"column_start":12,"column_end":25},"name":"set_clip_rect","qualname":"<Tessellator>::set_clip_rect","value":"fn set_clip_rect<'_>(&'_ mut Self, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Set the [`Rect`] to use for culling.\n","sig":null,"attributes":[{"value":"/ Set the [`Rect`] to use for culling.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":175889,"byte_end":175929,"line_start":1016,"line_end":1016,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":176061,"byte_end":176075,"line_start":1022,"line_end":1022,"column_start":12,"column_end":26},"name":"round_to_pixel","qualname":"<Tessellator>::round_to_pixel","value":"fn round_to_pixel<'_>(&'_ Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":176032,"byte_end":176049,"line_start":1021,"line_end":1021,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":176352,"byte_end":176376,"line_start":1031,"line_end":1031,"column_start":12,"column_end":36},"name":"tessellate_clipped_shape","qualname":"<Tessellator>::tessellate_clipped_shape","value":"fn tessellate_clipped_shape<'_,\n'_>(&'_ mut Self, ClippedShape, &'_ mut Vec<ClippedPrimitive>)","parent":null,"children":[],"decl_id":null,"docs":" Tessellate a clipped shape into a list of primitives.\n","sig":null,"attributes":[{"value":"/ Tessellate a clipped shape into a list of primitives.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":176283,"byte_end":176340,"line_start":1030,"line_end":1030,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":178490,"byte_end":178506,"line_start":1093,"line_end":1093,"column_start":12,"column_end":28},"name":"tessellate_shape","qualname":"<Tessellator>::tessellate_shape","value":"fn tessellate_shape<'_, '_>(&'_ mut Self, Shape, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Tessellate a single [`Shape`] into a [`Mesh`].","sig":null,"attributes":[{"value":"/ Tessellate a single [`Shape`] into a [`Mesh`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":178172,"byte_end":178222,"line_start":1087,"line_end":1087,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":178227,"byte_end":178230,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ This call can panic the given shape is of [`Shape::Vec`] or [`Shape::Callback`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":178235,"byte_end":178319,"line_start":1089,"line_end":1089,"column_start":5,"column_end":89}},{"value":"/ For that, use [`Self::tessellate_clipped_shape`] instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":178324,"byte_end":178385,"line_start":1090,"line_end":1090,"column_start":5,"column_end":66}},{"value":"/ * `shape`: the shape to tessellate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":178390,"byte_end":178429,"line_start":1091,"line_end":1091,"column_start":5,"column_end":44}},{"value":"/ * `out`: triangles are appended to this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":178434,"byte_end":178478,"line_start":1092,"line_end":1092,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":180629,"byte_end":180646,"line_start":1148,"line_end":1148,"column_start":12,"column_end":29},"name":"tessellate_circle","qualname":"<Tessellator>::tessellate_circle","value":"fn tessellate_circle<'_, '_>(&'_ mut Self, CircleShape, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Tessellate a single [`CircleShape`] into a [`Mesh`].","sig":null,"attributes":[{"value":"/ Tessellate a single [`CircleShape`] into a [`Mesh`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":180459,"byte_end":180515,"line_start":1144,"line_end":1144,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":180520,"byte_end":180523,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ * `shape`: the circle to tessellate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":180528,"byte_end":180568,"line_start":1146,"line_end":1146,"column_start":5,"column_end":45}},{"value":"/ * `out`: triangles are appended to this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":180573,"byte_end":180617,"line_start":1147,"line_end":1147,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":182649,"byte_end":182664,"line_start":1204,"line_end":1204,"column_start":12,"column_end":27},"name":"tessellate_mesh","qualname":"<Tessellator>::tessellate_mesh","value":"fn tessellate_mesh<'_, '_, '_>(&'_ mut Self, &'_ Mesh, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Tessellate a single [`Mesh`] into a [`Mesh`].","sig":null,"attributes":[{"value":"/ Tessellate a single [`Mesh`] into a [`Mesh`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":182489,"byte_end":182538,"line_start":1200,"line_end":1200,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":182543,"byte_end":182546,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ * `mesh`: the mesh to tessellate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":182551,"byte_end":182588,"line_start":1202,"line_end":1202,"column_start":5,"column_end":42}},{"value":"/ * `out`: triangles are appended to this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":182593,"byte_end":182637,"line_start":1203,"line_end":1203,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":183240,"byte_end":183255,"line_start":1223,"line_end":1223,"column_start":12,"column_end":27},"name":"tessellate_line","qualname":"<Tessellator>::tessellate_line","value":"fn tessellate_line<'_, '_>(&'_ mut Self, [Pos2; ], Stroke, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Tessellate a line segment between the two points with the given stoken into a [`Mesh`].","sig":null,"attributes":[{"value":"/ Tessellate a line segment between the two points with the given stoken into a [`Mesh`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":183037,"byte_end":183128,"line_start":1219,"line_end":1219,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":183133,"byte_end":183136,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ * `shape`: the mesh to tessellate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":183141,"byte_end":183179,"line_start":1221,"line_end":1221,"column_start":5,"column_end":43}},{"value":"/ * `out`: triangles are appended to this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":183184,"byte_end":183228,"line_start":1222,"line_end":1222,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":183974,"byte_end":183989,"line_start":1246,"line_end":1246,"column_start":12,"column_end":27},"name":"tessellate_path","qualname":"<Tessellator>::tessellate_path","value":"fn tessellate_path<'_, '_, '_>(&'_ mut Self, &'_ PathShape, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Tessellate a single [`PathShape`] into a [`Mesh`].","sig":null,"attributes":[{"value":"/ Tessellate a single [`PathShape`] into a [`Mesh`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":183803,"byte_end":183857,"line_start":1242,"line_end":1242,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":183862,"byte_end":183865,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ * `path_shape`: the path to tessellate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":183870,"byte_end":183913,"line_start":1244,"line_end":1244,"column_start":5,"column_end":48}},{"value":"/ * `out`: triangles are appended to this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":183918,"byte_end":183962,"line_start":1245,"line_end":1245,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":185269,"byte_end":185284,"line_start":1291,"line_end":1291,"column_start":12,"column_end":27},"name":"tessellate_rect","qualname":"<Tessellator>::tessellate_rect","value":"fn tessellate_rect<'_, '_, '_>(&'_ mut Self, &'_ RectShape, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Tessellate a single [`Rect`] into a [`Mesh`].","sig":null,"attributes":[{"value":"/ Tessellate a single [`Rect`] into a [`Mesh`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":185104,"byte_end":185153,"line_start":1287,"line_end":1287,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":185158,"byte_end":185161,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ * `rect`: the rectangle to tessellate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":185166,"byte_end":185208,"line_start":1289,"line_end":1289,"column_start":5,"column_end":47}},{"value":"/ * `out`: triangles are appended to this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":185213,"byte_end":185257,"line_start":1290,"line_end":1290,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":186401,"byte_end":186416,"line_start":1324,"line_end":1324,"column_start":12,"column_end":27},"name":"tessellate_text","qualname":"<Tessellator>::tessellate_text","value":"fn tessellate_text<'_, '_, '_>(&'_ mut Self, &'_ TextShape, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Tessellate a single [`TextShape`] into a [`Mesh`].\n * `text_shape`: the text to tessellate.\n * `out`: triangles are appended to this.\n","sig":null,"attributes":[{"value":"/ Tessellate a single [`TextShape`] into a [`Mesh`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":186238,"byte_end":186292,"line_start":1321,"line_end":1321,"column_start":5,"column_end":59}},{"value":"/ * `text_shape`: the text to tessellate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":186297,"byte_end":186340,"line_start":1322,"line_end":1322,"column_start":5,"column_end":48}},{"value":"/ * `out`: triangles are appended to this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":186345,"byte_end":186389,"line_start":1323,"line_end":1323,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":190071,"byte_end":190098,"line_start":1429,"line_end":1429,"column_start":12,"column_end":39},"name":"tessellate_quadratic_bezier","qualname":"<Tessellator>::tessellate_quadratic_bezier","value":"fn tessellate_quadratic_bezier<'_,\n'_>(&'_ mut Self, QuadraticBezierShape, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Tessellate a single [`QuadraticBezierShape`] into a [`Mesh`].","sig":null,"attributes":[{"value":"/ Tessellate a single [`QuadraticBezierShape`] into a [`Mesh`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":189883,"byte_end":189948,"line_start":1425,"line_end":1425,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":189953,"byte_end":189956,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ * `quadratic_shape`: the shape to tessellate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":189961,"byte_end":190010,"line_start":1427,"line_end":1427,"column_start":5,"column_end":54}},{"value":"/ * `out`: triangles are appended to this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":190015,"byte_end":190059,"line_start":1428,"line_end":1428,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":190907,"byte_end":190930,"line_start":1458,"line_end":1458,"column_start":12,"column_end":35},"name":"tessellate_cubic_bezier","qualname":"<Tessellator>::tessellate_cubic_bezier","value":"fn tessellate_cubic_bezier<'_,\n'_>(&'_ mut Self, CubicBezierShape, &'_ mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Tessellate a single [`CubicBezierShape`] into a [`Mesh`].","sig":null,"attributes":[{"value":"/ Tessellate a single [`CubicBezierShape`] into a [`Mesh`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":190727,"byte_end":190788,"line_start":1454,"line_end":1454,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":190793,"byte_end":190796,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ * `cubic_shape`: the shape to tessellate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":190801,"byte_end":190846,"line_start":1456,"line_end":1456,"column_start":5,"column_end":50}},{"value":"/ * `out`: triangles are appended to this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":190851,"byte_end":190895,"line_start":1457,"line_end":1457,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":193159,"byte_end":193176,"line_start":1527,"line_end":1527,"column_start":8,"column_end":25},"name":"tessellate_shapes","qualname":"::tessellator::tessellate_shapes","value":"fn tessellate_shapes(f32, TessellationOptions, [usize; ], Vec<PreparedDisc>,\nVec<ClippedShape>) -> Vec<ClippedPrimitive>","parent":null,"children":[],"decl_id":null,"docs":" Turns [`Shape`]:s into sets of triangles.","sig":null,"attributes":[{"value":"/ Turns [`Shape`]:s into sets of triangles.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":192478,"byte_end":192523,"line_start":1512,"line_end":1512,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":192524,"byte_end":192527,"line_start":1513,"line_end":1513,"column_start":1,"column_end":4}},{"value":"/ The given shapes will tessellated in the same order as they are given.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":192528,"byte_end":192602,"line_start":1514,"line_end":1514,"column_start":1,"column_end":75}},{"value":"/ They will be batched together by clip rectangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":192603,"byte_end":192655,"line_start":1515,"line_end":1515,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":192656,"byte_end":192659,"line_start":1516,"line_end":1516,"column_start":1,"column_end":4}},{"value":"/ * `pixels_per_point`: number of physical pixels to each logical point","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":192660,"byte_end":192733,"line_start":1517,"line_end":1517,"column_start":1,"column_end":74}},{"value":"/ * `options`: tessellation quality","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":192734,"byte_end":192771,"line_start":1518,"line_end":1518,"column_start":1,"column_end":38}},{"value":"/ * `shapes`: what to tessellate","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":192772,"byte_end":192806,"line_start":1519,"line_end":1519,"column_start":1,"column_end":35}},{"value":"/ * `font_tex_size`: size of the font texture. Required to normalize glyph uv rectangles when tessellating text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":192807,"byte_end":192921,"line_start":1520,"line_end":1520,"column_start":1,"column_end":115}},{"value":"/ * `prepared_discs`: What [`TextureAtlas::prepared_discs`] returns. Can safely be set to an empty vec.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":192922,"byte_end":193027,"line_start":1521,"line_end":1521,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":193028,"byte_end":193031,"line_start":1522,"line_end":1522,"column_start":1,"column_end":4}},{"value":"/ The implementation uses a [`Tessellator`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":193032,"byte_end":193078,"line_start":1523,"line_end":1523,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":193079,"byte_end":193082,"line_start":1524,"line_end":1524,"column_start":1,"column_end":4}},{"value":"/ ## Returns","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":193083,"byte_end":193097,"line_start":1525,"line_end":1525,"column_start":1,"column_end":15}},{"value":"/ A list of clip rectangles with matching [`Mesh`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":193098,"byte_end":193151,"line_start":1526,"line_end":1526,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text","qualname":"::text","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":747},{"krate":0,"index":848},{"krate":0,"index":972},{"krate":0,"index":1057},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1167},{"krate":0,"index":1170},{"krate":0,"index":1171}],"decl_id":null,"docs":" Everything related to text, fonts, text layout, cursors etc.\n","sig":null,"attributes":[{"value":"/ Everything related to text, fonts, text layout, cursors etc.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196228,"byte_end":196292,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cursor","qualname":"::text::cursor","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","parent":null,"children":[{"krate":0,"index":2936},{"krate":0,"index":2939},{"krate":0,"index":2982},{"krate":0,"index":2929},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2934},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":2999},{"krate":0,"index":3002},{"krate":0,"index":3045},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2993},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":3058},{"krate":0,"index":3062},{"krate":0,"index":3107},{"krate":0,"index":3051},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3056},{"krate":0,"index":745},{"krate":0,"index":3120},{"krate":0,"index":3124},{"krate":0,"index":3169},{"krate":0,"index":3113},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3118}],"decl_id":null,"docs":" Different types of text cursors, i.e. ways to point into a [`super::Galley`].\n","sig":null,"attributes":[{"value":"/ Different types of text cursors, i.e. ways to point into a [`super::Galley`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":196732,"byte_end":196813,"line_start":1,"line_end":1,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2936},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":196963,"byte_end":196970,"line_start":6,"line_end":6,"column_start":12,"column_end":19},"name":"CCursor","qualname":"::text::cursor::CCursor","value":"CCursor { index, prefer_next_row }","parent":null,"children":[{"krate":0,"index":2937},{"krate":0,"index":2938}],"decl_id":null,"docs":" Character cursor\n","sig":null,"attributes":[{"value":"/ Character cursor","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":196815,"byte_end":196835,"line_start":3,"line_end":3,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2937},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197026,"byte_end":197031,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"name":"index","qualname":"::text::cursor::CCursor::index","value":"usize","parent":{"krate":0,"index":2936},"children":[],"decl_id":null,"docs":" Character offset (NOT byte offset!).\n","sig":null,"attributes":[{"value":"/ Character offset (NOT byte offset!).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":196977,"byte_end":197017,"line_start":7,"line_end":7,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2938},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197313,"byte_end":197328,"line_start":14,"line_end":14,"column_start":9,"column_end":24},"name":"prefer_next_row","qualname":"::text::cursor::CCursor::prefer_next_row","value":"bool","parent":{"krate":0,"index":2936},"children":[],"decl_id":null,"docs":" If this cursors sits right at the border of a wrapped row break (NOT paragraph break)\n do we prefer the next row?\n This is *almost* always what you want, *except* for when\n explicitly clicking the end of a row or pressing the end key.\n","sig":null,"attributes":[{"value":"/ If this cursors sits right at the border of a wrapped row break (NOT paragraph break)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197045,"byte_end":197134,"line_start":10,"line_end":10,"column_start":5,"column_end":94}},{"value":"/ do we prefer the next row?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197139,"byte_end":197169,"line_start":11,"line_end":11,"column_start":5,"column_end":35}},{"value":"/ This is *almost* always what you want, *except* for when","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197174,"byte_end":197234,"line_start":12,"line_end":12,"column_start":5,"column_end":65}},{"value":"/ explicitly clicking the end of a row or pressing the end key.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197239,"byte_end":197304,"line_start":13,"line_end":13,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197365,"byte_end":197368,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<CCursor>::new","value":"fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197655,"byte_end":197657,"line_start":29,"line_end":29,"column_start":8,"column_end":10},"name":"eq","qualname":"<CCursor as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ CCursor) -> bool","parent":{"krate":2,"index":2920},"children":[],"decl_id":{"krate":2,"index":2922},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197810,"byte_end":197813,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"add","qualname":"<CCursor as std::ops::Add>::add","value":"fn add(Self, usize) -> Self::Output","parent":{"krate":2,"index":3336},"children":[],"decl_id":{"krate":2,"index":3339},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198064,"byte_end":198067,"line_start":48,"line_end":48,"column_start":8,"column_end":11},"name":"sub","qualname":"<CCursor as std::ops::Sub>::sub","value":"fn sub(Self, usize) -> Self::Output","parent":{"krate":2,"index":3341},"children":[],"decl_id":{"krate":2,"index":3344},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198296,"byte_end":198306,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<CCursor as std::ops::AddAssign>::add_assign","value":"fn add_assign<'_>(&'_ mut Self, usize)","parent":{"krate":2,"index":3367},"children":[],"decl_id":{"krate":2,"index":3369},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198447,"byte_end":198457,"line_start":63,"line_end":63,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<CCursor as std::ops::SubAssign>::sub_assign","value":"fn sub_assign<'_>(&'_ mut Self, usize)","parent":{"krate":2,"index":3371},"children":[],"decl_id":{"krate":2,"index":3373},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198698,"byte_end":198705,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"RCursor","qualname":"::text::cursor::RCursor","value":"RCursor { row, column }","parent":null,"children":[{"krate":0,"index":3000},{"krate":0,"index":3001}],"decl_id":null,"docs":" Row Cursor\n","sig":null,"attributes":[{"value":"/ Row Cursor","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198545,"byte_end":198559,"line_start":68,"line_end":68,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":3000},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198861,"byte_end":198864,"line_start":75,"line_end":75,"column_start":9,"column_end":12},"name":"row","qualname":"::text::cursor::RCursor::row","value":"usize","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":" 0 is first row, and so on.\n Note that a single paragraph can span multiple rows.\n (a paragraph is text separated by `\\n`).\n","sig":null,"attributes":[{"value":"/ 0 is first row, and so on.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198712,"byte_end":198742,"line_start":72,"line_end":72,"column_start":5,"column_end":35}},{"value":"/ Note that a single paragraph can span multiple rows.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198747,"byte_end":198803,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ (a paragraph is text separated by `\\n`).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198808,"byte_end":198852,"line_start":74,"line_end":74,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199066,"byte_end":199072,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"name":"column","qualname":"::text::cursor::RCursor::column","value":"usize","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":" Character based (NOT bytes).\n It is fine if this points to something beyond the end of the current row.\n When moving up/down it may again be within the next row.\n","sig":null,"attributes":[{"value":"/ Character based (NOT bytes).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198878,"byte_end":198910,"line_start":77,"line_end":77,"column_start":5,"column_end":37}},{"value":"/ It is fine if this points to something beyond the end of the current row.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198915,"byte_end":198992,"line_start":78,"line_end":78,"column_start":5,"column_end":82}},{"value":"/ When moving up/down it may again be within the next row.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198997,"byte_end":199057,"line_start":79,"line_end":79,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3058},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199232,"byte_end":199239,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"PCursor","qualname":"::text::cursor::PCursor","value":"PCursor { paragraph, offset, prefer_next_row }","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061}],"decl_id":null,"docs":" Paragraph Cursor\n","sig":null,"attributes":[{"value":"/ Paragraph Cursor","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199084,"byte_end":199104,"line_start":83,"line_end":83,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3059},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199401,"byte_end":199410,"line_start":90,"line_end":90,"column_start":9,"column_end":18},"name":"paragraph","qualname":"::text::cursor::PCursor::paragraph","value":"usize","parent":{"krate":0,"index":3058},"children":[],"decl_id":null,"docs":" 0 is first paragraph, and so on.\n Note that a single paragraph can span multiple rows.\n (a paragraph is text separated by `\\n`).\n","sig":null,"attributes":[{"value":"/ 0 is first paragraph, and so on.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199246,"byte_end":199282,"line_start":87,"line_end":87,"column_start":5,"column_end":41}},{"value":"/ Note that a single paragraph can span multiple rows.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199287,"byte_end":199343,"line_start":88,"line_end":88,"column_start":5,"column_end":61}},{"value":"/ (a paragraph is text separated by `\\n`).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199348,"byte_end":199392,"line_start":89,"line_end":89,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3060},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199624,"byte_end":199630,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"name":"offset","qualname":"::text::cursor::PCursor::offset","value":"usize","parent":{"krate":0,"index":3058},"children":[],"decl_id":null,"docs":" Character based (NOT bytes).\n It is fine if this points to something beyond the end of the current paragraph.\n When moving up/down it may again be within the next paragraph.\n","sig":null,"attributes":[{"value":"/ Character based (NOT bytes).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199424,"byte_end":199456,"line_start":92,"line_end":92,"column_start":5,"column_end":37}},{"value":"/ It is fine if this points to something beyond the end of the current paragraph.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199461,"byte_end":199544,"line_start":93,"line_end":93,"column_start":5,"column_end":88}},{"value":"/ When moving up/down it may again be within the next paragraph.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199549,"byte_end":199615,"line_start":94,"line_end":94,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3061},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199912,"byte_end":199927,"line_start":101,"line_end":101,"column_start":9,"column_end":24},"name":"prefer_next_row","qualname":"::text::cursor::PCursor::prefer_next_row","value":"bool","parent":{"krate":0,"index":3058},"children":[],"decl_id":null,"docs":" If this cursors sits right at the border of a wrapped row break (NOT paragraph break)\n do we prefer the next row?\n This is *almost* always what you want, *except* for when\n explicitly clicking the end of a row or pressing the end key.\n","sig":null,"attributes":[{"value":"/ If this cursors sits right at the border of a wrapped row break (NOT paragraph break)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199644,"byte_end":199733,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/ do we prefer the next row?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199738,"byte_end":199768,"line_start":98,"line_end":98,"column_start":5,"column_end":35}},{"value":"/ This is *almost* always what you want, *except* for when","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199773,"byte_end":199833,"line_start":99,"line_end":99,"column_start":5,"column_end":65}},{"value":"/ explicitly clicking the end of a row or pressing the end key.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":199838,"byte_end":199903,"line_start":100,"line_end":100,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":200111,"byte_end":200113,"line_start":107,"line_end":107,"column_start":8,"column_end":10},"name":"eq","qualname":"<PCursor as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ PCursor) -> bool","parent":{"krate":2,"index":2920},"children":[],"decl_id":{"krate":2,"index":2922},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3120},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":200640,"byte_end":200646,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::text::cursor::Cursor","value":"Cursor { ccursor, rcursor, pcursor }","parent":null,"children":[{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123}],"decl_id":null,"docs":" All different types of cursors together.\n They all point to the same place, but in their own different ways.\n pcursor/rcursor can also point to after the end of the paragraph/row.\n Does not implement `PartialEq` because you must think which cursor should be equivalent.\n","sig":null,"attributes":[{"value":"/ All different types of cursors together.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":200230,"byte_end":200274,"line_start":112,"line_end":112,"column_start":1,"column_end":45}},{"value":"/ They all point to the same place, but in their own different ways.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":200275,"byte_end":200345,"line_start":113,"line_end":113,"column_start":1,"column_end":71}},{"value":"/ pcursor/rcursor can also point to after the end of the paragraph/row.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":200346,"byte_end":200419,"line_start":114,"line_end":114,"column_start":1,"column_end":74}},{"value":"/ Does not implement `PartialEq` because you must think which cursor should be equivalent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":200420,"byte_end":200512,"line_start":115,"line_end":115,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":3121},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":200657,"byte_end":200664,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"ccursor","qualname":"::text::cursor::Cursor::ccursor","value":"text::cursor::CCursor","parent":{"krate":0,"index":3120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3122},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":200683,"byte_end":200690,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"rcursor","qualname":"::text::cursor::Cursor::rcursor","value":"text::cursor::RCursor","parent":{"krate":0,"index":3120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3123},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":200709,"byte_end":200716,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"pcursor","qualname":"::text::cursor::Cursor::pcursor","value":"text::cursor::PCursor","parent":{"krate":0,"index":3120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201089,"byte_end":201095,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"UvRect","qualname":"::text::font::UvRect","value":"UvRect { offset, size, min, max }","parent":null,"children":[{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3193}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3189},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201160,"byte_end":201166,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"offset","qualname":"::text::font::UvRect::offset","value":"emath::Vec2","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":" X/Y offset for nice rendering (unit: points).\n","sig":null,"attributes":[{"value":"/ X/Y offset for nice rendering (unit: points).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201102,"byte_end":201151,"line_start":14,"line_end":14,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201294,"byte_end":201298,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"size","qualname":"::text::font::UvRect::size","value":"emath::Vec2","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":" Screen size (in points) of this glyph.\n Note that the height is different from the font height.\n","sig":null,"attributes":[{"value":"/ Screen size (in points) of this glyph.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201179,"byte_end":201221,"line_start":17,"line_end":17,"column_start":5,"column_end":47}},{"value":"/ Note that the height is different from the font height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201226,"byte_end":201285,"line_start":18,"line_end":18,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201354,"byte_end":201357,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"min","qualname":"::text::font::UvRect::min","value":"[u16; 2]","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":" Top left corner UV in texture.\n","sig":null,"attributes":[{"value":"/ Top left corner UV in texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201311,"byte_end":201345,"line_start":21,"line_end":21,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3193},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201419,"byte_end":201422,"line_start":25,"line_end":25,"column_start":9,"column_end":12},"name":"max","qualname":"::text::font::UvRect::max","value":"[u16; 2]","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":" Bottom right corner (exclusive).\n","sig":null,"attributes":[{"value":"/ Bottom right corner (exclusive).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201374,"byte_end":201410,"line_start":24,"line_end":24,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201462,"byte_end":201472,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"is_nothing","qualname":"<UvRect>::is_nothing","value":"fn is_nothing<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":202128,"byte_end":202136,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"FontImpl","qualname":"::text::font::FontImpl","value":"FontImpl {  }","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"decl_id":null,"docs":" A specific font with a size.\n The interface uses points as the unit for everything.\n","sig":null,"attributes":[{"value":"/ A specific font with a size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":202026,"byte_end":202058,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/ The interface uses points as the unit for everything.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":202059,"byte_end":202116,"line_start":58,"line_end":58,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":202535,"byte_end":202538,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<FontImpl>::new","value":"fn new(Arc<Mutex<TextureAtlas>>, f32, String, ab_glyph::FontArc, u32, f32)\n-> FontImpl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":206155,"byte_end":206167,"line_start":188,"line_end":188,"column_start":12,"column_end":24},"name":"pair_kerning","qualname":"<FontImpl>::pair_kerning","value":"fn pair_kerning<'_>(&'_ Self, ab_glyph::GlyphId, ab_glyph::GlyphId) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":206134,"byte_end":206143,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":206567,"byte_end":206577,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"row_height","qualname":"<FontImpl>::row_height","value":"fn row_height<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Height of one row of text. In points\n","sig":null,"attributes":[{"value":"/ Height of one row of text. In points","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":206493,"byte_end":206533,"line_start":200,"line_end":200,"column_start":5,"column_end":45}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":206538,"byte_end":206555,"line_start":201,"line_end":201,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":206664,"byte_end":206680,"line_start":207,"line_end":207,"column_start":12,"column_end":28},"name":"pixels_per_point","qualname":"<FontImpl>::pixels_per_point","value":"fn pixels_per_point<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":206635,"byte_end":206652,"line_start":206,"line_end":206,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":206875,"byte_end":206879,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"Font","qualname":"::text::font::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816}],"decl_id":null,"docs":" Wrapper over multiple [`FontImpl`] (e.g. a primary + fallbacks for emojis)\n","sig":null,"attributes":[{"value":"/ Wrapper over multiple [`FontImpl`] (e.g. a primary + fallbacks for emojis)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":206785,"byte_end":206863,"line_start":215,"line_end":215,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":207169,"byte_end":207172,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"new","qualname":"<Font>::new","value":"fn new(Vec<Arc<FontImpl>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":208558,"byte_end":208583,"line_start":268,"line_end":268,"column_start":12,"column_end":37},"name":"preload_common_characters","qualname":"<Font>::preload_common_characters","value":"fn preload_common_characters<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":209042,"byte_end":209052,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"characters","qualname":"<Font>::characters","value":"fn characters<'_>(&'_ mut Self) -> &'_ BTreeSet<char>","parent":null,"children":[],"decl_id":null,"docs":" All supported characters\n","sig":null,"attributes":[{"value":"/ All supported characters","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":209002,"byte_end":209030,"line_start":279,"line_end":279,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":209363,"byte_end":209377,"line_start":291,"line_end":291,"column_start":12,"column_end":26},"name":"round_to_pixel","qualname":"<Font>::round_to_pixel","value":"fn round_to_pixel<'_>(&'_ Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":209334,"byte_end":209351,"line_start":290,"line_end":290,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":209563,"byte_end":209573,"line_start":297,"line_end":297,"column_start":12,"column_end":22},"name":"row_height","qualname":"<Font>::row_height","value":"fn row_height<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Height of one row of text. In points\n","sig":null,"attributes":[{"value":"/ Height of one row of text. In points","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":209489,"byte_end":209529,"line_start":295,"line_end":295,"column_start":5,"column_end":45}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":209534,"byte_end":209551,"line_start":296,"line_end":296,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":209632,"byte_end":209639,"line_start":301,"line_end":301,"column_start":12,"column_end":19},"name":"uv_rect","qualname":"<Font>::uv_rect","value":"fn uv_rect<'_>(&'_ Self, char) -> UvRect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":209849,"byte_end":209860,"line_start":309,"line_end":309,"column_start":12,"column_end":23},"name":"glyph_width","qualname":"<Font>::glyph_width","value":"fn glyph_width<'_>(&'_ mut Self, char) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Width of this character in points.\n","sig":null,"attributes":[{"value":"/ Width of this character in points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":209799,"byte_end":209837,"line_start":308,"line_end":308,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":213791,"byte_end":213797,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"FontId","qualname":"::text::fonts::FontId","value":"FontId { size, family }","parent":null,"children":[{"krate":0,"index":3272},{"krate":0,"index":3273}],"decl_id":null,"docs":" How to select a sized font.\n","sig":null,"attributes":[{"value":"/ How to select a sized font.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":213636,"byte_end":213667,"line_start":16,"line_end":16,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3272},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":213834,"byte_end":213838,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"size","qualname":"::text::fonts::FontId::size","value":"f32","parent":{"krate":0,"index":3271},"children":[],"decl_id":null,"docs":" Height in points.\n","sig":null,"attributes":[{"value":"/ Height in points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":213804,"byte_end":213825,"line_start":20,"line_end":20,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3273},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":213887,"byte_end":213893,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"family","qualname":"::text::fonts::FontId::family","value":"text::fonts::FontFamily","parent":{"krate":0,"index":3271},"children":[],"decl_id":null,"docs":" What font family to use.\n","sig":null,"attributes":[{"value":"/ What font family to use.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":213850,"byte_end":213878,"line_start":23,"line_end":23,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214005,"byte_end":214012,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"default","qualname":"<FontId as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":213988,"byte_end":213997,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214174,"byte_end":214177,"line_start":40,"line_end":40,"column_start":18,"column_end":21},"name":"new","qualname":"<FontId>::new","value":"const fn new(f32, FontFamily) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214147,"byte_end":214156,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214287,"byte_end":214299,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"name":"proportional","qualname":"<FontId>::proportional","value":"const fn proportional(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214260,"byte_end":214269,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214409,"byte_end":214418,"line_start":50,"line_end":50,"column_start":18,"column_end":27},"name":"monospace","qualname":"<FontId>::monospace","value":"const fn monospace(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214382,"byte_end":214391,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214596,"byte_end":214600,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"hash","qualname":"<FontId as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: std::hash::Hasher","parent":{"krate":2,"index":10536},"children":[],"decl_id":{"krate":2,"index":10537},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214571,"byte_end":214588,"line_start":57,"line_end":57,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3342},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215377,"byte_end":215389,"line_start":77,"line_end":77,"column_start":5,"column_end":17},"name":"Proportional","qualname":"::text::fonts::FontFamily::Proportional","value":"FontFamily::Proportional","parent":{"krate":0,"index":3341},"children":[],"decl_id":null,"docs":" A font where some characters are wider than other (e.g. 'w' is wider than 'i').","sig":null,"attributes":[{"value":"/ A font where some characters are wider than other (e.g. 'w' is wider than 'i').","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215180,"byte_end":215263,"line_start":74,"line_end":74,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215268,"byte_end":215271,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Proportional fonts are easier to read and should be the preferred choice in most situations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215276,"byte_end":215372,"line_start":76,"line_end":76,"column_start":5,"column_end":101}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3344},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215567,"byte_end":215576,"line_start":82,"line_end":82,"column_start":5,"column_end":14},"name":"Monospace","qualname":"::text::fonts::FontFamily::Monospace","value":"FontFamily::Monospace","parent":{"krate":0,"index":3341},"children":[],"decl_id":null,"docs":" A font where each character is the same width (`w` is the same width as `i`).","sig":null,"attributes":[{"value":"/ A font where each character is the same width (`w` is the same width as `i`).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215396,"byte_end":215477,"line_start":79,"line_end":79,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215482,"byte_end":215485,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Useful for code snippets, or when you need to align numbers or text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215490,"byte_end":215562,"line_start":81,"line_end":81,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3346},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215822,"byte_end":215826,"line_start":92,"line_end":92,"column_start":5,"column_end":9},"name":"Name","qualname":"::text::fonts::FontFamily::Name","value":"FontFamily::Name(Arc<str>)","parent":{"krate":0,"index":3341},"children":[],"decl_id":null,"docs":" One of the names in [`FontDefinitions::families`].","sig":null,"attributes":[{"value":"/ One of the names in [`FontDefinitions::families`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215583,"byte_end":215637,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215642,"byte_end":215645,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215650,"byte_end":215657,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # use epaint::FontFamily;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215662,"byte_end":215691,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/ // User-chosen names:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215696,"byte_end":215721,"line_start":88,"line_end":88,"column_start":5,"column_end":30}},{"value":"/ FontFamily::Name(\"arial\".into());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215726,"byte_end":215763,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ FontFamily::Name(\"serif\".into());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215768,"byte_end":215805,"line_start":90,"line_end":90,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215810,"byte_end":215817,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":3348},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215827,"byte_end":215835,"line_start":92,"line_end":92,"column_start":10,"column_end":18},"name":"0","qualname":"::text::fonts::FontFamily::Name::0","value":"std::sync::Arc<str>","parent":{"krate":0,"index":3346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215163,"byte_end":215173,"line_start":73,"line_end":73,"column_start":10,"column_end":20},"name":"FontFamily","qualname":"::text::fonts::FontFamily","value":"enum FontFamily { Proportional, Monospace, Name(Arc<str>), }","parent":null,"children":[{"krate":0,"index":3342},{"krate":0,"index":3344},{"krate":0,"index":3346}],"decl_id":null,"docs":" Font of unknown size.","sig":null,"attributes":[{"value":"/ Font of unknown size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214846,"byte_end":214871,"line_start":67,"line_end":67,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214872,"byte_end":214875,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Which style of font: [`Monospace`][`FontFamily::Monospace`], [`Proportional`][`FontFamily::Proportional`],","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214876,"byte_end":214986,"line_start":69,"line_end":69,"column_start":1,"column_end":111}},{"value":"/ or by user-chosen name.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214987,"byte_end":215014,"line_start":70,"line_end":70,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215892,"byte_end":215899,"line_start":97,"line_end":97,"column_start":8,"column_end":15},"name":"default","qualname":"<FontFamily as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215875,"byte_end":215884,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216001,"byte_end":216004,"line_start":103,"line_end":103,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FontFamily as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut std::fmt::Formatter) -> std::fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3404},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216518,"byte_end":216526,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"FontData","qualname":"::text::fonts::FontData","value":"FontData { font, index, tweak }","parent":null,"children":[{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3407}],"decl_id":null,"docs":" A `.ttf` or `.otf` file and a font face index.\n","sig":null,"attributes":[{"value":"/ A `.ttf` or `.otf` file and a font face index.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216344,"byte_end":216394,"line_start":114,"line_end":114,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3405},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216585,"byte_end":216589,"line_start":119,"line_end":119,"column_start":9,"column_end":13},"name":"font","qualname":"::text::fonts::FontData::font","value":"std::borrow::Cow<'static, [u8]>","parent":{"krate":0,"index":3404},"children":[],"decl_id":null,"docs":" The content of a `.ttf` or `.otf` file.\n","sig":null,"attributes":[{"value":"/ The content of a `.ttf` or `.otf` file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216533,"byte_end":216576,"line_start":118,"line_end":118,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3406},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216709,"byte_end":216714,"line_start":123,"line_end":123,"column_start":9,"column_end":14},"name":"index","qualname":"::text::fonts::FontData::index","value":"u32","parent":{"krate":0,"index":3404},"children":[],"decl_id":null,"docs":" Which font face in the file to use.\n When in doubt, use `0`.\n","sig":null,"attributes":[{"value":"/ Which font face in the file to use.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216629,"byte_end":216668,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/ When in doubt, use `0`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216673,"byte_end":216700,"line_start":122,"line_end":122,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3407},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216804,"byte_end":216809,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"name":"tweak","qualname":"::text::fonts::FontData::tweak","value":"text::fonts::FontTweak","parent":{"krate":0,"index":3404},"children":[],"decl_id":null,"docs":" Extra scale and vertical tweak to apply to all text of this font.\n","sig":null,"attributes":[{"value":"/ Extra scale and vertical tweak to apply to all text of this font.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216726,"byte_end":216795,"line_start":125,"line_end":125,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216852,"byte_end":216863,"line_start":130,"line_end":130,"column_start":12,"column_end":23},"name":"from_static","qualname":"<FontData>::from_static","value":"fn from_static(&'static [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217051,"byte_end":217061,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"from_owned","qualname":"<FontData>::from_owned","value":"fn from_owned(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217240,"byte_end":217245,"line_start":146,"line_end":146,"column_start":12,"column_end":17},"name":"tweak","qualname":"<FontData>::tweak","value":"fn tweak(Self, FontTweak) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217605,"byte_end":217614,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"FontTweak","qualname":"::text::fonts::FontTweak","value":"FontTweak { scale, y_offset_factor, y_offset }","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471}],"decl_id":null,"docs":" Extra scale and vertical tweak to apply to all text of a certain font.\n","sig":null,"attributes":[{"value":"/ Extra scale and vertical tweak to apply to all text of a certain font.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217401,"byte_end":217475,"line_start":153,"line_end":153,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217707,"byte_end":217712,"line_start":160,"line_end":160,"column_start":9,"column_end":14},"name":"scale","qualname":"::text::fonts::FontTweak::scale","value":"f32","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Scale the font by this much.","sig":null,"attributes":[{"value":"/ Scale the font by this much.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217621,"byte_end":217653,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217658,"byte_end":217661,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Default: `1.0` (no scaling).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217666,"byte_end":217698,"line_start":159,"line_end":159,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217947,"byte_end":217962,"line_start":168,"line_end":168,"column_start":9,"column_end":24},"name":"y_offset_factor","qualname":"::text::fonts::FontTweak::y_offset_factor","value":"f32","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Shift font downwards by this fraction of the font size (in points).","sig":null,"attributes":[{"value":"/ Shift font downwards by this fraction of the font size (in points).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217724,"byte_end":217795,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217800,"byte_end":217803,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ A positive value shifts the text downwards.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217808,"byte_end":217855,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/ A negative value shifts it upwards.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217860,"byte_end":217899,"line_start":165,"line_end":165,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217904,"byte_end":217907,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Example value: `-0.2`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217912,"byte_end":217938,"line_start":167,"line_end":167,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":218079,"byte_end":218087,"line_start":173,"line_end":173,"column_start":9,"column_end":17},"name":"y_offset","qualname":"::text::fonts::FontTweak::y_offset","value":"f32","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Shift font downwards by this amount of logical points.","sig":null,"attributes":[{"value":"/ Shift font downwards by this amount of logical points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":217974,"byte_end":218032,"line_start":170,"line_end":170,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":218037,"byte_end":218040,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Example value: `2.0`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":218045,"byte_end":218070,"line_start":172,"line_end":172,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":218133,"byte_end":218140,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"default","qualname":"<FontTweak as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220194,"byte_end":220209,"line_start":231,"line_end":231,"column_start":12,"column_end":27},"name":"FontDefinitions","qualname":"::text::fonts::FontDefinitions","value":"FontDefinitions { font_data, families }","parent":null,"children":[{"krate":0,"index":3581},{"krate":0,"index":3582}],"decl_id":null,"docs":" Describes the font data and the sizes to use.","sig":null,"attributes":[{"value":"/ Describes the font data and the sizes to use.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":218984,"byte_end":219033,"line_start":202,"line_end":202,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219034,"byte_end":219037,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Often you would start with [`FontDefinitions::default()`] and then add/change the contents.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219038,"byte_end":219133,"line_start":204,"line_end":204,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219134,"byte_end":219137,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ This is how you install your own custom fonts:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219138,"byte_end":219188,"line_start":206,"line_end":206,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219189,"byte_end":219196,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/ # use {epaint::text::{FontDefinitions, FontFamily, FontData}};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219197,"byte_end":219263,"line_start":208,"line_end":208,"column_start":1,"column_end":67}},{"value":"/ # struct FakeEguiCtx {};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219264,"byte_end":219292,"line_start":209,"line_end":209,"column_start":1,"column_end":29}},{"value":"/ # impl FakeEguiCtx { fn set_fonts(&self, _: FontDefinitions) {} }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219293,"byte_end":219362,"line_start":210,"line_end":210,"column_start":1,"column_end":70}},{"value":"/ # let egui_ctx = FakeEguiCtx {};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219363,"byte_end":219399,"line_start":211,"line_end":211,"column_start":1,"column_end":37}},{"value":"/ let mut fonts = FontDefinitions::default();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219400,"byte_end":219447,"line_start":212,"line_end":212,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219448,"byte_end":219451,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ // Install my own font (maybe supporting non-latin characters):","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219452,"byte_end":219519,"line_start":214,"line_end":214,"column_start":1,"column_end":68}},{"value":"/ fonts.font_data.insert(\"my_font\".to_owned(),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219520,"byte_end":219568,"line_start":215,"line_end":215,"column_start":1,"column_end":49}},{"value":"/    FontData::from_static(include_bytes!(\"../../fonts/Ubuntu-Light.ttf\"))); // .ttf and .otf supported","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219569,"byte_end":219674,"line_start":216,"line_end":216,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219675,"byte_end":219678,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ // Put my font first (highest priority):","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219679,"byte_end":219723,"line_start":218,"line_end":218,"column_start":1,"column_end":45}},{"value":"/ fonts.families.get_mut(&FontFamily::Proportional).unwrap()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219724,"byte_end":219786,"line_start":219,"line_end":219,"column_start":1,"column_end":63}},{"value":"/     .insert(0, \"my_font\".to_owned());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219787,"byte_end":219828,"line_start":220,"line_end":220,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219829,"byte_end":219832,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ // Put my font as last fallback for monospace:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219833,"byte_end":219883,"line_start":222,"line_end":222,"column_start":1,"column_end":51}},{"value":"/ fonts.families.get_mut(&FontFamily::Monospace).unwrap()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219884,"byte_end":219943,"line_start":223,"line_end":223,"column_start":1,"column_end":60}},{"value":"/     .push(\"my_font\".to_owned());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219944,"byte_end":219980,"line_start":224,"line_end":224,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219981,"byte_end":219984,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ egui_ctx.set_fonts(fonts);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":219985,"byte_end":220015,"line_start":226,"line_end":226,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220016,"byte_end":220023,"line_start":227,"line_end":227,"column_start":1,"column_end":8}},{"value":"serde(default)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220166,"byte_end":220180,"line_start":230,"line_end":230,"column_start":31,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3581},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220366,"byte_end":220375,"line_start":235,"line_end":235,"column_start":9,"column_end":18},"name":"font_data","qualname":"::text::fonts::FontDefinitions::font_data","value":"std::collections::BTreeMap<std::string::String, text::fonts::FontData>","parent":{"krate":0,"index":3580},"children":[],"decl_id":null,"docs":" List of font names and their definitions.","sig":null,"attributes":[{"value":"/ List of font names and their definitions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220216,"byte_end":220261,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220266,"byte_end":220269,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ `epaint` has built-in-default for these, but you can override them if you like.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220274,"byte_end":220357,"line_start":234,"line_end":234,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":3582},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220780,"byte_end":220788,"line_start":243,"line_end":243,"column_start":9,"column_end":17},"name":"families","qualname":"::text::fonts::FontDefinitions::families","value":"std::collections::BTreeMap<text::fonts::FontFamily, std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":3580},"children":[],"decl_id":null,"docs":" Which fonts (names) to use for each [`FontFamily`].","sig":null,"attributes":[{"value":"/ Which fonts (names) to use for each [`FontFamily`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220410,"byte_end":220465,"line_start":237,"line_end":237,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220470,"byte_end":220473,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The list should be a list of keys into [`Self::font_data`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220478,"byte_end":220541,"line_start":239,"line_end":239,"column_start":5,"column_end":68}},{"value":"/ When looking for a character glyph `epaint` will start with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220546,"byte_end":220609,"line_start":240,"line_end":240,"column_start":5,"column_end":68}},{"value":"/ the first font and then move to the second, and so on.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220614,"byte_end":220672,"line_start":241,"line_end":241,"column_start":5,"column_end":63}},{"value":"/ So the first font is the primary, and then comes a list of fallbacks in order of priority.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220677,"byte_end":220771,"line_start":242,"line_end":242,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":221275,"byte_end":221282,"line_start":257,"line_end":257,"column_start":8,"column_end":15},"name":"default","qualname":"<FontDefinitions as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":" Specifies the default fonts if the feature `default_fonts` is enabled,\n otherwise this is the same as [`Self::empty`].\n","sig":null,"attributes":[{"value":"/ Specifies the default fonts if the feature `default_fonts` is enabled,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":221100,"byte_end":221174,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ otherwise this is the same as [`Self::empty`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":221179,"byte_end":221229,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"default_fonts\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":221234,"byte_end":221267,"line_start":256,"line_end":256,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223112,"byte_end":223117,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"empty","qualname":"<FontDefinitions>::empty","value":"fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" No fonts.\n","sig":null,"attributes":[{"value":"/ No fonts.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223087,"byte_end":223100,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223887,"byte_end":223892,"line_start":339,"line_end":339,"column_start":12,"column_end":17},"name":"Fonts","qualname":"::text::fonts::Fonts","value":"","parent":null,"children":[],"decl_id":null,"docs":" The collection of fonts used by `epaint`.","sig":null,"attributes":[{"value":"/ The collection of fonts used by `epaint`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223470,"byte_end":223515,"line_start":330,"line_end":330,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223516,"byte_end":223519,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ Required in order to paint text. Create one and reuse. Cheap to clone.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223520,"byte_end":223594,"line_start":332,"line_end":332,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223595,"byte_end":223598,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ Each [`Fonts`] comes with a font atlas textures that needs to be used when painting.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223599,"byte_end":223687,"line_start":334,"line_end":334,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223688,"byte_end":223691,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you are using `egui`, use `egui::Context::set_fonts` and `egui::Context::fonts`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223692,"byte_end":223779,"line_start":336,"line_end":336,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223780,"byte_end":223783,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ You need to call [`Self::begin_frame`] and [`Self::font_image_delta`] once every frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223784,"byte_end":223875,"line_start":338,"line_end":338,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":224231,"byte_end":224234,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"new","qualname":"<Fonts>::new","value":"fn new(f32, usize, FontDefinitions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Fonts`] for text layout.\n This call is expensive, so only create one [`Fonts`] and then reuse it.","sig":null,"attributes":[{"value":"/ Create a new [`Fonts`] for text layout.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223939,"byte_end":223982,"line_start":342,"line_end":342,"column_start":5,"column_end":48}},{"value":"/ This call is expensive, so only create one [`Fonts`] and then reuse it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223987,"byte_end":224062,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":224067,"byte_end":224070,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ * `pixels_per_point`: how many physical pixels per logical \"point\".","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":224075,"byte_end":224146,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/ * `max_texture_side`: largest supported texture size (one side).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":224151,"byte_end":224219,"line_start":346,"line_end":346,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":225004,"byte_end":225015,"line_start":366,"line_end":366,"column_start":12,"column_end":23},"name":"begin_frame","qualname":"<Fonts>::begin_frame","value":"fn begin_frame<'_>(&'_ Self, f32, usize)","parent":null,"children":[],"decl_id":null,"docs":" Call at the start of each frame with the latest known\n `pixels_per_point` and `max_texture_side`.","sig":null,"attributes":[{"value":"/ Call at the start of each frame with the latest known","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":224604,"byte_end":224661,"line_start":359,"line_end":359,"column_start":5,"column_end":62}},{"value":"/ `pixels_per_point` and `max_texture_side`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":224666,"byte_end":224712,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":224717,"byte_end":224720,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Call after painting the previous frame, but before using [`Fonts`] for the new frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":224725,"byte_end":224814,"line_start":362,"line_end":362,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":224819,"byte_end":224822,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This function will react to changes in `pixels_per_point` and `max_texture_side`,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":224827,"byte_end":224912,"line_start":364,"line_end":364,"column_start":5,"column_end":90}},{"value":"/ as well as notice when the font atlas is getting full, and handle that.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":224917,"byte_end":224992,"line_start":365,"line_end":365,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226055,"byte_end":226071,"line_start":389,"line_end":389,"column_start":12,"column_end":28},"name":"font_image_delta","qualname":"<Fonts>::font_image_delta","value":"fn font_image_delta<'_>(&'_ Self) -> Option<crate::ImageDelta>","parent":null,"children":[],"decl_id":null,"docs":" Call at the end of each frame (before painting) to get the change to the font texture since last call.\n","sig":null,"attributes":[{"value":"/ Call at the end of each frame (before painting) to get the change to the font texture since last call.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":225937,"byte_end":226043,"line_start":388,"line_end":388,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226262,"byte_end":226266,"line_start":396,"line_end":396,"column_start":12,"column_end":16},"name":"lock","qualname":"<Fonts>::lock","value":"fn lock<'_>(&'_ Self) -> MutexGuard","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying [`FontsAndCache`].\n","sig":null,"attributes":[{"value":"/ Access the underlying [`FontsAndCache`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226173,"byte_end":226217,"line_start":393,"line_end":393,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226241,"byte_end":226250,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226363,"byte_end":226379,"line_start":401,"line_end":401,"column_start":12,"column_end":28},"name":"pixels_per_point","qualname":"<Fonts>::pixels_per_point","value":"fn pixels_per_point<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226342,"byte_end":226351,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226471,"byte_end":226487,"line_start":406,"line_end":406,"column_start":12,"column_end":28},"name":"max_texture_side","qualname":"<Fonts>::max_texture_side","value":"fn max_texture_side<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226450,"byte_end":226459,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226636,"byte_end":226649,"line_start":412,"line_end":412,"column_start":12,"column_end":25},"name":"texture_atlas","qualname":"<Fonts>::texture_atlas","value":"fn texture_atlas<'_>(&'_ Self) -> Arc<Mutex<TextureAtlas>>","parent":null,"children":[],"decl_id":null,"docs":" The font atlas.\n Pass this to [`crate::Tessellator`].\n","sig":null,"attributes":[{"value":"/ The font atlas.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226560,"byte_end":226579,"line_start":410,"line_end":410,"column_start":5,"column_end":24}},{"value":"/ Pass this to [`crate::Tessellator`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226584,"byte_end":226624,"line_start":411,"line_end":411,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226830,"byte_end":226845,"line_start":418,"line_end":418,"column_start":12,"column_end":27},"name":"font_image_size","qualname":"<Fonts>::font_image_size","value":"fn font_image_size<'_>(&'_ Self) -> [usize; ]","parent":null,"children":[],"decl_id":null,"docs":" Current size of the font image.\n Pass this to [`crate::Tessellator`].\n","sig":null,"attributes":[{"value":"/ Current size of the font image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226738,"byte_end":226773,"line_start":416,"line_end":416,"column_start":5,"column_end":40}},{"value":"/ Pass this to [`crate::Tessellator`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226778,"byte_end":226818,"line_start":417,"line_end":417,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226990,"byte_end":227001,"line_start":424,"line_end":424,"column_start":12,"column_end":23},"name":"glyph_width","qualname":"<Fonts>::glyph_width","value":"fn glyph_width<'_, '_>(&'_ Self, &'_ FontId, char) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Width of this character in points.\n","sig":null,"attributes":[{"value":"/ Width of this character in points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226926,"byte_end":226964,"line_start":422,"line_end":422,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":226969,"byte_end":226978,"line_start":423,"line_end":423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227171,"byte_end":227181,"line_start":430,"line_end":430,"column_start":12,"column_end":22},"name":"row_height","qualname":"<Fonts>::row_height","value":"fn row_height<'_, '_>(&'_ Self, &'_ FontId) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Height of one row of text in points\n","sig":null,"attributes":[{"value":"/ Height of one row of text in points","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227106,"byte_end":227145,"line_start":428,"line_end":428,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227150,"byte_end":227159,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227321,"byte_end":227329,"line_start":435,"line_end":435,"column_start":12,"column_end":20},"name":"families","qualname":"<Fonts>::families","value":"fn families<'_>(&'_ Self) -> Vec<FontFamily>","parent":null,"children":[],"decl_id":null,"docs":" List of all known font families.\n","sig":null,"attributes":[{"value":"/ List of all known font families.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227273,"byte_end":227309,"line_start":434,"line_end":434,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227811,"byte_end":227821,"line_start":453,"line_end":453,"column_start":12,"column_end":22},"name":"layout_job","qualname":"<Fonts>::layout_job","value":"fn layout_job<'_>(&'_ Self, LayoutJob) -> Arc<Galley>","parent":null,"children":[],"decl_id":null,"docs":" Layout some text.","sig":null,"attributes":[{"value":"/ Layout some text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227520,"byte_end":227541,"line_start":445,"line_end":445,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227546,"byte_end":227549,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This is the most advanced layout function.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227554,"byte_end":227600,"line_start":447,"line_end":447,"column_start":5,"column_end":51}},{"value":"/ See also [`Self::layout`], [`Self::layout_no_wrap`] and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227605,"byte_end":227664,"line_start":448,"line_end":448,"column_start":5,"column_end":64}},{"value":"/ [`Self::layout_delayed_color`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227669,"byte_end":227704,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227709,"byte_end":227712,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ The implementation uses memoization so repeated calls are cheap.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227717,"byte_end":227785,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227790,"byte_end":227799,"line_start":452,"line_end":452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":227916,"byte_end":227936,"line_start":457,"line_end":457,"column_start":12,"column_end":32},"name":"num_galleys_in_cache","qualname":"<Fonts>::num_galleys_in_cache","value":"fn num_galleys_in_cache<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228199,"byte_end":228220,"line_start":465,"line_end":465,"column_start":12,"column_end":33},"name":"font_atlas_fill_ratio","qualname":"<Fonts>::font_atlas_fill_ratio","value":"fn font_atlas_fill_ratio<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" How full is the font atlas?","sig":null,"attributes":[{"value":"/ How full is the font atlas?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228022,"byte_end":228053,"line_start":461,"line_end":461,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228058,"byte_end":228061,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This increases as new fonts and/or glyphs are used,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228066,"byte_end":228121,"line_start":463,"line_end":463,"column_start":5,"column_end":60}},{"value":"/ but can also decrease in a call to [`Self::begin_frame`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228126,"byte_end":228187,"line_start":464,"line_end":464,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228454,"byte_end":228460,"line_start":472,"line_end":472,"column_start":12,"column_end":18},"name":"layout","qualname":"<Fonts>::layout","value":"fn layout<'_>(&'_ Self, String, FontId, crate::Color32, f32) -> Arc<Galley>","parent":null,"children":[],"decl_id":null,"docs":" Will wrap text at the given width and line break at `\\n`.","sig":null,"attributes":[{"value":"/ Will wrap text at the given width and line break at `\\n`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228300,"byte_end":228361,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228366,"byte_end":228369,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ The implementation uses memoization so repeated calls are cheap.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228374,"byte_end":228442,"line_start":471,"line_end":471,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228835,"byte_end":228849,"line_start":486,"line_end":486,"column_start":12,"column_end":26},"name":"layout_no_wrap","qualname":"<Fonts>::layout_no_wrap","value":"fn layout_no_wrap<'_>(&'_ Self, String, FontId, crate::Color32) -> Arc<Galley>","parent":null,"children":[],"decl_id":null,"docs":" Will line break at `\\n`.","sig":null,"attributes":[{"value":"/ Will line break at `\\n`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228714,"byte_end":228742,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228747,"byte_end":228750,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ The implementation uses memoization so repeated calls are cheap.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":228755,"byte_end":228823,"line_start":485,"line_end":485,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":229259,"byte_end":229279,"line_start":499,"line_end":499,"column_start":12,"column_end":32},"name":"layout_delayed_color","qualname":"<Fonts>::layout_delayed_color","value":"fn layout_delayed_color<'_>(&'_ Self, String, FontId, f32) -> Arc<Galley>","parent":null,"children":[],"decl_id":null,"docs":" Like [`Self::layout`], made for when you want to pick a color for the text later.","sig":null,"attributes":[{"value":"/ Like [`Self::layout`], made for when you want to pick a color for the text later.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":229081,"byte_end":229166,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":229171,"byte_end":229174,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ The implementation uses memoization so repeated calls are cheap.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":229179,"byte_end":229247,"line_start":498,"line_end":498,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":229654,"byte_end":229667,"line_start":516,"line_end":516,"column_start":12,"column_end":25},"name":"FontsAndCache","qualname":"::text::fonts::FontsAndCache","value":"FontsAndCache { fonts }","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":229678,"byte_end":229683,"line_start":517,"line_end":517,"column_start":9,"column_end":14},"name":"fonts","qualname":"::text::fonts::FontsAndCache::fonts","value":"text::fonts::FontsImpl","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":230056,"byte_end":230065,"line_start":532,"line_end":532,"column_start":12,"column_end":21},"name":"FontsImpl","qualname":"::text::fonts::FontsImpl","value":"FontsImpl {  }","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941}],"decl_id":null,"docs":" The collection of fonts used by `epaint`.","sig":null,"attributes":[{"value":"/ The collection of fonts used by `epaint`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":229958,"byte_end":230003,"line_start":529,"line_end":529,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":230004,"byte_end":230007,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ Required in order to paint text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":230008,"byte_end":230044,"line_start":531,"line_end":531,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":230457,"byte_end":230460,"line_start":544,"line_end":544,"column_start":12,"column_end":15},"name":"new","qualname":"<FontsImpl>::new","value":"fn new(f32, usize, FontDefinitions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`FontsImpl`] for text layout.\n This call is expensive, so only create one [`FontsImpl`] and then reuse it.\n","sig":null,"attributes":[{"value":"/ Create a new [`FontsImpl`] for text layout.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":230314,"byte_end":230361,"line_start":542,"line_end":542,"column_start":5,"column_end":52}},{"value":"/ This call is expensive, so only create one [`FontsImpl`] and then reuse it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":230366,"byte_end":230445,"line_start":543,"line_end":543,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":231335,"byte_end":231351,"line_start":575,"line_end":575,"column_start":12,"column_end":28},"name":"pixels_per_point","qualname":"<FontsImpl>::pixels_per_point","value":"fn pixels_per_point<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":231306,"byte_end":231323,"line_start":574,"line_end":574,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":231430,"byte_end":231441,"line_start":580,"line_end":580,"column_start":12,"column_end":23},"name":"definitions","qualname":"<FontsImpl>::definitions","value":"fn definitions<'_>(&'_ Self) -> &'_ FontDefinitions","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":231409,"byte_end":231418,"line_start":579,"line_end":579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":231587,"byte_end":231591,"line_start":585,"line_end":585,"column_start":12,"column_end":16},"name":"font","qualname":"<FontsImpl>::font","value":"fn font<'_, '_>(&'_ mut Self, &'_ FontId) -> &'_ mut Font","parent":null,"children":[],"decl_id":null,"docs":" Get the right font implementation from size and [`FontFamily`].\n","sig":null,"attributes":[{"value":"/ Get the right font implementation from size and [`FontFamily`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":231508,"byte_end":231575,"line_start":584,"line_end":584,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout.rs","byte_start":238214,"byte_end":238220,"line_start":56,"line_end":56,"column_start":8,"column_end":14},"name":"layout","qualname":"::text::text_layout::layout","value":"fn layout<'_>(&'_ mut FontsImpl, Arc<LayoutJob>) -> Galley","parent":null,"children":[],"decl_id":null,"docs":" Layout text into a [`Galley`].","sig":null,"attributes":[{"value":"/ Layout text into a [`Galley`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout.rs","byte_start":238005,"byte_end":238039,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout.rs","byte_start":238040,"byte_end":238043,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ In most cases you should use [`crate::Fonts::layout_job`] instead","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout.rs","byte_start":238044,"byte_end":238113,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ since that memoizes the input, making subsequent layouting of the same text much faster.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout.rs","byte_start":238114,"byte_end":238206,"line_start":55,"line_end":55,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265566,"byte_end":265575,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"LayoutJob","qualname":"::text::text_layout_types::LayoutJob","value":"LayoutJob { text, sections, wrap, first_row_min_height, break_on_newline, halign, justify }","parent":null,"children":[{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634}],"decl_id":null,"docs":" Describes the task of laying out text.","sig":null,"attributes":[{"value":"/ Describes the task of laying out text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264513,"byte_end":264555,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264556,"byte_end":264559,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This supports mixing different fonts, color and formats (underline etc).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264560,"byte_end":264636,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264637,"byte_end":264640,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Pass this to [`crate::Fonts::layout_job`] or [`crate::text::layout`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264641,"byte_end":264714,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264715,"byte_end":264718,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Example:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264719,"byte_end":264734,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264735,"byte_end":264742,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use epaint::{Color32, text::{LayoutJob, TextFormat}, FontFamily, FontId};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264743,"byte_end":264820,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264821,"byte_end":264824,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let mut job = LayoutJob::default();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264825,"byte_end":264864,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ job.append(","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264865,"byte_end":264880,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/     \"Hello \",","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264881,"byte_end":264898,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/     0.0,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264899,"byte_end":264911,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/     TextFormat {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264912,"byte_end":264932,"line_start":24,"line_end":24,"column_start":1,"column_end":21}},{"value":"/         font_id: FontId::new(14.0, FontFamily::Proportional),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264933,"byte_end":264998,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/         color: Color32::WHITE,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":264999,"byte_end":265033,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/         ..Default::default()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265034,"byte_end":265066,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/     },","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265067,"byte_end":265077,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265078,"byte_end":265084,"line_start":29,"line_end":29,"column_start":1,"column_end":7}},{"value":"/ job.append(","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265085,"byte_end":265100,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/     \"World!\",","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265101,"byte_end":265118,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/     0.0,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265119,"byte_end":265131,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/     TextFormat {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265132,"byte_end":265152,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/         font_id: FontId::new(14.0, FontFamily::Monospace),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265153,"byte_end":265215,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/         color: Color32::BLACK,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265216,"byte_end":265250,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/         ..Default::default()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265251,"byte_end":265283,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/     },","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265284,"byte_end":265294,"line_start":37,"line_end":37,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265295,"byte_end":265301,"line_start":38,"line_end":38,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265302,"byte_end":265309,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265310,"byte_end":265313,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ As you can see, constructing a [`LayoutJob`] is currently a lot of work.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265314,"byte_end":265390,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ It would be nice to have a helper macro for it!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265391,"byte_end":265442,"line_start":42,"line_end":42,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265658,"byte_end":265662,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"text","qualname":"::text::text_layout_types::LayoutJob::text","value":"std::string::String","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" The complete text of this job, referenced by [`LayoutSection`].\n","sig":null,"attributes":[{"value":"/ The complete text of this job, referenced by [`LayoutSection`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265582,"byte_end":265649,"line_start":46,"line_end":46,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3629},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265757,"byte_end":265765,"line_start":50,"line_end":50,"column_start":9,"column_end":17},"name":"sections","qualname":"::text::text_layout_types::LayoutJob::sections","value":"std::vec::Vec<text::text_layout_types::LayoutSection>","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" The different section, which can have different fonts, colors, etc.\n","sig":null,"attributes":[{"value":"/ The different section, which can have different fonts, colors, etc.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265677,"byte_end":265748,"line_start":49,"line_end":49,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265796,"byte_end":265800,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"name":"wrap","qualname":"::text::text_layout_types::LayoutJob::wrap","value":"text::text_layout_types::TextWrapping","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3631},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266103,"byte_end":266123,"line_start":59,"line_end":59,"column_start":9,"column_end":29},"name":"first_row_min_height","qualname":"::text::text_layout_types::LayoutJob::first_row_min_height","value":"f32","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" The first row must be at least this high.\n This is in case we lay out text that is the continuation\n of some earlier text (sharing the same row),\n in which case this will be the height of the earlier text.\n In other cases, set this to `0.0`.\n","sig":null,"attributes":[{"value":"/ The first row must be at least this high.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265821,"byte_end":265866,"line_start":54,"line_end":54,"column_start":5,"column_end":50}},{"value":"/ This is in case we lay out text that is the continuation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265871,"byte_end":265931,"line_start":55,"line_end":55,"column_start":5,"column_end":65}},{"value":"/ of some earlier text (sharing the same row),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265936,"byte_end":265984,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"/ in which case this will be the height of the earlier text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":265989,"byte_end":266051,"line_start":57,"line_end":57,"column_start":5,"column_end":67}},{"value":"/ In other cases, set this to `0.0`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266056,"byte_end":266094,"line_start":58,"line_end":58,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3632},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266274,"byte_end":266290,"line_start":64,"line_end":64,"column_start":9,"column_end":25},"name":"break_on_newline","qualname":"::text::text_layout_types::LayoutJob::break_on_newline","value":"bool","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" If `false`, all newlines characters will be ignored\n and show up as the replacement character.\n Default: `true`.\n","sig":null,"attributes":[{"value":"/ If `false`, all newlines characters will be ignored","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266135,"byte_end":266190,"line_start":61,"line_end":61,"column_start":5,"column_end":60}},{"value":"/ and show up as the replacement character.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266195,"byte_end":266240,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"/ Default: `true`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266245,"byte_end":266265,"line_start":63,"line_end":63,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3633},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266400,"byte_end":266406,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"halign","qualname":"::text::text_layout_types::LayoutJob::halign","value":"emath::Align","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" How to horizontally align the text (`Align::LEFT`, `Align::Center`, `Align::RIGHT`).\n","sig":null,"attributes":[{"value":"/ How to horizontally align the text (`Align::LEFT`, `Align::Center`, `Align::RIGHT`).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266303,"byte_end":266391,"line_start":66,"line_end":66,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":3634},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266514,"byte_end":266521,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"justify","qualname":"::text::text_layout_types::LayoutJob::justify","value":"bool","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" Justify text so that word-wrapped rows fill the whole [`TextWrapping::max_width`]\n","sig":null,"attributes":[{"value":"/ Justify text so that word-wrapped rows fill the whole [`TextWrapping::max_width`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266420,"byte_end":266505,"line_start":69,"line_end":69,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266582,"byte_end":266589,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"default","qualname":"<LayoutJob as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266565,"byte_end":266574,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266983,"byte_end":266989,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"simple","qualname":"<LayoutJob>::simple","value":"fn simple(String, FontId, Color32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Break on `\\n` and at the given wrap width.\n","sig":null,"attributes":[{"value":"/ Break on `\\n` and at the given wrap width.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266911,"byte_end":266957,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266962,"byte_end":266971,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":267607,"byte_end":267624,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"simple_singleline","qualname":"<LayoutJob>::simple_singleline","value":"fn simple_singleline(String, FontId, Color32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Does not break on `\\n`, but shows the replacement character instead.\n","sig":null,"attributes":[{"value":"/ Does not break on `\\n`, but shows the replacement character instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":267509,"byte_end":267581,"line_start":108,"line_end":108,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":267586,"byte_end":267595,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":268063,"byte_end":268077,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"single_section","qualname":"<LayoutJob>::single_section","value":"fn single_section(String, TextFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":268042,"byte_end":268051,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":268474,"byte_end":268482,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LayoutJob>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":268445,"byte_end":268462,"line_start":139,"line_end":139,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":268622,"byte_end":268628,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"append","qualname":"<LayoutJob>::append","value":"fn append<'_, '_>(&'_ mut Self, &'_ str, f32, TextFormat)","parent":null,"children":[],"decl_id":null,"docs":" Helper for adding a new section when building a [`LayoutJob`].\n","sig":null,"attributes":[{"value":"/ Helper for adding a new section when building a [`LayoutJob`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":268544,"byte_end":268610,"line_start":144,"line_end":144,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":269007,"byte_end":269018,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"font_height","qualname":"<LayoutJob>::font_height","value":"fn font_height<'_, '_>(&'_ Self, &'_ crate::Fonts) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The height of the tallest used font in the job.\n","sig":null,"attributes":[{"value":"/ The height of the tallest used font in the job.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":268944,"byte_end":268995,"line_start":156,"line_end":156,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":269315,"byte_end":269319,"line_start":168,"line_end":168,"column_start":8,"column_end":12},"name":"hash","qualname":"<LayoutJob as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: std::hash::Hasher","parent":{"krate":2,"index":10536},"children":[],"decl_id":{"krate":2,"index":10537},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":269298,"byte_end":269307,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270012,"byte_end":270025,"line_start":193,"line_end":193,"column_start":12,"column_end":25},"name":"LayoutSection","qualname":"::text::text_layout_types::LayoutSection","value":"LayoutSection { leading_space, byte_range, format }","parent":null,"children":[{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3705}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3703},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270083,"byte_end":270096,"line_start":195,"line_end":195,"column_start":9,"column_end":22},"name":"leading_space","qualname":"::text::text_layout_types::LayoutSection::leading_space","value":"f32","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Can be used for first row indentation.\n","sig":null,"attributes":[{"value":"/ Can be used for first row indentation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270032,"byte_end":270074,"line_start":194,"line_end":194,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3704},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270146,"byte_end":270156,"line_start":197,"line_end":197,"column_start":9,"column_end":19},"name":"byte_range","qualname":"::text::text_layout_types::LayoutSection::byte_range","value":"std::ops::Range<usize>","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Range into the galley text\n","sig":null,"attributes":[{"value":"/ Range into the galley text","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270107,"byte_end":270137,"line_start":196,"line_end":196,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3705},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270180,"byte_end":270186,"line_start":198,"line_end":198,"column_start":9,"column_end":15},"name":"format","qualname":"::text::text_layout_types::LayoutSection::format","value":"text::text_layout_types::TextFormat","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270265,"byte_end":270269,"line_start":203,"line_end":203,"column_start":8,"column_end":12},"name":"hash","qualname":"<LayoutSection as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: std::hash::Hasher","parent":{"krate":2,"index":10536},"children":[],"decl_id":{"krate":2,"index":10537},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270248,"byte_end":270257,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3768},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270751,"byte_end":270761,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"TextFormat","qualname":"::text::text_layout_types::TextFormat","value":"TextFormat { font_id, color, background, italics, underline, strikethrough, valign }","parent":null,"children":[{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3775}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3769},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270772,"byte_end":270779,"line_start":220,"line_end":220,"column_start":9,"column_end":16},"name":"font_id","qualname":"::text::text_layout_types::TextFormat::font_id","value":"text::fonts::FontId","parent":{"krate":0,"index":3768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3770},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270816,"byte_end":270821,"line_start":222,"line_end":222,"column_start":9,"column_end":14},"name":"color","qualname":"::text::text_layout_types::TextFormat::color","value":"color::Color32","parent":{"krate":0,"index":3768},"children":[],"decl_id":null,"docs":" Text color\n","sig":null,"attributes":[{"value":"/ Text color","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270793,"byte_end":270807,"line_start":221,"line_end":221,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3771},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270840,"byte_end":270850,"line_start":223,"line_end":223,"column_start":9,"column_end":19},"name":"background","qualname":"::text::text_layout_types::TextFormat::background","value":"color::Color32","parent":{"krate":0,"index":3768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3772},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270869,"byte_end":270876,"line_start":224,"line_end":224,"column_start":9,"column_end":16},"name":"italics","qualname":"::text::text_layout_types::TextFormat::italics","value":"bool","parent":{"krate":0,"index":3768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270892,"byte_end":270901,"line_start":225,"line_end":225,"column_start":9,"column_end":18},"name":"underline","qualname":"::text::text_layout_types::TextFormat::underline","value":"stroke::Stroke","parent":{"krate":0,"index":3768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3774},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270919,"byte_end":270932,"line_start":226,"line_end":226,"column_start":9,"column_end":22},"name":"strikethrough","qualname":"::text::text_layout_types::TextFormat::strikethrough","value":"stroke::Stroke","parent":{"krate":0,"index":3768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3775},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271048,"byte_end":271054,"line_start":229,"line_end":229,"column_start":9,"column_end":15},"name":"valign","qualname":"::text::text_layout_types::TextFormat::valign","value":"emath::Align","parent":{"krate":0,"index":3768},"children":[],"decl_id":null,"docs":" If you use a small font and [`Align::TOP`] you\n can get the effect of raised text.\n","sig":null,"attributes":[{"value":"/ If you use a small font and [`Align::TOP`] you","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270946,"byte_end":270996,"line_start":227,"line_end":227,"column_start":5,"column_end":55}},{"value":"/ can get the effect of raised text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271001,"byte_end":271039,"line_start":228,"line_end":228,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271145,"byte_end":271152,"line_start":235,"line_end":235,"column_start":8,"column_end":15},"name":"default","qualname":"<TextFormat as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271128,"byte_end":271137,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271507,"byte_end":271513,"line_start":250,"line_end":250,"column_start":12,"column_end":18},"name":"simple","qualname":"<TextFormat>::simple","value":"fn simple(FontId, Color32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271486,"byte_end":271495,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3843},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271868,"byte_end":271880,"line_start":263,"line_end":263,"column_start":12,"column_end":24},"name":"TextWrapping","qualname":"::text::text_layout_types::TextWrapping","value":"TextWrapping { max_width, max_rows, break_anywhere, overflow_character }","parent":null,"children":[{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846},{"krate":0,"index":3847}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272058,"byte_end":272067,"line_start":267,"line_end":267,"column_start":9,"column_end":18},"name":"max_width","qualname":"::text::text_layout_types::TextWrapping::max_width","value":"f32","parent":{"krate":0,"index":3843},"children":[],"decl_id":null,"docs":" Try to break text so that no row is wider than this.\n Set to [`f32::INFINITY`] to turn off wrapping.\n Note that `\\n` always produces a new line.\n","sig":null,"attributes":[{"value":"/ Try to break text so that no row is wider than this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271887,"byte_end":271943,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/ Set to [`f32::INFINITY`] to turn off wrapping.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271948,"byte_end":271998,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/ Note that `\\n` always produces a new line.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272003,"byte_end":272049,"line_start":266,"line_end":266,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3845},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272172,"byte_end":272180,"line_start":271,"line_end":271,"column_start":9,"column_end":17},"name":"max_rows","qualname":"::text::text_layout_types::TextWrapping::max_rows","value":"usize","parent":{"krate":0,"index":3843},"children":[],"decl_id":null,"docs":" Maximum amount of rows the text should have.\n Set to `0` to disable this.\n","sig":null,"attributes":[{"value":"/ Maximum amount of rows the text should have.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272079,"byte_end":272127,"line_start":269,"line_end":269,"column_start":5,"column_end":53}},{"value":"/ Set to `0` to disable this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272132,"byte_end":272163,"line_start":270,"line_end":270,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3846},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272255,"byte_end":272269,"line_start":274,"line_end":274,"column_start":9,"column_end":23},"name":"break_anywhere","qualname":"::text::text_layout_types::TextWrapping::break_anywhere","value":"bool","parent":{"krate":0,"index":3843},"children":[],"decl_id":null,"docs":" Don't try to break text at an appropriate place.\n","sig":null,"attributes":[{"value":"/ Don't try to break text at an appropriate place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272194,"byte_end":272246,"line_start":273,"line_end":273,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3847},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272379,"byte_end":272397,"line_start":277,"line_end":277,"column_start":9,"column_end":27},"name":"overflow_character","qualname":"::text::text_layout_types::TextWrapping::overflow_character","value":"std::option::Option<char>","parent":{"krate":0,"index":3843},"children":[],"decl_id":null,"docs":" Character to use to represent clipped text, `…` for example, which is the default.\n","sig":null,"attributes":[{"value":"/ Character to use to represent clipped text, `…` for example, which is the default.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272282,"byte_end":272370,"line_start":276,"line_end":276,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272477,"byte_end":272481,"line_start":282,"line_end":282,"column_start":8,"column_end":12},"name":"hash","qualname":"<TextWrapping as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: std::hash::Hasher","parent":{"krate":2,"index":10536},"children":[],"decl_id":{"krate":2,"index":10537},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272460,"byte_end":272469,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272868,"byte_end":272875,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"default","qualname":"<TextWrapping as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3909},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273473,"byte_end":273479,"line_start":316,"line_end":316,"column_start":12,"column_end":18},"name":"Galley","qualname":"::text::text_layout_types::Galley","value":"Galley { job, rows, rect, mesh_bounds, num_vertices, num_indices, pixels_per_point }","parent":null,"children":[{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916}],"decl_id":null,"docs":" Text that has been layed out, ready for painting.","sig":null,"attributes":[{"value":"/ Text that has been layed out, ready for painting.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273146,"byte_end":273199,"line_start":309,"line_end":309,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273200,"byte_end":273203,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ You can create a [`Galley`] using [`crate::Fonts::layout_job`];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273204,"byte_end":273271,"line_start":311,"line_end":311,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273272,"byte_end":273275,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ This needs to be recreated if `pixels_per_point` (dpi scale) changes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273276,"byte_end":273349,"line_start":313,"line_end":313,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":3910},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273598,"byte_end":273601,"line_start":319,"line_end":319,"column_start":9,"column_end":12},"name":"job","qualname":"::text::text_layout_types::Galley::job","value":"std::sync::Arc<text::text_layout_types::LayoutJob>","parent":{"krate":0,"index":3909},"children":[],"decl_id":null,"docs":" The job that this galley is the result of.\n Contains the original string and style sections.\n","sig":null,"attributes":[{"value":"/ The job that this galley is the result of.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273486,"byte_end":273532,"line_start":317,"line_end":317,"column_start":5,"column_end":51}},{"value":"/ Contains the original string and style sections.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273537,"byte_end":273589,"line_start":318,"line_end":318,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3911},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273867,"byte_end":273871,"line_start":325,"line_end":325,"column_start":9,"column_end":13},"name":"rows","qualname":"::text::text_layout_types::Galley::rows","value":"std::vec::Vec<text::text_layout_types::Row>","parent":{"krate":0,"index":3909},"children":[],"decl_id":null,"docs":" Rows of text, from top to bottom.\n The number of characters in all rows sum up to `job.text.chars().count()`.\n Note that each paragraph (pieces of text separated with `\\n`)\n can be split up into multiple rows.\n","sig":null,"attributes":[{"value":"/ Rows of text, from top to bottom.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273624,"byte_end":273661,"line_start":321,"line_end":321,"column_start":5,"column_end":42}},{"value":"/ The number of characters in all rows sum up to `job.text.chars().count()`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273666,"byte_end":273744,"line_start":322,"line_end":322,"column_start":5,"column_end":83}},{"value":"/ Note that each paragraph (pieces of text separated with `\\n`)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273749,"byte_end":273814,"line_start":323,"line_end":323,"column_start":5,"column_end":70}},{"value":"/ can be split up into multiple rows.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273819,"byte_end":273858,"line_start":324,"line_end":324,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3912},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274147,"byte_end":274151,"line_start":335,"line_end":335,"column_start":9,"column_end":13},"name":"rect","qualname":"::text::text_layout_types::Galley::rect","value":"emath::Rect","parent":{"krate":0,"index":3909},"children":[],"decl_id":null,"docs":" Bounding rect.","sig":null,"attributes":[{"value":"/ Bounding rect.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273888,"byte_end":273906,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273911,"byte_end":273914,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ `rect.top()` is always 0.0.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273919,"byte_end":273950,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273955,"byte_end":273958,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ With [`LayoutJob::halign`]:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273963,"byte_end":273994,"line_start":331,"line_end":331,"column_start":5,"column_end":36}},{"value":"/ * [`Align::LEFT`]: rect.left() == 0.0","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":273999,"byte_end":274040,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ * [`Align::Center`]: rect.center() == 0.0","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274045,"byte_end":274090,"line_start":333,"line_end":333,"column_start":5,"column_end":50}},{"value":"/ * [`Align::RIGHT`]: rect.right() == 0.0","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274095,"byte_end":274138,"line_start":334,"line_end":334,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3913},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274267,"byte_end":274278,"line_start":339,"line_end":339,"column_start":9,"column_end":20},"name":"mesh_bounds","qualname":"::text::text_layout_types::Galley::mesh_bounds","value":"emath::Rect","parent":{"krate":0,"index":3909},"children":[],"decl_id":null,"docs":" Tight bounding box around all the meshes in all the rows.\n Can be used for culling.\n","sig":null,"attributes":[{"value":"/ Tight bounding box around all the meshes in all the rows.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274164,"byte_end":274225,"line_start":337,"line_end":337,"column_start":5,"column_end":66}},{"value":"/ Can be used for culling.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274230,"byte_end":274258,"line_start":338,"line_end":338,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3914},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274351,"byte_end":274363,"line_start":342,"line_end":342,"column_start":9,"column_end":21},"name":"num_vertices","qualname":"::text::text_layout_types::Galley::num_vertices","value":"usize","parent":{"krate":0,"index":3909},"children":[],"decl_id":null,"docs":" Total number of vertices in all the row meshes.\n","sig":null,"attributes":[{"value":"/ Total number of vertices in all the row meshes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274291,"byte_end":274342,"line_start":341,"line_end":341,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3915},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274436,"byte_end":274447,"line_start":345,"line_end":345,"column_start":9,"column_end":20},"name":"num_indices","qualname":"::text::text_layout_types::Galley::num_indices","value":"usize","parent":{"krate":0,"index":3909},"children":[],"decl_id":null,"docs":" Total number of indices in all the row meshes.\n","sig":null,"attributes":[{"value":"/ Total number of indices in all the row meshes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274377,"byte_end":274427,"line_start":344,"line_end":344,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3916},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274671,"byte_end":274687,"line_start":351,"line_end":351,"column_start":9,"column_end":25},"name":"pixels_per_point","qualname":"::text::text_layout_types::Galley::pixels_per_point","value":"f32","parent":{"krate":0,"index":3909},"children":[],"decl_id":null,"docs":" The number of physical pixels for each logical point.\n Since this affects the layout, we keep track of it\n so that we can warn if this has changed once we get to\n tessellation.\n","sig":null,"attributes":[{"value":"/ The number of physical pixels for each logical point.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274461,"byte_end":274518,"line_start":347,"line_end":347,"column_start":5,"column_end":62}},{"value":"/ Since this affects the layout, we keep track of it","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274523,"byte_end":274577,"line_start":348,"line_end":348,"column_start":5,"column_end":59}},{"value":"/ so that we can warn if this has changed once we get to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274582,"byte_end":274640,"line_start":349,"line_end":349,"column_start":5,"column_end":63}},{"value":"/ tessellation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274645,"byte_end":274662,"line_start":350,"line_end":350,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3984},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274820,"byte_end":274823,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"Row","qualname":"::text::text_layout_types::Row","value":"Row { glyphs, rect, visuals, ends_with_newline }","parent":null,"children":[{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3987},{"krate":0,"index":3988}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3985},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274863,"byte_end":274869,"line_start":358,"line_end":358,"column_start":9,"column_end":15},"name":"glyphs","qualname":"::text::text_layout_types::Row::glyphs","value":"std::vec::Vec<text::text_layout_types::Glyph>","parent":{"krate":0,"index":3984},"children":[],"decl_id":null,"docs":" One for each `char`.\n","sig":null,"attributes":[{"value":"/ One for each `char`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274830,"byte_end":274854,"line_start":357,"line_end":357,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3986},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275058,"byte_end":275062,"line_start":363,"line_end":363,"column_start":9,"column_end":13},"name":"rect","qualname":"::text::text_layout_types::Row::rect","value":"emath::Rect","parent":{"krate":0,"index":3984},"children":[],"decl_id":null,"docs":" Logical bounding rectangle based on font heights etc.\n Use this when drawing a selection or similar!\n Includes leading and trailing whitespace.\n","sig":null,"attributes":[{"value":"/ Logical bounding rectangle based on font heights etc.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274888,"byte_end":274945,"line_start":360,"line_end":360,"column_start":5,"column_end":62}},{"value":"/ Use this when drawing a selection or similar!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":274950,"byte_end":274999,"line_start":361,"line_end":361,"column_start":5,"column_end":54}},{"value":"/ Includes leading and trailing whitespace.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275004,"byte_end":275049,"line_start":362,"line_end":362,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3987},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275119,"byte_end":275126,"line_start":366,"line_end":366,"column_start":9,"column_end":16},"name":"visuals","qualname":"::text::text_layout_types::Row::visuals","value":"text::text_layout_types::RowVisuals","parent":{"krate":0,"index":3984},"children":[],"decl_id":null,"docs":" The mesh, ready to be rendered.\n","sig":null,"attributes":[{"value":"/ The mesh, ready to be rendered.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275075,"byte_end":275110,"line_start":365,"line_end":365,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3988},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275524,"byte_end":275541,"line_start":373,"line_end":373,"column_start":9,"column_end":26},"name":"ends_with_newline","qualname":"::text::text_layout_types::Row::ends_with_newline","value":"bool","parent":{"krate":0,"index":3984},"children":[],"decl_id":null,"docs":" If true, this [`Row`] came from a paragraph ending with a `\\n`.\n The `\\n` itself is omitted from [`Self::glyphs`].\n A `\\n` in the input text always creates a new [`Row`] below it,\n so that text that ends with `\\n` has an empty [`Row`] last.\n This also implies that the last [`Row`] in a [`Galley`] always has `ends_with_newline == false`.\n","sig":null,"attributes":[{"value":"/ If true, this [`Row`] came from a paragraph ending with a `\\n`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275145,"byte_end":275212,"line_start":368,"line_end":368,"column_start":5,"column_end":72}},{"value":"/ The `\\n` itself is omitted from [`Self::glyphs`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275217,"byte_end":275270,"line_start":369,"line_end":369,"column_start":5,"column_end":58}},{"value":"/ A `\\n` in the input text always creates a new [`Row`] below it,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275275,"byte_end":275342,"line_start":370,"line_end":370,"column_start":5,"column_end":72}},{"value":"/ so that text that ends with `\\n` has an empty [`Row`] last.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275347,"byte_end":275410,"line_start":371,"line_end":371,"column_start":5,"column_end":68}},{"value":"/ This also implies that the last [`Row`] in a [`Galley`] always has `ends_with_newline == false`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275415,"byte_end":275515,"line_start":372,"line_end":372,"column_start":5,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":4050},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275712,"byte_end":275722,"line_start":379,"line_end":379,"column_start":12,"column_end":22},"name":"RowVisuals","qualname":"::text::text_layout_types::RowVisuals","value":"RowVisuals { mesh, mesh_bounds, glyph_vertex_range }","parent":null,"children":[{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4053}],"decl_id":null,"docs":" The tessellated output of a row.\n","sig":null,"attributes":[{"value":"/ The tessellated output of a row.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275552,"byte_end":275588,"line_start":376,"line_end":376,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4051},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275884,"byte_end":275888,"line_start":382,"line_end":382,"column_start":9,"column_end":13},"name":"mesh","qualname":"::text::text_layout_types::RowVisuals::mesh","value":"mesh::Mesh","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" The tessellated text, using non-normalized (texel) UV coordinates.\n That is, you need to divide the uv coordinates by the texture size.\n","sig":null,"attributes":[{"value":"/ The tessellated text, using non-normalized (texel) UV coordinates.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275729,"byte_end":275799,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"/ That is, you need to divide the uv coordinates by the texture size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275804,"byte_end":275875,"line_start":381,"line_end":381,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":4052},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276027,"byte_end":276038,"line_start":386,"line_end":386,"column_start":9,"column_end":20},"name":"mesh_bounds","qualname":"::text::text_layout_types::RowVisuals::mesh_bounds","value":"emath::Rect","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Bounds of the mesh, and can be used for culling.\n Does NOT include leading or trailing whitespace glyphs!!\n","sig":null,"attributes":[{"value":"/ Bounds of the mesh, and can be used for culling.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275901,"byte_end":275953,"line_start":384,"line_end":384,"column_start":5,"column_end":57}},{"value":"/ Does NOT include leading or trailing whitespace glyphs!!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":275958,"byte_end":276018,"line_start":385,"line_end":385,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":4053},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276204,"byte_end":276222,"line_start":390,"line_end":390,"column_start":9,"column_end":27},"name":"glyph_vertex_range","qualname":"::text::text_layout_types::RowVisuals::glyph_vertex_range","value":"std::ops::Range<usize>","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" The range of vertices in the mesh the contain glyphs.\n Before comes backgrounds (if any), and after any underlines and strikethrough.\n","sig":null,"attributes":[{"value":"/ The range of vertices in the mesh the contain glyphs.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276051,"byte_end":276108,"line_start":388,"line_end":388,"column_start":5,"column_end":62}},{"value":"/ Before comes backgrounds (if any), and after any underlines and strikethrough.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276113,"byte_end":276195,"line_start":389,"line_end":389,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276278,"byte_end":276285,"line_start":394,"line_end":394,"column_start":8,"column_end":15},"name":"default","qualname":"<RowVisuals as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4114},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276577,"byte_end":276582,"line_start":405,"line_end":405,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::text::text_layout_types::Glyph","value":"Glyph { chr, pos, size, uv_rect, section_index }","parent":null,"children":[{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4119}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4115},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276638,"byte_end":276641,"line_start":407,"line_end":407,"column_start":9,"column_end":12},"name":"chr","qualname":"::text::text_layout_types::Glyph::chr","value":"char","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" The character this glyph represents.\n","sig":null,"attributes":[{"value":"/ The character this glyph represents.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276589,"byte_end":276629,"line_start":406,"line_end":406,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":4116},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276785,"byte_end":276788,"line_start":411,"line_end":411,"column_start":9,"column_end":12},"name":"pos","qualname":"::text::text_layout_types::Glyph::pos","value":"emath::Pos2","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" Relative to the galley position.\n Logical position: pos.y is the same for all chars of the same [`TextFormat`].\n","sig":null,"attributes":[{"value":"/ Relative to the galley position.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276654,"byte_end":276690,"line_start":409,"line_end":409,"column_start":5,"column_end":41}},{"value":"/ Logical position: pos.y is the same for all chars of the same [`TextFormat`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276695,"byte_end":276776,"line_start":410,"line_end":410,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":4117},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276848,"byte_end":276852,"line_start":414,"line_end":414,"column_start":9,"column_end":13},"name":"size","qualname":"::text::text_layout_types::Glyph::size","value":"emath::Vec2","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" Advance width and font row height.\n","sig":null,"attributes":[{"value":"/ Advance width and font row height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276801,"byte_end":276839,"line_start":413,"line_end":413,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":4118},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276931,"byte_end":276938,"line_start":417,"line_end":417,"column_start":9,"column_end":16},"name":"uv_rect","qualname":"::text::text_layout_types::Glyph::uv_rect","value":"text::font::UvRect","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" Position of the glyph in the font texture, in texels.\n","sig":null,"attributes":[{"value":"/ Position of the glyph in the font texture, in texels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276865,"byte_end":276922,"line_start":416,"line_end":416,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":4119},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277020,"byte_end":277033,"line_start":420,"line_end":420,"column_start":9,"column_end":22},"name":"section_index","qualname":"::text::text_layout_types::Glyph::section_index","value":"u32","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" Index into [`LayoutJob::sections`]. Decides color etc.\n","sig":null,"attributes":[{"value":"/ Index into [`LayoutJob::sections`]. Decides color etc.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276953,"byte_end":277011,"line_start":419,"line_end":419,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277067,"byte_end":277072,"line_start":424,"line_end":424,"column_start":12,"column_end":17},"name":"max_x","qualname":"<Glyph>::max_x","value":"fn max_x<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277224,"byte_end":277236,"line_start":430,"line_end":430,"column_start":12,"column_end":24},"name":"logical_rect","qualname":"<Glyph>::logical_rect","value":"fn logical_rect<'_>(&'_ Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Same y range for all characters with the same [`TextFormat`].\n","sig":null,"attributes":[{"value":"/ Same y range for all characters with the same [`TextFormat`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277133,"byte_end":277198,"line_start":428,"line_end":428,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277203,"byte_end":277212,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277491,"byte_end":277519,"line_start":440,"line_end":440,"column_start":12,"column_end":40},"name":"char_count_excluding_newline","qualname":"<Row>::char_count_excluding_newline","value":"fn char_count_excluding_newline<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Excludes the implicit `\\n` after the [`Row`], if any.\n","sig":null,"attributes":[{"value":"/ Excludes the implicit `\\n` after the [`Row`], if any.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277408,"byte_end":277465,"line_start":438,"line_end":438,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277470,"byte_end":277479,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277658,"byte_end":277686,"line_start":446,"line_end":446,"column_start":12,"column_end":40},"name":"char_count_including_newline","qualname":"<Row>::char_count_including_newline","value":"fn char_count_including_newline<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Includes the implicit `\\n` after the [`Row`], if any.\n","sig":null,"attributes":[{"value":"/ Includes the implicit `\\n` after the [`Row`], if any.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277575,"byte_end":277632,"line_start":444,"line_end":444,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277637,"byte_end":277646,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277799,"byte_end":277804,"line_start":451,"line_end":451,"column_start":12,"column_end":17},"name":"min_y","qualname":"<Row>::min_y","value":"fn min_y<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277778,"byte_end":277787,"line_start":450,"line_end":450,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277877,"byte_end":277882,"line_start":456,"line_end":456,"column_start":12,"column_end":17},"name":"max_y","qualname":"<Row>::max_y","value":"fn max_y<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277856,"byte_end":277865,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277958,"byte_end":277964,"line_start":461,"line_end":461,"column_start":12,"column_end":18},"name":"height","qualname":"<Row>::height","value":"fn height<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277937,"byte_end":277946,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278154,"byte_end":278161,"line_start":467,"line_end":467,"column_start":12,"column_end":19},"name":"char_at","qualname":"<Row>::char_at","value":"fn char_at<'_>(&'_ Self, f32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Closest char at the desired x coordinate.\n Returns something in the range `[0, char_count_excluding_newline()]`.\n","sig":null,"attributes":[{"value":"/ Closest char at the desired x coordinate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278019,"byte_end":278064,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/ Returns something in the range `[0, char_count_excluding_newline()]`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278069,"byte_end":278142,"line_start":466,"line_end":466,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278428,"byte_end":278436,"line_start":476,"line_end":476,"column_start":12,"column_end":20},"name":"x_offset","qualname":"<Row>::x_offset","value":"fn x_offset<'_>(&'_ Self, usize) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278660,"byte_end":278668,"line_start":487,"line_end":487,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Galley>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278631,"byte_end":278648,"line_start":486,"line_end":486,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278754,"byte_end":278758,"line_start":492,"line_end":492,"column_start":12,"column_end":16},"name":"text","qualname":"<Galley>::text","value":"fn text<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278725,"byte_end":278742,"line_start":491,"line_end":491,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278817,"byte_end":278821,"line_start":496,"line_end":496,"column_start":12,"column_end":16},"name":"size","qualname":"<Galley>::size","value":"fn size<'_>(&'_ Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":279402,"byte_end":279418,"line_start":517,"line_end":517,"column_start":12,"column_end":28},"name":"pos_from_pcursor","qualname":"<Galley>::pos_from_pcursor","value":"fn pos_from_pcursor<'_>(&'_ Self, PCursor) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a 0-width Rect.\n","sig":null,"attributes":[{"value":"/ Returns a 0-width Rect.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":279363,"byte_end":279390,"line_start":516,"line_end":516,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":280664,"byte_end":280679,"line_start":552,"line_end":552,"column_start":12,"column_end":27},"name":"pos_from_cursor","qualname":"<Galley>::pos_from_cursor","value":"fn pos_from_cursor<'_, '_>(&'_ Self, &'_ Cursor) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a 0-width Rect.\n","sig":null,"attributes":[{"value":"/ Returns a 0-width Rect.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":280625,"byte_end":280652,"line_start":551,"line_end":551,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":280868,"byte_end":280883,"line_start":557,"line_end":557,"column_start":12,"column_end":27},"name":"cursor_from_pos","qualname":"<Galley>::cursor_from_pos","value":"fn cursor_from_pos<'_>(&'_ Self, Vec2) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Cursor at the given position within the galley\n","sig":null,"attributes":[{"value":"/ Cursor at the given position within the galley","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":280806,"byte_end":280856,"line_start":556,"line_end":556,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":282636,"byte_end":282639,"line_start":606,"line_end":606,"column_start":12,"column_end":15},"name":"end","qualname":"<Galley>::end","value":"fn end<'_>(&'_ Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Cursor to one-past last character.\n","sig":null,"attributes":[{"value":"/ Cursor to one-past last character.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":282586,"byte_end":282624,"line_start":605,"line_end":605,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":283461,"byte_end":283472,"line_start":636,"line_end":636,"column_start":12,"column_end":23},"name":"end_rcursor","qualname":"<Galley>::end_rcursor","value":"fn end_rcursor<'_>(&'_ Self) -> RCursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":283908,"byte_end":283920,"line_start":652,"line_end":652,"column_start":12,"column_end":24},"name":"from_ccursor","qualname":"<Galley>::from_ccursor","value":"fn from_ccursor<'_>(&'_ Self, CCursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":285691,"byte_end":285703,"line_start":703,"line_end":703,"column_start":12,"column_end":24},"name":"from_rcursor","qualname":"<Galley>::from_rcursor","value":"fn from_rcursor<'_>(&'_ Self, RCursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":287375,"byte_end":287387,"line_start":752,"line_end":752,"column_start":12,"column_end":24},"name":"from_pcursor","qualname":"<Galley>::from_pcursor","value":"fn from_pcursor<'_>(&'_ Self, PCursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":289401,"byte_end":289426,"line_start":811,"line_end":811,"column_start":12,"column_end":37},"name":"cursor_left_one_character","qualname":"<Galley>::cursor_left_one_character","value":"fn cursor_left_one_character<'_, '_>(&'_ Self, &'_ Cursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":289871,"byte_end":289897,"line_start":823,"line_end":823,"column_start":12,"column_end":38},"name":"cursor_right_one_character","qualname":"<Galley>::cursor_right_one_character","value":"fn cursor_right_one_character<'_, '_>(&'_ Self, &'_ Cursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":290225,"byte_end":290242,"line_start":831,"line_end":831,"column_start":12,"column_end":29},"name":"cursor_up_one_row","qualname":"<Galley>::cursor_up_one_row","value":"fn cursor_up_one_row<'_, '_>(&'_ Self, &'_ Cursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":291397,"byte_end":291416,"line_start":864,"line_end":864,"column_start":12,"column_end":31},"name":"cursor_down_one_row","qualname":"<Galley>::cursor_down_one_row","value":"fn cursor_down_one_row<'_, '_>(&'_ Self, &'_ Cursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":292587,"byte_end":292606,"line_start":898,"line_end":898,"column_start":12,"column_end":31},"name":"cursor_begin_of_row","qualname":"<Galley>::cursor_begin_of_row","value":"fn cursor_begin_of_row<'_, '_>(&'_ Self, &'_ Cursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":292768,"byte_end":292785,"line_start":905,"line_end":905,"column_start":12,"column_end":29},"name":"cursor_end_of_row","qualname":"<Galley>::cursor_end_of_row","value":"fn cursor_end_of_row<'_, '_>(&'_ Self, &'_ Cursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196431,"byte_end":196439,"line_start":10,"line_end":10,"column_start":11,"column_end":19},"name":"TAB_SIZE","qualname":"::text::TAB_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" One `\\t` character is this many spaces wide.\n","sig":null,"attributes":[{"value":"/ One `\\t` character is this many spaces wide.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196372,"byte_end":196420,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196690,"byte_end":196715,"line_start":19,"line_end":19,"column_start":11,"column_end":36},"name":"PASSWORD_REPLACEMENT_CHAR","qualname":"::text::PASSWORD_REPLACEMENT_CHAR","value":"char","parent":null,"children":[],"decl_id":null,"docs":" Suggested character to use to replace those in password text fields.\n","sig":null,"attributes":[{"value":"/ Suggested character to use to replace those in password text fields.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196607,"byte_end":196679,"line_start":18,"line_end":18,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":4200},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":293784,"byte_end":293796,"line_start":43,"line_end":43,"column_start":12,"column_end":24},"name":"PreparedDisc","qualname":"::texture_atlas::PreparedDisc","value":"PreparedDisc { r, w, uv }","parent":null,"children":[{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4203}],"decl_id":null,"docs":" A pre-rasterized disc (filled circle), somewhere in the texture atlas.\n","sig":null,"attributes":[{"value":"/ A pre-rasterized disc (filled circle), somewhere in the texture atlas.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":293668,"byte_end":293742,"line_start":41,"line_end":41,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":4201},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":293850,"byte_end":293851,"line_start":45,"line_end":45,"column_start":9,"column_end":10},"name":"r","qualname":"::texture_atlas::PreparedDisc::r","value":"f32","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" The radius of this disc in texels.\n","sig":null,"attributes":[{"value":"/ The radius of this disc in texels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":293803,"byte_end":293841,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":4202},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":293892,"byte_end":293893,"line_start":48,"line_end":48,"column_start":9,"column_end":10},"name":"w","qualname":"::texture_atlas::PreparedDisc::w","value":"f32","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Width in texels.\n","sig":null,"attributes":[{"value":"/ Width in texels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":293863,"byte_end":293883,"line_start":47,"line_end":47,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":4203},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":293990,"byte_end":293992,"line_start":52,"line_end":52,"column_start":9,"column_end":11},"name":"uv","qualname":"::texture_atlas::PreparedDisc::uv","value":"emath::Rect","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":" Where in the texture atlas the disc is.\n Normalized in 0-1 range.\n","sig":null,"attributes":[{"value":"/ Where in the texture atlas the disc is.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":293905,"byte_end":293948,"line_start":50,"line_end":50,"column_start":5,"column_end":48}},{"value":"/ Normalized in 0-1 range.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":293953,"byte_end":293981,"line_start":51,"line_end":51,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4209},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":294186,"byte_end":294198,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"TextureAtlas","qualname":"::texture_atlas::TextureAtlas","value":"TextureAtlas {  }","parent":null,"children":[{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215}],"decl_id":null,"docs":" Contains font data in an atlas, where each character occupied a small rectangle.","sig":null,"attributes":[{"value":"/ Contains font data in an atlas, where each character occupied a small rectangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":294003,"byte_end":294087,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":294088,"byte_end":294091,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ More characters can be added, possibly expanding the texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":294092,"byte_end":294157,"line_start":57,"line_end":57,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":294617,"byte_end":294620,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<TextureAtlas>::new","value":"fn new([usize; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":296623,"byte_end":296627,"line_start":132,"line_end":132,"column_start":12,"column_end":16},"name":"size","qualname":"<TextureAtlas>::size","value":"fn size<'_>(&'_ Self) -> [usize; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":296789,"byte_end":296803,"line_start":137,"line_end":137,"column_start":12,"column_end":26},"name":"prepared_discs","qualname":"<TextureAtlas>::prepared_discs","value":"fn prepared_discs<'_>(&'_ Self) -> Vec<PreparedDisc>","parent":null,"children":[],"decl_id":null,"docs":" Returns the locations and sizes of pre-rasterized discs (filled circles) in this atlas.\n","sig":null,"attributes":[{"value":"/ Returns the locations and sizes of pre-rasterized discs (filled circles) in this atlas.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":296686,"byte_end":296777,"line_start":136,"line_end":136,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":297782,"byte_end":297792,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"fill_ratio","qualname":"<TextureAtlas>::fill_ratio","value":"fn fill_ratio<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" When this get high, it might be time to clear and start over!\n","sig":null,"attributes":[{"value":"/ When this get high, it might be time to clear and start over!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":297705,"byte_end":297770,"line_start":166,"line_end":166,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":298040,"byte_end":298050,"line_start":176,"line_end":176,"column_start":12,"column_end":22},"name":"take_delta","qualname":"<TextureAtlas>::take_delta","value":"fn take_delta<'_>(&'_ mut Self) -> Option<ImageDelta>","parent":null,"children":[],"decl_id":null,"docs":" Call to get the change to the image since last call.\n","sig":null,"attributes":[{"value":"/ Call to get the change to the image since last call.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":297972,"byte_end":298028,"line_start":175,"line_end":175,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":298736,"byte_end":298744,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"allocate","qualname":"<TextureAtlas>::allocate","value":"fn allocate<'_>(&'_ mut Self, (usize, usize))\n-> ((usize, usize), &'_ mut FontImage)","parent":null,"children":[],"decl_id":null,"docs":" Returns the coordinates of where the rect ended up,\n and invalidates the region.\n","sig":null,"attributes":[{"value":"/ Returns the coordinates of where the rect ended up,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":298633,"byte_end":298688,"line_start":190,"line_end":190,"column_start":5,"column_end":60}},{"value":"/ and invalidates the region.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":298693,"byte_end":298724,"line_start":191,"line_end":191,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301497,"byte_end":301510,"line_start":20,"line_end":20,"column_start":12,"column_end":25},"name":"TextureHandle","qualname":"::texture_handle::TextureHandle","value":"TextureHandle {  }","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235}],"decl_id":null,"docs":" Used to paint images.","sig":null,"attributes":[{"value":"/ Used to paint images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301044,"byte_end":301069,"line_start":8,"line_end":8,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301070,"byte_end":301073,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An _image_ is pixels stored in RAM, and represented using [`ImageData`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301074,"byte_end":301150,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ Before you can paint it however, you need to convert it to a _texture_.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301151,"byte_end":301226,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301227,"byte_end":301230,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If you are using egui, use `egui::Context::load_texture`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301231,"byte_end":301292,"line_start":13,"line_end":13,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301293,"byte_end":301296,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The [`TextureHandle`] can be cloned cheaply.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301297,"byte_end":301345,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ When the last [`TextureHandle`] for specific texture is dropped, the texture is freed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301346,"byte_end":301436,"line_start":16,"line_end":16,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301437,"byte_end":301440,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See also [`TextureManager`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301441,"byte_end":301473,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"must_use","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301474,"byte_end":301485,"line_start":19,"line_end":19,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301615,"byte_end":301619,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"drop","qualname":"<TextureHandle as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301725,"byte_end":301730,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"clone","qualname":"<TextureHandle as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2887},"children":[],"decl_id":{"krate":2,"index":2888},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301955,"byte_end":301957,"line_start":43,"line_end":43,"column_start":8,"column_end":10},"name":"eq","qualname":"<TextureHandle as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":2,"index":2920},"children":[],"decl_id":{"krate":2,"index":2922},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301938,"byte_end":301947,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302118,"byte_end":302122,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"hash","qualname":"<TextureHandle as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: std::hash::Hasher","parent":{"krate":2,"index":10536},"children":[],"decl_id":{"krate":2,"index":10537},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302101,"byte_end":302110,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302313,"byte_end":302316,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<TextureHandle>::new","value":"fn new(Arc<RwLock<TextureManager>>, TextureId) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you are using egui, use `egui::Context::load_texture` instead.\n","sig":null,"attributes":[{"value":"/ If you are using egui, use `egui::Context::load_texture` instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302232,"byte_end":302301,"line_start":58,"line_end":58,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302443,"byte_end":302445,"line_start":64,"line_end":64,"column_start":12,"column_end":14},"name":"id","qualname":"<TextureHandle>::id","value":"fn id<'_>(&'_ Self) -> TextureId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302422,"byte_end":302431,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302553,"byte_end":302556,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"set","qualname":"<TextureHandle>::set","value":"fn set<'_,\nimpl Into<ImageData>>(&'_ mut Self, impl Into<ImageData>, TextureFilter) where\nimpl Into<ImageData>: Into<ImageData>","parent":null,"children":[],"decl_id":null,"docs":" Assign a new image to an existing texture.\n","sig":null,"attributes":[{"value":"/ Assign a new image to an existing texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302495,"byte_end":302541,"line_start":68,"line_end":68,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302814,"byte_end":302825,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"set_partial","qualname":"<TextureHandle>::set_partial","value":"fn set_partial<'_,\nimpl Into<ImageData>>(&'_ mut Self, [usize; ], impl Into<ImageData>,\nTextureFilter) where impl Into<ImageData>: Into<ImageData>","parent":null,"children":[],"decl_id":null,"docs":" Assign a new image to a subregion of the whole texture.\n","sig":null,"attributes":[{"value":"/ Assign a new image to a subregion of the whole texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302743,"byte_end":302802,"line_start":75,"line_end":75,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303106,"byte_end":303110,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"size","qualname":"<TextureHandle>::size","value":"fn size<'_>(&'_ Self) -> [usize; ]","parent":null,"children":[],"decl_id":null,"docs":" width x height\n","sig":null,"attributes":[{"value":"/ width x height","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303076,"byte_end":303094,"line_start":87,"line_end":87,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303232,"byte_end":303241,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"size_vec2","qualname":"<TextureHandle>::size_vec2","value":"fn size_vec2<'_>(&'_ Self) -> crate::Vec2","parent":null,"children":[],"decl_id":null,"docs":" width x height\n","sig":null,"attributes":[{"value":"/ width x height","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303202,"byte_end":303220,"line_start":92,"line_end":92,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303386,"byte_end":303398,"line_start":99,"line_end":99,"column_start":12,"column_end":24},"name":"aspect_ratio","qualname":"<TextureHandle>::aspect_ratio","value":"fn aspect_ratio<'_>(&'_ Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" width / height\n","sig":null,"attributes":[{"value":"/ width / height","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303356,"byte_end":303374,"line_start":98,"line_end":98,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303527,"byte_end":303531,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"name","qualname":"<TextureHandle>::name","value":"fn name<'_>(&'_ Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Debug-name.\n","sig":null,"attributes":[{"value":"/ Debug-name.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303500,"byte_end":303515,"line_start":104,"line_end":104,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303696,"byte_end":303700,"line_start":112,"line_end":112,"column_start":8,"column_end":12},"name":"from","qualname":"<TextureId as std::convert::From>::from","value":"fn from<'_>(&'_ TextureHandle) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303671,"byte_end":303688,"line_start":111,"line_end":111,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303839,"byte_end":303843,"line_start":119,"line_end":119,"column_start":8,"column_end":12},"name":"from","qualname":"<TextureId as std::convert::From>::from","value":"fn from<'_>(&'_ mut TextureHandle) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303814,"byte_end":303831,"line_start":118,"line_end":118,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"textures","qualname":"::textures","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1271},{"krate":0,"index":4218},{"krate":0,"index":4222},{"krate":0,"index":1274},{"krate":0,"index":4224},{"krate":0,"index":4231},{"krate":0,"index":4233},{"krate":0,"index":4235},{"krate":0,"index":4236},{"krate":0,"index":4247},{"krate":0,"index":4252},{"krate":0,"index":4291},{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4242},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":4305},{"krate":0,"index":4308},{"krate":0,"index":4351},{"krate":0,"index":4297},{"krate":0,"index":4299},{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":1290},{"krate":0,"index":1294}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4218},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304194,"byte_end":304208,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"TextureManager","qualname":"::textures::TextureManager","value":"TextureManager {  }","parent":null,"children":[{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221}],"decl_id":null,"docs":" Low-level manager for allocating textures.","sig":null,"attributes":[{"value":"/ Low-level manager for allocating textures.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304040,"byte_end":304086,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304087,"byte_end":304090,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Communicates with the painting subsystem using [`Self::take_delta`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304091,"byte_end":304163,"line_start":7,"line_end":7,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304984,"byte_end":304989,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"alloc","qualname":"<TextureManager>::alloc","value":"fn alloc<'_>(&'_ mut Self, String, ImageData, TextureFilter) -> TextureId","parent":null,"children":[],"decl_id":null,"docs":" Allocate a new texture.","sig":null,"attributes":[{"value":"/ Allocate a new texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304434,"byte_end":304461,"line_start":18,"line_end":18,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304466,"byte_end":304469,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ The given name can be useful for later debugging.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304474,"byte_end":304527,"line_start":20,"line_end":20,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304532,"byte_end":304535,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The returned [`TextureId`] will be [`TextureId::Managed`], with an index","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304540,"byte_end":304616,"line_start":22,"line_end":22,"column_start":5,"column_end":81}},{"value":"/ starting from zero and increasing with each call to [`Self::alloc`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304621,"byte_end":304693,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304698,"byte_end":304701,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ The first texture you allocate will be `TextureId::Managed(0) == TexureId::default()` and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304706,"byte_end":304799,"line_start":25,"line_end":25,"column_start":5,"column_end":98}},{"value":"/ MUST have a white pixel at (0,0) ([`crate::WHITE_UV`]).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304804,"byte_end":304863,"line_start":26,"line_end":26,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304868,"byte_end":304871,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The texture is given a retain-count of `1`, requiring one call to [`Self::free`] to free it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304876,"byte_end":304972,"line_start":28,"line_end":28,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":305559,"byte_end":305562,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"set","qualname":"<TextureManager>::set","value":"fn set<'_>(&'_ mut Self, TextureId, ImageDelta)","parent":null,"children":[],"decl_id":null,"docs":" Assign a new image to an existing texture,\n or update a region of it.\n","sig":null,"attributes":[{"value":"/ Assign a new image to an existing texture,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":305467,"byte_end":305513,"line_start":45,"line_end":45,"column_start":5,"column_end":51}},{"value":"/ or update a region of it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":305518,"byte_end":305547,"line_start":46,"line_end":46,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":306546,"byte_end":306550,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"free","qualname":"<TextureManager>::free","value":"fn free<'_>(&'_ mut Self, TextureId)","parent":null,"children":[],"decl_id":null,"docs":" Free an existing texture.\n","sig":null,"attributes":[{"value":"/ Free an existing texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":306505,"byte_end":306534,"line_start":68,"line_end":68,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":307181,"byte_end":307187,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"retain","qualname":"<TextureManager>::retain","value":"fn retain<'_>(&'_ mut Self, TextureId)","parent":null,"children":[],"decl_id":null,"docs":" Increase the retain-count of the given texture.","sig":null,"attributes":[{"value":"/ Increase the retain-count of the given texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":307013,"byte_end":307064,"line_start":82,"line_end":82,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":307069,"byte_end":307072,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ For each time you call [`Self::retain`] you must call [`Self::free`] on additional time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":307077,"byte_end":307169,"line_start":84,"line_end":84,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":307624,"byte_end":307634,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_delta","qualname":"<TextureManager>::take_delta","value":"fn take_delta<'_>(&'_ mut Self) -> TexturesDelta","parent":null,"children":[],"decl_id":null,"docs":" Take and reset changes since last frame.","sig":null,"attributes":[{"value":"/ Take and reset changes since last frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":307490,"byte_end":307534,"line_start":96,"line_end":96,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":307539,"byte_end":307542,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ These should be applied to the painting subsystem each frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":307547,"byte_end":307612,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":307771,"byte_end":307775,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"meta","qualname":"<TextureManager>::meta","value":"fn meta<'_>(&'_ Self, TextureId) -> Option<&'_ TextureMeta>","parent":null,"children":[],"decl_id":null,"docs":" Get meta-data about a specific texture.\n","sig":null,"attributes":[{"value":"/ Get meta-data about a specific texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":307716,"byte_end":307759,"line_start":103,"line_end":103,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":307946,"byte_end":307955,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"allocated","qualname":"<TextureManager>::allocated","value":"fn allocated<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get meta-data about all allocated textures in some arbitrary order.\n","sig":null,"attributes":[{"value":"/ Get meta-data about all allocated textures in some arbitrary order.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":307863,"byte_end":307934,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308114,"byte_end":308127,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"num_allocated","qualname":"<TextureManager>::num_allocated","value":"fn num_allocated<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Total number of allocated textures.\n","sig":null,"attributes":[{"value":"/ Total number of allocated textures.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308063,"byte_end":308102,"line_start":113,"line_end":113,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4224},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308268,"byte_end":308279,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"TextureMeta","qualname":"::textures::TextureMeta","value":"TextureMeta { name, size, bytes_per_pixel, retain_count, filter }","parent":null,"children":[{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4228},{"krate":0,"index":4229},{"krate":0,"index":4230}],"decl_id":null,"docs":" Meta-data about an allocated texture.\n","sig":null,"attributes":[{"value":"/ Meta-data about an allocated texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308180,"byte_end":308221,"line_start":119,"line_end":119,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":4225},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308342,"byte_end":308346,"line_start":123,"line_end":123,"column_start":9,"column_end":13},"name":"name","qualname":"::textures::TextureMeta::name","value":"std::string::String","parent":{"krate":0,"index":4224},"children":[],"decl_id":null,"docs":" A human-readable name useful for debugging.\n","sig":null,"attributes":[{"value":"/ A human-readable name useful for debugging.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308286,"byte_end":308333,"line_start":122,"line_end":122,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4226},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308388,"byte_end":308392,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"name":"size","qualname":"::textures::TextureMeta::size","value":"[usize; 2]","parent":{"krate":0,"index":4224},"children":[],"decl_id":null,"docs":" width x height\n","sig":null,"attributes":[{"value":"/ width x height","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308361,"byte_end":308379,"line_start":125,"line_end":125,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4228},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308430,"byte_end":308445,"line_start":129,"line_end":129,"column_start":9,"column_end":24},"name":"bytes_per_pixel","qualname":"::textures::TextureMeta::bytes_per_pixel","value":"usize","parent":{"krate":0,"index":4224},"children":[],"decl_id":null,"docs":" 4 or 1\n","sig":null,"attributes":[{"value":"/ 4 or 1","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308411,"byte_end":308421,"line_start":128,"line_end":128,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":4229},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308500,"byte_end":308512,"line_start":132,"line_end":132,"column_start":9,"column_end":21},"name":"retain_count","qualname":"::textures::TextureMeta::retain_count","value":"usize","parent":{"krate":0,"index":4224},"children":[],"decl_id":null,"docs":" Free when this reaches zero.\n","sig":null,"attributes":[{"value":"/ Free when this reaches zero.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308459,"byte_end":308491,"line_start":131,"line_end":131,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4230},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308587,"byte_end":308593,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"name":"filter","qualname":"::textures::TextureMeta::filter","value":"textures::TextureFilter","parent":{"krate":0,"index":4224},"children":[],"decl_id":null,"docs":" The texture filtering mode to use when rendering\n","sig":null,"attributes":[{"value":"/ The texture filtering mode to use when rendering","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308526,"byte_end":308578,"line_start":134,"line_end":134,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4248},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308984,"byte_end":308991,"line_start":146,"line_end":146,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::textures::TextureFilter::Nearest","value":"TextureFilter::Nearest","parent":{"krate":0,"index":4247},"children":[],"decl_id":null,"docs":" Show the nearest pixel value.","sig":null,"attributes":[{"value":"/ Show the nearest pixel value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308801,"byte_end":308834,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308839,"byte_end":308842,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ When zooming in you will get sharp, square pixels/texels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308847,"byte_end":308908,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/ When zooming out you will get a very crisp (and aliased) look.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308913,"byte_end":308979,"line_start":145,"line_end":145,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4250},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309137,"byte_end":309143,"line_start":151,"line_end":151,"column_start":5,"column_end":11},"name":"Linear","qualname":"::textures::TextureFilter::Linear","value":"TextureFilter::Linear","parent":{"krate":0,"index":4247},"children":[],"decl_id":null,"docs":" Linearly interpolate the nearest neighbors, creating a smoother look when zooming in and out.","sig":null,"attributes":[{"value":"/ Linearly interpolate the nearest neighbors, creating a smoother look when zooming in and out.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308998,"byte_end":309095,"line_start":148,"line_end":148,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309100,"byte_end":309103,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This is the default.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309108,"byte_end":309132,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":4247},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308781,"byte_end":308794,"line_start":141,"line_end":141,"column_start":10,"column_end":23},"name":"TextureFilter","qualname":"::textures::TextureFilter","value":"enum TextureFilter { Nearest, Linear, }","parent":null,"children":[{"krate":0,"index":4248},{"krate":0,"index":4250}],"decl_id":null,"docs":" How the texture texels are filtered.\n","sig":null,"attributes":[{"value":"/ How the texture texels are filtered.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":308613,"byte_end":308653,"line_start":138,"line_end":138,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309188,"byte_end":309195,"line_start":155,"line_end":155,"column_start":8,"column_end":15},"name":"default","qualname":"<TextureFilter as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309343,"byte_end":309353,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"bytes_used","qualname":"<TextureMeta>::bytes_used","value":"fn bytes_used<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Size in bytes.\n width x height x [`Self::bytes_per_pixel`].\n","sig":null,"attributes":[{"value":"/ Size in bytes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309261,"byte_end":309279,"line_start":161,"line_end":161,"column_start":5,"column_end":23}},{"value":"/ width x height x [`Self::bytes_per_pixel`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309284,"byte_end":309331,"line_start":162,"line_end":162,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4305},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309820,"byte_end":309833,"line_start":176,"line_end":176,"column_start":12,"column_end":25},"name":"TexturesDelta","qualname":"::textures::TexturesDelta","value":"TexturesDelta { set, free }","parent":null,"children":[{"krate":0,"index":4306},{"krate":0,"index":4307}],"decl_id":null,"docs":" What has been allocated and freed during the last period.","sig":null,"attributes":[{"value":"/ What has been allocated and freed during the last period.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309521,"byte_end":309582,"line_start":170,"line_end":170,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309583,"byte_end":309586,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ These are commands given to the integration painter.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309587,"byte_end":309643,"line_start":172,"line_end":172,"column_start":1,"column_end":57}},{"value":"must_use = \"The painter must take care of this\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309758,"byte_end":309808,"line_start":175,"line_end":175,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4306},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309900,"byte_end":309903,"line_start":178,"line_end":178,"column_start":9,"column_end":12},"name":"set","qualname":"::textures::TexturesDelta::set","value":"std::vec::Vec<(TextureId, image::ImageDelta)>","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":" New or changed textures. Apply before painting.\n","sig":null,"attributes":[{"value":"/ New or changed textures. Apply before painting.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309840,"byte_end":309891,"line_start":177,"line_end":177,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":4307},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309985,"byte_end":309989,"line_start":181,"line_end":181,"column_start":9,"column_end":13},"name":"free","qualname":"::textures::TexturesDelta::free","value":"std::vec::Vec<TextureId>","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":" Textures to free after painting.\n","sig":null,"attributes":[{"value":"/ Textures to free after painting.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309940,"byte_end":309976,"line_start":180,"line_end":180,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":310042,"byte_end":310050,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TexturesDelta>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":310138,"byte_end":310144,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"append","qualname":"<TexturesDelta>::append","value":"fn append<'_>(&'_ mut Self, TexturesDelta)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":310293,"byte_end":310298,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"clear","qualname":"<TexturesDelta>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":310422,"byte_end":310425,"line_start":201,"line_end":201,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TexturesDelta as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut std::fmt::Formatter) -> std::fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\mod.rs","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1359}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312320,"byte_end":312332,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"OrderedFloat","qualname":"::util::ordered_float::OrderedFloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps a floating-point value to add total order and hash.\n Possible types for `T` are `f32` and `f64`.","sig":null,"attributes":[{"value":"/ Wraps a floating-point value to add total order and hash.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312168,"byte_end":312229,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/ Possible types for `T` are `f32` and `f64`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312230,"byte_end":312277,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312278,"byte_end":312281,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See also [`FloatOrd`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312282,"byte_end":312308,"line_start":10,"line_end":10,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312457,"byte_end":312459,"line_start":17,"line_end":17,"column_start":8,"column_end":10},"name":"eq","qualname":"<OrderedFloat<T> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":2,"index":2920},"children":[],"decl_id":{"krate":2,"index":2922},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312440,"byte_end":312449,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312766,"byte_end":312777,"line_start":29,"line_end":29,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<OrderedFloat<T> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Self) -> Option<Ordering>","parent":{"krate":2,"index":2966},"children":[],"decl_id":{"krate":2,"index":2968},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312749,"byte_end":312758,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313049,"byte_end":313052,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"cmp","qualname":"<OrderedFloat<T> as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Self) -> Ordering","parent":{"krate":2,"index":2956},"children":[],"decl_id":{"krate":2,"index":2957},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313032,"byte_end":313041,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313262,"byte_end":313266,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"hash","qualname":"<OrderedFloat<T> as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":2,"index":10536},"children":[],"decl_id":{"krate":2,"index":10537},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313683,"byte_end":313691,"line_start":66,"line_end":66,"column_start":11,"column_end":19},"name":"FloatOrd","qualname":"::util::ordered_float::FloatOrd","value":"FloatOrd","parent":null,"children":[{"krate":0,"index":1331}],"decl_id":null,"docs":" Extension trait to provide `ord()` method.","sig":null,"attributes":[{"value":"/ Extension trait to provide `ord()` method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313420,"byte_end":313466,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313467,"byte_end":313470,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Example with `f64`:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313471,"byte_end":313494,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313495,"byte_end":313502,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use epaint::util::FloatOrd;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313503,"byte_end":313534,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313535,"byte_end":313538,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let array = [1.0, 2.5, 2.0];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313539,"byte_end":313571,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ let max = array.iter().max_by_key(|val| val.ord());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313572,"byte_end":313627,"line_start":62,"line_end":62,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313628,"byte_end":313631,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(max, Some(&2.5));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313632,"byte_end":313664,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313665,"byte_end":313672,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313772,"byte_end":313775,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"ord","qualname":"::util::ordered_float::FloatOrd::ord","value":"fn ord(Self) -> OrderedFloat<Self> where Self: Sized","parent":{"krate":0,"index":1330},"children":[],"decl_id":null,"docs":" Type to provide total order, useful as key in sorted contexts.\n","sig":null,"attributes":[{"value":"/ Type to provide total order, useful as key in sorted contexts.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313698,"byte_end":313764,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313883,"byte_end":313886,"line_start":75,"line_end":75,"column_start":8,"column_end":11},"name":"ord","qualname":"<f32 as util::ordered_float::FloatOrd>::ord","value":"fn ord(Self) -> OrderedFloat<f32>","parent":{"krate":0,"index":1330},"children":[],"decl_id":{"krate":0,"index":1331},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313866,"byte_end":313875,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313997,"byte_end":314000,"line_start":82,"line_end":82,"column_start":8,"column_end":11},"name":"ord","qualname":"<f64 as util::ordered_float::FloatOrd>::ord","value":"fn ord(Self) -> OrderedFloat<f64>","parent":{"krate":0,"index":1330},"children":[],"decl_id":{"krate":0,"index":1331},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313980,"byte_end":313989,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314223,"byte_end":314228,"line_start":91,"line_end":91,"column_start":11,"column_end":16},"name":"Float","qualname":"::util::ordered_float::Float","value":"Float: PartialOrd + PartialEq + private::FloatImpl","parent":null,"children":[],"decl_id":null,"docs":" Internal abstraction over floating point types\n","sig":null,"attributes":[{"value":"/ Internal abstraction over floating point types","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314147,"byte_end":314197,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":1341},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314466,"byte_end":314475,"line_start":101,"line_end":101,"column_start":15,"column_end":24},"name":"FloatImpl","qualname":"::util::ordered_float::private::FloatImpl","value":"FloatImpl","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314489,"byte_end":314495,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"is_nan","qualname":"::util::ordered_float::private::FloatImpl::is_nan","value":"fn is_nan<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314524,"byte_end":314528,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"hash","qualname":"::util::ordered_float::private::FloatImpl::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314628,"byte_end":314634,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"is_nan","qualname":"<f32 as util::ordered_float::private::FloatImpl>::is_nan","value":"fn is_nan<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":1341},"children":[],"decl_id":{"krate":0,"index":1342},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314607,"byte_end":314616,"line_start":108,"line_end":108,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314723,"byte_end":314727,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"hash","qualname":"<f32 as util::ordered_float::private::FloatImpl>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":0,"index":1341},"children":[],"decl_id":{"krate":0,"index":1343},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314702,"byte_end":314711,"line_start":113,"line_end":113,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314881,"byte_end":314887,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"is_nan","qualname":"<f64 as util::ordered_float::private::FloatImpl>::is_nan","value":"fn is_nan<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":1341},"children":[],"decl_id":{"krate":0,"index":1342},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314860,"byte_end":314869,"line_start":120,"line_end":120,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314976,"byte_end":314980,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"hash","qualname":"<f64 as util::ordered_float::private::FloatImpl>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":0,"index":1341},"children":[],"decl_id":{"krate":0,"index":1343},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314955,"byte_end":314964,"line_start":125,"line_end":125,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\mod.rs","byte_start":311611,"byte_end":311615,"line_start":7,"line_end":7,"column_start":8,"column_end":12},"name":"hash","qualname":"::util::hash","value":"fn hash<impl std::hash::Hash>(impl std::hash::Hash) -> u64 where\nimpl std::hash::Hash: std::hash::Hash","parent":null,"children":[],"decl_id":null,"docs":" Hash the given value with a predictable hasher.\n","sig":null,"attributes":[{"value":"/ Hash the given value with a predictable hasher.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\mod.rs","byte_start":311542,"byte_end":311593,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\mod.rs","byte_start":311594,"byte_end":311603,"line_start":6,"line_end":6,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\mod.rs","byte_start":311851,"byte_end":311860,"line_start":16,"line_end":16,"column_start":8,"column_end":17},"name":"hash_with","qualname":"::util::hash_with","value":"fn hash_with<impl std::hash::Hash,\nimpl std::hash::Hasher>(impl std::hash::Hash, impl std::hash::Hasher) -> u64\nwhere impl std::hash::Hash: std::hash::Hash,\nimpl std::hash::Hasher: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hash the given value with the given hasher.\n","sig":null,"attributes":[{"value":"/ Hash the given value with the given hasher.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\mod.rs","byte_start":311786,"byte_end":311833,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\mod.rs","byte_start":311834,"byte_end":311843,"line_start":15,"line_end":15,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1780,"byte_end":1788,"line_start":63,"line_end":63,"column_start":11,"column_end":19},"name":"WHITE_UV","qualname":"::WHITE_UV","value":"emath::Pos2","parent":null,"children":[],"decl_id":null,"docs":" The UV coordinate of a white region of the texture mesh.\n The default egui texture has the top-left corner pixel fully white.\n You need need use a clamping texture sampler for this to work\n (so it doesn't do bilinear blending with bottom right corner).\n","sig":null,"attributes":[{"value":"/ The UV coordinate of a white region of the texture mesh.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1504,"byte_end":1564,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/ The default egui texture has the top-left corner pixel fully white.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1565,"byte_end":1636,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/ You need need use a clamping texture sampler for this to work","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1637,"byte_end":1702,"line_start":61,"line_end":61,"column_start":1,"column_end":66}},{"value":"/ (so it doesn't do bilinear blending with bottom right corner).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1703,"byte_end":1769,"line_start":62,"line_end":62,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4377},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2287,"byte_end":2294,"line_start":74,"line_end":74,"column_start":5,"column_end":12},"name":"Managed","qualname":"::TextureId::Managed","value":"TextureId::Managed(u64)","parent":{"krate":0,"index":4376},"children":[],"decl_id":null,"docs":" Textures allocated using [`TextureManager`].","sig":null,"attributes":[{"value":"/ Textures allocated using [`TextureManager`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2148,"byte_end":2196,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2201,"byte_end":2204,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The first texture (`TextureId::Epaint(0)`) is used for the font data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2209,"byte_end":2282,"line_start":73,"line_end":73,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":4379},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2295,"byte_end":2298,"line_start":74,"line_end":74,"column_start":13,"column_end":16},"name":"0","qualname":"::TextureId::Managed::0","value":"u64","parent":{"krate":0,"index":4377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4380},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2453,"byte_end":2457,"line_start":78,"line_end":78,"column_start":5,"column_end":9},"name":"User","qualname":"::TextureId::User","value":"TextureId::User(u64)","parent":{"krate":0,"index":4376},"children":[],"decl_id":null,"docs":" Your own texture, defined in any which way you want.\n The backend renderer will presumably use this to look up what texture to use.\n","sig":null,"attributes":[{"value":"/ Your own texture, defined in any which way you want.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2306,"byte_end":2362,"line_start":76,"line_end":76,"column_start":5,"column_end":61}},{"value":"/ The backend renderer will presumably use this to look up what texture to use.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2367,"byte_end":2448,"line_start":77,"line_end":77,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":4382},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2458,"byte_end":2461,"line_start":78,"line_end":78,"column_start":10,"column_end":13},"name":"0","qualname":"::TextureId::User::0","value":"u64","parent":{"krate":0,"index":4380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4376},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2132,"byte_end":2141,"line_start":70,"line_end":70,"column_start":10,"column_end":19},"name":"TextureId","qualname":"::TextureId","value":"enum TextureId { Managed(u64), User(u64), }","parent":null,"children":[{"krate":0,"index":4377},{"krate":0,"index":4380}],"decl_id":null,"docs":" What texture to use in a [`Mesh`] mesh.","sig":null,"attributes":[{"value":"/ What texture to use in a [`Mesh`] mesh.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1828,"byte_end":1871,"line_start":65,"line_end":65,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1872,"byte_end":1875,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ If you don't want to use a texture, use `TextureId::Epaint(0)` and the [`WHITE_UV`] for uv-coord.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":1876,"byte_end":1977,"line_start":67,"line_end":67,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2536,"byte_end":2543,"line_start":83,"line_end":83,"column_start":8,"column_end":15},"name":"default","qualname":"<TextureId as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":" The epaint font texture.\n","sig":null,"attributes":[{"value":"/ The epaint font texture.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2500,"byte_end":2528,"line_start":82,"line_end":82,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4428},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2721,"byte_end":2733,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"ClippedShape","qualname":"::ClippedShape","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Shape`] within a clip rectangle.","sig":null,"attributes":[{"value":"/ A [`Shape`] within a clip rectangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2590,"byte_end":2630,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2631,"byte_end":2634,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Everything is using logical points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2635,"byte_end":2674,"line_start":90,"line_end":90,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":4430},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2841,"byte_end":2856,"line_start":95,"line_end":95,"column_start":5,"column_end":20},"name":"0","qualname":"::ClippedShape::0","value":"emath::Rect","parent":{"krate":0,"index":4428},"children":[],"decl_id":null,"docs":" Clip / scissor rectangle.\n Only show the part of the [`Shape`] that falls within this.\n","sig":null,"attributes":[{"value":"/ Clip / scissor rectangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2739,"byte_end":2768,"line_start":93,"line_end":93,"column_start":5,"column_end":34}},{"value":"/ Only show the part of the [`Shape`] that falls within this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2773,"byte_end":2836,"line_start":94,"line_end":94,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":4431},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2880,"byte_end":2889,"line_start":97,"line_end":97,"column_start":5,"column_end":14},"name":"1","qualname":"::ClippedShape::1","value":"shape::Shape","parent":{"krate":0,"index":4428},"children":[],"decl_id":null,"docs":" The shape\n","sig":null,"attributes":[{"value":"/ The shape","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2862,"byte_end":2875,"line_start":96,"line_end":96,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4440},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":3035,"byte_end":3051,"line_start":104,"line_end":104,"column_start":12,"column_end":28},"name":"ClippedPrimitive","qualname":"::ClippedPrimitive","value":"ClippedPrimitive { clip_rect, primitive }","parent":null,"children":[{"krate":0,"index":4441},{"krate":0,"index":4442}],"decl_id":null,"docs":" A [`Mesh`] or [`PaintCallback`] within a clip rectangle.","sig":null,"attributes":[{"value":"/ A [`Mesh`] or [`PaintCallback`] within a clip rectangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2895,"byte_end":2955,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2956,"byte_end":2959,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Everything is using logical points.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2960,"byte_end":2999,"line_start":102,"line_end":102,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":4441},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":3163,"byte_end":3172,"line_start":107,"line_end":107,"column_start":9,"column_end":18},"name":"clip_rect","qualname":"::ClippedPrimitive::clip_rect","value":"emath::Rect","parent":{"krate":0,"index":4440},"children":[],"decl_id":null,"docs":" Clip / scissor rectangle.\n Only show the part of the [`Mesh`] that falls within this.\n","sig":null,"attributes":[{"value":"/ Clip / scissor rectangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":3058,"byte_end":3087,"line_start":105,"line_end":105,"column_start":5,"column_end":34}},{"value":"/ Only show the part of the [`Mesh`] that falls within this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":3092,"byte_end":3154,"line_start":106,"line_end":106,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":4442},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":3262,"byte_end":3271,"line_start":110,"line_end":110,"column_start":9,"column_end":18},"name":"primitive","qualname":"::ClippedPrimitive::primitive","value":"Primitive","parent":{"krate":0,"index":4440},"children":[],"decl_id":null,"docs":" What to paint - either a [`Mesh`] or a [`PaintCallback`].\n","sig":null,"attributes":[{"value":"/ What to paint - either a [`Mesh`] or a [`PaintCallback`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":3192,"byte_end":3253,"line_start":109,"line_end":109,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4448},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":3406,"byte_end":3410,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Mesh","qualname":"::Primitive::Mesh","value":"Primitive::Mesh(Mesh)","parent":{"krate":0,"index":4447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4450},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":3411,"byte_end":3415,"line_start":116,"line_end":116,"column_start":10,"column_end":14},"name":"0","qualname":"::Primitive::Mesh::0","value":"mesh::Mesh","parent":{"krate":0,"index":4448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4451},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":3422,"byte_end":3430,"line_start":117,"line_end":117,"column_start":5,"column_end":13},"name":"Callback","qualname":"::Primitive::Callback","value":"Primitive::Callback(PaintCallback)","parent":{"krate":0,"index":4447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4453},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":3431,"byte_end":3444,"line_start":117,"line_end":117,"column_start":14,"column_end":27},"name":"0","qualname":"::Primitive::Callback::0","value":"shape::PaintCallback","parent":{"krate":0,"index":4451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4447},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":3390,"byte_end":3399,"line_start":115,"line_end":115,"column_start":10,"column_end":19},"name":"Primitive","qualname":"::Primitive","value":"enum Primitive { Mesh(Mesh), Callback(PaintCallback), }","parent":null,"children":[{"krate":0,"index":4448},{"krate":0,"index":4451}],"decl_id":null,"docs":" A rendering primitive - either a [`Mesh`] or a [`PaintCallback`].\n","sig":null,"attributes":[{"value":"/ A rendering primitive - either a [`Mesh`] or a [`PaintCallback`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":3287,"byte_end":3356,"line_start":113,"line_end":113,"column_start":1,"column_end":70}}]}],"impls":[{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5306,"byte_end":5322,"line_start":24,"line_end":24,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":19480,"byte_end":19485,"line_start":363,"line_end":363,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20203,"byte_end":20223,"line_start":387,"line_end":387,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":25600,"byte_end":25605,"line_start":551,"line_end":551,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":27269,"byte_end":27289,"line_start":606,"line_end":606,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44467,"byte_end":44474,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44632,"byte_end":44639,"line_start":31,"line_end":31,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44760,"byte_end":44767,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51237,"byte_end":51241,"line_start":240,"line_end":240,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51401,"byte_end":51405,"line_start":249,"line_end":249,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51584,"byte_end":51588,"line_start":257,"line_end":257,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51849,"byte_end":51853,"line_start":267,"line_end":267,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56336,"byte_end":56340,"line_start":427,"line_end":427,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56612,"byte_end":56616,"line_start":441,"line_end":441,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56897,"byte_end":56901,"line_start":455,"line_end":455,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":57539,"byte_end":57543,"line_start":486,"line_end":486,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":57840,"byte_end":57847,"line_start":497,"line_end":497,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60470,"byte_end":60474,"line_start":601,"line_end":601,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64231,"byte_end":64235,"line_start":728,"line_end":728,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64344,"byte_end":64348,"line_start":734,"line_end":734,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64496,"byte_end":64503,"line_start":740,"line_end":740,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64615,"byte_end":64619,"line_start":746,"line_end":746,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66812,"byte_end":66816,"line_start":830,"line_end":830,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66926,"byte_end":66933,"line_start":836,"line_end":836,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67046,"byte_end":67050,"line_start":842,"line_end":842,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67275,"byte_end":67284,"line_start":854,"line_end":854,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67390,"byte_end":67399,"line_start":860,"line_end":860,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67507,"byte_end":67516,"line_start":866,"line_end":866,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73481,"byte_end":73490,"line_start":20,"line_end":20,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74319,"byte_end":74329,"line_start":56,"line_end":56,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":76886,"byte_end":76896,"line_start":132,"line_end":132,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77149,"byte_end":77159,"line_start":143,"line_end":143,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77382,"byte_end":77391,"line_start":152,"line_end":152,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78110,"byte_end":78119,"line_start":178,"line_end":178,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":79853,"byte_end":79862,"line_start":230,"line_end":230,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80107,"byte_end":80116,"line_start":241,"line_end":241,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80334,"byte_end":80343,"line_start":250,"line_end":250,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81417,"byte_end":81427,"line_start":285,"line_end":285,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83494,"byte_end":83498,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":91062,"byte_end":91068,"line_start":286,"line_end":286,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":92618,"byte_end":92627,"line_start":45,"line_end":45,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":93258,"byte_end":93263,"line_start":66,"line_end":66,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":93950,"byte_end":93960,"line_start":87,"line_end":87,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94194,"byte_end":94204,"line_start":96,"line_end":96,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94381,"byte_end":94391,"line_start":105,"line_end":105,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":95085,"byte_end":95091,"line_start":128,"line_end":128,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":100242,"byte_end":100247,"line_start":290,"line_end":290,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":101817,"byte_end":101823,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105792,"byte_end":105797,"line_start":70,"line_end":70,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105919,"byte_end":105924,"line_start":77,"line_end":77,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106042,"byte_end":106047,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":112048,"byte_end":112053,"line_start":273,"line_end":273,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114153,"byte_end":114164,"line_start":343,"line_end":343,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115078,"byte_end":115083,"line_start":377,"line_end":377,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115833,"byte_end":115842,"line_start":404,"line_end":404,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117307,"byte_end":117312,"line_start":457,"line_end":457,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117930,"byte_end":117939,"line_start":482,"line_end":482,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":118869,"byte_end":118874,"line_start":518,"line_end":518,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119533,"byte_end":119541,"line_start":542,"line_end":542,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119634,"byte_end":119642,"line_start":549,"line_end":549,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119829,"byte_end":119837,"line_start":561,"line_end":561,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121939,"byte_end":121948,"line_start":639,"line_end":639,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":122390,"byte_end":122395,"line_start":658,"line_end":658,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125761,"byte_end":125778,"line_start":769,"line_end":769,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127616,"byte_end":127629,"line_start":816,"line_end":816,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127857,"byte_end":127870,"line_start":824,"line_end":824,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":128299,"byte_end":128304,"line_start":835,"line_end":835,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":130625,"byte_end":130636,"line_start":13,"line_end":13,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":130946,"byte_end":130955,"line_start":28,"line_end":28,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":131057,"byte_end":131066,"line_start":34,"line_end":34,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":131806,"byte_end":131815,"line_start":55,"line_end":55,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":131927,"byte_end":131936,"line_start":61,"line_end":61,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":132149,"byte_end":132158,"line_start":74,"line_end":74,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":135264,"byte_end":135274,"line_start":179,"line_end":179,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138123,"byte_end":138129,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138671,"byte_end":138677,"line_start":37,"line_end":37,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138856,"byte_end":138862,"line_start":47,"line_end":47,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":149795,"byte_end":149799,"line_start":323,"line_end":323,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161680,"byte_end":161699,"line_start":646,"line_end":646,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":174909,"byte_end":174920,"line_start":987,"line_end":987,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197344,"byte_end":197351,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197638,"byte_end":197645,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197765,"byte_end":197772,"line_start":34,"line_end":34,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198019,"byte_end":198026,"line_start":45,"line_end":45,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198279,"byte_end":198286,"line_start":56,"line_end":56,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198430,"byte_end":198437,"line_start":62,"line_end":62,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":200094,"byte_end":200101,"line_start":106,"line_end":106,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201442,"byte_end":201448,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201761,"byte_end":201770,"line_start":45,"line_end":45,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":202513,"byte_end":202521,"line_start":72,"line_end":72,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":795},{"krate":0,"index":799},{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":207151,"byte_end":207155,"line_start":226,"line_end":226,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":823},{"krate":0,"index":827},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":213975,"byte_end":213981,"line_start":28,"line_end":28,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214134,"byte_end":214140,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214558,"byte_end":214564,"line_start":56,"line_end":56,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215858,"byte_end":215868,"line_start":95,"line_end":95,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215981,"byte_end":215991,"line_start":102,"line_end":102,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216830,"byte_end":216838,"line_start":129,"line_end":129,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":218114,"byte_end":218123,"line_start":176,"line_end":176,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220845,"byte_end":220860,"line_start":246,"line_end":246,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223065,"byte_end":223080,"line_start":314,"line_end":314,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223927,"byte_end":223932,"line_start":341,"line_end":341,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":229735,"byte_end":229748,"line_start":521,"line_end":521,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":230298,"byte_end":230307,"line_start":541,"line_end":541,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":233039,"byte_end":233050,"line_start":632,"line_end":632,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":234686,"byte_end":234699,"line_start":679,"line_end":679,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout.rs","byte_start":237092,"byte_end":237102,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout.rs","byte_start":261505,"byte_end":261523,"line_start":741,"line_end":741,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266549,"byte_end":266558,"line_start":73,"line_end":73,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266895,"byte_end":266904,"line_start":88,"line_end":88,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":269282,"byte_end":269291,"line_start":166,"line_end":166,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270228,"byte_end":270241,"line_start":201,"line_end":201,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271111,"byte_end":271121,"line_start":233,"line_end":233,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271469,"byte_end":271479,"line_start":248,"line_end":248,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272441,"byte_end":272453,"line_start":280,"line_end":280,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272846,"byte_end":272858,"line_start":296,"line_end":296,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276258,"byte_end":276268,"line_start":393,"line_end":393,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277048,"byte_end":277053,"line_start":423,"line_end":423,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277398,"byte_end":277401,"line_start":437,"line_end":437,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278618,"byte_end":278624,"line_start":485,"line_end":485,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278985,"byte_end":278991,"line_start":504,"line_end":504,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":282573,"byte_end":282579,"line_start":604,"line_end":604,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":283849,"byte_end":283855,"line_start":650,"line_end":650,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":289381,"byte_end":289387,"line_start":810,"line_end":810,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":293307,"byte_end":293312,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":294591,"byte_end":294603,"line_start":77,"line_end":77,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301592,"byte_end":301605,"line_start":25,"line_end":25,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301702,"byte_end":301715,"line_start":31,"line_end":31,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301918,"byte_end":301931,"line_start":41,"line_end":41,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302038,"byte_end":302051,"line_start":48,"line_end":48,"column_start":13,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302081,"byte_end":302094,"line_start":50,"line_end":50,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302212,"byte_end":302225,"line_start":57,"line_end":57,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303655,"byte_end":303664,"line_start":110,"line_end":110,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303798,"byte_end":303807,"line_start":117,"line_end":117,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304413,"byte_end":304427,"line_start":17,"line_end":17,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1275},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309165,"byte_end":309178,"line_start":154,"line_end":154,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309243,"byte_end":309254,"line_start":160,"line_end":160,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":310015,"byte_end":310028,"line_start":184,"line_end":184,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":310399,"byte_end":310412,"line_start":200,"line_end":200,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312363,"byte_end":312375,"line_start":13,"line_end":13,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312418,"byte_end":312430,"line_start":15,"line_end":15,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312727,"byte_end":312739,"line_start":27,"line_end":27,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313010,"byte_end":313022,"line_start":37,"line_end":37,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313237,"byte_end":313249,"line_start":47,"line_end":47,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2484,"byte_end":2493,"line_start":81,"line_end":81,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":544,"byte_end":549,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":559,"byte_end":564,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":250}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":584,"byte_end":589,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":338}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":622,"byte_end":637,"line_start":22,"line_end":22,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":568}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":647,"byte_end":652,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":572}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":674,"byte_end":685,"line_start":25,"line_end":25,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":630}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":695,"byte_end":699,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":729}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\mod.rs","byte_start":196302,"byte_end":196308,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":730}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":748,"byte_end":756,"line_start":29,"line_end":29,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1263}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":766,"byte_end":770,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1299}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":5306,"byte_end":5322,"line_start":24,"line_end":24,"column_start":6,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":19480,"byte_end":19485,"line_start":363,"line_end":363,"column_start":33,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2323},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":20203,"byte_end":20223,"line_start":387,"line_end":387,"column_start":6,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":25600,"byte_end":25605,"line_start":551,"line_end":551,"column_start":37,"column_end":42},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2323},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\bezier.rs","byte_start":27269,"byte_end":27289,"line_start":606,"line_end":606,"column_start":6,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":68},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44467,"byte_end":44474,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1693},"to":{"krate":2,"index":3576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44632,"byte_end":44639,"line_start":31,"line_end":31,"column_start":36,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1693},"to":{"krate":2,"index":3580}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":44760,"byte_end":44767,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51237,"byte_end":51241,"line_start":240,"line_end":240,"column_start":33,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":3576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51401,"byte_end":51405,"line_start":249,"line_end":249,"column_start":36,"column_end":40},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":3580}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51584,"byte_end":51588,"line_start":257,"line_end":257,"column_start":26,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":10536}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":51849,"byte_end":51853,"line_start":267,"line_end":267,"column_start":6,"column_end":10},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56336,"byte_end":56340,"line_start":427,"line_end":427,"column_start":24,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":3336}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56612,"byte_end":56616,"line_start":441,"line_end":441,"column_start":30,"column_end":34},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":3346}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":56897,"byte_end":56901,"line_start":455,"line_end":455,"column_start":29,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":3346}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":57539,"byte_end":57543,"line_start":486,"line_end":486,"column_start":24,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":57840,"byte_end":57847,"line_start":497,"line_end":497,"column_start":21,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1693},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":60470,"byte_end":60474,"line_start":601,"line_end":601,"column_start":6,"column_end":10},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64231,"byte_end":64235,"line_start":728,"line_end":728,"column_start":21,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64344,"byte_end":64348,"line_start":734,"line_end":734,"column_start":21,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1783},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64496,"byte_end":64503,"line_start":740,"line_end":740,"column_start":21,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1693},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":64615,"byte_end":64619,"line_start":746,"line_end":746,"column_start":24,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1783},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66812,"byte_end":66816,"line_start":830,"line_end":830,"column_start":26,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":66926,"byte_end":66933,"line_start":836,"line_end":836,"column_start":26,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1693},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67046,"byte_end":67050,"line_start":842,"line_end":842,"column_start":26,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1783},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67275,"byte_end":67284,"line_start":854,"line_end":854,"column_start":21,"column_end":30},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1799},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67390,"byte_end":67399,"line_start":860,"line_end":860,"column_start":24,"column_end":33},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1799},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\color.rs","byte_start":67507,"byte_end":67516,"line_start":866,"line_end":866,"column_start":21,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1799},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":73481,"byte_end":73490,"line_start":20,"line_end":20,"column_start":6,"column_end":15},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":74319,"byte_end":74329,"line_start":56,"line_end":56,"column_start":6,"column_end":16},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":76886,"byte_end":76896,"line_start":132,"line_end":132,"column_start":42,"column_end":52},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1881},"to":{"krate":2,"index":3576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77149,"byte_end":77159,"line_start":143,"line_end":143,"column_start":45,"column_end":55},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1881},"to":{"krate":2,"index":3580}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":77382,"byte_end":77391,"line_start":152,"line_end":152,"column_start":27,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1821},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":78110,"byte_end":78119,"line_start":178,"line_end":178,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":79853,"byte_end":79862,"line_start":230,"line_end":230,"column_start":42,"column_end":51},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1945},"to":{"krate":2,"index":3576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80107,"byte_end":80116,"line_start":241,"line_end":241,"column_start":45,"column_end":54},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1945},"to":{"krate":2,"index":3580}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":80334,"byte_end":80343,"line_start":250,"line_end":250,"column_start":26,"column_end":35},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1821},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\image.rs","byte_start":81417,"byte_end":81427,"line_start":285,"line_end":285,"column_start":6,"column_end":16},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":83494,"byte_end":83498,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mesh.rs","byte_start":91062,"byte_end":91068,"line_start":286,"line_end":286,"column_start":6,"column_end":12},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":92618,"byte_end":92627,"line_start":45,"line_end":45,"column_start":10,"column_end":19},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":93258,"byte_end":93263,"line_start":66,"line_end":66,"column_start":13,"column_end":18},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":93950,"byte_end":93960,"line_start":87,"line_end":87,"column_start":22,"column_end":32},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94194,"byte_end":94204,"line_start":96,"line_end":96,"column_start":33,"column_end":43},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":3491}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":94381,"byte_end":94391,"line_start":105,"line_end":105,"column_start":36,"column_end":46},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":3504}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":95085,"byte_end":95091,"line_start":128,"line_end":128,"column_start":13,"column_end":19},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\mutex.rs","byte_start":100242,"byte_end":100247,"line_start":290,"line_end":290,"column_start":19,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2236},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shadow.rs","byte_start":101817,"byte_end":101823,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105792,"byte_end":105797,"line_start":70,"line_end":70,"column_start":27,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2323},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":105919,"byte_end":105924,"line_start":77,"line_end":77,"column_start":21,"column_end":26},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2323},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":106042,"byte_end":106047,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":112048,"byte_end":112053,"line_start":273,"line_end":273,"column_start":6,"column_end":11},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":114153,"byte_end":114164,"line_start":343,"line_end":343,"column_start":6,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115078,"byte_end":115083,"line_start":377,"line_end":377,"column_start":28,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2323},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":115833,"byte_end":115842,"line_start":404,"line_end":404,"column_start":6,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117307,"byte_end":117312,"line_start":457,"line_end":457,"column_start":26,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2323},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":117930,"byte_end":117939,"line_start":482,"line_end":482,"column_start":6,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":118869,"byte_end":118874,"line_start":518,"line_end":518,"column_start":26,"column_end":31},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2323},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119533,"byte_end":119541,"line_start":542,"line_end":542,"column_start":18,"column_end":26},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2574},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119634,"byte_end":119642,"line_start":549,"line_end":549,"column_start":20,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2574},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":119829,"byte_end":119837,"line_start":561,"line_end":561,"column_start":6,"column_end":14},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":121939,"byte_end":121948,"line_start":639,"line_end":639,"column_start":6,"column_end":15},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":122390,"byte_end":122395,"line_start":658,"line_end":658,"column_start":26,"column_end":31},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2323},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":125761,"byte_end":125778,"line_start":769,"line_end":769,"column_start":6,"column_end":23},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127616,"byte_end":127629,"line_start":816,"line_end":816,"column_start":26,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2701},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":127857,"byte_end":127870,"line_start":824,"line_end":824,"column_start":30,"column_end":43},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2701},"to":{"krate":2,"index":2920}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\shape.rs","byte_start":128299,"byte_end":128304,"line_start":835,"line_end":835,"column_start":30,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2323},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":130625,"byte_end":130636,"line_start":13,"line_end":13,"column_start":18,"column_end":29},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2706},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":130946,"byte_end":130955,"line_start":28,"line_end":28,"column_start":24,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2721},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":131057,"byte_end":131066,"line_start":34,"line_end":34,"column_start":24,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2721},"to":{"krate":2,"index":3336}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":131806,"byte_end":131815,"line_start":55,"line_end":55,"column_start":30,"column_end":39},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2721},"to":{"krate":2,"index":3367}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":131927,"byte_end":131936,"line_start":61,"line_end":61,"column_start":25,"column_end":34},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2721},"to":{"krate":2,"index":8369}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":132149,"byte_end":132158,"line_start":74,"line_end":74,"column_start":6,"column_end":15},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stats.rs","byte_start":135264,"byte_end":135274,"line_start":179,"line_end":179,"column_start":6,"column_end":16},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138123,"byte_end":138129,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138671,"byte_end":138677,"line_start":37,"line_end":37,"column_start":36,"column_end":42},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2763},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\stroke.rs","byte_start":138856,"byte_end":138862,"line_start":47,"line_end":47,"column_start":26,"column_end":32},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2763},"to":{"krate":2,"index":10536}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":149795,"byte_end":149799,"line_start":323,"line_end":323,"column_start":6,"column_end":10},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":161680,"byte_end":161699,"line_start":646,"line_end":646,"column_start":18,"column_end":37},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2918},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\tessellator.rs","byte_start":174909,"byte_end":174920,"line_start":987,"line_end":987,"column_start":6,"column_end":17},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197344,"byte_end":197351,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197638,"byte_end":197645,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2936},"to":{"krate":2,"index":2920}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":197765,"byte_end":197772,"line_start":34,"line_end":34,"column_start":31,"column_end":38},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2936},"to":{"krate":2,"index":3336}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198019,"byte_end":198026,"line_start":45,"line_end":45,"column_start":31,"column_end":38},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2936},"to":{"krate":2,"index":3341}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198279,"byte_end":198286,"line_start":56,"line_end":56,"column_start":37,"column_end":44},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2936},"to":{"krate":2,"index":3367}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":198430,"byte_end":198437,"line_start":62,"line_end":62,"column_start":37,"column_end":44},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2936},"to":{"krate":2,"index":3371}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\cursor.rs","byte_start":200094,"byte_end":200101,"line_start":106,"line_end":106,"column_start":20,"column_end":27},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":2920}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201442,"byte_end":201448,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":201761,"byte_end":201770,"line_start":45,"line_end":45,"column_start":18,"column_end":27},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3254},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":202513,"byte_end":202521,"line_start":72,"line_end":72,"column_start":6,"column_end":14},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\font.rs","byte_start":207151,"byte_end":207155,"line_start":226,"line_end":226,"column_start":6,"column_end":10},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":213975,"byte_end":213981,"line_start":28,"line_end":28,"column_start":18,"column_end":24},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3271},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214134,"byte_end":214140,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":214558,"byte_end":214564,"line_start":56,"line_end":56,"column_start":26,"column_end":32},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3271},"to":{"krate":2,"index":10536}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215858,"byte_end":215868,"line_start":95,"line_end":95,"column_start":18,"column_end":28},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3341},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":215981,"byte_end":215991,"line_start":102,"line_end":102,"column_start":28,"column_end":38},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3341},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":216830,"byte_end":216838,"line_start":129,"line_end":129,"column_start":6,"column_end":14},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":218114,"byte_end":218123,"line_start":176,"line_end":176,"column_start":18,"column_end":27},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3468},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":220845,"byte_end":220860,"line_start":246,"line_end":246,"column_start":18,"column_end":33},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3580},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223065,"byte_end":223080,"line_start":314,"line_end":314,"column_start":6,"column_end":21},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":223927,"byte_end":223932,"line_start":341,"line_end":341,"column_start":6,"column_end":11},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":229735,"byte_end":229748,"line_start":521,"line_end":521,"column_start":6,"column_end":19},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":230298,"byte_end":230307,"line_start":541,"line_end":541,"column_start":6,"column_end":15},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":233039,"byte_end":233050,"line_start":632,"line_end":632,"column_start":6,"column_end":17},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\fonts.rs","byte_start":234686,"byte_end":234699,"line_start":679,"line_end":679,"column_start":6,"column_end":19},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout.rs","byte_start":237092,"byte_end":237102,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout.rs","byte_start":261505,"byte_end":261523,"line_start":741,"line_end":741,"column_start":6,"column_end":24},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266549,"byte_end":266558,"line_start":73,"line_end":73,"column_start":18,"column_end":27},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3627},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":266895,"byte_end":266904,"line_start":88,"line_end":88,"column_start":6,"column_end":15},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":269282,"byte_end":269291,"line_start":166,"line_end":166,"column_start":26,"column_end":35},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3627},"to":{"krate":2,"index":10536}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":270228,"byte_end":270241,"line_start":201,"line_end":201,"column_start":26,"column_end":39},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3702},"to":{"krate":2,"index":10536}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271111,"byte_end":271121,"line_start":233,"line_end":233,"column_start":18,"column_end":28},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3768},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":271469,"byte_end":271479,"line_start":248,"line_end":248,"column_start":6,"column_end":16},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272441,"byte_end":272453,"line_start":280,"line_end":280,"column_start":26,"column_end":38},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3843},"to":{"krate":2,"index":10536}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":272846,"byte_end":272858,"line_start":296,"line_end":296,"column_start":18,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3843},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":276258,"byte_end":276268,"line_start":393,"line_end":393,"column_start":18,"column_end":28},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4050},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277048,"byte_end":277053,"line_start":423,"line_end":423,"column_start":6,"column_end":11},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":277398,"byte_end":277401,"line_start":437,"line_end":437,"column_start":6,"column_end":9},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278618,"byte_end":278624,"line_start":485,"line_end":485,"column_start":6,"column_end":12},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":278985,"byte_end":278991,"line_start":504,"line_end":504,"column_start":6,"column_end":12},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":282573,"byte_end":282579,"line_start":604,"line_end":604,"column_start":6,"column_end":12},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":283849,"byte_end":283855,"line_start":650,"line_end":650,"column_start":6,"column_end":12},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\text\\text_layout_types.rs","byte_start":289381,"byte_end":289387,"line_start":810,"line_end":810,"column_start":6,"column_end":12},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":293307,"byte_end":293312,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_atlas.rs","byte_start":294591,"byte_end":294603,"line_start":77,"line_end":77,"column_start":6,"column_end":18},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301592,"byte_end":301605,"line_start":25,"line_end":25,"column_start":15,"column_end":28},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301702,"byte_end":301715,"line_start":31,"line_end":31,"column_start":16,"column_end":29},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":301918,"byte_end":301931,"line_start":41,"line_end":41,"column_start":20,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":2920}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302038,"byte_end":302051,"line_start":48,"line_end":48,"column_start":13,"column_end":26},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302081,"byte_end":302094,"line_start":50,"line_end":50,"column_start":26,"column_end":39},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":10536}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":302212,"byte_end":302225,"line_start":57,"line_end":57,"column_start":6,"column_end":19},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303655,"byte_end":303664,"line_start":110,"line_end":110,"column_start":31,"column_end":40},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4376},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\texture_handle.rs","byte_start":303798,"byte_end":303807,"line_start":117,"line_end":117,"column_start":35,"column_end":44},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4376},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":304413,"byte_end":304427,"line_start":17,"line_end":17,"column_start":6,"column_end":20},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309165,"byte_end":309178,"line_start":154,"line_end":154,"column_start":18,"column_end":31},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4247},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":309243,"byte_end":309254,"line_start":160,"line_end":160,"column_start":6,"column_end":17},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":310015,"byte_end":310028,"line_start":184,"line_end":184,"column_start":6,"column_end":19},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\textures.rs","byte_start":310399,"byte_end":310412,"line_start":200,"line_end":200,"column_start":26,"column_end":39},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4305},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312363,"byte_end":312375,"line_start":13,"line_end":13,"column_start":23,"column_end":35},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1311},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312418,"byte_end":312430,"line_start":15,"line_end":15,"column_start":36,"column_end":48},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1311},"to":{"krate":2,"index":2920}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":312727,"byte_end":312739,"line_start":27,"line_end":27,"column_start":37,"column_end":49},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1311},"to":{"krate":2,"index":2966}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313010,"byte_end":313022,"line_start":37,"line_end":37,"column_start":24,"column_end":36},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":1311},"to":{"krate":2,"index":2956}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":313237,"byte_end":313249,"line_start":47,"line_end":47,"column_start":25,"column_end":37},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":1311},"to":{"krate":2,"index":10536}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314230,"byte_end":314240,"line_start":91,"line_end":91,"column_start":18,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2966},"to":{"krate":0,"index":1336}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314243,"byte_end":314252,"line_start":91,"line_end":91,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2920},"to":{"krate":0,"index":1336}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\util\\ordered_float.rs","byte_start":314264,"byte_end":314273,"line_start":91,"line_end":91,"column_start":52,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":1341},"to":{"krate":0,"index":1336}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.19.0\\src\\lib.rs","byte_start":2484,"byte_end":2493,"line_start":81,"line_end":81,"column_start":18,"column_end":27},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4376},"to":{"krate":2,"index":3246}}]}