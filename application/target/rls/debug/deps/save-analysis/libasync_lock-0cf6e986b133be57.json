{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0","program":"C:\\Users\\Ben\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","async_lock","--edition=2018","C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=0cf6e986b133be57","-C","extra-filename=-0cf6e986b133be57","--out-dir","c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps","--extern","event_listener=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libevent_listener-cfcee7f3336adf36.rmeta","--extern","futures_lite=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libfutures_lite-f535b464b080ecdc.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ben\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\application\\target\\rls\\debug\\deps\\libasync_lock-0cf6e986b133be57.rmeta"},"prelude":{"crate_id":{"name":"async_lock","disambiguator":[14123118671153444933,0]},"crate_root":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src","external_crates":[{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10288641326355699271,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-lite-1.12.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5178777620647193466,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7203661724729889941,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17525700935344431946,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14114419768508526436,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[7430704726206783492,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12664251144516306473,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5349691386245612169,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7588176879124425336,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12802573245210436658,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[15058356585373963657,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11406058276128544710,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[12054102872615165506,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15575797803660711391,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[2170788131994516450,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","num":16,"id":{"name":"event_listener","disambiguator":[9686504692904195901,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","num":17,"id":{"name":"futures_lite","disambiguator":[1819541201088999364,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[6621430443817631547,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","num":19,"id":{"name":"parking","disambiguator":[3009397415668499507,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","num":20,"id":{"name":"waker_fn","disambiguator":[13797696997638982724,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","num":21,"id":{"name":"futures_core","disambiguator":[13412865793139997503,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","num":22,"id":{"name":"futures_io","disambiguator":[2244033671744110353,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","num":23,"id":{"name":"fastrand","disambiguator":[2196587609525212048,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","num":24,"id":{"name":"memchr","disambiguator":[14172788285213947117,0]}}],"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":0,"byte_end":799,"line_start":1,"line_end":22,"column_start":1,"column_end":67}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":536,"byte_end":543,"line_start":18,"line_end":18,"column_start":19,"column_end":26},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":545,"byte_end":562,"line_start":18,"line_end":18,"column_start":28,"column_end":45},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":581,"byte_end":586,"line_start":19,"line_end":19,"column_start":17,"column_end":22},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":588,"byte_end":598,"line_start":19,"line_end":19,"column_start":24,"column_end":34},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":600,"byte_end":613,"line_start":19,"line_end":19,"column_start":36,"column_end":49},"alias_span":null,"name":"MutexGuardArc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":635,"byte_end":643,"line_start":20,"line_end":20,"column_start":20,"column_end":28},"alias_span":null,"name":"OnceCell","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":662,"byte_end":668,"line_start":21,"line_end":21,"column_start":18,"column_end":24},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":670,"byte_end":685,"line_start":21,"line_end":21,"column_start":26,"column_end":41},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":687,"byte_end":712,"line_start":21,"line_end":21,"column_start":43,"column_end":68},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":714,"byte_end":730,"line_start":21,"line_end":21,"column_start":70,"column_end":86},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":753,"byte_end":762,"line_start":22,"line_end":22,"column_start":21,"column_end":30},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":764,"byte_end":778,"line_start":22,"line_end":22,"column_start":32,"column_end":46},"alias_span":null,"name":"SemaphoreGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":780,"byte_end":797,"line_start":22,"line_end":22,"column_start":48,"column_end":65},"alias_span":null,"name":"SemaphoreGuardArc","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":0,"byte_end":799,"line_start":1,"line_end":22,"column_start":1,"column_end":67},"name":"","qualname":"::","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":17},{"krate":0,"index":171},{"krate":0,"index":336},{"krate":0,"index":503},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577}],"decl_id":null,"docs":" Async synchronization primitives.","sig":null,"attributes":[{"value":"/ Async synchronization primitives.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":0,"byte_end":37,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":38,"byte_end":41,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides the following primitives:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":42,"byte_end":91,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":92,"byte_end":95,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`] - enables tasks to synchronize all together at the same time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":96,"byte_end":175,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ * [`Mutex`] - a mutual exclusion lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":176,"byte_end":218,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/ * [`RwLock`] - a reader-writer lock, allowing any number of readers or a single writer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":219,"byte_end":310,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ * [`Semaphore`] - limits the number of concurrent operations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":311,"byte_end":376,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\lib.rs","byte_start":378,"byte_end":449,"line_start":10,"line_end":10,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":938,"byte_end":945,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583}],"decl_id":null,"docs":" A counter to synchronize multiple tasks at the same time.\n","sig":null,"attributes":[{"value":"/ A counter to synchronize multiple tasks at the same time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":848,"byte_end":909,"line_start":5,"line_end":5,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1522,"byte_end":1525,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"name":"new","qualname":"<Barrier>::new","value":"const fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a barrier that can block the given number of tasks.","sig":null,"attributes":[{"value":"/ Creates a barrier that can block the given number of tasks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1104,"byte_end":1167,"line_start":20,"line_end":20,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1172,"byte_end":1175,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 tasks which call [`wait()`] and then wake up all tasks","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1180,"byte_end":1265,"line_start":22,"line_end":22,"column_start":5,"column_end":90}},{"value":"/ at once when the `n`th task calls [`wait()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1270,"byte_end":1319,"line_start":23,"line_end":23,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1324,"byte_end":1327,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ [`wait()`]: `Barrier::wait()`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1332,"byte_end":1365,"line_start":25,"line_end":25,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1370,"byte_end":1373,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1378,"byte_end":1392,"line_start":27,"line_end":27,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1397,"byte_end":1400,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1405,"byte_end":1412,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Barrier;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1417,"byte_end":1445,"line_start":30,"line_end":30,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1450,"byte_end":1453,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let barrier = Barrier::new(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1458,"byte_end":1492,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1497,"byte_end":1504,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2776,"byte_end":2780,"line_start":75,"line_end":75,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current task until all tasks reach this point.","sig":null,"attributes":[{"value":"/ Blocks the current task until all tasks reach this point.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1750,"byte_end":1811,"line_start":45,"line_end":45,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1816,"byte_end":1819,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Barriers are reusable after all tasks have synchronized, and can be used continuously.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1824,"byte_end":1914,"line_start":47,"line_end":47,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1919,"byte_end":1922,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Returns a [`BarrierWaitResult`] indicating whether this task is the \"leader\", meaning the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1927,"byte_end":2020,"line_start":49,"line_end":49,"column_start":5,"column_end":98}},{"value":"/ last task to call this method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2025,"byte_end":2059,"line_start":50,"line_end":50,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2064,"byte_end":2067,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2072,"byte_end":2086,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2091,"byte_end":2094,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2099,"byte_end":2106,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Barrier;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2111,"byte_end":2139,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"/ use futures_lite::future;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2144,"byte_end":2173,"line_start":56,"line_end":56,"column_start":5,"column_end":34}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2178,"byte_end":2201,"line_start":57,"line_end":57,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2206,"byte_end":2226,"line_start":58,"line_end":58,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2231,"byte_end":2234,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let barrier = Arc::new(Barrier::new(5));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2239,"byte_end":2283,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2288,"byte_end":2291,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ for _ in 0..5 {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2296,"byte_end":2315,"line_start":62,"line_end":62,"column_start":5,"column_end":24}},{"value":"/     let b = barrier.clone();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2320,"byte_end":2352,"line_start":63,"line_end":63,"column_start":5,"column_end":37}},{"value":"/     thread::spawn(move || {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2357,"byte_end":2388,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/         future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2393,"byte_end":2429,"line_start":65,"line_end":65,"column_start":5,"column_end":41}},{"value":"/             // The same messages will be printed together.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2434,"byte_end":2496,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/             // There will NOT be interleaving of \"before\" and \"after\".","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2501,"byte_end":2575,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/             println!(\"before wait\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2580,"byte_end":2620,"line_start":68,"line_end":68,"column_start":5,"column_end":45}},{"value":"/             b.wait().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2625,"byte_end":2656,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/             println!(\"after wait\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2661,"byte_end":2700,"line_start":70,"line_end":70,"column_start":5,"column_end":44}},{"value":"/         });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2705,"byte_end":2720,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/     });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2725,"byte_end":2736,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2741,"byte_end":2746,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":2751,"byte_end":2758,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3820,"byte_end":3837,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::barrier::BarrierWaitResult","value":"BarrierWaitResult {  }","parent":null,"children":[{"krate":0,"index":592}],"decl_id":null,"docs":" Returned by [`Barrier::wait()`] when all tasks have called it.","sig":null,"attributes":[{"value":"/ Returned by [`Barrier::wait()`] when all tasks have called it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3504,"byte_end":3570,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3571,"byte_end":3574,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3575,"byte_end":3589,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3590,"byte_end":3593,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3594,"byte_end":3601,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3602,"byte_end":3646,"line_start":102,"line_end":102,"column_start":1,"column_end":45}},{"value":"/ use async_lock::Barrier;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3647,"byte_end":3675,"line_start":103,"line_end":103,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3676,"byte_end":3679,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let barrier = Barrier::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3680,"byte_end":3714,"line_start":105,"line_end":105,"column_start":1,"column_end":35}},{"value":"/ let barrier_wait_result = barrier.wait().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3715,"byte_end":3766,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3767,"byte_end":3776,"line_start":107,"line_end":107,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3777,"byte_end":3784,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4372,"byte_end":4381,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"fn is_leader<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this task was the last to call to [`Barrier::wait()`].","sig":null,"attributes":[{"value":"/ Returns `true` if this task was the last to call to [`Barrier::wait()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3893,"byte_end":3969,"line_start":115,"line_end":115,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3974,"byte_end":3977,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3982,"byte_end":3996,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4001,"byte_end":4004,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4009,"byte_end":4016,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4021,"byte_end":4065,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Barrier;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4070,"byte_end":4098,"line_start":121,"line_end":121,"column_start":5,"column_end":33}},{"value":"/ use futures_lite::future;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4103,"byte_end":4132,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4137,"byte_end":4140,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let barrier = Barrier::new(2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4145,"byte_end":4179,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/ let (a, b) = future::zip(barrier.wait(), barrier.wait()).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4184,"byte_end":4251,"line_start":125,"line_end":125,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(a.is_leader(), false);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4256,"byte_end":4293,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(b.is_leader(), true);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4298,"byte_end":4334,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4339,"byte_end":4348,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":4353,"byte_end":4360,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5430,"byte_end":5435,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" An async mutex.","sig":null,"attributes":[{"value":"/ An async mutex.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":4848,"byte_end":4867,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":4868,"byte_end":4871,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The locking mechanism uses eventual fairness to ensure locking will be fair on average without","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":4872,"byte_end":4970,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ sacrificing performance. This is done by forcing a fair lock whenever a lock operation is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":4971,"byte_end":5064,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/ starved for longer than 0.5 milliseconds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5065,"byte_end":5110,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5111,"byte_end":5114,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5115,"byte_end":5129,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5130,"byte_end":5133,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5134,"byte_end":5141,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5142,"byte_end":5186,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5187,"byte_end":5213,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5214,"byte_end":5217,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let m = Mutex::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5218,"byte_end":5244,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5245,"byte_end":5248,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let mut guard = m.lock().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5249,"byte_end":5284,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ *guard = 2;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5285,"byte_end":5300,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5301,"byte_end":5304,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ assert!(m.try_lock().is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5305,"byte_end":5341,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/ drop(guard);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5342,"byte_end":5358,"line_start":35,"line_end":35,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(*m.try_lock().unwrap(), 2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5359,"byte_end":5401,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5402,"byte_end":5410,"line_start":37,"line_end":37,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5411,"byte_end":5418,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6110,"byte_end":6113,"line_start":66,"line_end":66,"column_start":18,"column_end":21},"name":"new","qualname":"<Mutex<T>>::new","value":"const fn new(T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new async mutex.","sig":null,"attributes":[{"value":"/ Creates a new async mutex.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5929,"byte_end":5959,"line_start":57,"line_end":57,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5964,"byte_end":5967,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5972,"byte_end":5986,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5991,"byte_end":5994,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5999,"byte_end":6006,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6011,"byte_end":6037,"line_start":62,"line_end":62,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6042,"byte_end":6045,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6050,"byte_end":6080,"line_start":64,"line_end":64,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6085,"byte_end":6092,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6535,"byte_end":6545,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6291,"byte_end":6345,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6350,"byte_end":6353,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6358,"byte_end":6372,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6377,"byte_end":6380,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6385,"byte_end":6392,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6397,"byte_end":6423,"line_start":79,"line_end":79,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6428,"byte_end":6431,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6436,"byte_end":6467,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(mutex.into_inner(), 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6472,"byte_end":6511,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6516,"byte_end":6523,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":7023,"byte_end":7027,"line_start":106,"line_end":106,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"async fn lock<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires the mutex.","sig":null,"attributes":[{"value":"/ Acquires the mutex.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6630,"byte_end":6653,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6658,"byte_end":6661,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the mutex when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6666,"byte_end":6723,"line_start":92,"line_end":92,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6728,"byte_end":6731,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6736,"byte_end":6750,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6755,"byte_end":6758,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6763,"byte_end":6770,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6775,"byte_end":6819,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6824,"byte_end":6850,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6855,"byte_end":6858,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6863,"byte_end":6894,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/ let guard = mutex.lock().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6899,"byte_end":6934,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*guard, 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6939,"byte_end":6966,"line_start":102,"line_end":102,"column_start":5,"column_end":32}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6971,"byte_end":6979,"line_start":103,"line_end":103,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6984,"byte_end":6991,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6996,"byte_end":7005,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10974,"byte_end":10982,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn try_lock<'_>(&'_ Self) -> Option<MutexGuard>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the mutex.","sig":null,"attributes":[{"value":"/ Attempts to acquire the mutex.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10505,"byte_end":10539,"line_start":217,"line_end":217,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10544,"byte_end":10547,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ If the mutex could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10552,"byte_end":10644,"line_start":219,"line_end":219,"column_start":5,"column_end":97}},{"value":"/ guard is returned that releases the mutex when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10649,"byte_end":10708,"line_start":220,"line_end":220,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10713,"byte_end":10716,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10721,"byte_end":10735,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10740,"byte_end":10743,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10748,"byte_end":10755,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10760,"byte_end":10786,"line_start":225,"line_end":225,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10791,"byte_end":10794,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10799,"byte_end":10830,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/ if let Some(guard) = mutex.try_lock() {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10835,"byte_end":10878,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(*guard, 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10883,"byte_end":10914,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10919,"byte_end":10924,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10929,"byte_end":10936,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10941,"byte_end":10948,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":10953,"byte_end":10962,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11769,"byte_end":11776,"line_start":262,"line_end":262,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11251,"byte_end":11306,"line_start":246,"line_end":246,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11311,"byte_end":11314,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the mutex mutably, no actual locking takes place -- the mutable","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11319,"byte_end":11410,"line_start":248,"line_end":248,"column_start":5,"column_end":96}},{"value":"/ borrow statically guarantees the mutex is not already acquired.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11415,"byte_end":11482,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11487,"byte_end":11490,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11495,"byte_end":11509,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11514,"byte_end":11517,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11522,"byte_end":11529,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11534,"byte_end":11578,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11583,"byte_end":11609,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11614,"byte_end":11617,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11622,"byte_end":11656,"line_start":257,"line_end":257,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11661,"byte_end":11687,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11692,"byte_end":11732,"line_start":259,"line_end":259,"column_start":5,"column_end":45}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11737,"byte_end":11745,"line_start":260,"line_end":260,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11750,"byte_end":11757,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12569,"byte_end":12577,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"lock_arc","qualname":"<Mutex<T>>::lock_arc","value":"fn lock_arc<'_>(&'_ Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires the mutex and clones a reference to it.","sig":null,"attributes":[{"value":"/ Acquires the mutex and clones a reference to it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12104,"byte_end":12156,"line_start":276,"line_end":276,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12161,"byte_end":12164,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Returns an owned guard that releases the mutex when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12169,"byte_end":12233,"line_start":278,"line_end":278,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12238,"byte_end":12241,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12246,"byte_end":12260,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12265,"byte_end":12268,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12273,"byte_end":12280,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12285,"byte_end":12329,"line_start":283,"line_end":283,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12334,"byte_end":12360,"line_start":284,"line_end":284,"column_start":5,"column_end":31}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12365,"byte_end":12388,"line_start":285,"line_end":285,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12393,"byte_end":12396,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(10));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12401,"byte_end":12442,"line_start":287,"line_end":287,"column_start":5,"column_end":46}},{"value":"/ let guard = mutex.lock_arc().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12447,"byte_end":12486,"line_start":288,"line_end":288,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(*guard, 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12491,"byte_end":12518,"line_start":289,"line_end":289,"column_start":5,"column_end":32}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12523,"byte_end":12531,"line_start":290,"line_end":290,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12536,"byte_end":12543,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12548,"byte_end":12557,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13230,"byte_end":13242,"line_start":315,"line_end":315,"column_start":12,"column_end":24},"name":"try_lock_arc","qualname":"<Mutex<T>>::try_lock_arc","value":"fn try_lock_arc<'_>(&'_ Arc<Self>) -> Option<MutexGuardArc<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the mutex and clone a reference to it.","sig":null,"attributes":[{"value":"/ Attempts to acquire the mutex and clone a reference to it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12688,"byte_end":12750,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12755,"byte_end":12758,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ If the mutex could not be acquired at this time, then [`None`] is returned. Otherwise, an","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12763,"byte_end":12856,"line_start":299,"line_end":299,"column_start":5,"column_end":98}},{"value":"/ owned guard is returned that releases the mutex when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12861,"byte_end":12926,"line_start":300,"line_end":300,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12931,"byte_end":12934,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12939,"byte_end":12953,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12958,"byte_end":12961,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12966,"byte_end":12973,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":12978,"byte_end":13004,"line_start":305,"line_end":305,"column_start":5,"column_end":31}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13009,"byte_end":13032,"line_start":306,"line_end":306,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13037,"byte_end":13040,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(10));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13045,"byte_end":13086,"line_start":308,"line_end":308,"column_start":5,"column_end":46}},{"value":"/ if let Some(guard) = mutex.try_lock() {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13091,"byte_end":13134,"line_start":309,"line_end":309,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(*guard, 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13139,"byte_end":13170,"line_start":310,"line_end":310,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13175,"byte_end":13180,"line_start":311,"line_end":311,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13185,"byte_end":13192,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13197,"byte_end":13204,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13209,"byte_end":13218,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13592,"byte_end":13595,"line_start":329,"line_end":329,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Mutex<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14095,"byte_end":14099,"line_start":345,"line_end":345,"column_start":8,"column_end":12},"name":"from","qualname":"<Mutex<T> as std::convert::From>::from","value":"fn from(T) -> Mutex<T>","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14211,"byte_end":14218,"line_start":351,"line_end":351,"column_start":8,"column_end":15},"name":"default","qualname":"<Mutex<T> as std::default::Default>::default","value":"fn default() -> Mutex<T>","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14344,"byte_end":14354,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the mutex when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the mutex when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14283,"byte_end":14332,"line_start":356,"line_end":356,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14913,"byte_end":14919,"line_start":376,"line_end":376,"column_start":12,"column_end":18},"name":"source","qualname":"<MutexGuard>::source","value":"fn source<'_>(&'_ MutexGuard) -> &'a Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the mutex a guard came from.","sig":null,"attributes":[{"value":"/ Returns a reference to the mutex a guard came from.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14551,"byte_end":14606,"line_start":363,"line_end":363,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14611,"byte_end":14614,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14619,"byte_end":14633,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14638,"byte_end":14641,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14646,"byte_end":14653,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14658,"byte_end":14702,"line_start":368,"line_end":368,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14707,"byte_end":14747,"line_start":369,"line_end":369,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14752,"byte_end":14755,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10i32);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14760,"byte_end":14794,"line_start":371,"line_end":371,"column_start":5,"column_end":39}},{"value":"/ let guard = mutex.lock().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14799,"byte_end":14834,"line_start":372,"line_end":372,"column_start":5,"column_end":40}},{"value":"/ dbg!(MutexGuard::source(&guard));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14839,"byte_end":14876,"line_start":373,"line_end":373,"column_start":5,"column_end":42}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14881,"byte_end":14889,"line_start":374,"line_end":374,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14894,"byte_end":14901,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15042,"byte_end":15046,"line_start":382,"line_end":382,"column_start":8,"column_end":12},"name":"drop","qualname":"<MutexGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15297,"byte_end":15300,"line_start":390,"line_end":390,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MutexGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15473,"byte_end":15476,"line_start":396,"line_end":396,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MutexGuard as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15637,"byte_end":15642,"line_start":404,"line_end":404,"column_start":8,"column_end":13},"name":"deref","qualname":"<MutexGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3491},"children":[],"decl_id":{"krate":2,"index":3493},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15762,"byte_end":15771,"line_start":410,"line_end":410,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MutexGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3504},"children":[],"decl_id":{"krate":2,"index":3505},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15915,"byte_end":15928,"line_start":416,"line_end":416,"column_start":12,"column_end":25},"name":"MutexGuardArc","qualname":"::mutex::MutexGuardArc","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owned guard that releases the mutex when dropped.\n","sig":null,"attributes":[{"value":"/ An owned guard that releases the mutex when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15847,"byte_end":15903,"line_start":415,"line_end":415,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16525,"byte_end":16531,"line_start":436,"line_end":436,"column_start":12,"column_end":18},"name":"source","qualname":"<MutexGuardArc<T>>::source","value":"fn source<'_>(&'_ MutexGuardArc<T>) -> &'_ Arc<Mutex<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the mutex a guard came from.","sig":null,"attributes":[{"value":"/ Returns a reference to the mutex a guard came from.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16115,"byte_end":16170,"line_start":422,"line_end":422,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16175,"byte_end":16178,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16183,"byte_end":16197,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16202,"byte_end":16205,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16210,"byte_end":16217,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16222,"byte_end":16266,"line_start":427,"line_end":427,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{Mutex, MutexGuardArc};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16271,"byte_end":16314,"line_start":428,"line_end":428,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16319,"byte_end":16342,"line_start":429,"line_end":429,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16347,"byte_end":16350,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(10i32));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16355,"byte_end":16399,"line_start":431,"line_end":431,"column_start":5,"column_end":49}},{"value":"/ let guard = mutex.lock_arc().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16404,"byte_end":16443,"line_start":432,"line_end":432,"column_start":5,"column_end":44}},{"value":"/ dbg!(MutexGuardArc::source(&guard));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16448,"byte_end":16488,"line_start":433,"line_end":433,"column_start":5,"column_end":45}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16493,"byte_end":16501,"line_start":434,"line_end":434,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16506,"byte_end":16513,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16655,"byte_end":16659,"line_start":442,"line_end":442,"column_start":8,"column_end":12},"name":"drop","qualname":"<MutexGuardArc<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16909,"byte_end":16912,"line_start":450,"line_end":450,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MutexGuardArc<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":17084,"byte_end":17087,"line_start":456,"line_end":456,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MutexGuardArc<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":17247,"byte_end":17252,"line_start":464,"line_end":464,"column_start":8,"column_end":13},"name":"deref","qualname":"<MutexGuardArc<T> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3491},"children":[],"decl_id":{"krate":2,"index":3493},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":17371,"byte_end":17380,"line_start":470,"line_end":470,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MutexGuardArc<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3504},"children":[],"decl_id":{"krate":2,"index":3505},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":18568,"byte_end":18572,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"from","qualname":"<usize as std::convert::From>::from","value":"fn from(State) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19735,"byte_end":19743,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"OnceCell","qualname":"::once_cell::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"decl_id":null,"docs":" A memory location that can be written to at most once.","sig":null,"attributes":[{"value":"/ A memory location that can be written to at most once.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":18625,"byte_end":18683,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":18684,"byte_end":18687,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ A `OnceCell` can be used to store a single value, and only once. However,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":18688,"byte_end":18765,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ once the value is stored, it can be accessed directly through a reference","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":18766,"byte_end":18843,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ instead of needing an RAII guard like `Mutex` or `RwLock`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":18844,"byte_end":18906,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":18907,"byte_end":18910,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":18911,"byte_end":18925,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":18926,"byte_end":18929,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This structure is useful for a variety of patterns, most notably for one-time","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":18930,"byte_end":19011,"line_start":51,"line_end":51,"column_start":1,"column_end":82}},{"value":"/ initialization.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19012,"byte_end":19031,"line_start":52,"line_end":52,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19032,"byte_end":19035,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19036,"byte_end":19047,"line_start":54,"line_end":54,"column_start":1,"column_end":12}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19048,"byte_end":19077,"line_start":55,"line_end":55,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19078,"byte_end":19081,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # struct Foobar;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19082,"byte_end":19102,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19103,"byte_end":19106,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ async fn very_expensive_initialization() -> Foobar {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19107,"byte_end":19163,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/     // Imagine this is very expensive to initialize,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19164,"byte_end":19220,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/     // for instance, it requires a network request or","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19221,"byte_end":19278,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/     // a database call.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19279,"byte_end":19306,"line_start":62,"line_end":62,"column_start":1,"column_end":28}},{"value":"/     # Foobar","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19307,"byte_end":19323,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19324,"byte_end":19329,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19330,"byte_end":19333,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ struct LazyFoobar {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19334,"byte_end":19357,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/     inner: OnceCell<Foobar>,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19358,"byte_end":19390,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19391,"byte_end":19396,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19397,"byte_end":19400,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ impl LazyFoobar {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19401,"byte_end":19422,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     fn new() -> Self {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19423,"byte_end":19449,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/         Self {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19450,"byte_end":19468,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"/             inner: OnceCell::new(),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19469,"byte_end":19508,"line_start":73,"line_end":73,"column_start":1,"column_end":40}},{"value":"/         }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19509,"byte_end":19522,"line_start":74,"line_end":74,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19523,"byte_end":19532,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19533,"byte_end":19536,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/     async fn load(&self) -> &Foobar {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19537,"byte_end":19578,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/         self.inner.get_or_init(|| async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19579,"byte_end":19624,"line_start":78,"line_end":78,"column_start":1,"column_end":46}},{"value":"/             very_expensive_initialization().await","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19625,"byte_end":19678,"line_start":79,"line_end":79,"column_start":1,"column_end":54}},{"value":"/         }).await","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19679,"byte_end":19699,"line_start":80,"line_end":80,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19700,"byte_end":19709,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19710,"byte_end":19715,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":19716,"byte_end":19723,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20547,"byte_end":20550,"line_start":113,"line_end":113,"column_start":18,"column_end":21},"name":"new","qualname":"<OnceCell<T>>::new","value":"const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new, uninitialized `OnceCell`.","sig":null,"attributes":[{"value":"/ Create a new, uninitialized `OnceCell`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20314,"byte_end":20357,"line_start":103,"line_end":103,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20362,"byte_end":20365,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20370,"byte_end":20383,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20388,"byte_end":20391,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20396,"byte_end":20407,"line_start":107,"line_end":107,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20412,"byte_end":20441,"line_start":108,"line_end":108,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20446,"byte_end":20449,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20454,"byte_end":20485,"line_start":110,"line_end":110,"column_start":5,"column_end":36}},{"value":"/ # cell.set_blocking(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20490,"byte_end":20517,"line_start":111,"line_end":111,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20522,"byte_end":20529,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21412,"byte_end":21426,"line_start":140,"line_end":140,"column_start":12,"column_end":26},"name":"is_initialized","qualname":"<OnceCell<T>>::is_initialized","value":"fn is_initialized<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tell whether or not the cell is initialized.","sig":null,"attributes":[{"value":"/ Tell whether or not the cell is initialized.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20812,"byte_end":20860,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20865,"byte_end":20868,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This may not always be accurate. For instance, it is possible for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20873,"byte_end":20942,"line_start":124,"line_end":124,"column_start":5,"column_end":74}},{"value":"/ another thread to initialize the cell between the time when this","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20947,"byte_end":21015,"line_start":125,"line_end":125,"column_start":5,"column_end":73}},{"value":"/ function is called and the time when the result is actually used.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21020,"byte_end":21089,"line_start":126,"line_end":126,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21094,"byte_end":21097,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21102,"byte_end":21115,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21120,"byte_end":21123,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21128,"byte_end":21139,"line_start":130,"line_end":130,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21144,"byte_end":21173,"line_start":131,"line_end":131,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21178,"byte_end":21181,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21186,"byte_end":21230,"line_start":133,"line_end":133,"column_start":5,"column_end":49}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21235,"byte_end":21266,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/ assert!(!cell.is_initialized());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21271,"byte_end":21307,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"/ cell.set(1).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21312,"byte_end":21334,"line_start":136,"line_end":136,"column_start":5,"column_end":27}},{"value":"/ assert!(cell.is_initialized());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21339,"byte_end":21374,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21379,"byte_end":21388,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21393,"byte_end":21400,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21950,"byte_end":21953,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceCell<T>>::get","value":"fn get<'_>(&'_ Self) -> Option<&'_ T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner value, or `None` if the value\n is not yet initialized.","sig":null,"attributes":[{"value":"/ Get a reference to the inner value, or `None` if the value","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21533,"byte_end":21595,"line_start":144,"line_end":144,"column_start":5,"column_end":67}},{"value":"/ is not yet initialized.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21600,"byte_end":21627,"line_start":145,"line_end":145,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21632,"byte_end":21635,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21640,"byte_end":21653,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21658,"byte_end":21661,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21666,"byte_end":21677,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21682,"byte_end":21711,"line_start":150,"line_end":150,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21716,"byte_end":21719,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21724,"byte_end":21768,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21773,"byte_end":21804,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21809,"byte_end":21843,"line_start":154,"line_end":154,"column_start":5,"column_end":39}},{"value":"/ cell.set(1).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21848,"byte_end":21870,"line_start":155,"line_end":155,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(cell.get(), Some(&1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21875,"byte_end":21912,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21917,"byte_end":21926,"line_start":157,"line_end":157,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":21931,"byte_end":21938,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22884,"byte_end":22891,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> Option<&'_ mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner value, or `None` if the value\n is not yet initialized.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner value, or `None` if the value","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22220,"byte_end":22290,"line_start":169,"line_end":169,"column_start":5,"column_end":75}},{"value":"/ is not yet initialized.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22295,"byte_end":22322,"line_start":170,"line_end":170,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22327,"byte_end":22330,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function is useful for initializing the value inside the cell","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22335,"byte_end":22405,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ when we still have a mutable reference to the cell.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22410,"byte_end":22465,"line_start":173,"line_end":173,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22470,"byte_end":22473,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22478,"byte_end":22491,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22496,"byte_end":22499,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22504,"byte_end":22515,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22520,"byte_end":22549,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22554,"byte_end":22557,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22562,"byte_end":22606,"line_start":180,"line_end":180,"column_start":5,"column_end":49}},{"value":"/ let mut cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22611,"byte_end":22646,"line_start":181,"line_end":181,"column_start":5,"column_end":40}},{"value":"/ assert!(cell.get_mut().is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22651,"byte_end":22689,"line_start":182,"line_end":182,"column_start":5,"column_end":43}},{"value":"/ cell.set(1).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22694,"byte_end":22716,"line_start":183,"line_end":183,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(cell.get_mut(), Some(&mut 1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22721,"byte_end":22766,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ *cell.get_mut().unwrap() = 2;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22771,"byte_end":22804,"line_start":185,"line_end":185,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(cell.get(), Some(&2));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22809,"byte_end":22846,"line_start":186,"line_end":186,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22851,"byte_end":22860,"line_start":187,"line_end":187,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":22865,"byte_end":22872,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23632,"byte_end":23636,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"take","qualname":"<OnceCell<T>>::take","value":"fn take<'_>(&'_ mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Take the value out of this `OnceCell`, moving it back to the uninitialized\n state.","sig":null,"attributes":[{"value":"/ Take the value out of this `OnceCell`, moving it back to the uninitialized","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23210,"byte_end":23288,"line_start":199,"line_end":199,"column_start":5,"column_end":83}},{"value":"/ state.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23293,"byte_end":23303,"line_start":200,"line_end":200,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23308,"byte_end":23311,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23316,"byte_end":23329,"line_start":202,"line_end":202,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23334,"byte_end":23337,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23342,"byte_end":23353,"line_start":204,"line_end":204,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23358,"byte_end":23387,"line_start":205,"line_end":205,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23392,"byte_end":23395,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23400,"byte_end":23444,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/ let mut cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23449,"byte_end":23484,"line_start":208,"line_end":208,"column_start":5,"column_end":40}},{"value":"/ cell.set(1).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23489,"byte_end":23511,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(cell.take(), Some(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23516,"byte_end":23553,"line_start":210,"line_end":210,"column_start":5,"column_end":42}},{"value":"/ assert!(!cell.is_initialized());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23558,"byte_end":23594,"line_start":211,"line_end":211,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23599,"byte_end":23608,"line_start":212,"line_end":212,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":23613,"byte_end":23620,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24412,"byte_end":24422,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `OnceCell` into the inner value, if it is initialized.","sig":null,"attributes":[{"value":"/ Convert this `OnceCell` into the inner value, if it is initialized.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24051,"byte_end":24122,"line_start":226,"line_end":226,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24127,"byte_end":24130,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24135,"byte_end":24148,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24153,"byte_end":24156,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24161,"byte_end":24172,"line_start":230,"line_end":230,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24177,"byte_end":24206,"line_start":231,"line_end":231,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24211,"byte_end":24214,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24219,"byte_end":24263,"line_start":233,"line_end":233,"column_start":5,"column_end":49}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24268,"byte_end":24299,"line_start":234,"line_end":234,"column_start":5,"column_end":36}},{"value":"/ cell.set(1).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24304,"byte_end":24326,"line_start":235,"line_end":235,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(cell.into_inner(), Some(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24331,"byte_end":24374,"line_start":236,"line_end":236,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24379,"byte_end":24388,"line_start":237,"line_end":237,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24393,"byte_end":24400,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25115,"byte_end":25119,"line_start":266,"line_end":266,"column_start":18,"column_end":22},"name":"wait","qualname":"<OnceCell<T>>::wait","value":"async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the cell to be initialized, and then return a reference to the\n inner value.","sig":null,"attributes":[{"value":"/ Wait for the cell to be initialized, and then return a reference to the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24479,"byte_end":24554,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ inner value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24559,"byte_end":24575,"line_start":244,"line_end":244,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24580,"byte_end":24583,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24588,"byte_end":24601,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24606,"byte_end":24609,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24614,"byte_end":24625,"line_start":248,"line_end":248,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24630,"byte_end":24659,"line_start":249,"line_end":249,"column_start":5,"column_end":34}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24664,"byte_end":24687,"line_start":250,"line_end":250,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24692,"byte_end":24720,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/ use std::thread::{sleep, spawn};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24725,"byte_end":24761,"line_start":252,"line_end":252,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24766,"byte_end":24769,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let cell = Arc::new(OnceCell::new());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24774,"byte_end":24815,"line_start":254,"line_end":254,"column_start":5,"column_end":46}},{"value":"/ let cell2 = cell.clone();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24820,"byte_end":24849,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24854,"byte_end":24857,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ spawn(move || {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24862,"byte_end":24881,"line_start":257,"line_end":257,"column_start":5,"column_end":24}},{"value":"/    sleep(Duration::from_millis(5));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24886,"byte_end":24925,"line_start":258,"line_end":258,"column_start":5,"column_end":44}},{"value":"/    cell2.set_blocking(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24930,"byte_end":24959,"line_start":259,"line_end":259,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24964,"byte_end":24971,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24976,"byte_end":24979,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":24984,"byte_end":25028,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(cell.wait().await, &1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25033,"byte_end":25071,"line_start":263,"line_end":263,"column_start":5,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25076,"byte_end":25085,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25090,"byte_end":25097,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26708,"byte_end":26721,"line_start":318,"line_end":318,"column_start":12,"column_end":25},"name":"wait_blocking","qualname":"<OnceCell<T>>::wait_blocking","value":"fn wait_blocking<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Wait for the cell to be initialized, and then return a reference to the\n inner value.","sig":null,"attributes":[{"value":"/ Wait for the cell to be initialized, and then return a reference to the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25710,"byte_end":25785,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ inner value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25790,"byte_end":25806,"line_start":289,"line_end":289,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25811,"byte_end":25814,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Blocking","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25819,"byte_end":25833,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25838,"byte_end":25841,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ In contrast to the `wait` method, this method blocks the current thread of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25846,"byte_end":25924,"line_start":293,"line_end":293,"column_start":5,"column_end":83}},{"value":"/ execution instead of awaiting.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25929,"byte_end":25963,"line_start":294,"line_end":294,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25968,"byte_end":25971,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method should not be used in an asynchronous context. It is intended","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":25976,"byte_end":26053,"line_start":296,"line_end":296,"column_start":5,"column_end":82}},{"value":"/ to be used such that a `OnceCell` can be used in both asynchronous and synchronous contexts.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26058,"byte_end":26154,"line_start":297,"line_end":297,"column_start":5,"column_end":101}},{"value":"/ Calling this method in an asynchronous context may result in deadlocks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26159,"byte_end":26234,"line_start":298,"line_end":298,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26239,"byte_end":26242,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26247,"byte_end":26260,"line_start":300,"line_end":300,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26265,"byte_end":26268,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26273,"byte_end":26284,"line_start":302,"line_end":302,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26289,"byte_end":26318,"line_start":303,"line_end":303,"column_start":5,"column_end":34}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26323,"byte_end":26346,"line_start":304,"line_end":304,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26351,"byte_end":26379,"line_start":305,"line_end":305,"column_start":5,"column_end":33}},{"value":"/ use std::thread::{sleep, spawn};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26384,"byte_end":26420,"line_start":306,"line_end":306,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26425,"byte_end":26428,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let cell = Arc::new(OnceCell::new());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26433,"byte_end":26474,"line_start":308,"line_end":308,"column_start":5,"column_end":46}},{"value":"/ let cell2 = cell.clone();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26479,"byte_end":26508,"line_start":309,"line_end":309,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26513,"byte_end":26516,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ spawn(move || {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26521,"byte_end":26540,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/    sleep(Duration::from_millis(5));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26545,"byte_end":26584,"line_start":312,"line_end":312,"column_start":5,"column_end":44}},{"value":"/    cell2.set_blocking(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26589,"byte_end":26618,"line_start":313,"line_end":313,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26623,"byte_end":26630,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26635,"byte_end":26638,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cell.wait_blocking(), &1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26643,"byte_end":26684,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":26689,"byte_end":26696,"line_start":317,"line_end":317,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28172,"byte_end":28187,"line_start":367,"line_end":367,"column_start":18,"column_end":33},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"async fn get_or_try_init<E, Fut, '_,\nimpl FnOnce() -> Fut>(&'_ Self, impl FnOnce() -> Fut) -> /*impl Trait*/ where\nFut: Future<Output = Result<T, E>>, impl FnOnce() -> Fut: FnOnce() -> Fut","parent":null,"children":[],"decl_id":null,"docs":" Either get the value or initialize it with the given closure.","sig":null,"attributes":[{"value":"/ Either get the value or initialize it with the given closure.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27313,"byte_end":27378,"line_start":340,"line_end":340,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27383,"byte_end":27386,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The cell will not be initialized if the closure returns an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27391,"byte_end":27460,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27465,"byte_end":27468,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27473,"byte_end":27486,"line_start":344,"line_end":344,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27491,"byte_end":27494,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27499,"byte_end":27510,"line_start":346,"line_end":346,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27515,"byte_end":27544,"line_start":347,"line_end":347,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27549,"byte_end":27554,"line_start":348,"line_end":348,"column_start":5,"column_end":10}},{"value":"/ # // Prevent explicit value errors.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27559,"byte_end":27598,"line_start":349,"line_end":349,"column_start":5,"column_end":44}},{"value":"/ # fn _explicit(_: &Result<&i32, ()>) {}","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27603,"byte_end":27646,"line_start":350,"line_end":350,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27651,"byte_end":27654,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27659,"byte_end":27703,"line_start":352,"line_end":352,"column_start":5,"column_end":49}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27708,"byte_end":27739,"line_start":353,"line_end":353,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27744,"byte_end":27747,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let result = cell.get_or_try_init(|| async { Err(()) }).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27752,"byte_end":27818,"line_start":355,"line_end":355,"column_start":5,"column_end":71}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27823,"byte_end":27852,"line_start":356,"line_end":356,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27857,"byte_end":27860,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ let result = cell.get_or_try_init(|| async { Ok(1) }).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27865,"byte_end":27929,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/ # _explicit(&result);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27934,"byte_end":27959,"line_start":359,"line_end":359,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(result.unwrap(), &1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":27964,"byte_end":28000,"line_start":360,"line_end":360,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28005,"byte_end":28008,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let result = cell.get_or_try_init(|| async { Err(()) }).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28013,"byte_end":28079,"line_start":362,"line_end":362,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28084,"byte_end":28087,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap(), &1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28092,"byte_end":28128,"line_start":364,"line_end":364,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28133,"byte_end":28142,"line_start":365,"line_end":365,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28147,"byte_end":28154,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29968,"byte_end":29992,"line_start":419,"line_end":419,"column_start":12,"column_end":36},"name":"get_or_try_init_blocking","qualname":"<OnceCell<T>>::get_or_try_init_blocking","value":"fn get_or_try_init_blocking<E, '_,\nimpl FnOnce() -> Result<T, E>>(&'_ Self, impl FnOnce() -> Result<T, E>)\n-> Result<&'_ T, E> where impl FnOnce() -> Result<T, E>: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Either get the value or initialize it with the given closure.","sig":null,"attributes":[{"value":"/ Either get the value or initialize it with the given closure.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28761,"byte_end":28826,"line_start":385,"line_end":385,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28831,"byte_end":28834,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ The cell will not be initialized if the closure returns an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28839,"byte_end":28908,"line_start":387,"line_end":387,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28913,"byte_end":28916,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Blocking","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28921,"byte_end":28935,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28940,"byte_end":28943,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ In contrast to the `get_or_try_init` method, this method blocks the current thread of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":28948,"byte_end":29037,"line_start":391,"line_end":391,"column_start":5,"column_end":94}},{"value":"/ execution instead of awaiting.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29042,"byte_end":29076,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29081,"byte_end":29084,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This method should not be used in an asynchronous context. It is intended","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29089,"byte_end":29166,"line_start":394,"line_end":394,"column_start":5,"column_end":82}},{"value":"/ to be used such that a `OnceCell` can be used in both asynchronous and synchronous contexts.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29171,"byte_end":29267,"line_start":395,"line_end":395,"column_start":5,"column_end":101}},{"value":"/ Calling this method in an asynchronous context may result in deadlocks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29272,"byte_end":29347,"line_start":396,"line_end":396,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29352,"byte_end":29355,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29360,"byte_end":29373,"line_start":398,"line_end":398,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29378,"byte_end":29381,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29386,"byte_end":29397,"line_start":400,"line_end":400,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29402,"byte_end":29431,"line_start":401,"line_end":401,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29436,"byte_end":29441,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/ # // Prevent explicit type errors.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29446,"byte_end":29484,"line_start":403,"line_end":403,"column_start":5,"column_end":43}},{"value":"/ # fn _explicit(_: &Result<&i32, ()>) {}","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29489,"byte_end":29532,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29537,"byte_end":29540,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29545,"byte_end":29576,"line_start":406,"line_end":406,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29581,"byte_end":29584,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let result = cell.get_or_try_init_blocking(|| Err(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29589,"byte_end":29648,"line_start":408,"line_end":408,"column_start":5,"column_end":64}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29653,"byte_end":29682,"line_start":409,"line_end":409,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29687,"byte_end":29690,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let result = cell.get_or_try_init_blocking(|| Ok(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29695,"byte_end":29752,"line_start":411,"line_end":411,"column_start":5,"column_end":62}},{"value":"/ # _explicit(&result);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29757,"byte_end":29782,"line_start":412,"line_end":412,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(result.unwrap(), &1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29787,"byte_end":29823,"line_start":413,"line_end":413,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29828,"byte_end":29831,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let result = cell.get_or_try_init_blocking(|| Err(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29836,"byte_end":29895,"line_start":415,"line_end":415,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29900,"byte_end":29903,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap(), &1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29908,"byte_end":29944,"line_start":417,"line_end":417,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":29949,"byte_end":29956,"line_start":418,"line_end":418,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31198,"byte_end":31209,"line_start":454,"line_end":454,"column_start":18,"column_end":29},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"async fn get_or_init<Fut, '_,\nimpl FnOnce() -> Fut>(&'_ Self, impl FnOnce() -> Fut) -> /*impl Trait*/ where\nFut: Future<Output = T>, impl FnOnce() -> Fut: FnOnce() -> Fut","parent":null,"children":[],"decl_id":null,"docs":" Either get the value or initialize it with the given closure.","sig":null,"attributes":[{"value":"/ Either get the value or initialize it with the given closure.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":30651,"byte_end":30716,"line_start":438,"line_end":438,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":30721,"byte_end":30724,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Many tasks may call this function, but the value will only be set once","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":30729,"byte_end":30803,"line_start":440,"line_end":440,"column_start":5,"column_end":79}},{"value":"/ and only one closure will be invoked.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":30808,"byte_end":30849,"line_start":441,"line_end":441,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":30854,"byte_end":30857,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":30862,"byte_end":30875,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":30880,"byte_end":30883,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":30888,"byte_end":30899,"line_start":445,"line_end":445,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":30904,"byte_end":30933,"line_start":446,"line_end":446,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":30938,"byte_end":30941,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":30946,"byte_end":30990,"line_start":448,"line_end":448,"column_start":5,"column_end":49}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":30995,"byte_end":31026,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(cell.get_or_init(|| async { 1 }).await, &1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31031,"byte_end":31090,"line_start":450,"line_end":450,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(cell.get_or_init(|| async { 2 }).await, &1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31095,"byte_end":31154,"line_start":451,"line_end":451,"column_start":5,"column_end":64}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31159,"byte_end":31168,"line_start":452,"line_end":452,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31173,"byte_end":31180,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32494,"byte_end":32514,"line_start":490,"line_end":490,"column_start":12,"column_end":32},"name":"get_or_init_blocking","qualname":"<OnceCell<T>>::get_or_init_blocking","value":"fn get_or_init_blocking<'_,\nimpl FnOnce() -> T + Unpin>(&'_ Self, impl FnOnce() -> T + Unpin) -> &'_ T\nwhere impl FnOnce() -> T + Unpin: FnOnce() -> T + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Either get the value or initialize it with the given closure.","sig":null,"attributes":[{"value":"/ Either get the value or initialize it with the given closure.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31595,"byte_end":31660,"line_start":467,"line_end":467,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31665,"byte_end":31668,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Many tasks may call this function, but the value will only be set once","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31673,"byte_end":31747,"line_start":469,"line_end":469,"column_start":5,"column_end":79}},{"value":"/ and only one closure will be invoked.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31752,"byte_end":31793,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31798,"byte_end":31801,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Blocking","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31806,"byte_end":31820,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31825,"byte_end":31828,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ In contrast to the `get_or_init` method, this method blocks the current thread of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31833,"byte_end":31918,"line_start":474,"line_end":474,"column_start":5,"column_end":90}},{"value":"/ execution instead of awaiting.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31923,"byte_end":31957,"line_start":475,"line_end":475,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31962,"byte_end":31965,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ This method should not be used in an asynchronous context. It is intended","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":31970,"byte_end":32047,"line_start":477,"line_end":477,"column_start":5,"column_end":82}},{"value":"/ to be used such that a `OnceCell` can be used in both asynchronous and synchronous contexts.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32052,"byte_end":32148,"line_start":478,"line_end":478,"column_start":5,"column_end":101}},{"value":"/ Calling this method in an asynchronous context may result in deadlocks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32153,"byte_end":32228,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32233,"byte_end":32236,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32241,"byte_end":32254,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32259,"byte_end":32262,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32267,"byte_end":32278,"line_start":483,"line_end":483,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32283,"byte_end":32312,"line_start":484,"line_end":484,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32317,"byte_end":32320,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32325,"byte_end":32356,"line_start":486,"line_end":486,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(cell.get_or_init_blocking(|| 1), &1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32361,"byte_end":32413,"line_start":487,"line_end":487,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(cell.get_or_init_blocking(|| 2), &1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32418,"byte_end":32470,"line_start":488,"line_end":488,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32475,"byte_end":32482,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33328,"byte_end":33331,"line_start":518,"line_end":518,"column_start":18,"column_end":21},"name":"set","qualname":"<OnceCell<T>>::set","value":"async fn set<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Try to set the value of the cell.","sig":null,"attributes":[{"value":"/ Try to set the value of the cell.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32821,"byte_end":32858,"line_start":500,"line_end":500,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32863,"byte_end":32866,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ If the cell is already initialized, this method returns the original","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32871,"byte_end":32943,"line_start":502,"line_end":502,"column_start":5,"column_end":77}},{"value":"/ value back.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32948,"byte_end":32963,"line_start":503,"line_end":503,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32968,"byte_end":32971,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32976,"byte_end":32989,"line_start":505,"line_end":505,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":32994,"byte_end":32997,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33002,"byte_end":33013,"line_start":507,"line_end":507,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33018,"byte_end":33047,"line_start":508,"line_end":508,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33052,"byte_end":33055,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33060,"byte_end":33104,"line_start":510,"line_end":510,"column_start":5,"column_end":49}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33109,"byte_end":33140,"line_start":511,"line_end":511,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33145,"byte_end":33148,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cell.set(1).await, Ok(&1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33153,"byte_end":33195,"line_start":513,"line_end":513,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(cell.get(), Some(&1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33200,"byte_end":33237,"line_start":514,"line_end":514,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(cell.set(2).await, Err(2));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33242,"byte_end":33284,"line_start":515,"line_end":515,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33289,"byte_end":33298,"line_start":516,"line_end":516,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33303,"byte_end":33310,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34581,"byte_end":34593,"line_start":556,"line_end":556,"column_start":12,"column_end":24},"name":"set_blocking","qualname":"<OnceCell<T>>::set_blocking","value":"fn set_blocking<'_>(&'_ Self, T) -> Result<&'_ T, T>","parent":null,"children":[],"decl_id":null,"docs":" Try to set the value of the cell.","sig":null,"attributes":[{"value":"/ Try to set the value of the cell.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33710,"byte_end":33747,"line_start":531,"line_end":531,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33752,"byte_end":33755,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ If the cell is already initialized, this method returns the original","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33760,"byte_end":33832,"line_start":533,"line_end":533,"column_start":5,"column_end":77}},{"value":"/ value back.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33837,"byte_end":33852,"line_start":534,"line_end":534,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33857,"byte_end":33860,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Blocking","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33865,"byte_end":33879,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33884,"byte_end":33887,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ In contrast to the `set` method, this method blocks the current thread of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33892,"byte_end":33969,"line_start":538,"line_end":538,"column_start":5,"column_end":82}},{"value":"/ execution instead of awaiting.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":33974,"byte_end":34008,"line_start":539,"line_end":539,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34013,"byte_end":34016,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ This method should not be used in an asynchronous context. It is intended","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34021,"byte_end":34098,"line_start":541,"line_end":541,"column_start":5,"column_end":82}},{"value":"/ to be used such that a `OnceCell` can be used in both asynchronous and synchronous contexts.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34103,"byte_end":34199,"line_start":542,"line_end":542,"column_start":5,"column_end":101}},{"value":"/ Calling this method in an asynchronous context may result in deadlocks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34204,"byte_end":34279,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34284,"byte_end":34287,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34292,"byte_end":34305,"line_start":545,"line_end":545,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34310,"byte_end":34313,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34318,"byte_end":34329,"line_start":547,"line_end":547,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34334,"byte_end":34363,"line_start":548,"line_end":548,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34368,"byte_end":34371,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34376,"byte_end":34407,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34412,"byte_end":34415,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cell.set_blocking(1), Ok(&1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34420,"byte_end":34465,"line_start":552,"line_end":552,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(cell.get(), Some(&1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34470,"byte_end":34507,"line_start":553,"line_end":553,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(cell.set_blocking(2), Err(2));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34512,"byte_end":34557,"line_start":554,"line_end":554,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":34562,"byte_end":34569,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40067,"byte_end":40080,"line_start":701,"line_end":701,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<OnceCell<T>>::get_unchecked","value":"unsafe fn get_unchecked<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner value.","sig":null,"attributes":[{"value":"/ Get a reference to the inner value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39525,"byte_end":39564,"line_start":681,"line_end":681,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39569,"byte_end":39572,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39577,"byte_end":39589,"line_start":683,"line_end":683,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39594,"byte_end":39597,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the cell is initialized.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39602,"byte_end":39658,"line_start":685,"line_end":685,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39663,"byte_end":39666,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39671,"byte_end":39684,"line_start":687,"line_end":687,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39689,"byte_end":39692,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39697,"byte_end":39708,"line_start":689,"line_end":689,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39713,"byte_end":39742,"line_start":690,"line_end":690,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39747,"byte_end":39750,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39755,"byte_end":39799,"line_start":692,"line_end":692,"column_start":5,"column_end":49}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39804,"byte_end":39835,"line_start":693,"line_end":693,"column_start":5,"column_end":36}},{"value":"/ cell.set(1).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39840,"byte_end":39862,"line_start":694,"line_end":694,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39867,"byte_end":39870,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ // SAFETY: We know that the value is initialized, so it is safe to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39875,"byte_end":39945,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/ // read it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39950,"byte_end":39965,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(unsafe { cell.get_unchecked() }, &1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39970,"byte_end":40022,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40027,"byte_end":40036,"line_start":699,"line_end":699,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40041,"byte_end":40048,"line_start":700,"line_end":700,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40503,"byte_end":40507,"line_start":718,"line_end":718,"column_start":8,"column_end":12},"name":"from","qualname":"<OnceCell<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":" Create a new, initialized `OnceCell` from an existing value.","sig":null,"attributes":[{"value":"/ Create a new, initialized `OnceCell` from an existing value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40245,"byte_end":40309,"line_start":708,"line_end":708,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40314,"byte_end":40317,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40322,"byte_end":40335,"line_start":710,"line_end":710,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40340,"byte_end":40343,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40348,"byte_end":40359,"line_start":712,"line_end":712,"column_start":5,"column_end":16}},{"value":"/ use async_lock::OnceCell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40364,"byte_end":40393,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40398,"byte_end":40401,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ let cell = OnceCell::from(42);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40406,"byte_end":40440,"line_start":715,"line_end":715,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(cell.get(), Some(&42));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40445,"byte_end":40483,"line_start":716,"line_end":716,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40488,"byte_end":40495,"line_start":717,"line_end":717,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40833,"byte_end":40836,"line_start":729,"line_end":729,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OnceCell<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":41682,"byte_end":41686,"line_start":751,"line_end":751,"column_start":8,"column_end":12},"name":"drop","qualname":"<OnceCell<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44596,"byte_end":44602,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381}],"decl_id":null,"docs":" An async reader-writer lock.","sig":null,"attributes":[{"value":"/ An async reader-writer lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":43823,"byte_end":43855,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":43856,"byte_end":43859,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows multiple readers or one writer at any point in time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":43860,"byte_end":43941,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":43942,"byte_end":43945,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The locking strategy is write-preferring, which means writers are never starved.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":43946,"byte_end":44030,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"/ Releasing a write lock wakes the next blocked reader and the next blocked writer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44031,"byte_end":44116,"line_start":20,"line_end":20,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44117,"byte_end":44120,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44121,"byte_end":44135,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44136,"byte_end":44139,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44140,"byte_end":44147,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44148,"byte_end":44192,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44193,"byte_end":44220,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44221,"byte_end":44224,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44225,"byte_end":44255,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44256,"byte_end":44259,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Multiple read locks can be held at a time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44260,"byte_end":44309,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/ let r1 = lock.read().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44310,"byte_end":44341,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ let r2 = lock.read().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44342,"byte_end":44373,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44374,"byte_end":44397,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44398,"byte_end":44421,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/ drop((r1, r2));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44422,"byte_end":44441,"line_start":35,"line_end":35,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44442,"byte_end":44445,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Only one write lock can be held at a time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44446,"byte_end":44495,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/ let mut w = lock.write().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44496,"byte_end":44531,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ *w += 1;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44532,"byte_end":44544,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/ assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44545,"byte_end":44567,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44568,"byte_end":44576,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":44577,"byte_end":44584,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45546,"byte_end":45549,"line_start":79,"line_end":79,"column_start":18,"column_end":21},"name":"new","qualname":"<RwLock<T>>::new","value":"const fn new(T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new reader-writer lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45357,"byte_end":45394,"line_start":70,"line_end":70,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45399,"byte_end":45402,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45407,"byte_end":45421,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45426,"byte_end":45429,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45434,"byte_end":45441,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45446,"byte_end":45473,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45478,"byte_end":45481,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45486,"byte_end":45516,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45521,"byte_end":45528,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46035,"byte_end":46045,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the lock and returns the inner value.","sig":null,"attributes":[{"value":"/ Unwraps the lock and returns the inner value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45798,"byte_end":45847,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45852,"byte_end":45855,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45860,"byte_end":45874,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45879,"byte_end":45882,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45887,"byte_end":45894,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45899,"byte_end":45926,"line_start":94,"line_end":94,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45931,"byte_end":45934,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45939,"byte_end":45969,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lock.into_inner(), 5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45974,"byte_end":46011,"line_start":97,"line_end":97,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46016,"byte_end":46023,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46678,"byte_end":46686,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"fn try_read<'_>(&'_ Self) -> Option<RwLockReadGuard>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46132,"byte_end":46168,"line_start":105,"line_end":105,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46173,"byte_end":46176,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If a read lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46181,"byte_end":46275,"line_start":107,"line_end":107,"column_start":5,"column_end":99}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46280,"byte_end":46338,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46343,"byte_end":46346,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46351,"byte_end":46365,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46370,"byte_end":46373,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46378,"byte_end":46385,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46390,"byte_end":46434,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46439,"byte_end":46466,"line_start":114,"line_end":114,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46471,"byte_end":46474,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46479,"byte_end":46509,"line_start":116,"line_end":116,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46514,"byte_end":46517,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.read().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46522,"byte_end":46557,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46562,"byte_end":46589,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46594,"byte_end":46597,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46602,"byte_end":46641,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46646,"byte_end":46654,"line_start":122,"line_end":122,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46659,"byte_end":46666,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":48139,"byte_end":48143,"line_start":173,"line_end":173,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"async fn read<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a read lock.","sig":null,"attributes":[{"value":"/ Acquires a read lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47559,"byte_end":47584,"line_start":152,"line_end":152,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47589,"byte_end":47592,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47597,"byte_end":47653,"line_start":154,"line_end":154,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47658,"byte_end":47661,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that attempts to acquire a read lock will block if there are also concurrent attempts","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47666,"byte_end":47760,"line_start":156,"line_end":156,"column_start":5,"column_end":99}},{"value":"/ to acquire a write lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47765,"byte_end":47793,"line_start":157,"line_end":157,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47798,"byte_end":47801,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47806,"byte_end":47820,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47825,"byte_end":47828,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47833,"byte_end":47840,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47845,"byte_end":47889,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47894,"byte_end":47921,"line_start":163,"line_end":163,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47926,"byte_end":47929,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47934,"byte_end":47964,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47969,"byte_end":47972,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.read().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":47977,"byte_end":48012,"line_start":167,"line_end":167,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":48017,"byte_end":48044,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":48049,"byte_end":48052,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":48057,"byte_end":48096,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":48101,"byte_end":48109,"line_start":171,"line_end":171,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":48114,"byte_end":48121,"line_start":172,"line_end":172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50458,"byte_end":50477,"line_start":236,"line_end":236,"column_start":12,"column_end":31},"name":"try_upgradable_read","qualname":"<RwLock<T>>::try_upgradable_read","value":"fn try_upgradable_read<'_>(&'_ Self) -> Option<RwLockUpgradableReadGuard>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock with the possiblity to upgrade to a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock with the possiblity to upgrade to a write lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":49558,"byte_end":49641,"line_start":212,"line_end":212,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":49646,"byte_end":49649,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If a read lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":49654,"byte_end":49748,"line_start":214,"line_end":214,"column_start":5,"column_end":99}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":49753,"byte_end":49811,"line_start":215,"line_end":215,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":49816,"byte_end":49819,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Upgradable read lock reserves the right to be upgraded to a write lock, which means there","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":49824,"byte_end":49917,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ can be at most one upgradable read lock at a time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":49922,"byte_end":49976,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":49981,"byte_end":49984,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":49989,"byte_end":50003,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50008,"byte_end":50011,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50016,"byte_end":50023,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50028,"byte_end":50072,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50077,"byte_end":50133,"line_start":224,"line_end":224,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50138,"byte_end":50141,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50146,"byte_end":50176,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50181,"byte_end":50184,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50189,"byte_end":50235,"line_start":228,"line_end":228,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50240,"byte_end":50267,"line_start":229,"line_end":229,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(*lock.try_read().unwrap(), 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50272,"byte_end":50317,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50322,"byte_end":50325,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut writer = RwLockUpgradableReadGuard::upgrade(reader).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50330,"byte_end":50400,"line_start":232,"line_end":232,"column_start":5,"column_end":75}},{"value":"/ *writer = 2;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50405,"byte_end":50421,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50426,"byte_end":50434,"line_start":234,"line_end":234,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":50439,"byte_end":50446,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":52354,"byte_end":52369,"line_start":292,"line_end":292,"column_start":18,"column_end":33},"name":"upgradable_read","qualname":"<RwLock<T>>::upgradable_read","value":"async fn upgradable_read<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock with the possiblity to upgrade to a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock with the possiblity to upgrade to a write lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51370,"byte_end":51453,"line_start":266,"line_end":266,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51458,"byte_end":51461,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51466,"byte_end":51522,"line_start":268,"line_end":268,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51527,"byte_end":51530,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Upgradable read lock reserves the right to be upgraded to a write lock, which means there","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51535,"byte_end":51628,"line_start":270,"line_end":270,"column_start":5,"column_end":98}},{"value":"/ can be at most one upgradable read lock at a time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51633,"byte_end":51687,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51692,"byte_end":51695,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Note that attempts to acquire an upgradable read lock will block if there are concurrent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51700,"byte_end":51792,"line_start":273,"line_end":273,"column_start":5,"column_end":97}},{"value":"/ attempts to acquire another upgradable read lock or a write lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51797,"byte_end":51866,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51871,"byte_end":51874,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51879,"byte_end":51893,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51898,"byte_end":51901,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51906,"byte_end":51913,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51918,"byte_end":51962,"line_start":279,"line_end":279,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":51967,"byte_end":52023,"line_start":280,"line_end":280,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":52028,"byte_end":52031,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":52036,"byte_end":52066,"line_start":282,"line_end":282,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":52071,"byte_end":52074,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":52079,"byte_end":52125,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":52130,"byte_end":52157,"line_start":285,"line_end":285,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(*lock.try_read().unwrap(), 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":52162,"byte_end":52207,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":52212,"byte_end":52215,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let mut writer = RwLockUpgradableReadGuard::upgrade(reader).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":52220,"byte_end":52290,"line_start":288,"line_end":288,"column_start":5,"column_end":75}},{"value":"/ *writer = 2;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":52295,"byte_end":52311,"line_start":289,"line_end":289,"column_start":5,"column_end":21}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":52316,"byte_end":52324,"line_start":290,"line_end":290,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":52329,"byte_end":52336,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53795,"byte_end":53804,"line_start":340,"line_end":340,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"fn try_write<'_>(&'_ Self) -> Option<RwLockWriteGuard>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a write lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53241,"byte_end":53278,"line_start":322,"line_end":322,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53283,"byte_end":53286,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ If a write lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53291,"byte_end":53386,"line_start":324,"line_end":324,"column_start":5,"column_end":100}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53391,"byte_end":53449,"line_start":325,"line_end":325,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53454,"byte_end":53457,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53462,"byte_end":53476,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53481,"byte_end":53484,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53489,"byte_end":53496,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53501,"byte_end":53545,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53550,"byte_end":53577,"line_start":331,"line_end":331,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53582,"byte_end":53585,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53590,"byte_end":53620,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53625,"byte_end":53628,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_some());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53633,"byte_end":53673,"line_start":335,"line_end":335,"column_start":5,"column_end":45}},{"value":"/ let reader = lock.read().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53678,"byte_end":53713,"line_start":336,"line_end":336,"column_start":5,"column_end":40}},{"value":"/ assert!(lock.try_write().is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53718,"byte_end":53758,"line_start":337,"line_end":337,"column_start":5,"column_end":45}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53763,"byte_end":53771,"line_start":338,"line_end":338,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":53776,"byte_end":53783,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54732,"byte_end":54737,"line_start":375,"line_end":375,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"async fn write<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a write lock.","sig":null,"attributes":[{"value":"/ Acquires a write lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54330,"byte_end":54356,"line_start":359,"line_end":359,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54361,"byte_end":54364,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54369,"byte_end":54425,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54430,"byte_end":54433,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54438,"byte_end":54452,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54457,"byte_end":54460,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54465,"byte_end":54472,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54477,"byte_end":54521,"line_start":366,"line_end":366,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54526,"byte_end":54553,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54558,"byte_end":54561,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54566,"byte_end":54596,"line_start":369,"line_end":369,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54601,"byte_end":54604,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ let writer = lock.write().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54609,"byte_end":54645,"line_start":371,"line_end":371,"column_start":5,"column_end":41}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54650,"byte_end":54689,"line_start":372,"line_end":372,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54694,"byte_end":54702,"line_start":373,"line_end":373,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":54707,"byte_end":54714,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56122,"byte_end":56129,"line_start":418,"line_end":418,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":55625,"byte_end":55676,"line_start":401,"line_end":401,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":55681,"byte_end":55684,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking takes place. The mutable borrow","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":55689,"byte_end":55784,"line_start":403,"line_end":403,"column_start":5,"column_end":100}},{"value":"/ statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":55789,"byte_end":55830,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":55835,"byte_end":55838,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":55843,"byte_end":55857,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":55862,"byte_end":55865,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":55870,"byte_end":55877,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":55882,"byte_end":55926,"line_start":409,"line_end":409,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":55931,"byte_end":55958,"line_start":410,"line_end":410,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":55963,"byte_end":55966,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ let mut lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":55971,"byte_end":56005,"line_start":412,"line_end":412,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56010,"byte_end":56013,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ *lock.get_mut() = 2;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56018,"byte_end":56042,"line_start":414,"line_end":414,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(*lock.read().await, 2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56047,"byte_end":56085,"line_start":415,"line_end":415,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56090,"byte_end":56098,"line_start":416,"line_end":416,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56103,"byte_end":56110,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56267,"byte_end":56270,"line_start":424,"line_end":424,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLock<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56775,"byte_end":56779,"line_start":440,"line_end":440,"column_start":8,"column_end":12},"name":"from","qualname":"<RwLock<T> as std::convert::From>::from","value":"fn from(T) -> RwLock<T>","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56894,"byte_end":56901,"line_start":446,"line_end":446,"column_start":8,"column_end":15},"name":"default","qualname":"<RwLock<T> as std::default::Default>::default","value":"fn default() -> RwLock<T>","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57033,"byte_end":57048,"line_start":452,"line_end":452,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::rwlock::RwLockReadGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the read lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the read lock when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56968,"byte_end":57021,"line_start":451,"line_end":451,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57269,"byte_end":57273,"line_start":458,"line_end":458,"column_start":8,"column_end":12},"name":"drop","qualname":"<RwLockReadGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57637,"byte_end":57640,"line_start":468,"line_end":468,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLockReadGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57818,"byte_end":57821,"line_start":474,"line_end":474,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLockReadGuard as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57987,"byte_end":57992,"line_start":482,"line_end":482,"column_start":8,"column_end":13},"name":"deref","qualname":"<RwLockReadGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3491},"children":[],"decl_id":{"krate":2,"index":3493},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58133,"byte_end":58158,"line_start":488,"line_end":488,"column_start":12,"column_end":37},"name":"RwLockUpgradableReadGuard","qualname":"::rwlock::RwLockUpgradableReadGuard","value":"RwLockUpgradableReadGuard {  }","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444}],"decl_id":null,"docs":" A guard that releases the upgradable read lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the upgradable read lock when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58057,"byte_end":58121,"line_start":487,"line_end":487,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59343,"byte_end":59352,"line_start":527,"line_end":527,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockUpgradableReadGuard>::downgrade","value":"fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Downgrades into a regular reader guard.","sig":null,"attributes":[{"value":"/ Downgrades into a regular reader guard.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58771,"byte_end":58814,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58819,"byte_end":58822,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58827,"byte_end":58841,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58846,"byte_end":58849,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58854,"byte_end":58861,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58866,"byte_end":58910,"line_start":512,"line_end":512,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58915,"byte_end":58971,"line_start":513,"line_end":513,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58976,"byte_end":58979,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58984,"byte_end":59014,"line_start":515,"line_end":515,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59019,"byte_end":59022,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59027,"byte_end":59073,"line_start":517,"line_end":517,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59078,"byte_end":59105,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59110,"byte_end":59113,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_upgradable_read().is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59118,"byte_end":59168,"line_start":520,"line_end":520,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59173,"byte_end":59176,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ let reader = RwLockUpgradableReadGuard::downgrade(reader);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59181,"byte_end":59243,"line_start":522,"line_end":522,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59248,"byte_end":59251,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_upgradable_read().is_some());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59256,"byte_end":59306,"line_start":524,"line_end":524,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59311,"byte_end":59319,"line_start":525,"line_end":525,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59324,"byte_end":59331,"line_start":526,"line_end":526,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60305,"byte_end":60316,"line_start":556,"line_end":556,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<RwLockUpgradableReadGuard>::try_upgrade","value":"fn try_upgrade(Self) -> Result<RwLockWriteGuard, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade into a write lock.","sig":null,"attributes":[{"value":"/ Attempts to upgrade into a write lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59426,"byte_end":59468,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59473,"byte_end":59476,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ If a write lock could not be acquired at this time, then [`None`] is returned. Otherwise,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59481,"byte_end":59574,"line_start":533,"line_end":533,"column_start":5,"column_end":98}},{"value":"/ an upgraded guard is returned that releases the write lock when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59579,"byte_end":59655,"line_start":534,"line_end":534,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59660,"byte_end":59663,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This function can only fail if there are other active read locks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59668,"byte_end":59737,"line_start":536,"line_end":536,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59742,"byte_end":59745,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59750,"byte_end":59764,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59769,"byte_end":59772,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59777,"byte_end":59784,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59789,"byte_end":59833,"line_start":541,"line_end":541,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59838,"byte_end":59894,"line_start":542,"line_end":542,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59899,"byte_end":59902,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59907,"byte_end":59937,"line_start":544,"line_end":544,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59942,"byte_end":59945,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":59950,"byte_end":59996,"line_start":546,"line_end":546,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60001,"byte_end":60028,"line_start":547,"line_end":547,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60033,"byte_end":60036,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ let reader2 = lock.read().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60041,"byte_end":60077,"line_start":549,"line_end":549,"column_start":5,"column_end":41}},{"value":"/ let reader = RwLockUpgradableReadGuard::try_upgrade(reader).unwrap_err();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60082,"byte_end":60159,"line_start":550,"line_end":550,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60164,"byte_end":60167,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ drop(reader2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60172,"byte_end":60190,"line_start":552,"line_end":552,"column_start":5,"column_end":23}},{"value":"/ let writer = RwLockUpgradableReadGuard::try_upgrade(reader).unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60195,"byte_end":60268,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60273,"byte_end":60281,"line_start":554,"line_end":554,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60286,"byte_end":60293,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":61189,"byte_end":61196,"line_start":588,"line_end":588,"column_start":18,"column_end":25},"name":"upgrade","qualname":"<RwLockUpgradableReadGuard>::upgrade","value":"async fn upgrade(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Upgrades into a write lock.","sig":null,"attributes":[{"value":"/ Upgrades into a write lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60720,"byte_end":60751,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60756,"byte_end":60759,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60764,"byte_end":60778,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60783,"byte_end":60786,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60791,"byte_end":60798,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60803,"byte_end":60847,"line_start":576,"line_end":576,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60852,"byte_end":60908,"line_start":577,"line_end":577,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60913,"byte_end":60916,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60921,"byte_end":60951,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60956,"byte_end":60959,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":60964,"byte_end":61010,"line_start":581,"line_end":581,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":61015,"byte_end":61042,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":61047,"byte_end":61050,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ let mut writer = RwLockUpgradableReadGuard::upgrade(reader).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":61055,"byte_end":61125,"line_start":584,"line_end":584,"column_start":5,"column_end":75}},{"value":"/ *writer = 2;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":61130,"byte_end":61146,"line_start":585,"line_end":585,"column_start":5,"column_end":21}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":61151,"byte_end":61159,"line_start":586,"line_end":586,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":61164,"byte_end":61171,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":62200,"byte_end":62203,"line_start":616,"line_end":616,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLockUpgradableReadGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":62391,"byte_end":62394,"line_start":622,"line_end":622,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLockUpgradableReadGuard as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":62570,"byte_end":62575,"line_start":630,"line_end":630,"column_start":8,"column_end":13},"name":"deref","qualname":"<RwLockUpgradableReadGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3491},"children":[],"decl_id":{"krate":2,"index":3493},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63036,"byte_end":63052,"line_start":647,"line_end":647,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480}],"decl_id":null,"docs":" A guard that releases the write lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the write lock when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":62970,"byte_end":63024,"line_start":646,"line_end":646,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63880,"byte_end":63889,"line_start":677,"line_end":677,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Downgrades into a regular reader guard.","sig":null,"attributes":[{"value":"/ Downgrades into a regular reader guard.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63332,"byte_end":63375,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63380,"byte_end":63383,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63388,"byte_end":63402,"line_start":658,"line_end":658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63407,"byte_end":63410,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63415,"byte_end":63422,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63427,"byte_end":63471,"line_start":661,"line_end":661,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63476,"byte_end":63523,"line_start":662,"line_end":662,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63528,"byte_end":63531,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63536,"byte_end":63566,"line_start":664,"line_end":664,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63571,"byte_end":63574,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let mut writer = lock.write().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63579,"byte_end":63619,"line_start":666,"line_end":666,"column_start":5,"column_end":45}},{"value":"/ *writer += 1;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63624,"byte_end":63641,"line_start":667,"line_end":667,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63646,"byte_end":63649,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63654,"byte_end":63693,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63698,"byte_end":63701,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ let reader = RwLockWriteGuard::downgrade(writer);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63706,"byte_end":63759,"line_start":671,"line_end":671,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(*reader, 2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63764,"byte_end":63791,"line_start":672,"line_end":672,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63796,"byte_end":63799,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63804,"byte_end":63843,"line_start":674,"line_end":674,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63848,"byte_end":63856,"line_start":675,"line_end":675,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63861,"byte_end":63868,"line_start":676,"line_end":676,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":65138,"byte_end":65161,"line_start":718,"line_end":718,"column_start":12,"column_end":35},"name":"downgrade_to_upgradable","qualname":"<RwLockWriteGuard>::downgrade_to_upgradable","value":"fn downgrade_to_upgradable(Self) -> RwLockUpgradableReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Downgrades into an upgradable reader guard.","sig":null,"attributes":[{"value":"/ Downgrades into an upgradable reader guard.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64420,"byte_end":64467,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64472,"byte_end":64475,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64480,"byte_end":64494,"line_start":696,"line_end":696,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64499,"byte_end":64502,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64507,"byte_end":64514,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64519,"byte_end":64563,"line_start":699,"line_end":699,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64568,"byte_end":64642,"line_start":700,"line_end":700,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64647,"byte_end":64650,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64655,"byte_end":64685,"line_start":702,"line_end":702,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64690,"byte_end":64693,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ let mut writer = lock.write().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64698,"byte_end":64738,"line_start":704,"line_end":704,"column_start":5,"column_end":45}},{"value":"/ *writer += 1;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64743,"byte_end":64760,"line_start":705,"line_end":705,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64765,"byte_end":64768,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64773,"byte_end":64812,"line_start":707,"line_end":707,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64817,"byte_end":64820,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let reader = RwLockWriteGuard::downgrade_to_upgradable(writer);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64825,"byte_end":64892,"line_start":709,"line_end":709,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(*reader, 2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64897,"byte_end":64924,"line_start":710,"line_end":710,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64929,"byte_end":64932,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64937,"byte_end":64977,"line_start":712,"line_end":712,"column_start":5,"column_end":45}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":64982,"byte_end":65021,"line_start":713,"line_end":713,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":65026,"byte_end":65029,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ assert!(RwLockUpgradableReadGuard::try_upgrade(reader).is_ok())","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":65034,"byte_end":65101,"line_start":715,"line_end":715,"column_start":5,"column_end":72}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":65106,"byte_end":65114,"line_start":716,"line_end":716,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":65119,"byte_end":65126,"line_start":717,"line_end":717,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":65799,"byte_end":65802,"line_start":737,"line_end":737,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLockWriteGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":65981,"byte_end":65984,"line_start":743,"line_end":743,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLockWriteGuard as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":66151,"byte_end":66156,"line_start":751,"line_end":751,"column_start":8,"column_end":13},"name":"deref","qualname":"<RwLockWriteGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3491},"children":[],"decl_id":{"krate":2,"index":3493},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":66290,"byte_end":66299,"line_start":757,"line_end":757,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<RwLockWriteGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3504},"children":[],"decl_id":{"krate":2,"index":3505},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66597,"byte_end":66606,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":" A counter for limiting the number of concurrent operations.\n","sig":null,"attributes":[{"value":"/ A counter for limiting the number of concurrent operations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66505,"byte_end":66568,"line_start":7,"line_end":7,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66900,"byte_end":66903,"line_start":24,"line_end":24,"column_start":18,"column_end":21},"name":"new","qualname":"<Semaphore>::new","value":"const fn new(usize) -> Semaphore","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with a limit of `n` concurrent operations.","sig":null,"attributes":[{"value":"/ Creates a new semaphore with a limit of `n` concurrent operations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66675,"byte_end":66745,"line_start":15,"line_end":15,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66750,"byte_end":66753,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66758,"byte_end":66772,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66777,"byte_end":66780,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66785,"byte_end":66792,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66797,"byte_end":66827,"line_start":20,"line_end":20,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66832,"byte_end":66835,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let s = Semaphore::new(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66840,"byte_end":66870,"line_start":22,"line_end":22,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66875,"byte_end":66882,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67626,"byte_end":67637,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"fn try_acquire<'_>(&'_ Self) -> Option<SemaphoreGuard>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a permit for a concurrent operation.","sig":null,"attributes":[{"value":"/ Attempts to get a permit for a concurrent operation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67043,"byte_end":67099,"line_start":31,"line_end":31,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67104,"byte_end":67107,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ If the permit could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67112,"byte_end":67205,"line_start":33,"line_end":33,"column_start":5,"column_end":98}},{"value":"/ guard is returned that releases the mutex when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67210,"byte_end":67269,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67274,"byte_end":67277,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67282,"byte_end":67296,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67301,"byte_end":67304,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67309,"byte_end":67316,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67321,"byte_end":67351,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67356,"byte_end":67359,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let s = Semaphore::new(2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67364,"byte_end":67394,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67399,"byte_end":67402,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let g1 = s.try_acquire().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67407,"byte_end":67445,"line_start":43,"line_end":43,"column_start":5,"column_end":43}},{"value":"/ let g2 = s.try_acquire().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67450,"byte_end":67488,"line_start":44,"line_end":44,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67493,"byte_end":67496,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ assert!(s.try_acquire().is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67501,"byte_end":67540,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/ drop(g2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67545,"byte_end":67558,"line_start":47,"line_end":47,"column_start":5,"column_end":18}},{"value":"/ assert!(s.try_acquire().is_some());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67563,"byte_end":67602,"line_start":48,"line_end":48,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":67607,"byte_end":67614,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68521,"byte_end":68528,"line_start":83,"line_end":83,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"async fn acquire<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for a permit for a concurrent operation.","sig":null,"attributes":[{"value":"/ Waits for a permit for a concurrent operation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68143,"byte_end":68193,"line_start":69,"line_end":69,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68198,"byte_end":68201,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the permit when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68206,"byte_end":68264,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68269,"byte_end":68272,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68277,"byte_end":68291,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68296,"byte_end":68299,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68304,"byte_end":68311,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68316,"byte_end":68360,"line_start":76,"line_end":76,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68365,"byte_end":68395,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68400,"byte_end":68403,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let s = Semaphore::new(2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68408,"byte_end":68438,"line_start":79,"line_end":79,"column_start":5,"column_end":35}},{"value":"/ let guard = s.acquire().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68443,"byte_end":68477,"line_start":80,"line_end":80,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68482,"byte_end":68491,"line_start":81,"line_end":81,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68496,"byte_end":68503,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69547,"byte_end":69562,"line_start":120,"line_end":120,"column_start":12,"column_end":27},"name":"try_acquire_arc","qualname":"<Semaphore>::try_acquire_arc","value":"fn try_acquire_arc<'_>(&'_ Arc<Self>) -> Option<SemaphoreGuardArc>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get an owned permit for a concurrent operation.","sig":null,"attributes":[{"value":"/ Attempts to get an owned permit for a concurrent operation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68896,"byte_end":68959,"line_start":100,"line_end":100,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68964,"byte_end":68967,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ If the permit could not be acquired at this time, then [`None`] is returned. Otherwise, an","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68972,"byte_end":69066,"line_start":102,"line_end":102,"column_start":5,"column_end":99}},{"value":"/ owned guard is returned that releases the mutex when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69071,"byte_end":69136,"line_start":103,"line_end":103,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69141,"byte_end":69144,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69149,"byte_end":69163,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69168,"byte_end":69171,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69176,"byte_end":69183,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69188,"byte_end":69218,"line_start":108,"line_end":108,"column_start":5,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69223,"byte_end":69246,"line_start":109,"line_end":109,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69251,"byte_end":69254,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let s = Arc::new(Semaphore::new(2));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69259,"byte_end":69299,"line_start":111,"line_end":111,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69304,"byte_end":69307,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let g1 = s.try_acquire_arc().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69312,"byte_end":69354,"line_start":113,"line_end":113,"column_start":5,"column_end":47}},{"value":"/ let g2 = s.try_acquire_arc().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69359,"byte_end":69401,"line_start":114,"line_end":114,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69406,"byte_end":69409,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ assert!(s.try_acquire_arc().is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69414,"byte_end":69457,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/ drop(g2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69462,"byte_end":69475,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/ assert!(s.try_acquire_arc().is_some());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69480,"byte_end":69523,"line_start":118,"line_end":118,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":69528,"byte_end":69535,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70897,"byte_end":70908,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"acquire_arc","qualname":"<Semaphore>::acquire_arc","value":"fn acquire_arc<'_>(&'_ Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for an owned permit for a concurrent operation.","sig":null,"attributes":[{"value":"/ Waits for an owned permit for a concurrent operation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70476,"byte_end":70533,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70538,"byte_end":70541,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the permit when dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70546,"byte_end":70604,"line_start":156,"line_end":156,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70609,"byte_end":70612,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70617,"byte_end":70631,"line_start":158,"line_end":158,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70636,"byte_end":70639,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70644,"byte_end":70651,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70656,"byte_end":70700,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70705,"byte_end":70735,"line_start":162,"line_end":162,"column_start":5,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70740,"byte_end":70763,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70768,"byte_end":70771,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let s = Arc::new(Semaphore::new(2));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70776,"byte_end":70816,"line_start":165,"line_end":165,"column_start":5,"column_end":45}},{"value":"/ let guard = s.acquire_arc().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70821,"byte_end":70859,"line_start":166,"line_end":166,"column_start":5,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70864,"byte_end":70873,"line_start":167,"line_end":167,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":70878,"byte_end":70885,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":71096,"byte_end":71110,"line_start":176,"line_end":176,"column_start":12,"column_end":26},"name":"SemaphoreGuard","qualname":"::semaphore::SemaphoreGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the acquired permit.\n","sig":null,"attributes":[{"value":"/ A guard that releases the acquired permit.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":71021,"byte_end":71067,"line_start":174,"line_end":174,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":71174,"byte_end":71178,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"drop","qualname":"<SemaphoreGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":71368,"byte_end":71385,"line_start":187,"line_end":187,"column_start":12,"column_end":29},"name":"SemaphoreGuardArc","qualname":"::semaphore::SemaphoreGuardArc","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owned guard that releases the acquired permit.\n","sig":null,"attributes":[{"value":"/ An owned guard that releases the acquired permit.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":71286,"byte_end":71339,"line_start":185,"line_end":185,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":71445,"byte_end":71449,"line_start":190,"line_end":190,"column_start":8,"column_end":12},"name":"drop","qualname":"<SemaphoreGuardArc as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1090,"byte_end":1097,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3869,"byte_end":3886,"line_start":114,"line_end":114,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5842,"byte_end":5847,"line_start":53,"line_end":53,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5893,"byte_end":5898,"line_start":54,"line_end":54,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5914,"byte_end":5919,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6615,"byte_end":6620,"line_start":89,"line_end":89,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11866,"byte_end":11871,"line_start":267,"line_end":267,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13574,"byte_end":13579,"line_start":328,"line_end":328,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13699,"byte_end":13705,"line_start":331,"line_end":331,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14077,"byte_end":14082,"line_start":344,"line_end":344,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14193,"byte_end":14198,"line_start":350,"line_end":350,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14425,"byte_end":14435,"line_start":359,"line_end":359,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14485,"byte_end":14495,"line_start":360,"line_end":360,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14527,"byte_end":14537,"line_start":362,"line_end":362,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15015,"byte_end":15025,"line_start":381,"line_end":381,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15270,"byte_end":15280,"line_start":389,"line_end":389,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15446,"byte_end":15456,"line_start":395,"line_end":395,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15588,"byte_end":15598,"line_start":401,"line_end":401,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15735,"byte_end":15745,"line_start":409,"line_end":409,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15996,"byte_end":16009,"line_start":418,"line_end":418,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16055,"byte_end":16068,"line_start":419,"line_end":419,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16092,"byte_end":16105,"line_start":421,"line_end":421,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16629,"byte_end":16642,"line_start":441,"line_end":441,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16883,"byte_end":16896,"line_start":449,"line_end":449,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":17058,"byte_end":17071,"line_start":455,"line_end":455,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":17199,"byte_end":17212,"line_start":461,"line_end":461,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":17345,"byte_end":17358,"line_start":469,"line_end":469,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":17546,"byte_end":17556,"line_start":478,"line_end":478,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":18289,"byte_end":18294,"line_start":26,"line_end":26,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20220,"byte_end":20228,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20272,"byte_end":20280,"line_start":100,"line_end":100,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20296,"byte_end":20304,"line_start":102,"line_end":102,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":262},{"krate":0,"index":266},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39192,"byte_end":39197,"line_start":669,"line_end":669,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40227,"byte_end":40235,"line_start":707,"line_end":707,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40812,"byte_end":40820,"line_start":728,"line_end":728,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40979,"byte_end":40984,"line_start":732,"line_end":732,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":41661,"byte_end":41669,"line_start":750,"line_end":750,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":43033,"byte_end":43041,"line_start":792,"line_end":792,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":43291,"byte_end":43302,"line_start":802,"line_end":802,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45260,"byte_end":45266,"line_start":66,"line_end":66,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45319,"byte_end":45325,"line_start":67,"line_end":67,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45341,"byte_end":45347,"line_start":69,"line_end":69,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46116,"byte_end":46122,"line_start":104,"line_end":104,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56248,"byte_end":56254,"line_start":423,"line_end":423,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56374,"byte_end":56380,"line_start":426,"line_end":426,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56756,"byte_end":56762,"line_start":439,"line_end":439,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56875,"byte_end":56881,"line_start":445,"line_end":445,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57120,"byte_end":57135,"line_start":454,"line_end":454,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57185,"byte_end":57200,"line_start":455,"line_end":455,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57237,"byte_end":57252,"line_start":457,"line_end":457,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57605,"byte_end":57620,"line_start":467,"line_end":467,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57786,"byte_end":57801,"line_start":473,"line_end":473,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57933,"byte_end":57948,"line_start":479,"line_end":479,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58295,"byte_end":58320,"line_start":493,"line_end":493,"column_start":47,"column_end":72},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58370,"byte_end":58395,"line_start":494,"line_end":494,"column_start":40,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58427,"byte_end":58452,"line_start":496,"line_end":496,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":62158,"byte_end":62183,"line_start":615,"line_end":615,"column_start":45,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":62349,"byte_end":62374,"line_start":621,"line_end":621,"column_start":49,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":62506,"byte_end":62531,"line_start":627,"line_end":627,"column_start":27,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":62733,"byte_end":62754,"line_start":637,"line_end":637,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63188,"byte_end":63204,"line_start":652,"line_end":652,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63254,"byte_end":63270,"line_start":653,"line_end":653,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63302,"byte_end":63318,"line_start":655,"line_end":655,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":65766,"byte_end":65782,"line_start":736,"line_end":736,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":65948,"byte_end":65964,"line_start":742,"line_end":742,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":66096,"byte_end":66112,"line_start":748,"line_end":748,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":66257,"byte_end":66273,"line_start":756,"line_end":756,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66659,"byte_end":66668,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68880,"byte_end":68889,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":71146,"byte_end":71160,"line_start":178,"line_end":178,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":71418,"byte_end":71435,"line_start":189,"line_end":189,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":1090,"byte_end":1097,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\barrier.rs","byte_start":3869,"byte_end":3886,"line_start":114,"line_end":114,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5842,"byte_end":5847,"line_start":53,"line_end":53,"column_start":40,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":3268}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5893,"byte_end":5898,"line_start":54,"line_end":54,"column_start":40,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":3280}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":5914,"byte_end":5919,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":6615,"byte_end":6620,"line_start":89,"line_end":89,"column_start":17,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":11866,"byte_end":11871,"line_start":267,"line_end":267,"column_start":17,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13574,"byte_end":13579,"line_start":328,"line_end":328,"column_start":45,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":13699,"byte_end":13705,"line_start":331,"line_end":331,"column_start":29,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14077,"byte_end":14082,"line_start":344,"line_end":344,"column_start":21,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14193,"byte_end":14198,"line_start":350,"line_end":350,"column_start":39,"column_end":44},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14425,"byte_end":14435,"line_start":359,"line_end":359,"column_start":40,"column_end":50},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":108},"to":{"krate":2,"index":3268}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14485,"byte_end":14495,"line_start":360,"line_end":360,"column_start":40,"column_end":50},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":108},"to":{"krate":2,"index":3280}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":14527,"byte_end":14537,"line_start":362,"line_end":362,"column_start":21,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15015,"byte_end":15025,"line_start":381,"line_end":381,"column_start":26,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":108},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15270,"byte_end":15280,"line_start":389,"line_end":389,"column_start":45,"column_end":55},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":108},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15446,"byte_end":15456,"line_start":395,"line_end":395,"column_start":49,"column_end":59},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":108},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15588,"byte_end":15598,"line_start":401,"line_end":401,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":108},"to":{"krate":2,"index":3491}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15735,"byte_end":15745,"line_start":409,"line_end":409,"column_start":30,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":108},"to":{"krate":2,"index":3504}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":15996,"byte_end":16009,"line_start":418,"line_end":418,"column_start":40,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":3268}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16055,"byte_end":16068,"line_start":419,"line_end":419,"column_start":40,"column_end":53},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":3280}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16092,"byte_end":16105,"line_start":421,"line_end":421,"column_start":17,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16629,"byte_end":16642,"line_start":441,"line_end":441,"column_start":26,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":16883,"byte_end":16896,"line_start":449,"line_end":449,"column_start":45,"column_end":58},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":17058,"byte_end":17071,"line_start":455,"line_end":455,"column_start":49,"column_end":62},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":17199,"byte_end":17212,"line_start":461,"line_end":461,"column_start":27,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":3491}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":17345,"byte_end":17358,"line_start":469,"line_end":469,"column_start":30,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":3504}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\mutex.rs","byte_start":17546,"byte_end":17556,"line_start":478,"line_end":478,"column_start":24,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":18289,"byte_end":18294,"line_start":26,"line_end":26,"column_start":22,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20220,"byte_end":20228,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":3268}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20272,"byte_end":20280,"line_start":100,"line_end":100,"column_start":38,"column_end":46},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":3280}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":20296,"byte_end":20304,"line_start":102,"line_end":102,"column_start":9,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":39192,"byte_end":39197,"line_start":669,"line_end":669,"column_start":30,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40227,"byte_end":40235,"line_start":707,"line_end":707,"column_start":21,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40812,"byte_end":40820,"line_start":728,"line_end":728,"column_start":36,"column_end":44},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":40979,"byte_end":40984,"line_start":732,"line_end":732,"column_start":44,"column_end":49},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":41661,"byte_end":41669,"line_start":750,"line_end":750,"column_start":18,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":43033,"byte_end":43041,"line_start":792,"line_end":792,"column_start":19,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":328},"to":{"krate":0,"index":326}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\once_cell.rs","byte_start":43291,"byte_end":43302,"line_start":802,"line_end":802,"column_start":19,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":332},"to":{"krate":0,"index":326}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45260,"byte_end":45266,"line_start":66,"line_end":66,"column_start":40,"column_end":46},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":3268}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45319,"byte_end":45325,"line_start":67,"line_end":67,"column_start":47,"column_end":53},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":3280}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":45341,"byte_end":45347,"line_start":69,"line_end":69,"column_start":9,"column_end":15},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":46116,"byte_end":46122,"line_start":104,"line_end":104,"column_start":17,"column_end":23},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56248,"byte_end":56254,"line_start":423,"line_end":423,"column_start":45,"column_end":51},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56374,"byte_end":56380,"line_start":426,"line_end":426,"column_start":29,"column_end":35},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56756,"byte_end":56762,"line_start":439,"line_end":439,"column_start":21,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":56875,"byte_end":56881,"line_start":445,"line_end":445,"column_start":39,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57120,"byte_end":57135,"line_start":454,"line_end":454,"column_start":40,"column_end":55},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":3268}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57185,"byte_end":57200,"line_start":455,"line_end":455,"column_start":40,"column_end":55},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":3280}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57237,"byte_end":57252,"line_start":457,"line_end":457,"column_start":26,"column_end":41},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57605,"byte_end":57620,"line_start":467,"line_end":467,"column_start":45,"column_end":60},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57786,"byte_end":57801,"line_start":473,"line_end":473,"column_start":49,"column_end":64},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":57933,"byte_end":57948,"line_start":479,"line_end":479,"column_start":27,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":3491}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58295,"byte_end":58320,"line_start":493,"line_end":493,"column_start":47,"column_end":72},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":3268}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58370,"byte_end":58395,"line_start":494,"line_end":494,"column_start":40,"column_end":65},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":3280}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":58427,"byte_end":58452,"line_start":496,"line_end":496,"column_start":21,"column_end":46},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":62158,"byte_end":62183,"line_start":615,"line_end":615,"column_start":45,"column_end":70},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":62349,"byte_end":62374,"line_start":621,"line_end":621,"column_start":49,"column_end":74},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":62506,"byte_end":62531,"line_start":627,"line_end":627,"column_start":27,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":3491}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":62733,"byte_end":62754,"line_start":637,"line_end":637,"column_start":26,"column_end":47},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63188,"byte_end":63204,"line_start":652,"line_end":652,"column_start":40,"column_end":56},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":3268}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63254,"byte_end":63270,"line_start":653,"line_end":653,"column_start":40,"column_end":56},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":3280}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":63302,"byte_end":63318,"line_start":655,"line_end":655,"column_start":21,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":65766,"byte_end":65782,"line_start":736,"line_end":736,"column_start":45,"column_end":61},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":65948,"byte_end":65964,"line_start":742,"line_end":742,"column_start":49,"column_end":65},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":66096,"byte_end":66112,"line_start":748,"line_end":748,"column_start":27,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":3491}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\rwlock.rs","byte_start":66257,"byte_end":66273,"line_start":756,"line_end":756,"column_start":30,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":3504}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":66659,"byte_end":66668,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":68880,"byte_end":68889,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":71146,"byte_end":71160,"line_start":178,"line_end":178,"column_start":15,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-lock-2.6.0\\src\\semaphore.rs","byte_start":71418,"byte_end":71435,"line_start":189,"line_end":189,"column_start":15,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":3515}}]}