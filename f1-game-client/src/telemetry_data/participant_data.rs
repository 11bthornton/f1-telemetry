use crate::telemetry_data::packet_header::PacketHeader;
use serde::{Deserialize, Serialize};
use std::str;

#[allow(unused_attributes)]
#[macro_use]
use serde_big_array::BigArray;

#[derive(Deserialize, Debug, Serialize, Copy, Clone)]
pub struct ParticipantData {
    pub ai_controlled: u8,
    pub driver_id: Driver,
    pub network_id: u8,
    pub team_id: Team,
    pub my_team: bool,
    pub race_number: u8,
    pub nationality: Nationality,

    #[serde(with = "BigArray")]
    pub name: [u8; 48],

    pub telemetry: bool,
    pub online_name: bool,
    pub platform: lobby_info::Platform,
}

#[derive(Deserialize_repr, Debug, Serialize_repr, Copy, Clone)]
#[repr(u8)]
pub enum Driver {
    Moron = 255,
    CarlosSainz = 0,
    DaniilKvyat = 1,
    DanielRicciardo = 2,
    FernandoAlonso = 3,
    FelipeMassa = 4,
    KimiRaikkonen = 6,
    LewisHamilton = 7,
    MaxVerstappen = 9,
    NicoHulkenburg = 10,
    KevinMagnussen = 11,
    RomainGrosjean = 12,
    SebastianVettel = 13,
    SergioPerez = 14,
    ValtteriBottas = 15,
    EstebanOcon = 17,
    LanceStroll = 19,
    ArronBarnes = 20,
    MartinGiles = 21,
    AlexMurray = 22,
    LucasRoth = 23,
    IgorCorreia = 24,
    SophieLevasseur = 25,
    JonasSchiffer = 26,
    AlainForest = 27,
    JayLetourneau = 28,
    EstoSaari = 29,
    YasarAtiyeh = 30,
    CallistoCalabresi = 31,
    NaotaIzum = 32,
    HowardClarke = 33,
    WilheimKaufmann = 34,
    MarieLaursen = 35,
    FlavioNieves = 36,
    PeterBelousov = 37,
    KlimekMichalski = 38,
    SantiagoMoreno = 39,
    BenjaminCoppens = 40,
    NoahVisser = 41,
    GertWaldmuller = 42,
    JulianQuesada = 43,
    DanielJones = 44,
    ArtemMarkelov = 45,
    TadasukeMakino = 46,
    SeanGelael = 47,
    NyckDeVries = 48,
    JackAitken = 49,
    GeorgeRussell = 50,
    MaximilianGunther = 51,
    NireiFukuzumi = 52,
    LucaGhiotto = 53,
    LandoNorris = 54,
    SergioSetteCamara = 55,
    LouisDeletraz = 56,
    AntonioFuoco = 57,
    CharlesLeclerc = 58,
    PierreGasly = 59,
    AlexanderAlbon = 62,
    NicholasLatifi = 63,
    DorianBoccolacci = 64,
    NikoKari = 65,
    RobertoMerhi = 66,
    ArjunMaini = 67,
    AlessioLorandi = 68,
    RubenMeijer = 69,
    RashidNair = 70,
    JackTremblay = 71,
    DevonButler = 72,
    LukasWeber = 73,
    AntonioGiovinazzi = 74,
    RobertKubica = 75,
    AlainProst = 76,
    AyrtonSenna = 77,
    NobuharuMatsushita = 78,
    NikitaMazepin = 79,
    GuanyaZhou = 80,
    MickSchumacher = 81,
    CallumIlott = 82,
    JuanManuelCorrea = 83,
    JordanKing = 84,
    MahaveerRaghunathan = 85,
    TatianaCalderon = 86,
    AnthoineHubert = 87,
    GuilianoAlesi = 88,
    RalphBoschung = 89,
    MichaelSchumacher = 90,
    DanTicktum = 91,
    MarcusArmstrong = 92,
    ChristianLundgaard = 93,
    YukiTsunoda = 94,
    JehanDaruvala = 95,
    GulhermeSamaia = 96,
    PedroPiquet = 97,
    FelipeDrugovich = 98,
    RobertSchwartzman = 99,
    RoyNissany = 100,
    MarinoSato = 101,
    AidanJackson = 102,
    CasperAkkerman = 103,
    JensonButton = 109,
    DavidCoulthard = 110,
    NicoRosberg = 111,
    OscarPiastri = 112,
    LiamLawson = 113,
    JuriVips = 114,
    TheoPourchaire = 115,
    RichardVerschoor = 116,
    LirimZendeli = 117,
    DavidBeckmann = 118,
    AlessioDeledda = 121,
    BentViscaal = 122,
    EnzoFittipaldi = 123,
    MarkWebber = 125,
    JacquesVilleneuve = 126,
    CallieMayer = 127,
    NoahBell = 128,
    JakeHughes = 129,
    FrederikVesti = 130,
    OlliCaldwell = 131,
    LoganSargeant = 132,
    CemBolukbasi = 133,
    AyumuIwasa = 134,
    ClementNovalak = 135,
    JackDoohan = 136,
    AmauryCordeel = 137,
    DennisHauger = 138,
    CalanWilliams = 139,
    JamieChadwick = 140,
    KamuiKobayashi = 141,
    PastorMaldonado = 142,
    MikaHakkinen = 143,
    NigelMansell = 144,
}

use serde_repr::{Deserialize_repr, Serialize_repr};

use super::lobby_info;

#[derive(Serialize_repr, Deserialize_repr, Debug, Copy, Clone)]
#[repr(u8)]
pub enum Nationality {
    Default,
    American,
    Argentinean,
    Australian,
    Austrian,
    Azerbaijani,
    Bahraini,
    Belgian,
    Bolivian,
    Brazilian,
    British,
    Bulgarian,
    Cameroonian,
    Canadian,
    Chilean,
    Chinese,
    Colombian,
    CostaRican,
    Croatian,
    Cypriot,
    Czech,
    Danish,
    Dutch,
    Ecuadorian,
    English,
    Emirian,
    Estonian,
    Finnish,
    French,
    German,
    Ghanaian,
    Greek,
    Guatemalan,
    Honduran,
    HongKonger,
    Hungarian,
    Icelander,
    Indian,
    Indonesian,
    Irish,
    Israeli,
    Italian,
    Jamaican,
    Japanese,
    Jordanian,
    Kuwaiti,
    Latvian,
    Lebanese,
    Lithuanian,
    Luxembourger,
    Malaysian,
    Maltese,
    Mexican,
    Monegasque,
    NewZealander,
    Nicaraguan,
    NorthernIrish,
    Norwegian,
    Omani,
    Pakistani,
    Panamanian,
    Paraguayan,
    Peruvian,
    Polish,
    Portuguese,
    Qatari,
    Romanian,
    Russian,
    Salvadoran,
    Saudi,
    Scottish,
    Serbian,
    Singaporean,
    Slovakian,
    Slovenian,
    SouthKorean,
    SouthAfrican,
    Spanish,
    Swedish,
    Swiss,
    Thai,
    Turkish,
    Uruguayan,
    Ukrainian,
    Venezuelan,
    Barbadian,
    Welsh,
    Vietnamese,
    None = 255,
}

#[derive(Serialize_repr, Deserialize_repr, Debug, Copy, Clone)]
#[repr(u8)]
pub enum Team {
    Mercedes = 0,
    Ferrari = 1,
    RedBullRacing = 2,
    Williams = 3,
    AstonMartin = 4,
    Alpine = 5,
    AlphaTauri = 6,
    Haas = 7,
    McLaren = 8,
    AlfaRomeo = 9,
    Mercedes2020 = 85,
    Ferrari2020 = 86,
    RedBull2020 = 87,
    Williams2020 = 88,
    RacingPoint2020 = 89,
    Renault2020 = 90,
    AlphaTauri2020 = 91,
    Haas2020 = 92,
    McLaren2020 = 93,
    AlfaRomeo2020 = 94,
    AstonMartinDB11V12 = 95,
    AstonMartinVantageF1Edition = 96,
    AstonMartinVantageSafetyCar = 97,
    FerrariF8Tributo = 98,
    FerrariRoma = 99,
    McLaren720S = 100,
    McLarenArtura = 101,
    MercedesAMGGTBlackSeriesSafetyCar = 102,
    MercedesAMGGTRPro = 103,
    F1CustomTeam = 104,
    Prema21 = 106,
    UniVirtuosi21 = 107,
    Carlin21 = 108,
    Hitech21 = 109,
    ArtGP21 = 110,
    MPMotorsport21 = 111,
    Charouz21 = 112,
    Dams21 = 113,
    Campos21 = 114,
    BWT21 = 115,
    Trident21 = 116,
    MercedesAMGGTBlackSeries = 117,
    Mercedes22 = 118,
    Ferrari22 = 119,
    RedBullRacing22 = 120,
    Williams22 = 121,
    AstonMartin22 = 122,
    Alpine22 = 123,
    AlphaTauri22 = 124,
    Haas22 = 125,
    McLaren22 = 126,
    AlfaRomeo22 = 127,
    Konnersport22 = 128,
    Konnersport = 129,
    Prema22 = 130,
    Virtuosi22 = 131,
    Carlin22 = 132,
    MPMotorsport22 = 133,
    Charouz22 = 134,
    Dams22 = 135,
    Campos22 = 136,
    VanAmersfoortRacing22 = 137,
    Trident22 = 138,
    Hitech22 = 139,
    ArtGP22 = 140,
    None = 255,
}

#[derive(Deserialize, Debug, Serialize, Copy, Clone)]
pub struct PacketParticipantData {
    pub header: PacketHeader,
    pub num_active_cars: u8,
    pub participants: [ParticipantData; 22],
}

impl ParticipantData {
    #[allow(dead_code)]
    pub fn name(&self) -> String {
        let name = str::from_utf8(&self.name).unwrap();

        name.to_string()
    }

    pub fn team_colour(&self) -> (u8, u8, u8) {
        match &self.team_id {
            Team::Mercedes => (108, 211, 191),
            Team::Ferrari => (249, 21, 54),
            Team::McLaren => (245, 128, 32),
            Team::RedBullRacing => (54, 113, 198),
            Team::Alpine => (34, 147, 209),
            Team::AlphaTauri => (94, 143, 170),
            Team::AstonMartin => (53, 140, 117),
            Team::Williams => (55, 190, 221),
            Team::AlfaRomeo => (201, 45, 75),
            Team::Haas => (182, 186, 189),
            // 1 => (220, 0, 0),
            // 2 => (6, 0, 239),
            // 3 => (0, 90, 255),
            // 4 => (0, 111, 98),
            // 5 => (0, 144, 255),
            // 6 => (43, 69, 98),
            // 7 => (255, 255, 255),
            // 8 => (255, 235, 0),
            // 9 => (144, 0, 0),
            _ => (0, 0, 0),
        }
    }
}
