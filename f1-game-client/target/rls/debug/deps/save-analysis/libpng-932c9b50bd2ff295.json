{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7","program":"C:\\Users\\Ben\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","png","--edition=2018","C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=932c9b50bd2ff295","-C","extra-filename=-932c9b50bd2ff295","--out-dir","c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps","--extern","bitflags=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libbitflags-2782c434d426d8e6.rmeta","--extern","crc32fast=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libcrc32fast-2932e356cf16f57f.rmeta","--extern","flate2=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libflate2-184e0bf0cf2799fd.rmeta","--extern","miniz_oxide=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libminiz_oxide-3d49e340dfab0f5b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ben\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libpng-932c9b50bd2ff295.rmeta"},"prelude":{"crate_id":{"name":"png","disambiguator":[15060692395648810683,0]},"crate_root":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src","external_crates":[{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10288641326355699271,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","num":2,"id":{"name":"core","disambiguator":[5178777620647193466,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7203661724729889941,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17525700935344431946,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14114419768508526436,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[7430704726206783492,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12664251144516306473,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5349691386245612169,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7588176879124425336,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12802573245210436658,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[15058356585373963657,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11406058276128544710,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[12054102872615165506,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15575797803660711391,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[2170788131994516450,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","num":16,"id":{"name":"bitflags","disambiguator":[16296419251187714830,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","num":17,"id":{"name":"crc32fast","disambiguator":[14420963381754395763,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","num":18,"id":{"name":"cfg_if","disambiguator":[7872221195650628815,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","num":19,"id":{"name":"miniz_oxide","disambiguator":[3447107439928363180,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","num":20,"id":{"name":"adler","disambiguator":[16647164027692654332,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","num":21,"id":{"name":"flate2","disambiguator":[12859612557728695836,0]}}],"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":0,"byte_end":2923,"line_start":1,"line_end":81,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":33498,"byte_end":33505,"line_start":5,"line_end":5,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoded","value":"","parent":{"krate":0,"index":160}},{"kind":"Use","ref_id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":33507,"byte_end":33520,"line_start":5,"line_end":5,"column_start":33,"column_end":46},"alias_span":null,"name":"DecodingError","value":"","parent":{"krate":0,"index":160}},{"kind":"Use","ref_id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":33522,"byte_end":33538,"line_start":5,"line_end":5,"column_start":48,"column_end":64},"alias_span":null,"name":"StreamingDecoder","value":"","parent":{"krate":0,"index":160}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2717,"byte_end":2718,"line_start":77,"line_end":77,"column_start":13,"column_end":14},"alias_span":null,"name":"*","value":"ScaledFloat, SourceChromaticities, SrgbRenderingIntent","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2734,"byte_end":2741,"line_start":78,"line_end":78,"column_start":15,"column_end":22},"alias_span":null,"name":"Decoded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2743,"byte_end":2750,"line_start":78,"line_end":78,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2752,"byte_end":2765,"line_start":78,"line_end":78,"column_start":33,"column_end":46},"alias_span":null,"name":"DecodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2767,"byte_end":2773,"line_start":78,"line_end":78,"column_start":48,"column_end":54},"alias_span":null,"name":"Limits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2775,"byte_end":2785,"line_start":78,"line_end":78,"column_start":56,"column_end":66},"alias_span":null,"name":"OutputInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2787,"byte_end":2793,"line_start":78,"line_end":78,"column_start":68,"column_end":74},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2795,"byte_end":2811,"line_start":78,"line_end":78,"column_start":76,"column_end":92},"alias_span":null,"name":"StreamingDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2828,"byte_end":2835,"line_start":79,"line_end":79,"column_start":15,"column_end":22},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2837,"byte_end":2850,"line_start":79,"line_end":79,"column_start":24,"column_end":37},"alias_span":null,"name":"EncodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2852,"byte_end":2864,"line_start":79,"line_end":79,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2866,"byte_end":2872,"line_start":79,"line_end":79,"column_start":53,"column_end":59},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1850},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2888,"byte_end":2906,"line_start":80,"line_end":80,"column_start":14,"column_end":32},"alias_span":null,"name":"AdaptiveFilterType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2908,"byte_end":2918,"line_start":80,"line_end":80,"column_start":34,"column_end":44},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":0,"byte_end":2923,"line_start":1,"line_end":81,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":38},{"krate":0,"index":160},{"krate":0,"index":550},{"krate":0,"index":882},{"krate":0,"index":903},{"krate":0,"index":913},{"krate":0,"index":1007},{"krate":0,"index":1019},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1088}],"decl_id":null,"docs":" # PNG encoder and decoder","sig":null,"attributes":[{"value":"/ # PNG encoder and decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":0,"byte_end":29,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":30,"byte_end":33,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate contains a PNG encoder and decoder. It supports reading of single lines or whole frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":34,"byte_end":137,"line_start":3,"line_end":3,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":138,"byte_end":141,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ## The decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":142,"byte_end":160,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":161,"byte_end":164,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The most important types for decoding purposes are [`Decoder`](struct.Decoder.html) and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":165,"byte_end":256,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ [`Reader`](struct.Reader.html). They both wrap a `std::io::Read`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":257,"byte_end":326,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `Decoder` serves as a builder for `Reader`. Calling `Decoder::read_info` reads from the `Read` until the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":327,"byte_end":435,"line_start":9,"line_end":9,"column_start":1,"column_end":109}},{"value":"/ image data is reached.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":436,"byte_end":462,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":463,"byte_end":466,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ### Using the decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":467,"byte_end":492,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":493,"byte_end":500,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":501,"byte_end":523,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ // The decoder is a build for reader and can be used to set various decoding options","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":524,"byte_end":612,"line_start":15,"line_end":15,"column_start":1,"column_end":89}},{"value":"/ // via `Transformations`. The default output transformation is `Transformations::IDENTITY`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":613,"byte_end":708,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/ let decoder = png::Decoder::new(File::open(\"tests/pngsuite/basi0g01.png\").unwrap());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":709,"byte_end":797,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ let mut reader = decoder.read_info().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":798,"byte_end":848,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ // Allocate the output buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":849,"byte_end":883,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ let mut buf = vec![0; reader.output_buffer_size()];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":884,"byte_end":939,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ // Read the next frame. An APNG might contain multiple frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":940,"byte_end":1006,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ let info = reader.next_frame(&mut buf).unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1007,"byte_end":1059,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ // Grab the bytes of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1060,"byte_end":1095,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ let bytes = &buf[..info.buffer_size()];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1096,"byte_end":1139,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ // Inspect more details of the last read frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1140,"byte_end":1191,"line_start":25,"line_end":25,"column_start":1,"column_end":52}},{"value":"/ let in_animation = reader.info().frame_control.is_some();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1192,"byte_end":1253,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1254,"byte_end":1261,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1262,"byte_end":1265,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Encoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1266,"byte_end":1280,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ ### Using the encoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1281,"byte_end":1306,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1307,"byte_end":1310,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1311,"byte_end":1324,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ // For reading and opening files","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1325,"byte_end":1361,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ use std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1362,"byte_end":1386,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1387,"byte_end":1409,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufWriter;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1410,"byte_end":1437,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1438,"byte_end":1441,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(r\"/path/to/image.png\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1442,"byte_end":1490,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/ let file = File::create(path).unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1491,"byte_end":1534,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/ let ref mut w = BufWriter::new(file);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1535,"byte_end":1576,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1577,"byte_end":1580,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let mut encoder = png::Encoder::new(w, 2, 1); // Width is 2 pixels and height is 1.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1581,"byte_end":1668,"line_start":42,"line_end":42,"column_start":1,"column_end":88}},{"value":"/ encoder.set_color(png::ColorType::Rgba);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1669,"byte_end":1713,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/ encoder.set_depth(png::BitDepth::Eight);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1714,"byte_end":1758,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/ encoder.set_source_gamma(png::ScaledFloat::from_scaled(45455)); // 1.0 / 2.2, scaled by 100000","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1759,"byte_end":1857,"line_start":45,"line_end":45,"column_start":1,"column_end":99}},{"value":"/ encoder.set_source_gamma(png::ScaledFloat::new(1.0 / 2.2));     // 1.0 / 2.2, unscaled, but rounded","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1858,"byte_end":1961,"line_start":46,"line_end":46,"column_start":1,"column_end":104}},{"value":"/ let source_chromaticities = png::SourceChromaticities::new(     // Using unscaled instantiation here","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":1962,"byte_end":2066,"line_start":47,"line_end":47,"column_start":1,"column_end":105}},{"value":"/     (0.31270, 0.32900),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2067,"byte_end":2094,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     (0.64000, 0.33000),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2095,"byte_end":2122,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/     (0.30000, 0.60000),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2123,"byte_end":2150,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/     (0.15000, 0.06000)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2151,"byte_end":2177,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2178,"byte_end":2184,"line_start":52,"line_end":52,"column_start":1,"column_end":7}},{"value":"/ encoder.set_source_chromaticities(source_chromaticities);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2185,"byte_end":2246,"line_start":53,"line_end":53,"column_start":1,"column_end":62}},{"value":"/ let mut writer = encoder.write_header().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2247,"byte_end":2300,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2301,"byte_end":2304,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ let data = [255, 0, 0, 255, 0, 0, 0, 255]; // An array containing a RGBA sequence. First pixel is red and second pixel is black.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2305,"byte_end":2437,"line_start":56,"line_end":56,"column_start":1,"column_end":133}},{"value":"/ writer.write_image_data(&data).unwrap(); // Save","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2438,"byte_end":2490,"line_start":57,"line_end":57,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2491,"byte_end":2498,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2499,"byte_end":2502,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2504,"byte_end":2527,"line_start":61,"line_end":61,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"chunk","qualname":"::chunk","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":1091},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" Chunk types and functions\n","sig":null,"attributes":[{"value":"/ Chunk types and functions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":2925,"byte_end":2954,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":2955,"byte_end":2975,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":2976,"byte_end":3009,"line_start":3,"line_end":3,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3081,"byte_end":3090,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"name":"ChunkType","qualname":"::chunk::ChunkType","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3091,"byte_end":3102,"line_start":7,"line_end":7,"column_start":22,"column_end":33},"name":"0","qualname":"::chunk::ChunkType::0","value":"[u8; 4]","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3159,"byte_end":3163,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"name":"IHDR","qualname":"::chunk::IHDR","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image header\n","sig":null,"attributes":[{"value":"/ Image header","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3132,"byte_end":3148,"line_start":11,"line_end":11,"column_start":1,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":9},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3220,"byte_end":3224,"line_start":14,"line_end":14,"column_start":11,"column_end":15},"name":"PLTE","qualname":"::chunk::PLTE","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Palette\n","sig":null,"attributes":[{"value":"/ Palette","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3198,"byte_end":3209,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3284,"byte_end":3288,"line_start":16,"line_end":16,"column_start":11,"column_end":15},"name":"IDAT","qualname":"::chunk::IDAT","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image data\n","sig":null,"attributes":[{"value":"/ Image data","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3259,"byte_end":3273,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Const","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3351,"byte_end":3355,"line_start":18,"line_end":18,"column_start":11,"column_end":15},"name":"IEND","qualname":"::chunk::IEND","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image trailer\n","sig":null,"attributes":[{"value":"/ Image trailer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3323,"byte_end":3340,"line_start":17,"line_end":17,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3445,"byte_end":3449,"line_start":23,"line_end":23,"column_start":11,"column_end":15},"name":"tRNS","qualname":"::chunk::tRNS","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Transparency\n","sig":null,"attributes":[{"value":"/ Transparency","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3418,"byte_end":3434,"line_start":22,"line_end":22,"column_start":1,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3516,"byte_end":3520,"line_start":25,"line_end":25,"column_start":11,"column_end":15},"name":"bKGD","qualname":"::chunk::bKGD","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Background colour\n","sig":null,"attributes":[{"value":"/ Background colour","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3484,"byte_end":3505,"line_start":24,"line_end":24,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3598,"byte_end":3602,"line_start":27,"line_end":27,"column_start":11,"column_end":15},"name":"tIME","qualname":"::chunk::tIME","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image last-modification time\n","sig":null,"attributes":[{"value":"/ Image last-modification time","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3555,"byte_end":3587,"line_start":26,"line_end":26,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3677,"byte_end":3681,"line_start":29,"line_end":29,"column_start":11,"column_end":15},"name":"pHYs","qualname":"::chunk::pHYs","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Physical pixel dimensions\n","sig":null,"attributes":[{"value":"/ Physical pixel dimensions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3637,"byte_end":3666,"line_start":28,"line_end":28,"column_start":1,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3767,"byte_end":3771,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"name":"cHRM","qualname":"::chunk::cHRM","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Source system's pixel chromaticities\n","sig":null,"attributes":[{"value":"/ Source system's pixel chromaticities","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3716,"byte_end":3756,"line_start":30,"line_end":30,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3848,"byte_end":3852,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"name":"gAMA","qualname":"::chunk::gAMA","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Source system's gamma value\n","sig":null,"attributes":[{"value":"/ Source system's gamma value","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3806,"byte_end":3837,"line_start":32,"line_end":32,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3924,"byte_end":3928,"line_start":35,"line_end":35,"column_start":11,"column_end":15},"name":"sRGB","qualname":"::chunk::sRGB","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" sRGB color space chunk\n","sig":null,"attributes":[{"value":"/ sRGB color space chunk","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3887,"byte_end":3913,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3995,"byte_end":3999,"line_start":37,"line_end":37,"column_start":11,"column_end":15},"name":"iCCP","qualname":"::chunk::iCCP","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" ICC profile chunk\n","sig":null,"attributes":[{"value":"/ ICC profile chunk","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":3963,"byte_end":3984,"line_start":36,"line_end":36,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4082,"byte_end":4086,"line_start":39,"line_end":39,"column_start":11,"column_end":15},"name":"tEXt","qualname":"::chunk::tEXt","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Latin-1 uncompressed textual data\n","sig":null,"attributes":[{"value":"/ Latin-1 uncompressed textual data","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4034,"byte_end":4071,"line_start":38,"line_end":38,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4167,"byte_end":4171,"line_start":41,"line_end":41,"column_start":11,"column_end":15},"name":"zTXt","qualname":"::chunk::zTXt","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Latin-1 compressed textual data\n","sig":null,"attributes":[{"value":"/ Latin-1 compressed textual data","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4121,"byte_end":4156,"line_start":40,"line_end":40,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4239,"byte_end":4243,"line_start":43,"line_end":43,"column_start":11,"column_end":15},"name":"iTXt","qualname":"::chunk::iTXt","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" UTF-8 textual data\n","sig":null,"attributes":[{"value":"/ UTF-8 textual data","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4206,"byte_end":4228,"line_start":42,"line_end":42,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4338,"byte_end":4342,"line_start":48,"line_end":48,"column_start":11,"column_end":15},"name":"acTL","qualname":"::chunk::acTL","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Animation control\n","sig":null,"attributes":[{"value":"/ Animation control","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4306,"byte_end":4327,"line_start":47,"line_end":47,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4405,"byte_end":4409,"line_start":50,"line_end":50,"column_start":11,"column_end":15},"name":"fcTL","qualname":"::chunk::fcTL","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Frame control\n","sig":null,"attributes":[{"value":"/ Frame control","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4377,"byte_end":4394,"line_start":49,"line_end":49,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4469,"byte_end":4473,"line_start":52,"line_end":52,"column_start":11,"column_end":15},"name":"fdAT","qualname":"::chunk::fdAT","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Frame data\n","sig":null,"attributes":[{"value":"/ Frame data","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4444,"byte_end":4458,"line_start":51,"line_end":51,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4594,"byte_end":4605,"line_start":57,"line_end":57,"column_start":8,"column_end":19},"name":"is_critical","qualname":"::chunk::is_critical","value":"fn is_critical(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the chunk is critical.\n","sig":null,"attributes":[{"value":"/ Returns true if the chunk is critical.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4544,"byte_end":4586,"line_start":56,"line_end":56,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4720,"byte_end":4730,"line_start":62,"line_end":62,"column_start":8,"column_end":18},"name":"is_private","qualname":"::chunk::is_private","value":"fn is_private(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the chunk is private.\n","sig":null,"attributes":[{"value":"/ Returns true if the chunk is private.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4671,"byte_end":4712,"line_start":61,"line_end":61,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4909,"byte_end":4921,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"reserved_set","qualname":"::chunk::reserved_set","value":"fn reserved_set(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the reserved bit of the chunk name is set.\n If it is set the chunk name is invalid.\n","sig":null,"attributes":[{"value":"/ Checks whether the reserved bit of the chunk name is set.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4796,"byte_end":4857,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ If it is set the chunk name is invalid.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4858,"byte_end":4901,"line_start":67,"line_end":67,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":5052,"byte_end":5064,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"safe_to_copy","qualname":"::chunk::safe_to_copy","value":"fn safe_to_copy(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the chunk is safe to copy if unknown.\n","sig":null,"attributes":[{"value":"/ Returns true if the chunk is safe to copy if unknown.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":4987,"byte_end":5044,"line_start":72,"line_end":72,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":5169,"byte_end":5172,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ChunkType as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6241,"byte_end":6250,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::common::ColorType::Grayscale","value":"ColorType::Grayscale","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" 1 grayscale sample.\n","sig":null,"attributes":[{"value":"/ 1 grayscale sample.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6213,"byte_end":6236,"line_start":11,"line_end":11,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6313,"byte_end":6316,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::common::ColorType::Rgb","value":"ColorType::Rgb","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" 1 red sample, 1 green sample, 1 blue sample.\n","sig":null,"attributes":[{"value":"/ 1 red sample, 1 green sample, 1 blue sample.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6260,"byte_end":6308,"line_start":13,"line_end":13,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6366,"byte_end":6373,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"Indexed","qualname":"::common::ColorType::Indexed","value":"ColorType::Indexed","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" 1 sample for the palette index.\n","sig":null,"attributes":[{"value":"/ 1 sample for the palette index.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6326,"byte_end":6361,"line_start":15,"line_end":15,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6432,"byte_end":6446,"line_start":18,"line_end":18,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::common::ColorType::GrayscaleAlpha","value":"ColorType::GrayscaleAlpha","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" 1 grayscale sample, then 1 alpha sample.\n","sig":null,"attributes":[{"value":"/ 1 grayscale sample, then 1 alpha sample.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6383,"byte_end":6427,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6538,"byte_end":6542,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::common::ColorType::Rgba","value":"ColorType::Rgba","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" 1 red sample, 1 green sample, 1 blue sample, and finally, 1 alpha sample.\n","sig":null,"attributes":[{"value":"/ 1 red sample, 1 green sample, 1 blue sample, and finally, 1 alpha sample.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6456,"byte_end":6533,"line_start":19,"line_end":19,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6197,"byte_end":6206,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::common::ColorType","value":"enum ColorType {\n    Grayscale = ,\n    Rgb = ,\n    Indexed = ,\n    GrayscaleAlpha = ,\n    Rgba = ,\n}","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123}],"decl_id":null,"docs":" Describes how a pixel is encoded.\n","sig":null,"attributes":[{"value":"/ Describes how a pixel is encoded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6093,"byte_end":6130,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6176,"byte_end":6187,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6653,"byte_end":6660,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"samples","qualname":"<ColorType>::samples","value":"fn samples(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of samples used per pixel encoded in this way.\n","sig":null,"attributes":[{"value":"/ Returns the number of samples used per pixel encoded in this way.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6572,"byte_end":6641,"line_start":24,"line_end":24,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":7034,"byte_end":7041,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<ColorType>::from_u8","value":"fn from_u8(u8) -> Option<ColorType>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6951,"byte_end":7022,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":8886,"byte_end":8889,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"One","qualname":"::common::BitDepth::One","value":"BitDepth::One","parent":{"krate":0,"index":1137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":8899,"byte_end":8902,"line_start":88,"line_end":88,"column_start":5,"column_end":8},"name":"Two","qualname":"::common::BitDepth::Two","value":"BitDepth::Two","parent":{"krate":0,"index":1137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":8912,"byte_end":8916,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Four","qualname":"::common::BitDepth::Four","value":"BitDepth::Four","parent":{"krate":0,"index":1137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":8926,"byte_end":8931,"line_start":90,"line_end":90,"column_start":5,"column_end":10},"name":"Eight","qualname":"::common::BitDepth::Eight","value":"BitDepth::Eight","parent":{"krate":0,"index":1137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":8941,"byte_end":8948,"line_start":91,"line_end":91,"column_start":5,"column_end":12},"name":"Sixteen","qualname":"::common::BitDepth::Sixteen","value":"BitDepth::Sixteen","parent":{"krate":0,"index":1137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":8871,"byte_end":8879,"line_start":86,"line_end":86,"column_start":10,"column_end":18},"name":"BitDepth","qualname":"::common::BitDepth","value":"enum BitDepth { One = , Two = , Four = , Eight = , Sixteen = , }","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1150}],"decl_id":null,"docs":" Bit depth of the PNG file.\n Specifies the number of bits per sample.\n","sig":null,"attributes":[{"value":"/ Bit depth of the PNG file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":8729,"byte_end":8759,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"/ Specifies the number of bits per sample.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":8760,"byte_end":8804,"line_start":83,"line_end":83,"column_start":1,"column_end":45}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":8850,"byte_end":8861,"line_start":85,"line_end":85,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":9467,"byte_end":9474,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<BitDepth>::from_u8","value":"fn from_u8(u8) -> Option<BitDepth>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":9384,"byte_end":9455,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":9902,"byte_end":9917,"line_start":129,"line_end":129,"column_start":12,"column_end":27},"name":"PixelDimensions","qualname":"::common::PixelDimensions","value":"PixelDimensions { xppu, yppu, unit }","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191}],"decl_id":null,"docs":" Pixel dimensions information\n","sig":null,"attributes":[{"value":"/ Pixel dimensions information","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":9828,"byte_end":9860,"line_start":127,"line_end":127,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":9960,"byte_end":9964,"line_start":131,"line_end":131,"column_start":9,"column_end":13},"name":"xppu","qualname":"::common::PixelDimensions::xppu","value":"u32","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Pixels per unit, X axis\n","sig":null,"attributes":[{"value":"/ Pixels per unit, X axis","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":9924,"byte_end":9951,"line_start":130,"line_end":130,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10011,"byte_end":10015,"line_start":133,"line_end":133,"column_start":9,"column_end":13},"name":"yppu","qualname":"::common::PixelDimensions::yppu","value":"u32","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Pixels per unit, Y axis\n","sig":null,"attributes":[{"value":"/ Pixels per unit, Y axis","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":9975,"byte_end":10002,"line_start":132,"line_end":132,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10070,"byte_end":10074,"line_start":135,"line_end":135,"column_start":9,"column_end":13},"name":"unit","qualname":"::common::PixelDimensions::unit","value":"common::Unit","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Either *Meter* or *Unspecified*\n","sig":null,"attributes":[{"value":"/ Either *Meter* or *Unspecified*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10026,"byte_end":10061,"line_start":134,"line_end":134,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10204,"byte_end":10215,"line_start":142,"line_end":142,"column_start":5,"column_end":16},"name":"Unspecified","qualname":"::common::Unit::Unspecified","value":"Unit::Unspecified","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10225,"byte_end":10230,"line_start":143,"line_end":143,"column_start":5,"column_end":10},"name":"Meter","qualname":"::common::Unit::Meter","value":"Unit::Meter","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10193,"byte_end":10197,"line_start":141,"line_end":141,"column_start":10,"column_end":14},"name":"Unit","qualname":"::common::Unit","value":"enum Unit { Unspecified = , Meter = , }","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1201}],"decl_id":null,"docs":" Physical unit of the pixel dimensions\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10130,"byte_end":10141,"line_start":139,"line_end":139,"column_start":1,"column_end":12}},{"value":"/ Physical unit of the pixel dimensions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10142,"byte_end":10183,"line_start":140,"line_end":140,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10338,"byte_end":10345,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Unit>::from_u8","value":"fn from_u8(u8) -> Option<Unit>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10255,"byte_end":10326,"line_start":147,"line_end":147,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10700,"byte_end":10704,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"None","qualname":"::common::DisposeOp::None","value":"DisposeOp::None","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" Leave the buffer unchanged.\n","sig":null,"attributes":[{"value":"/ Leave the buffer unchanged.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10664,"byte_end":10695,"line_start":161,"line_end":161,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10762,"byte_end":10772,"line_start":164,"line_end":164,"column_start":5,"column_end":15},"name":"Background","qualname":"::common::DisposeOp::Background","value":"DisposeOp::Background","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" Clear buffer with the background color.\n","sig":null,"attributes":[{"value":"/ Clear buffer with the background color.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10714,"byte_end":10757,"line_start":163,"line_end":163,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10846,"byte_end":10854,"line_start":166,"line_end":166,"column_start":5,"column_end":13},"name":"Previous","qualname":"::common::DisposeOp::Previous","value":"DisposeOp::Previous","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" Reset the buffer to the state before the current frame.\n","sig":null,"attributes":[{"value":"/ Reset the buffer to the state before the current frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10782,"byte_end":10841,"line_start":165,"line_end":165,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10648,"byte_end":10657,"line_start":160,"line_end":160,"column_start":10,"column_end":19},"name":"DisposeOp","qualname":"::common::DisposeOp","value":"enum DisposeOp { None = , Background = , Previous = , }","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1222}],"decl_id":null,"docs":" How to reset buffer of an animated png (APNG) at the end of a frame.\n","sig":null,"attributes":[{"value":"/ How to reset buffer of an animated png (APNG) at the end of a frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10509,"byte_end":10581,"line_start":157,"line_end":157,"column_start":1,"column_end":73}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10627,"byte_end":10638,"line_start":159,"line_end":159,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10999,"byte_end":11006,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<DisposeOp>::from_u8","value":"fn from_u8(u8) -> Option<DisposeOp>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Using enum_primitive or transmute is probably the right thing but this will do for now.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Using enum_primitive or transmute is probably the right thing but this will do for now.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10884,"byte_end":10987,"line_start":170,"line_end":170,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11268,"byte_end":11271,"line_start":182,"line_end":182,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DisposeOp as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11751,"byte_end":11757,"line_start":197,"line_end":197,"column_start":5,"column_end":11},"name":"Source","qualname":"::common::BlendOp::Source","value":"BlendOp::Source","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" Pixels overwrite the value at their position.\n","sig":null,"attributes":[{"value":"/ Pixels overwrite the value at their position.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11697,"byte_end":11746,"line_start":196,"line_end":196,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11841,"byte_end":11845,"line_start":199,"line_end":199,"column_start":5,"column_end":9},"name":"Over","qualname":"::common::BlendOp::Over","value":"BlendOp::Over","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" The new pixels are blended into the current state based on alpha.\n","sig":null,"attributes":[{"value":"/ The new pixels are blended into the current state based on alpha.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11767,"byte_end":11836,"line_start":198,"line_end":198,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11683,"byte_end":11690,"line_start":195,"line_end":195,"column_start":10,"column_end":17},"name":"BlendOp","qualname":"::common::BlendOp","value":"enum BlendOp { Source = , Over = , }","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1240}],"decl_id":null,"docs":" How pixels are written into the buffer.\n","sig":null,"attributes":[{"value":"/ How pixels are written into the buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11573,"byte_end":11616,"line_start":192,"line_end":192,"column_start":1,"column_end":44}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11662,"byte_end":11673,"line_start":194,"line_end":194,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11988,"byte_end":11995,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<BlendOp>::from_u8","value":"fn from_u8(u8) -> Option<BlendOp>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Using enum_primitive or transmute is probably the right thing but this will do for now.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Using enum_primitive or transmute is probably the right thing but this will do for now.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11873,"byte_end":11976,"line_start":203,"line_end":203,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12201,"byte_end":12204,"line_start":214,"line_end":214,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BlendOp as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12503,"byte_end":12515,"line_start":225,"line_end":225,"column_start":12,"column_end":24},"name":"FrameControl","qualname":"::common::FrameControl","value":"FrameControl { sequence_number, width, height, x_offset, y_offset, delay_num, delay_den, dispose_op, blend_op }","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263}],"decl_id":null,"docs":" Frame control information\n","sig":null,"attributes":[{"value":"/ Frame control information","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12432,"byte_end":12461,"line_start":223,"line_end":223,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12590,"byte_end":12605,"line_start":227,"line_end":227,"column_start":9,"column_end":24},"name":"sequence_number","qualname":"::common::FrameControl::sequence_number","value":"u32","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Sequence number of the animation chunk, starting from 0\n","sig":null,"attributes":[{"value":"/ Sequence number of the animation chunk, starting from 0","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12522,"byte_end":12581,"line_start":226,"line_end":226,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1256},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12657,"byte_end":12662,"line_start":229,"line_end":229,"column_start":9,"column_end":14},"name":"width","qualname":"::common::FrameControl::width","value":"u32","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Width of the following frame\n","sig":null,"attributes":[{"value":"/ Width of the following frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12616,"byte_end":12648,"line_start":228,"line_end":228,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12715,"byte_end":12721,"line_start":231,"line_end":231,"column_start":9,"column_end":15},"name":"height","qualname":"::common::FrameControl::height","value":"u32","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Height of the following frame\n","sig":null,"attributes":[{"value":"/ Height of the following frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12673,"byte_end":12706,"line_start":230,"line_end":230,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12794,"byte_end":12802,"line_start":233,"line_end":233,"column_start":9,"column_end":17},"name":"x_offset","qualname":"::common::FrameControl::x_offset","value":"u32","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" X position at which to render the following frame\n","sig":null,"attributes":[{"value":"/ X position at which to render the following frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12732,"byte_end":12785,"line_start":232,"line_end":232,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12875,"byte_end":12883,"line_start":235,"line_end":235,"column_start":9,"column_end":17},"name":"y_offset","qualname":"::common::FrameControl::y_offset","value":"u32","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Y position at which to render the following frame\n","sig":null,"attributes":[{"value":"/ Y position at which to render the following frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12813,"byte_end":12866,"line_start":234,"line_end":234,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12937,"byte_end":12946,"line_start":237,"line_end":237,"column_start":9,"column_end":18},"name":"delay_num","qualname":"::common::FrameControl::delay_num","value":"u16","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Frame delay fraction numerator\n","sig":null,"attributes":[{"value":"/ Frame delay fraction numerator","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12894,"byte_end":12928,"line_start":236,"line_end":236,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13002,"byte_end":13011,"line_start":239,"line_end":239,"column_start":9,"column_end":18},"name":"delay_den","qualname":"::common::FrameControl::delay_den","value":"u16","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Frame delay fraction denominator\n","sig":null,"attributes":[{"value":"/ Frame delay fraction denominator","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12957,"byte_end":12993,"line_start":238,"line_end":238,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13100,"byte_end":13110,"line_start":241,"line_end":241,"column_start":9,"column_end":19},"name":"dispose_op","qualname":"::common::FrameControl::dispose_op","value":"common::DisposeOp","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Type of frame area disposal to be done after rendering this frame\n","sig":null,"attributes":[{"value":"/ Type of frame area disposal to be done after rendering this frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13022,"byte_end":13091,"line_start":240,"line_end":240,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13183,"byte_end":13191,"line_start":243,"line_end":243,"column_start":9,"column_end":17},"name":"blend_op","qualname":"::common::FrameControl::blend_op","value":"common::BlendOp","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Type of frame area rendering for this frame\n","sig":null,"attributes":[{"value":"/ Type of frame area rendering for this frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13127,"byte_end":13174,"line_start":242,"line_end":242,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13244,"byte_end":13251,"line_start":247,"line_end":247,"column_start":8,"column_end":15},"name":"default","qualname":"<FrameControl as std::default::Default>::default","value":"fn default() -> FrameControl","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13605,"byte_end":13616,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"set_seq_num","qualname":"<FrameControl>::set_seq_num","value":"fn set_seq_num<'_>(&'_ mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13690,"byte_end":13701,"line_start":267,"line_end":267,"column_start":12,"column_end":23},"name":"inc_seq_num","qualname":"<FrameControl>::inc_seq_num","value":"fn inc_seq_num<'_>(&'_ mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13776,"byte_end":13782,"line_start":271,"line_end":271,"column_start":12,"column_end":18},"name":"encode","qualname":"<FrameControl>::encode","value":"fn encode<W, '_>(Self, &'_ mut W) -> encoder::Result<()> where W: Write","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":14562,"byte_end":14578,"line_start":289,"line_end":289,"column_start":12,"column_end":28},"name":"AnimationControl","qualname":"::common::AnimationControl","value":"AnimationControl { num_frames, num_plays }","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271}],"decl_id":null,"docs":" Animation control information\n","sig":null,"attributes":[{"value":"/ Animation control information","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":14487,"byte_end":14520,"line_start":287,"line_end":287,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":14614,"byte_end":14624,"line_start":291,"line_end":291,"column_start":9,"column_end":19},"name":"num_frames","qualname":"::common::AnimationControl::num_frames","value":"u32","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Number of frames\n","sig":null,"attributes":[{"value":"/ Number of frames","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":14585,"byte_end":14605,"line_start":290,"line_end":290,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":14713,"byte_end":14722,"line_start":293,"line_end":293,"column_start":9,"column_end":18},"name":"num_plays","qualname":"::common::AnimationControl::num_plays","value":"u32","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Number of times to loop this APNG.  0 indicates infinite looping.\n","sig":null,"attributes":[{"value":"/ Number of times to loop this APNG.  0 indicates infinite looping.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":14635,"byte_end":14704,"line_start":292,"line_end":292,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":14767,"byte_end":14773,"line_start":297,"line_end":297,"column_start":12,"column_end":18},"name":"encode","qualname":"<AnimationControl>::encode","value":"fn encode<W, '_>(Self, &'_ mut W) -> encoder::Result<()> where W: Write","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15180,"byte_end":15187,"line_start":309,"line_end":309,"column_start":5,"column_end":12},"name":"Default","qualname":"::common::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Default level\n","sig":null,"attributes":[{"value":"/ Default level","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15158,"byte_end":15175,"line_start":308,"line_end":308,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15226,"byte_end":15230,"line_start":311,"line_end":311,"column_start":5,"column_end":9},"name":"Fast","qualname":"::common::Compression::Fast","value":"Compression::Fast","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Fast minimal compression\n","sig":null,"attributes":[{"value":"/ Fast minimal compression","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15193,"byte_end":15221,"line_start":310,"line_end":310,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15452,"byte_end":15456,"line_start":317,"line_end":317,"column_start":5,"column_end":9},"name":"Best","qualname":"::common::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Higher compression level","sig":null,"attributes":[{"value":"/ Higher compression level","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15236,"byte_end":15264,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15269,"byte_end":15272,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Best in this context isn't actually the highest possible level","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15277,"byte_end":15343,"line_start":314,"line_end":314,"column_start":5,"column_end":71}},{"value":"/ the encoder can do, but is meant to emulate the `Best` setting in the `Flate2`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15348,"byte_end":15430,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/ library.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15435,"byte_end":15447,"line_start":316,"line_end":316,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15594,"byte_end":15601,"line_start":322,"line_end":322,"column_start":5,"column_end":12},"name":"Huffman","qualname":"::common::Compression::Huffman","value":"Compression::Huffman","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.17.6\", note =\n\"use one of the other compression levels instead, such as 'fast'\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15462,"byte_end":15589,"line_start":318,"line_end":321,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15739,"byte_end":15742,"line_start":327,"line_end":327,"column_start":5,"column_end":8},"name":"Rle","qualname":"::common::Compression::Rle","value":"Compression::Rle","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.17.6\", note =\n\"use one of the other compression levels instead, such as 'fast'\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15607,"byte_end":15734,"line_start":323,"line_end":326,"column_start":5,"column_end":7}}]},{"kind":"Enum","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15140,"byte_end":15151,"line_start":307,"line_end":307,"column_start":10,"column_end":21},"name":"Compression","qualname":"::common::Compression","value":"enum Compression { Default, Fast, Best, Huffman, Rle, }","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286}],"decl_id":null,"docs":" The type and strength of applied compression.\n","sig":null,"attributes":[{"value":"/ The type and strength of applied compression.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15051,"byte_end":15100,"line_start":305,"line_end":305,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15785,"byte_end":15792,"line_start":331,"line_end":331,"column_start":8,"column_end":15},"name":"default","qualname":"<Compression as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":16031,"byte_end":16042,"line_start":339,"line_end":339,"column_start":12,"column_end":23},"name":"ScaledFloat","qualname":"::common::ScaledFloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" An unsigned integer scaled version of a floating point value,\n equivalent to an integer quotient with fixed denominator (100_000)).\n","sig":null,"attributes":[{"value":"/ An unsigned integer scaled version of a floating point value,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15836,"byte_end":15901,"line_start":336,"line_end":336,"column_start":1,"column_end":66}},{"value":"/ equivalent to an integer quotient with fixed denominator (100_000)).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15902,"byte_end":15974,"line_start":337,"line_end":337,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":16190,"byte_end":16198,"line_start":345,"line_end":345,"column_start":12,"column_end":20},"name":"in_range","qualname":"<ScaledFloat>::in_range","value":"fn in_range(f32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the value is within the clamped range of this type.\n","sig":null,"attributes":[{"value":"/ Gets whether the value is within the clamped range of this type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":16110,"byte_end":16178,"line_start":344,"line_end":344,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":16485,"byte_end":16490,"line_start":351,"line_end":351,"column_start":12,"column_end":17},"name":"exact","qualname":"<ScaledFloat>::exact","value":"fn exact(f32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the value can be exactly converted in round-trip.\n","sig":null,"attributes":[{"value":"/ Gets whether the value can be exactly converted in round-trip.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":16312,"byte_end":16378,"line_start":349,"line_end":349,"column_start":5,"column_end":71}},{"value":"allow(clippy :: float_cmp)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":16383,"byte_end":16410,"line_start":350,"line_end":350,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":16959,"byte_end":16962,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"new","qualname":"<ScaledFloat>::new","value":"fn new(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Slightly inaccurate scaling and quantization.\n Clamps the value into the representable range if it is negative or too large.\n","sig":null,"attributes":[{"value":"/ Slightly inaccurate scaling and quantization.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":16812,"byte_end":16861,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/ Clamps the value into the representable range if it is negative or too large.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":16866,"byte_end":16947,"line_start":366,"line_end":366,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17143,"byte_end":17154,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"from_scaled","qualname":"<ScaledFloat>::from_scaled","value":"fn from_scaled(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Fully accurate construction from a value scaled as per specification.\n","sig":null,"attributes":[{"value":"/ Fully accurate construction from a value scaled as per specification.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17058,"byte_end":17131,"line_start":373,"line_end":373,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17257,"byte_end":17268,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"into_scaled","qualname":"<ScaledFloat>::into_scaled","value":"fn into_scaled(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the accurate encoded value.\n","sig":null,"attributes":[{"value":"/ Get the accurate encoded value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17210,"byte_end":17245,"line_start":378,"line_end":378,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17369,"byte_end":17379,"line_start":384,"line_end":384,"column_start":12,"column_end":22},"name":"into_value","qualname":"<ScaledFloat>::into_value","value":"fn into_value(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the unscaled value as a floating point.\n","sig":null,"attributes":[{"value":"/ Get the unscaled value as a floating point.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17310,"byte_end":17357,"line_start":383,"line_end":383,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17714,"byte_end":17734,"line_start":395,"line_end":395,"column_start":12,"column_end":32},"name":"SourceChromaticities","qualname":"::common::SourceChromaticities","value":"SourceChromaticities { white, red, green, blue }","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" Chromaticities of the color space primaries\n","sig":null,"attributes":[{"value":"/ Chromaticities of the color space primaries","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17610,"byte_end":17657,"line_start":393,"line_end":393,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17745,"byte_end":17750,"line_start":396,"line_end":396,"column_start":9,"column_end":14},"name":"white","qualname":"::common::SourceChromaticities::white","value":"(common::ScaledFloat, common::ScaledFloat)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17788,"byte_end":17791,"line_start":397,"line_end":397,"column_start":9,"column_end":12},"name":"red","qualname":"::common::SourceChromaticities::red","value":"(common::ScaledFloat, common::ScaledFloat)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17829,"byte_end":17834,"line_start":398,"line_end":398,"column_start":9,"column_end":14},"name":"green","qualname":"::common::SourceChromaticities::green","value":"(common::ScaledFloat, common::ScaledFloat)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17872,"byte_end":17876,"line_start":399,"line_end":399,"column_start":9,"column_end":13},"name":"blue","qualname":"::common::SourceChromaticities::blue","value":"(common::ScaledFloat, common::ScaledFloat)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17948,"byte_end":17951,"line_start":403,"line_end":403,"column_start":12,"column_end":15},"name":"new","qualname":"<SourceChromaticities>::new","value":"fn new((f32, f32), (f32, f32), (f32, f32), (f32, f32)) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":18406,"byte_end":18417,"line_start":413,"line_end":413,"column_start":12,"column_end":23},"name":"to_be_bytes","qualname":"<SourceChromaticities>::to_be_bytes","value":"fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"rustfmt::skip","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":18378,"byte_end":18394,"line_start":412,"line_end":412,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":19456,"byte_end":19462,"line_start":434,"line_end":434,"column_start":12,"column_end":18},"name":"encode","qualname":"<SourceChromaticities>::encode","value":"fn encode<W, '_>(Self, &'_ mut W) -> encoder::Result<()> where W: Write","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":19955,"byte_end":19965,"line_start":446,"line_end":446,"column_start":5,"column_end":15},"name":"Perceptual","qualname":"::common::SrgbRenderingIntent::Perceptual","value":"SrgbRenderingIntent::Perceptual","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" For images preferring good adaptation to the output device gamut at the expense of colorimetric accuracy, such as photographs.\n","sig":null,"attributes":[{"value":"/ For images preferring good adaptation to the output device gamut at the expense of colorimetric accuracy, such as photographs.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":19820,"byte_end":19950,"line_start":445,"line_end":445,"column_start":5,"column_end":135}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":20091,"byte_end":20111,"line_start":448,"line_end":448,"column_start":5,"column_end":25},"name":"RelativeColorimetric","qualname":"::common::SrgbRenderingIntent::RelativeColorimetric","value":"SrgbRenderingIntent::RelativeColorimetric","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" For images requiring colour appearance matching (relative to the output device white point), such as logos.\n","sig":null,"attributes":[{"value":"/ For images requiring colour appearance matching (relative to the output device white point), such as logos.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":19975,"byte_end":20086,"line_start":447,"line_end":447,"column_start":5,"column_end":116}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":20242,"byte_end":20252,"line_start":450,"line_end":450,"column_start":5,"column_end":15},"name":"Saturation","qualname":"::common::SrgbRenderingIntent::Saturation","value":"SrgbRenderingIntent::Saturation","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" For images preferring preservation of saturation at the expense of hue and lightness, such as charts and graphs.\n","sig":null,"attributes":[{"value":"/ For images preferring preservation of saturation at the expense of hue and lightness, such as charts and graphs.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":20121,"byte_end":20237,"line_start":449,"line_end":449,"column_start":5,"column_end":121}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":20405,"byte_end":20425,"line_start":452,"line_end":452,"column_start":5,"column_end":25},"name":"AbsoluteColorimetric","qualname":"::common::SrgbRenderingIntent::AbsoluteColorimetric","value":"SrgbRenderingIntent::AbsoluteColorimetric","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" For images requiring preservation of absolute colorimetry, such as previews of images destined for a different output device (proofs).\n","sig":null,"attributes":[{"value":"/ For images requiring preservation of absolute colorimetry, such as previews of images destined for a different output device (proofs).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":20262,"byte_end":20400,"line_start":451,"line_end":451,"column_start":5,"column_end":143}}]},{"kind":"Enum","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":19794,"byte_end":19813,"line_start":444,"line_end":444,"column_start":10,"column_end":29},"name":"SrgbRenderingIntent","qualname":"::common::SrgbRenderingIntent","value":"enum SrgbRenderingIntent {\n    Perceptual = ,\n    RelativeColorimetric = ,\n    Saturation = ,\n    AbsoluteColorimetric = ,\n}","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1337}],"decl_id":null,"docs":" The rendering intent for an sRGB image.","sig":null,"attributes":[{"value":"/ The rendering intent for an sRGB image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":19590,"byte_end":19633,"line_start":439,"line_end":439,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":19634,"byte_end":19637,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ Presence of this data also indicates that the image conforms to the sRGB color space.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":19638,"byte_end":19727,"line_start":441,"line_end":441,"column_start":1,"column_end":90}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":19728,"byte_end":19739,"line_start":442,"line_end":442,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":20897,"byte_end":20903,"line_start":470,"line_end":470,"column_start":12,"column_end":18},"name":"encode","qualname":"<SrgbRenderingIntent>::encode","value":"fn encode<W, '_>(Self, &'_ mut W) -> encoder::Result<()> where W: Write","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21103,"byte_end":21107,"line_start":478,"line_end":478,"column_start":12,"column_end":16},"name":"Info","qualname":"::common::Info","value":"Info { width, height, bit_depth, color_type, interlaced, trns, pixel_dims, palette, gama_chunk, chrm_chunk, frame_control, animation_control, compression, source_gamma, source_chromaticities, srgb, icc_profile, uncompressed_latin1_text, compressed_latin1_text, utf8_text }","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"decl_id":null,"docs":" PNG info struct\n","sig":null,"attributes":[{"value":"/ PNG info struct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21030,"byte_end":21049,"line_start":475,"line_end":475,"column_start":1,"column_end":20}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21074,"byte_end":21091,"line_start":477,"line_end":477,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21122,"byte_end":21127,"line_start":479,"line_end":479,"column_start":9,"column_end":14},"name":"width","qualname":"::common::Info::width","value":"u32","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21142,"byte_end":21148,"line_start":480,"line_end":480,"column_start":9,"column_end":15},"name":"height","qualname":"::common::Info::height","value":"u32","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1355},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21163,"byte_end":21172,"line_start":481,"line_end":481,"column_start":9,"column_end":18},"name":"bit_depth","qualname":"::common::Info::bit_depth","value":"common::BitDepth","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21236,"byte_end":21246,"line_start":483,"line_end":483,"column_start":9,"column_end":19},"name":"color_type","qualname":"::common::Info::color_type","value":"common::ColorType","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" How colors are stored in the image.\n","sig":null,"attributes":[{"value":"/ How colors are stored in the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21188,"byte_end":21227,"line_start":482,"line_end":482,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21267,"byte_end":21277,"line_start":484,"line_end":484,"column_start":9,"column_end":19},"name":"interlaced","qualname":"::common::Info::interlaced","value":"bool","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21408,"byte_end":21412,"line_start":486,"line_end":486,"column_start":9,"column_end":13},"name":"trns","qualname":"::common::Info::trns","value":"std::option::Option<std::borrow::Cow<'a, [u8]>>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" The image's `tRNS` chunk, if present; contains the alpha channel of the image's palette, 1 byte per entry.\n","sig":null,"attributes":[{"value":"/ The image's `tRNS` chunk, if present; contains the alpha channel of the image's palette, 1 byte per entry.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21289,"byte_end":21399,"line_start":485,"line_end":485,"column_start":5,"column_end":115}}]},{"kind":"Field","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21445,"byte_end":21455,"line_start":487,"line_end":487,"column_start":9,"column_end":19},"name":"pixel_dims","qualname":"::common::Info::pixel_dims","value":"std::option::Option<common::PixelDimensions>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1360},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21638,"byte_end":21645,"line_start":489,"line_end":489,"column_start":9,"column_end":16},"name":"palette","qualname":"::common::Info::palette","value":"std::option::Option<std::borrow::Cow<'a, [u8]>>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" The image's `PLTE` chunk, if present; contains the RGB channels (in that order) of the image's palettes, 3 bytes per entry (1 per channel).\n","sig":null,"attributes":[{"value":"/ The image's `PLTE` chunk, if present; contains the RGB channels (in that order) of the image's palettes, 3 bytes per entry (1 per channel).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21486,"byte_end":21629,"line_start":488,"line_end":488,"column_start":5,"column_end":148}}]},{"kind":"Field","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21828,"byte_end":21838,"line_start":492,"line_end":492,"column_start":9,"column_end":19},"name":"gama_chunk","qualname":"::common::Info::gama_chunk","value":"std::option::Option<common::ScaledFloat>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" The contents of the image's gAMA chunk, if present.\n Prefer `source_gamma` to also get the derived replacement gamma from sRGB chunks.\n","sig":null,"attributes":[{"value":"/ The contents of the image's gAMA chunk, if present.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21674,"byte_end":21729,"line_start":490,"line_end":490,"column_start":5,"column_end":60}},{"value":"/ Prefer `source_gamma` to also get the derived replacement gamma from sRGB chunks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21734,"byte_end":21819,"line_start":491,"line_end":491,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":1362},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22025,"byte_end":22035,"line_start":495,"line_end":495,"column_start":9,"column_end":19},"name":"chrm_chunk","qualname":"::common::Info::chrm_chunk","value":"std::option::Option<common::SourceChromaticities>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" The contents of the image's `cHRM` chunk, if present.\n Prefer `source_chromaticities` to also get the derived replacements from sRGB chunks.\n","sig":null,"attributes":[{"value":"/ The contents of the image's `cHRM` chunk, if present.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21865,"byte_end":21922,"line_start":493,"line_end":493,"column_start":5,"column_end":62}},{"value":"/ Prefer `source_chromaticities` to also get the derived replacements from sRGB chunks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":21927,"byte_end":22016,"line_start":494,"line_end":494,"column_start":5,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22076,"byte_end":22089,"line_start":497,"line_end":497,"column_start":9,"column_end":22},"name":"frame_control","qualname":"::common::Info::frame_control","value":"std::option::Option<common::FrameControl>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22121,"byte_end":22138,"line_start":498,"line_end":498,"column_start":9,"column_end":26},"name":"animation_control","qualname":"::common::Info::animation_control","value":"std::option::Option<common::AnimationControl>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22174,"byte_end":22185,"line_start":499,"line_end":499,"column_start":9,"column_end":20},"name":"compression","qualname":"::common::Info::compression","value":"common::Compression","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22316,"byte_end":22328,"line_start":502,"line_end":502,"column_start":9,"column_end":21},"name":"source_gamma","qualname":"::common::Info::source_gamma","value":"std::option::Option<common::ScaledFloat>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" Gamma of the source system.\n Set by both `gAMA` as well as to a replacement by `sRGB` chunk.\n","sig":null,"attributes":[{"value":"/ Gamma of the source system.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22204,"byte_end":22235,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ Set by both `gAMA` as well as to a replacement by `sRGB` chunk.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22240,"byte_end":22307,"line_start":501,"line_end":501,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22476,"byte_end":22497,"line_start":505,"line_end":505,"column_start":9,"column_end":30},"name":"source_chromaticities","qualname":"::common::Info::source_chromaticities","value":"std::option::Option<common::SourceChromaticities>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" Chromaticities of the source system.\n Set by both `cHRM` as well as to a replacement by `sRGB` chunk.\n","sig":null,"attributes":[{"value":"/ Chromaticities of the source system.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22355,"byte_end":22395,"line_start":503,"line_end":503,"column_start":5,"column_end":45}},{"value":"/ Set by both `cHRM` as well as to a replacement by `sRGB` chunk.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22400,"byte_end":22467,"line_start":504,"line_end":504,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22687,"byte_end":22691,"line_start":509,"line_end":509,"column_start":9,"column_end":13},"name":"srgb","qualname":"::common::Info::srgb","value":"std::option::Option<common::SrgbRenderingIntent>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" The rendering intent of an SRGB image.","sig":null,"attributes":[{"value":"/ The rendering intent of an SRGB image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22533,"byte_end":22575,"line_start":506,"line_end":506,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22580,"byte_end":22583,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Presence of this value also indicates that the image conforms to the SRGB color space.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22588,"byte_end":22678,"line_start":508,"line_end":508,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22769,"byte_end":22780,"line_start":511,"line_end":511,"column_start":9,"column_end":20},"name":"icc_profile","qualname":"::common::Info::icc_profile","value":"std::option::Option<std::borrow::Cow<'a, [u8]>>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" The ICC profile for the image.\n","sig":null,"attributes":[{"value":"/ The ICC profile for the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22726,"byte_end":22760,"line_start":510,"line_end":510,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22832,"byte_end":22856,"line_start":513,"line_end":513,"column_start":9,"column_end":33},"name":"uncompressed_latin1_text","qualname":"::common::Info::uncompressed_latin1_text","value":"std::vec::Vec<text_metadata::TEXtChunk>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" tEXt field\n","sig":null,"attributes":[{"value":"/ tEXt field","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22809,"byte_end":22823,"line_start":512,"line_end":512,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22901,"byte_end":22923,"line_start":515,"line_end":515,"column_start":9,"column_end":31},"name":"compressed_latin1_text","qualname":"::common::Info::compressed_latin1_text","value":"std::vec::Vec<text_metadata::ZTXtChunk>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" zTXt field\n","sig":null,"attributes":[{"value":"/ zTXt field","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22878,"byte_end":22892,"line_start":514,"line_end":514,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22968,"byte_end":22977,"line_start":517,"line_end":517,"column_start":9,"column_end":18},"name":"utf8_text","qualname":"::common::Info::utf8_text","value":"std::vec::Vec<text_metadata::ITXtChunk>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" iTXt field\n","sig":null,"attributes":[{"value":"/ iTXt field","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":22945,"byte_end":22959,"line_start":516,"line_end":516,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":23033,"byte_end":23040,"line_start":521,"line_end":521,"column_start":8,"column_end":15},"name":"default","qualname":"<Info as std::default::Default>::default","value":"fn default() -> Info","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":24013,"byte_end":24022,"line_start":551,"line_end":551,"column_start":12,"column_end":21},"name":"with_size","qualname":"<Info>::with_size","value":"fn with_size(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A utility constructor for a default info with width and height.\n","sig":null,"attributes":[{"value":"/ A utility constructor for a default info with width and height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":23934,"byte_end":24001,"line_start":550,"line_end":550,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":24219,"byte_end":24223,"line_start":560,"line_end":560,"column_start":12,"column_end":16},"name":"size","qualname":"<Info>::size","value":"fn size<'_>(&'_ Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Size of the image, width then height.\n","sig":null,"attributes":[{"value":"/ Size of the image, width then height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":24166,"byte_end":24207,"line_start":559,"line_end":559,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":24351,"byte_end":24362,"line_start":565,"line_end":565,"column_start":12,"column_end":23},"name":"is_animated","qualname":"<Info>::is_animated","value":"fn is_animated<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the image is an APNG image.\n","sig":null,"attributes":[{"value":"/ Returns true if the image is an APNG image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":24292,"byte_end":24339,"line_start":564,"line_end":564,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":24531,"byte_end":24548,"line_start":570,"line_end":570,"column_start":12,"column_end":29},"name":"animation_control","qualname":"<Info>::animation_control","value":"fn animation_control<'_>(&'_ Self) -> Option<&'_ AnimationControl>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frame control information of the image.\n","sig":null,"attributes":[{"value":"/ Returns the frame control information of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":24464,"byte_end":24519,"line_start":569,"line_end":569,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":24712,"byte_end":24725,"line_start":575,"line_end":575,"column_start":12,"column_end":25},"name":"frame_control","qualname":"<Info>::frame_control","value":"fn frame_control<'_>(&'_ Self) -> Option<&'_ FrameControl>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frame control information of the current frame\n","sig":null,"attributes":[{"value":"/ Returns the frame control information of the current frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":24638,"byte_end":24700,"line_start":574,"line_end":574,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":24860,"byte_end":24874,"line_start":580,"line_end":580,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<Info>::bits_per_pixel","value":"fn bits_per_pixel<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits per pixel.\n","sig":null,"attributes":[{"value":"/ Returns the number of bits per pixel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":24807,"byte_end":24848,"line_start":579,"line_end":579,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":25018,"byte_end":25033,"line_start":585,"line_end":585,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<Info>::bytes_per_pixel","value":"fn bytes_per_pixel<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes per pixel.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes per pixel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":24964,"byte_end":25006,"line_start":584,"line_end":584,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":26424,"byte_end":26433,"line_start":611,"line_end":611,"column_start":12,"column_end":21},"name":"raw_bytes","qualname":"<Info>::raw_bytes","value":"fn raw_bytes<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes needed for one deinterlaced image.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes needed for one deinterlaced image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":26346,"byte_end":26412,"line_start":610,"line_end":610,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":26592,"byte_end":26606,"line_start":616,"line_end":616,"column_start":12,"column_end":26},"name":"raw_row_length","qualname":"<Info>::raw_row_length","value":"fn raw_row_length<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes needed for one deinterlaced row.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes needed for one deinterlaced row.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":26516,"byte_end":26580,"line_start":615,"line_end":615,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":26942,"byte_end":26967,"line_start":626,"line_end":626,"column_start":12,"column_end":37},"name":"raw_row_length_from_width","qualname":"<Info>::raw_row_length_from_width","value":"fn raw_row_length_from_width<'_>(&'_ Self, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes needed for one deinterlaced row of width `width`.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes needed for one deinterlaced row of width `width`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":26849,"byte_end":26930,"line_start":625,"line_end":625,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":27313,"byte_end":27319,"line_start":635,"line_end":635,"column_start":12,"column_end":18},"name":"encode","qualname":"<Info>::encode","value":"fn encode<W, '_>(&'_ Self, W) -> encoder::Result<()> where W: Write","parent":null,"children":[],"decl_id":null,"docs":" Encode this header to the writer.","sig":null,"attributes":[{"value":"/ Encode this header to the writer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":27095,"byte_end":27132,"line_start":631,"line_end":631,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":27137,"byte_end":27140,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ Note that this does _not_ include the PNG signature, it starts with the IHDR chunk and then","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":27145,"byte_end":27240,"line_start":633,"line_end":633,"column_start":5,"column_end":100}},{"value":"/ includes other chunks that were added to the header.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":27245,"byte_end":27301,"line_start":634,"line_end":634,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":30714,"byte_end":30729,"line_start":730,"line_end":730,"column_start":16,"column_end":31},"name":"Transformations","qualname":"::common::Transformations","value":"Transformations {  }","parent":null,"children":[{"krate":0,"index":1380}],"decl_id":null,"docs":" Output transformations","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":30781,"byte_end":30789,"line_start":732,"line_end":732,"column_start":15,"column_end":23},"name":"IDENTITY","qualname":"::common::Transformations::IDENTITY","value":"Self","parent":{"krate":0,"index":1413},"children":[],"decl_id":null,"docs":" No transformation\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":30889,"byte_end":30897,"line_start":734,"line_end":734,"column_start":15,"column_end":23},"name":"STRIP_16","qualname":"::common::Transformations::STRIP_16","value":"Self","parent":{"krate":0,"index":1413},"children":[],"decl_id":null,"docs":" Strip 16-bit samples to 8 bits\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":31123,"byte_end":31129,"line_start":738,"line_end":738,"column_start":15,"column_end":21},"name":"EXPAND","qualname":"::common::Transformations::EXPAND","value":"Self","parent":{"krate":0,"index":1413},"children":[],"decl_id":null,"docs":" Expand paletted images to RGB; expand grayscale images of\n less than 8-bit depth to 8-bit depth; and expand tRNS chunks\n to alpha channels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":31413,"byte_end":31432,"line_start":747,"line_end":747,"column_start":12,"column_end":31},"name":"normalize_to_color8","qualname":"<Transformations>::normalize_to_color8","value":"fn normalize_to_color8() -> Transformations","parent":null,"children":[],"decl_id":null,"docs":" Transform every input to 8bit grayscale or color.","sig":null,"attributes":[{"value":"/ Transform every input to 8bit grayscale or color.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":31205,"byte_end":31258,"line_start":743,"line_end":743,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":31263,"byte_end":31266,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ This sets `EXPAND` and `STRIP_16` which is similar to the default transformation used by","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":31271,"byte_end":31363,"line_start":745,"line_end":745,"column_start":5,"column_end":97}},{"value":"/ this library prior to `0.17`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":31368,"byte_end":31401,"line_start":746,"line_end":746,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":31636,"byte_end":31643,"line_start":754,"line_end":754,"column_start":8,"column_end":15},"name":"default","qualname":"<Transformations as std::default::Default>::default","value":"fn default() -> Transformations","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":31738,"byte_end":31752,"line_start":760,"line_end":760,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::common::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":1477}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":32879,"byte_end":32883,"line_start":782,"line_end":782,"column_start":8,"column_end":12},"name":"from","qualname":"<ParameterError as std::convert::From>::from","value":"fn from(ParameterErrorKind) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":33009,"byte_end":33012,"line_start":788,"line_end":788,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParameterError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1533},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70219,"byte_end":70226,"line_start":54,"line_end":54,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::decoder::stream::Decoded::Nothing","value":"Decoded::Nothing","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" Nothing decoded yet\n","sig":null,"attributes":[{"value":"/ Nothing decoded yet","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70191,"byte_end":70214,"line_start":53,"line_end":53,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70232,"byte_end":70238,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Header","qualname":"::decoder::stream::Decoded::Header","value":"Decoded::Header(u32, u32, BitDepth, ColorType, bool)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1537},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70239,"byte_end":70242,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"0","qualname":"::decoder::stream::Decoded::Header::0","value":"u32","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70244,"byte_end":70247,"line_start":55,"line_end":55,"column_start":17,"column_end":20},"name":"1","qualname":"::decoder::stream::Decoded::Header::1","value":"u32","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70249,"byte_end":70257,"line_start":55,"line_end":55,"column_start":22,"column_end":30},"name":"2","qualname":"::decoder::stream::Decoded::Header::2","value":"common::BitDepth","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70259,"byte_end":70268,"line_start":55,"line_end":55,"column_start":32,"column_end":41},"name":"3","qualname":"::decoder::stream::Decoded::Header::3","value":"common::ColorType","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1541},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70270,"byte_end":70274,"line_start":55,"line_end":55,"column_start":43,"column_end":47},"name":"4","qualname":"::decoder::stream::Decoded::Header::4","value":"bool","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70281,"byte_end":70291,"line_start":56,"line_end":56,"column_start":5,"column_end":15},"name":"ChunkBegin","qualname":"::decoder::stream::Decoded::ChunkBegin","value":"Decoded::ChunkBegin(u32, ChunkType)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70292,"byte_end":70295,"line_start":56,"line_end":56,"column_start":16,"column_end":19},"name":"0","qualname":"::decoder::stream::Decoded::ChunkBegin::0","value":"u32","parent":{"krate":0,"index":1542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70297,"byte_end":70306,"line_start":56,"line_end":56,"column_start":21,"column_end":30},"name":"1","qualname":"::decoder::stream::Decoded::ChunkBegin::1","value":"chunk::ChunkType","parent":{"krate":0,"index":1542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70313,"byte_end":70326,"line_start":57,"line_end":57,"column_start":5,"column_end":18},"name":"ChunkComplete","qualname":"::decoder::stream::Decoded::ChunkComplete","value":"Decoded::ChunkComplete(u32, ChunkType)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70327,"byte_end":70330,"line_start":57,"line_end":57,"column_start":19,"column_end":22},"name":"0","qualname":"::decoder::stream::Decoded::ChunkComplete::0","value":"u32","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1549},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70332,"byte_end":70341,"line_start":57,"line_end":57,"column_start":24,"column_end":33},"name":"1","qualname":"::decoder::stream::Decoded::ChunkComplete::1","value":"chunk::ChunkType","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70348,"byte_end":70363,"line_start":58,"line_end":58,"column_start":5,"column_end":20},"name":"PixelDimensions","qualname":"::decoder::stream::Decoded::PixelDimensions","value":"Decoded::PixelDimensions(PixelDimensions)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70364,"byte_end":70379,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"name":"0","qualname":"::decoder::stream::Decoded::PixelDimensions::0","value":"common::PixelDimensions","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70386,"byte_end":70402,"line_start":59,"line_end":59,"column_start":5,"column_end":21},"name":"AnimationControl","qualname":"::decoder::stream::Decoded::AnimationControl","value":"Decoded::AnimationControl(AnimationControl)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70403,"byte_end":70419,"line_start":59,"line_end":59,"column_start":22,"column_end":38},"name":"0","qualname":"::decoder::stream::Decoded::AnimationControl::0","value":"common::AnimationControl","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70426,"byte_end":70438,"line_start":60,"line_end":60,"column_start":5,"column_end":17},"name":"FrameControl","qualname":"::decoder::stream::Decoded::FrameControl","value":"Decoded::FrameControl(FrameControl)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1558},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70439,"byte_end":70451,"line_start":60,"line_end":60,"column_start":18,"column_end":30},"name":"0","qualname":"::decoder::stream::Decoded::FrameControl::0","value":"common::FrameControl","parent":{"krate":0,"index":1556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1559},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70490,"byte_end":70499,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"name":"ImageData","qualname":"::decoder::stream::Decoded::ImageData","value":"Decoded::ImageData","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" Decoded raw image data.\n","sig":null,"attributes":[{"value":"/ Decoded raw image data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70458,"byte_end":70485,"line_start":61,"line_end":61,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1561},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70714,"byte_end":70730,"line_start":66,"line_end":66,"column_start":5,"column_end":21},"name":"ImageDataFlushed","qualname":"::decoder::stream::Decoded::ImageDataFlushed","value":"Decoded::ImageDataFlushed","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" The last of a consecutive chunk of IDAT was done.\n This is distinct from ChunkComplete which only marks that some IDAT chunk was completed but\n not that no additional IDAT chunk follows.\n","sig":null,"attributes":[{"value":"/ The last of a consecutive chunk of IDAT was done.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70505,"byte_end":70558,"line_start":63,"line_end":63,"column_start":5,"column_end":58}},{"value":"/ This is distinct from ChunkComplete which only marks that some IDAT chunk was completed but","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70563,"byte_end":70658,"line_start":64,"line_end":64,"column_start":5,"column_end":100}},{"value":"/ not that no additional IDAT chunk follows.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70663,"byte_end":70709,"line_start":65,"line_end":65,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1563},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70736,"byte_end":70748,"line_start":67,"line_end":67,"column_start":5,"column_end":17},"name":"PartialChunk","qualname":"::decoder::stream::Decoded::PartialChunk","value":"Decoded::PartialChunk(ChunkType)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70749,"byte_end":70758,"line_start":67,"line_end":67,"column_start":18,"column_end":27},"name":"0","qualname":"::decoder::stream::Decoded::PartialChunk::0","value":"chunk::ChunkType","parent":{"krate":0,"index":1563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1566},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70765,"byte_end":70773,"line_start":68,"line_end":68,"column_start":5,"column_end":13},"name":"ImageEnd","qualname":"::decoder::stream::Decoded::ImageEnd","value":"Decoded::ImageEnd","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70177,"byte_end":70184,"line_start":52,"line_end":52,"column_start":10,"column_end":17},"name":"Decoded","qualname":"::decoder::stream::Decoded","value":"enum Decoded {\n    Nothing,\n    Header(u32, u32, BitDepth, ColorType, bool),\n    ChunkBegin(u32, ChunkType),\n    ChunkComplete(u32, ChunkType),\n    PixelDimensions(PixelDimensions),\n    AnimationControl(AnimationControl),\n    FrameControl(FrameControl),\n    ImageData,\n    ImageDataFlushed,\n    PartialChunk(ChunkType),\n    ImageEnd,\n}","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1542},{"krate":0,"index":1546},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1566}],"decl_id":null,"docs":" Result of the decoding process\n","sig":null,"attributes":[{"value":"/ Result of the decoding process","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70133,"byte_end":70167,"line_start":51,"line_end":51,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71206,"byte_end":71213,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"IoError","qualname":"::decoder::stream::DecodingError::IoError","value":"DecodingError::IoError(io::Error)","parent":{"krate":0,"index":1570},"children":[],"decl_id":null,"docs":" An error in IO of the underlying reader.\n","sig":null,"attributes":[{"value":"/ An error in IO of the underlying reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71157,"byte_end":71201,"line_start":78,"line_end":78,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1573},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71214,"byte_end":71223,"line_start":79,"line_end":79,"column_start":13,"column_end":22},"name":"0","qualname":"::decoder::stream::DecodingError::IoError::0","value":"std::io::Error","parent":{"krate":0,"index":1571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1574},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71625,"byte_end":71631,"line_start":86,"line_end":86,"column_start":5,"column_end":11},"name":"Format","qualname":"::decoder::stream::DecodingError::Format","value":"DecodingError::Format(FormatError)","parent":{"krate":0,"index":1570},"children":[],"decl_id":null,"docs":" The input image was not a valid PNG.","sig":null,"attributes":[{"value":"/ The input image was not a valid PNG.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71230,"byte_end":71270,"line_start":80,"line_end":80,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71275,"byte_end":71278,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ There isn't a lot that can be done here, except if the program itself was responsible for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71283,"byte_end":71376,"line_start":82,"line_end":82,"column_start":5,"column_end":98}},{"value":"/ creating this image then investigate the generator. This is internally implemented with a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71381,"byte_end":71474,"line_start":83,"line_end":83,"column_start":5,"column_end":98}},{"value":"/ large Enum. If You are interested in accessing some of the more exact information on the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71479,"byte_end":71571,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ variant then we can discuss in an issue.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71576,"byte_end":71620,"line_start":85,"line_end":85,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1576},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71632,"byte_end":71643,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"0","qualname":"::decoder::stream::DecodingError::Format::0","value":"decoder::stream::FormatError","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72471,"byte_end":72480,"line_start":102,"line_end":102,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::decoder::stream::DecodingError::Parameter","value":"DecodingError::Parameter(ParameterError)","parent":{"krate":0,"index":1570},"children":[],"decl_id":null,"docs":" An interface was used incorrectly.","sig":null,"attributes":[{"value":"/ An interface was used incorrectly.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71650,"byte_end":71688,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71693,"byte_end":71696,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This is used in cases where it's expected that the programmer might trip up and stability","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71701,"byte_end":71794,"line_start":89,"line_end":89,"column_start":5,"column_end":98}},{"value":"/ could be affected. For example when:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71799,"byte_end":71839,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71844,"byte_end":71847,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ * The decoder is polled for more animation frames despite being done (or not being animated","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71852,"byte_end":71947,"line_start":92,"line_end":92,"column_start":5,"column_end":100}},{"value":"/   in the first place).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71952,"byte_end":71978,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/ * The output buffer does not have the required size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71983,"byte_end":72039,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72044,"byte_end":72047,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ As a rough guideline for introducing new variants parts of the requirements are dynamically","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72052,"byte_end":72147,"line_start":96,"line_end":96,"column_start":5,"column_end":100}},{"value":"/ derived from the (untrusted) input data while the other half is from the caller. In the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72152,"byte_end":72243,"line_start":97,"line_end":97,"column_start":5,"column_end":96}},{"value":"/ above cases the number of frames respectively the size is determined by the file while the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72248,"byte_end":72342,"line_start":98,"line_end":98,"column_start":5,"column_end":99}},{"value":"/ number of calls","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72347,"byte_end":72366,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72371,"byte_end":72374,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If you're an application you might want to signal that a bug report is appreciated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72379,"byte_end":72466,"line_start":101,"line_end":101,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":1579},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72481,"byte_end":72495,"line_start":102,"line_end":102,"column_start":15,"column_end":29},"name":"0","qualname":"::decoder::stream::DecodingError::Parameter::0","value":"common::ParameterError","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1580},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72895,"byte_end":72909,"line_start":110,"line_end":110,"column_start":5,"column_end":19},"name":"LimitsExceeded","qualname":"::decoder::stream::DecodingError::LimitsExceeded","value":"DecodingError::LimitsExceeded","parent":{"krate":0,"index":1570},"children":[],"decl_id":null,"docs":" The image would have required exceeding the limits configured with the decoder.","sig":null,"attributes":[{"value":"/ The image would have required exceeding the limits configured with the decoder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72502,"byte_end":72585,"line_start":103,"line_end":103,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72590,"byte_end":72593,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that Your allocations, e.g. when reading into a pre-allocated buffer, is __NOT__","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72598,"byte_end":72687,"line_start":105,"line_end":105,"column_start":5,"column_end":94}},{"value":"/ considered part of the limits. Nevertheless, required intermediate buffers such as for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72692,"byte_end":72782,"line_start":106,"line_end":106,"column_start":5,"column_end":95}},{"value":"/ singular lines is checked against the limit.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72787,"byte_end":72835,"line_start":107,"line_end":107,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72840,"byte_end":72843,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Note that this is a best-effort basis.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72848,"byte_end":72890,"line_start":109,"line_end":109,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71137,"byte_end":71150,"line_start":77,"line_end":77,"column_start":10,"column_end":23},"name":"DecodingError","qualname":"::decoder::stream::DecodingError","value":"enum DecodingError {\n    IoError(io::Error),\n    Format(FormatError),\n    Parameter(ParameterError),\n    LimitsExceeded,\n}","parent":null,"children":[{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":1577},{"krate":0,"index":1580}],"decl_id":null,"docs":" Any kind of error during PNG decoding.","sig":null,"attributes":[{"value":"/ Any kind of error during PNG decoding.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70778,"byte_end":70820,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70821,"byte_end":70824,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This enumeration provides a very rough analysis on the origin of the failure. That is, each","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70825,"byte_end":70920,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ variant corresponds to one kind of actor causing the error. It should not be understood as a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":70921,"byte_end":71017,"line_start":74,"line_end":74,"column_start":1,"column_end":97}},{"value":"/ direct blame but can inform the search for a root cause or if such a search is required.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":71018,"byte_end":71110,"line_start":75,"line_end":75,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1584},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":72942,"byte_end":72953,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"FormatError","qualname":"::decoder::stream::FormatError","value":"FormatError {  }","parent":null,"children":[{"krate":0,"index":1585}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":75942,"byte_end":75947,"line_start":213,"line_end":213,"column_start":8,"column_end":13},"name":"cause","qualname":"<DecodingError as std::error::Error>::cause","value":"fn cause<'_>(&'_ Self) -> Option<&'_ dyn error::Error + 'static>","parent":{"krate":1,"index":2576},"children":[],"decl_id":{"krate":1,"index":2580},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":76160,"byte_end":76163,"line_start":222,"line_end":222,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DecodingError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":76572,"byte_end":76575,"line_start":234,"line_end":234,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FormatError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":82703,"byte_end":82707,"line_start":351,"line_end":351,"column_start":8,"column_end":12},"name":"from","qualname":"<DecodingError as std::convert::From>::from","value":"fn from(io::Error) -> DecodingError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":82838,"byte_end":82842,"line_start":357,"line_end":357,"column_start":8,"column_end":12},"name":"from","qualname":"<DecodingError as std::convert::From>::from","value":"fn from(FormatError) -> DecodingError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":82977,"byte_end":82981,"line_start":363,"line_end":363,"column_start":8,"column_end":12},"name":"from","qualname":"<FormatError as std::convert::From>::from","value":"fn from(FormatErrorInner) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":83104,"byte_end":83108,"line_start":369,"line_end":369,"column_start":8,"column_end":12},"name":"from","qualname":"<io::Error as std::convert::From>::from","value":"fn from(DecodingError) -> io::Error","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":83361,"byte_end":83365,"line_start":378,"line_end":378,"column_start":8,"column_end":12},"name":"from","qualname":"<DecodingError as std::convert::From>::from","value":"fn from(TextDecodingError) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":83835,"byte_end":83851,"line_start":398,"line_end":398,"column_start":12,"column_end":28},"name":"StreamingDecoder","qualname":"::decoder::stream::StreamingDecoder","value":"StreamingDecoder {  }","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"decl_id":null,"docs":" PNG StreamingDecoder (low-level interface)\n","sig":null,"attributes":[{"value":"/ PNG StreamingDecoder (low-level interface)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":83777,"byte_end":83823,"line_start":397,"line_end":397,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":84804,"byte_end":84807,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamingDecoder>::new","value":"fn new() -> StreamingDecoder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new StreamingDecoder","sig":null,"attributes":[{"value":"/ Creates a new StreamingDecoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":84710,"byte_end":84744,"line_start":429,"line_end":429,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":84749,"byte_end":84752,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ Allocates the internal buffers.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":84757,"byte_end":84792,"line_start":431,"line_end":431,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":85245,"byte_end":85250,"line_start":446,"line_end":446,"column_start":12,"column_end":17},"name":"reset","qualname":"<StreamingDecoder>::reset","value":"fn reset<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the StreamingDecoder\n","sig":null,"attributes":[{"value":"/ Resets the StreamingDecoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":85202,"byte_end":85233,"line_start":445,"line_end":445,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":85699,"byte_end":85703,"line_start":459,"line_end":459,"column_start":12,"column_end":16},"name":"info","qualname":"<StreamingDecoder>::info","value":"fn info<'_>(&'_ Self) -> Option<&'_ Info>","parent":null,"children":[],"decl_id":null,"docs":" Provides access to the inner `info` field\n","sig":null,"attributes":[{"value":"/ Provides access to the inner `info` field","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":85642,"byte_end":85687,"line_start":458,"line_end":458,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":85939,"byte_end":85960,"line_start":468,"line_end":468,"column_start":12,"column_end":33},"name":"set_ignore_text_chunk","qualname":"<StreamingDecoder>::set_ignore_text_chunk","value":"fn set_ignore_text_chunk<'_>(&'_ mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":86419,"byte_end":86425,"line_start":477,"line_end":477,"column_start":12,"column_end":18},"name":"update","qualname":"<StreamingDecoder>::update","value":"fn update<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ mut Vec<u8>)\n-> Result<(usize, Decoded), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Low level StreamingDecoder interface.","sig":null,"attributes":[{"value":"/ Low level StreamingDecoder interface.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":86079,"byte_end":86120,"line_start":472,"line_end":472,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":86125,"byte_end":86128,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Allows to stream partial data to the encoder. Returns a tuple containing the bytes that have","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":86133,"byte_end":86229,"line_start":474,"line_end":474,"column_start":5,"column_end":101}},{"value":"/ been consumed from the input buffer and the current decoding result. If the decoded chunk","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":86234,"byte_end":86327,"line_start":475,"line_end":475,"column_start":5,"column_end":98}},{"value":"/ was an image data chunk, it also appends the read data to `image_data`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":86332,"byte_end":86407,"line_start":476,"line_end":476,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":117072,"byte_end":117079,"line_start":1270,"line_end":1270,"column_start":8,"column_end":15},"name":"default","qualname":"<StreamingDecoder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34169,"byte_end":34179,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"OutputInfo","qualname":"::decoder::OutputInfo","value":"OutputInfo { width, height, color_type, bit_depth, line_size }","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679}],"decl_id":null,"docs":" Output info.","sig":null,"attributes":[{"value":"/ Output info.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34011,"byte_end":34027,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34028,"byte_end":34031,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This describes one particular frame of the image that was written into the output buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34032,"byte_end":34125,"line_start":31,"line_end":31,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34229,"byte_end":34234,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"width","qualname":"::decoder::OutputInfo::width","value":"u32","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" The pixel width of this frame.\n","sig":null,"attributes":[{"value":"/ The pixel width of this frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34186,"byte_end":34220,"line_start":34,"line_end":34,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34289,"byte_end":34295,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"name":"height","qualname":"::decoder::OutputInfo::height","value":"u32","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" The pixel height of this frame.\n","sig":null,"attributes":[{"value":"/ The pixel height of this frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34245,"byte_end":34280,"line_start":36,"line_end":36,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1677},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34348,"byte_end":34358,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"name":"color_type","qualname":"::decoder::OutputInfo::color_type","value":"common::ColorType","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" The chosen output color type.\n","sig":null,"attributes":[{"value":"/ The chosen output color type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34306,"byte_end":34339,"line_start":38,"line_end":38,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1678},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34416,"byte_end":34425,"line_start":41,"line_end":41,"column_start":9,"column_end":18},"name":"bit_depth","qualname":"::decoder::OutputInfo::bit_depth","value":"common::BitDepth","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" The chosen output bit depth.\n","sig":null,"attributes":[{"value":"/ The chosen output bit depth.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34375,"byte_end":34407,"line_start":40,"line_end":40,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1679},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34500,"byte_end":34509,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"name":"line_size","qualname":"::decoder::OutputInfo::line_size","value":"usize","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" The byte count of each scan line in the image.\n","sig":null,"attributes":[{"value":"/ The byte count of each scan line in the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34441,"byte_end":34491,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34735,"byte_end":34746,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"buffer_size","qualname":"<OutputInfo>::buffer_size","value":"fn buffer_size<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size needed to hold a decoded frame\n If the output buffer was larger then bytes after this count should be ignored. They may\n still have been changed.\n","sig":null,"attributes":[{"value":"/ Returns the size needed to hold a decoded frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34543,"byte_end":34594,"line_start":47,"line_end":47,"column_start":5,"column_end":56}},{"value":"/ If the output buffer was larger then bytes after this count should be ignored. They may","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34599,"byte_end":34690,"line_start":48,"line_end":48,"column_start":5,"column_end":96}},{"value":"/ still have been changed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34695,"byte_end":34723,"line_start":49,"line_end":49,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34922,"byte_end":34928,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"Limits","qualname":"::decoder::Limits","value":"Limits { bytes }","parent":null,"children":[{"krate":0,"index":1690}],"decl_id":null,"docs":" Limits on the resources the `Decoder` is allowed too use\n","sig":null,"attributes":[{"value":"/ Limits on the resources the `Decoder` is allowed too use","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34850,"byte_end":34910,"line_start":56,"line_end":56,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35024,"byte_end":35029,"line_start":59,"line_end":59,"column_start":9,"column_end":14},"name":"bytes","qualname":"::decoder::Limits::bytes","value":"usize","parent":{"krate":0,"index":1689},"children":[],"decl_id":null,"docs":" maximum number of bytes the decoder is allowed to allocate, default is 64Mib\n","sig":null,"attributes":[{"value":"/ maximum number of bytes the decoder is allowed to allocate, default is 64Mib","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34935,"byte_end":35015,"line_start":58,"line_end":58,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35074,"byte_end":35081,"line_start":63,"line_end":63,"column_start":8,"column_end":15},"name":"default","qualname":"<Limits as std::default::Default>::default","value":"fn default() -> Limits","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35196,"byte_end":35203,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467}],"decl_id":null,"docs":" PNG Decoder\n","sig":null,"attributes":[{"value":"/ PNG Decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35169,"byte_end":35184,"line_start":70,"line_end":70,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35522,"byte_end":35535,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"InterlacedRow","qualname":"::decoder::InterlacedRow","value":"InterlacedRow {  }","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1699}],"decl_id":null,"docs":" A row of data with interlace information attached.\n","sig":null,"attributes":[{"value":"/ A row of data with interlace information attached.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35426,"byte_end":35480,"line_start":80,"line_end":80,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35647,"byte_end":35651,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"data","qualname":"<InterlacedRow>::data","value":"fn data<'_>(&'_ Self) -> &'data [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35712,"byte_end":35721,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"interlace","qualname":"<InterlacedRow>::interlace","value":"fn interlace<'_>(&'_ Self) -> InterlaceInfo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1709},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35962,"byte_end":35966,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"Null","qualname":"::decoder::InterlaceInfo::Null","value":"InterlaceInfo::Null","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" the null method means no interlacing\n","sig":null,"attributes":[{"value":"/ the null method means no interlacing","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35917,"byte_end":35957,"line_start":100,"line_end":100,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":1711},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36400,"byte_end":36405,"line_start":113,"line_end":113,"column_start":5,"column_end":10},"name":"Adam7","qualname":"::decoder::InterlaceInfo::Adam7","value":"InterlaceInfo::Adam7 { pass, line, width }","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Adam7 derives its name from doing 7 passes over the image, only decoding a subset of all pixels in each pass.\n The following table shows pictorially what parts of each 8x8 area of the image is found in each pass:","sig":null,"attributes":[{"value":"/ Adam7 derives its name from doing 7 passes over the image, only decoding a subset of all pixels in each pass.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35972,"byte_end":36085,"line_start":102,"line_end":102,"column_start":5,"column_end":118}},{"value":"/ The following table shows pictorially what parts of each 8x8 area of the image is found in each pass:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36090,"byte_end":36195,"line_start":103,"line_end":103,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36200,"byte_end":36203,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ 1 6 4 6 2 6 4 6","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36208,"byte_end":36227,"line_start":105,"line_end":105,"column_start":5,"column_end":24}},{"value":"/ 7 7 7 7 7 7 7 7","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36232,"byte_end":36251,"line_start":106,"line_end":106,"column_start":5,"column_end":24}},{"value":"/ 5 6 5 6 5 6 5 6","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36256,"byte_end":36275,"line_start":107,"line_end":107,"column_start":5,"column_end":24}},{"value":"/ 7 7 7 7 7 7 7 7","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36280,"byte_end":36299,"line_start":108,"line_end":108,"column_start":5,"column_end":24}},{"value":"/ 3 6 4 6 3 6 4 6","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36304,"byte_end":36323,"line_start":109,"line_end":109,"column_start":5,"column_end":24}},{"value":"/ 7 7 7 7 7 7 7 7","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36328,"byte_end":36347,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ 5 6 5 6 5 6 5 6","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36352,"byte_end":36371,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/ 7 7 7 7 7 7 7 7","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36376,"byte_end":36395,"line_start":112,"line_end":112,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36408,"byte_end":36412,"line_start":113,"line_end":113,"column_start":13,"column_end":17},"name":"pass","qualname":"::decoder::InterlaceInfo::Adam7::pass","value":"u8","parent":{"krate":0,"index":1711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36418,"byte_end":36422,"line_start":113,"line_end":113,"column_start":23,"column_end":27},"name":"line","qualname":"::decoder::InterlaceInfo::Adam7::line","value":"u32","parent":{"krate":0,"index":1711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36429,"byte_end":36434,"line_start":113,"line_end":113,"column_start":34,"column_end":39},"name":"width","qualname":"::decoder::InterlaceInfo::Adam7::width","value":"u32","parent":{"krate":0,"index":1711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1708},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35897,"byte_end":35910,"line_start":99,"line_end":99,"column_start":10,"column_end":23},"name":"InterlaceInfo","qualname":"::decoder::InterlaceInfo","value":"enum InterlaceInfo {\n    Null,\n    Adam7 {\n            pass: u8,\n            line: u32,\n            width: u32,\n        },\n}","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1711}],"decl_id":null,"docs":" PNG (2003) specifies two interlace modes, but reserves future extensions.\n","sig":null,"attributes":[{"value":"/ PNG (2003) specifies two interlace modes, but reserves future extensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35780,"byte_end":35857,"line_start":97,"line_end":97,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36536,"byte_end":36539,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"Row","qualname":"::decoder::Row","value":"Row {  }","parent":null,"children":[{"krate":0,"index":1722}],"decl_id":null,"docs":" A row of data without interlace information.\n","sig":null,"attributes":[{"value":"/ A row of data without interlace information.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36446,"byte_end":36494,"line_start":116,"line_end":116,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36611,"byte_end":36615,"line_start":123,"line_end":123,"column_start":12,"column_end":16},"name":"data","qualname":"<Row>::data","value":"fn data<'_>(&'_ Self) -> &'data [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36769,"byte_end":36772,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"fn new(R) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder configuration with default limits.\n","sig":null,"attributes":[{"value":"/ Create a new decoder configuration with default limits.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36698,"byte_end":36757,"line_start":129,"line_end":129,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36931,"byte_end":36946,"line_start":135,"line_end":135,"column_start":12,"column_end":27},"name":"new_with_limits","qualname":"<Decoder<R>>::new_with_limits","value":"fn new_with_limits(R, Limits) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder configuration with custom limits.\n","sig":null,"attributes":[{"value":"/ Create a new decoder configuration with custom limits.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36861,"byte_end":36919,"line_start":134,"line_end":134,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38448,"byte_end":38458,"line_start":171,"line_end":171,"column_start":12,"column_end":22},"name":"set_limits","qualname":"<Decoder<R>>::set_limits","value":"fn set_limits<'_>(&'_ mut Self, Limits)","parent":null,"children":[],"decl_id":null,"docs":" Limit resource usage.","sig":null,"attributes":[{"value":"/ Limit resource usage.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37355,"byte_end":37380,"line_start":148,"line_end":148,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37385,"byte_end":37388,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Note that your allocations, e.g. when reading into a pre-allocated buffer, are __NOT__","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37393,"byte_end":37483,"line_start":150,"line_end":150,"column_start":5,"column_end":95}},{"value":"/ considered part of the limits. Nevertheless, required intermediate buffers such as for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37488,"byte_end":37578,"line_start":151,"line_end":151,"column_start":5,"column_end":95}},{"value":"/ singular lines is checked against the limit.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37583,"byte_end":37631,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37636,"byte_end":37639,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Note that this is a best-effort basis.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37644,"byte_end":37686,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37691,"byte_end":37694,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37699,"byte_end":37706,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37711,"byte_end":37733,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/ use png::{Decoder, Limits};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37738,"byte_end":37769,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/ // This image is 32×32, 1bit per pixel. The reader buffers one row which requires 4 bytes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37774,"byte_end":37869,"line_start":159,"line_end":159,"column_start":5,"column_end":99}},{"value":"/ let mut limits = Limits::default();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37874,"byte_end":37913,"line_start":160,"line_end":160,"column_start":5,"column_end":44}},{"value":"/ limits.bytes = 3;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37918,"byte_end":37939,"line_start":161,"line_end":161,"column_start":5,"column_end":26}},{"value":"/ let mut decoder = Decoder::new_with_limits(File::open(\"tests/pngsuite/basi0g01.png\").unwrap(), limits);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":37944,"byte_end":38051,"line_start":162,"line_end":162,"column_start":5,"column_end":112}},{"value":"/ assert!(decoder.read_info().is_err());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38056,"byte_end":38098,"line_start":163,"line_end":163,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38103,"byte_end":38106,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // This image is 32x32 pixels, so the decoder will allocate less than 10Kib","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38111,"byte_end":38190,"line_start":165,"line_end":165,"column_start":5,"column_end":84}},{"value":"/ let mut limits = Limits::default();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38195,"byte_end":38234,"line_start":166,"line_end":166,"column_start":5,"column_end":44}},{"value":"/ limits.bytes = 10*1024;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38239,"byte_end":38266,"line_start":167,"line_end":167,"column_start":5,"column_end":32}},{"value":"/ let mut decoder = Decoder::new_with_limits(File::open(\"tests/pngsuite/basi0g01.png\").unwrap(), limits);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38271,"byte_end":38378,"line_start":168,"line_end":168,"column_start":5,"column_end":112}},{"value":"/ assert!(decoder.read_info().is_ok());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38383,"byte_end":38424,"line_start":169,"line_end":169,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38429,"byte_end":38436,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38738,"byte_end":38754,"line_start":179,"line_end":179,"column_start":12,"column_end":28},"name":"read_header_info","qualname":"<Decoder<R>>::read_header_info","value":"fn read_header_info<'_>(&'_ mut Self) -> Result<&'_ Info, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Read the PNG header and return the information contained within.","sig":null,"attributes":[{"value":"/ Read the PNG header and return the information contained within.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38529,"byte_end":38597,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38602,"byte_end":38605,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Most image metadata will not be read until `read_info` is called, so those fields will be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38610,"byte_end":38703,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/ None or empty.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":38708,"byte_end":38726,"line_start":178,"line_end":178,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":39199,"byte_end":39208,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"read_info","qualname":"<Decoder<R>>::read_info","value":"fn read_info(Self) -> Result<Reader<R>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads all meta data until the first IDAT chunk\n","sig":null,"attributes":[{"value":"/ Reads all meta data until the first IDAT chunk","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":39137,"byte_end":39187,"line_start":190,"line_end":190,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":39797,"byte_end":39816,"line_start":207,"line_end":207,"column_start":12,"column_end":31},"name":"set_transformations","qualname":"<Decoder<R>>::set_transformations","value":"fn set_transformations<'_>(&'_ mut Self, Transformations)","parent":null,"children":[],"decl_id":null,"docs":" Set the allowed and performed transformations.","sig":null,"attributes":[{"value":"/ Set the allowed and performed transformations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":39553,"byte_end":39603,"line_start":203,"line_end":203,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":39608,"byte_end":39611,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ A transformation is a pre-processing on the raw image data modifying content or encoding.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":39616,"byte_end":39709,"line_start":205,"line_end":205,"column_start":5,"column_end":98}},{"value":"/ Many options have an impact on memory or CPU usage during decoding.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":39714,"byte_end":39785,"line_start":206,"line_end":206,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":40257,"byte_end":40278,"line_start":221,"line_end":221,"column_start":12,"column_end":33},"name":"set_ignore_text_chunk","qualname":"<Decoder<R>>::set_ignore_text_chunk","value":"fn set_ignore_text_chunk<'_>(&'_ mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set the decoder to ignore all text chunks while parsing.","sig":null,"attributes":[{"value":"/ Set the decoder to ignore all text chunks while parsing.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":39905,"byte_end":39965,"line_start":211,"line_end":211,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":39970,"byte_end":39973,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ eg.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":39978,"byte_end":39985,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":39990,"byte_end":39997,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":40002,"byte_end":40024,"line_start":215,"line_end":215,"column_start":5,"column_end":27}},{"value":"/ use png::Decoder;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":40029,"byte_end":40050,"line_start":216,"line_end":216,"column_start":5,"column_end":26}},{"value":"/ let mut decoder = Decoder::new(File::open(\"tests/pngsuite/basi0g01.png\").unwrap());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":40055,"byte_end":40142,"line_start":217,"line_end":217,"column_start":5,"column_end":92}},{"value":"/ decoder.set_ignore_text_chunk(true);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":40147,"byte_end":40187,"line_start":218,"line_end":218,"column_start":5,"column_end":45}},{"value":"/ assert!(decoder.read_info().is_ok());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":40192,"byte_end":40233,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":40238,"byte_end":40245,"line_start":220,"line_end":220,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":42604,"byte_end":42610,"line_start":290,"line_end":290,"column_start":12,"column_end":18},"name":"Reader","qualname":"::decoder::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506}],"decl_id":null,"docs":" PNG reader (mostly high-level interface)","sig":null,"attributes":[{"value":"/ PNG reader (mostly high-level interface)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":42476,"byte_end":42520,"line_start":287,"line_end":287,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":42521,"byte_end":42524,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ Provides a high level that iterates over lines or whole images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":42525,"byte_end":42592,"line_start":289,"line_end":289,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":48379,"byte_end":48383,"line_start":454,"line_end":454,"column_start":12,"column_end":16},"name":"info","qualname":"<Reader<R>>::info","value":"fn info<'_>(&'_ Self) -> &'_ Info","parent":null,"children":[],"decl_id":null,"docs":" Get information on the image.","sig":null,"attributes":[{"value":"/ Get information on the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":48244,"byte_end":48277,"line_start":451,"line_end":451,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":48282,"byte_end":48285,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ The structure will change as new frames of an animated image are decoded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":48290,"byte_end":48367,"line_start":453,"line_end":453,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":50522,"byte_end":50532,"line_start":497,"line_end":497,"column_start":12,"column_end":22},"name":"next_frame","qualname":"<Reader<R>>::next_frame","value":"fn next_frame<'_, '_>(&'_ mut Self, &'_ mut [u8])\n-> Result<OutputInfo, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the next frame into `buf`.","sig":null,"attributes":[{"value":"/ Decodes the next frame into `buf`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":49726,"byte_end":49764,"line_start":484,"line_end":484,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":49769,"byte_end":49772,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Note that this decodes raw subframes that need to be mixed according to blend-op and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":49777,"byte_end":49865,"line_start":486,"line_end":486,"column_start":5,"column_end":93}},{"value":"/ dispose-op by the caller.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":49870,"byte_end":49899,"line_start":487,"line_end":487,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":49904,"byte_end":49907,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ The caller must always provide a buffer large enough to hold a complete frame (the APNG","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":49912,"byte_end":50003,"line_start":489,"line_end":489,"column_start":5,"column_end":96}},{"value":"/ specification restricts subframes to the dimensions given in the image header). The region","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":50008,"byte_end":50102,"line_start":490,"line_end":490,"column_start":5,"column_end":99}},{"value":"/ that has been written be checked afterwards by calling `info` after a successful call and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":50107,"byte_end":50200,"line_start":491,"line_end":491,"column_start":5,"column_end":98}},{"value":"/ inspecting the `frame_control` data. This requirement may be lifted in a later version of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":50205,"byte_end":50298,"line_start":492,"line_end":492,"column_start":5,"column_end":98}},{"value":"/ `png`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":50303,"byte_end":50313,"line_start":493,"line_end":493,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":50318,"byte_end":50321,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Output lines will be written in row-major, packed matrix with width and height of the read","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":50326,"byte_end":50420,"line_start":495,"line_end":495,"column_start":5,"column_end":99}},{"value":"/ frame (or subframe), all samples are in big endian byte order where this matters.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":50425,"byte_end":50510,"line_start":496,"line_end":496,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":52353,"byte_end":52361,"line_start":545,"line_end":545,"column_start":12,"column_end":20},"name":"next_row","qualname":"<Reader<R>>::next_row","value":"fn next_row<'_>(&'_ mut Self) -> Result<Option<Row>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next processed row of the image\n","sig":null,"attributes":[{"value":"/ Returns the next processed row of the image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":52294,"byte_end":52341,"line_start":544,"line_end":544,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":52572,"byte_end":52591,"line_start":551,"line_end":551,"column_start":12,"column_end":31},"name":"next_interlaced_row","qualname":"<Reader<R>>::next_interlaced_row","value":"fn next_interlaced_row<'_>(&'_ mut Self)\n-> Result<Option<InterlacedRow>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next processed row of the image\n","sig":null,"attributes":[{"value":"/ Returns the next processed row of the image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":52513,"byte_end":52560,"line_start":550,"line_end":550,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":55490,"byte_end":55507,"line_start":631,"line_end":631,"column_start":12,"column_end":29},"name":"output_color_type","qualname":"<Reader<R>>::output_color_type","value":"fn output_color_type<'_>(&'_ Self) -> (ColorType, BitDepth)","parent":null,"children":[],"decl_id":null,"docs":" Returns the color type and the number of bits per sample\n of the data returned by `Reader::next_row` and Reader::frames`.\n","sig":null,"attributes":[{"value":"/ Returns the color type and the number of bits per sample","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":55346,"byte_end":55406,"line_start":629,"line_end":629,"column_start":5,"column_end":65}},{"value":"/ of the data returned by `Reader::next_row` and Reader::frames`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":55411,"byte_end":55478,"line_start":630,"line_end":630,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":56684,"byte_end":56702,"line_start":661,"line_end":661,"column_start":12,"column_end":30},"name":"output_buffer_size","qualname":"<Reader<R>>::output_buffer_size","value":"fn output_buffer_size<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes required to hold a deinterlaced image frame\n that is decoded using the given input transformations.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes required to hold a deinterlaced image frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":56534,"byte_end":56609,"line_start":659,"line_end":659,"column_start":5,"column_end":80}},{"value":"/ that is decoded using the given input transformations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":56614,"byte_end":56672,"line_start":660,"line_end":660,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":57767,"byte_end":57783,"line_start":690,"line_end":690,"column_start":12,"column_end":28},"name":"output_line_size","qualname":"<Reader<R>>::output_line_size","value":"fn output_line_size<'_>(&'_ Self, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes required to hold a deinterlaced row.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes required to hold a deinterlaced row.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":57687,"byte_end":57755,"line_start":689,"line_end":689,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1765},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":137541,"byte_end":137548,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"name":"IoError","qualname":"::encoder::EncodingError::IoError","value":"EncodingError::IoError(io::Error)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":137549,"byte_end":137558,"line_start":24,"line_end":24,"column_start":13,"column_end":22},"name":"0","qualname":"::encoder::EncodingError::IoError::0","value":"std::io::Error","parent":{"krate":0,"index":1765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":137565,"byte_end":137571,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Format","qualname":"::encoder::EncodingError::Format","value":"EncodingError::Format(FormatError)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":137572,"byte_end":137583,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"0","qualname":"::encoder::EncodingError::Format::0","value":"encoder::FormatError","parent":{"krate":0,"index":1768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":137590,"byte_end":137599,"line_start":26,"line_end":26,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::encoder::EncodingError::Parameter","value":"EncodingError::Parameter(ParameterError)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":137600,"byte_end":137614,"line_start":26,"line_end":26,"column_start":15,"column_end":29},"name":"0","qualname":"::encoder::EncodingError::Parameter::0","value":"common::ParameterError","parent":{"krate":0,"index":1771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":137621,"byte_end":137635,"line_start":27,"line_end":27,"column_start":5,"column_end":19},"name":"LimitsExceeded","qualname":"::encoder::EncodingError::LimitsExceeded","value":"EncodingError::LimitsExceeded","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":137521,"byte_end":137534,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"name":"EncodingError","qualname":"::encoder::EncodingError","value":"enum EncodingError {\n    IoError(io::Error),\n    Format(FormatError),\n    Parameter(ParameterError),\n    LimitsExceeded,\n}","parent":null,"children":[{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1774}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":137668,"byte_end":137679,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"FormatError","qualname":"::encoder::FormatError","value":"FormatError {  }","parent":null,"children":[{"krate":0,"index":1779}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":138117,"byte_end":138122,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"cause","qualname":"<EncodingError as std::error::Error>::cause","value":"fn cause<'_>(&'_ Self) -> Option<&'_ dyn error::Error + 'static>","parent":{"krate":1,"index":2576},"children":[],"decl_id":{"krate":1,"index":2580},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":138335,"byte_end":138338,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"fmt","qualname":"<EncodingError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter)\n-> result::Result<(), fmt::Error>","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":138755,"byte_end":138758,"line_start":75,"line_end":75,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FormatError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter)\n-> result::Result<(), fmt::Error>","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":140634,"byte_end":140638,"line_start":115,"line_end":115,"column_start":8,"column_end":12},"name":"from","qualname":"<EncodingError as std::convert::From>::from","value":"fn from(io::Error) -> EncodingError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":140767,"byte_end":140771,"line_start":121,"line_end":121,"column_start":8,"column_end":12},"name":"from","qualname":"<io::Error as std::convert::From>::from","value":"fn from(EncodingError) -> io::Error","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":140947,"byte_end":140951,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"from","qualname":"<FormatError as std::convert::From>::from","value":"fn from(FormatErrorKind) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141086,"byte_end":141090,"line_start":134,"line_end":134,"column_start":8,"column_end":12},"name":"from","qualname":"<EncodingError as std::convert::From>::from","value":"fn from(TextEncodingError) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141583,"byte_end":141590,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692}],"decl_id":null,"docs":" PNG Encoder.","sig":null,"attributes":[{"value":"/ PNG Encoder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141247,"byte_end":141263,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141264,"byte_end":141267,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This configures the PNG format options such as animation chunks, palette use, color types,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141268,"byte_end":141362,"line_start":143,"line_end":143,"column_start":1,"column_end":95}},{"value":"/ auxiliary chunks etc.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141363,"byte_end":141388,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141389,"byte_end":141392,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ FIXME: Configuring APNG might be easier (less individual errors) if we had an _adapter_ which","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141393,"byte_end":141490,"line_start":146,"line_end":146,"column_start":1,"column_end":98}},{"value":"/ borrows this mutably but guarantees that `info.frame_control` is not `None`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141491,"byte_end":141571,"line_start":147,"line_end":147,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141927,"byte_end":141930,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"fn new(W, u32, u32) -> Encoder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142784,"byte_end":142796,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"set_animated","qualname":"<Encoder>::set_animated","value":"fn set_animated<'_>(&'_ mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Specify that the image is animated.","sig":null,"attributes":[{"value":"/ Specify that the image is animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142132,"byte_end":142171,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142176,"byte_end":142179,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ `num_frames` controls how many frames the animation has, while","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142184,"byte_end":142250,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ `num_plays` controls how many times the animation should be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142255,"byte_end":142318,"line_start":175,"line_end":175,"column_start":5,"column_end":68}},{"value":"/ repeated until it stops, if it's zero then it will repeat","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142323,"byte_end":142384,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ infinitely.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142389,"byte_end":142404,"line_start":177,"line_end":177,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142409,"byte_end":142412,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ When this method is returns successfully then the images written will be encoded as fdAT","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142417,"byte_end":142509,"line_start":179,"line_end":179,"column_start":5,"column_end":97}},{"value":"/ chunks, except for the first image that is still encoded as `IDAT`. You can control if the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142514,"byte_end":142608,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ first frame should be treated as an animation frame with [`Encoder::set_sep_def_img()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142613,"byte_end":142705,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142710,"byte_end":142713,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This method returns an error if `num_frames` is 0.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":142718,"byte_end":142772,"line_start":183,"line_end":183,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":143972,"byte_end":143987,"line_start":215,"line_end":215,"column_start":12,"column_end":27},"name":"set_sep_def_img","qualname":"<Encoder>::set_sep_def_img","value":"fn set_sep_def_img<'_>(&'_ mut Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Mark the first animated frame as a 'separate default image'.","sig":null,"attributes":[{"value":"/ Mark the first animated frame as a 'separate default image'.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":143384,"byte_end":143448,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":143453,"byte_end":143456,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ In APNG each animated frame is preceded by a special control chunk, `fcTL`. It's up to the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":143461,"byte_end":143555,"line_start":208,"line_end":208,"column_start":5,"column_end":99}},{"value":"/ encoder to decide if the first image, the standard `IDAT` data, should be part of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":143560,"byte_end":143649,"line_start":209,"line_end":209,"column_start":5,"column_end":94}},{"value":"/ animation by emitting this chunk or by not doing so. A default image that is _not_ part of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":143654,"byte_end":143748,"line_start":210,"line_end":210,"column_start":5,"column_end":99}},{"value":"/ the animation is often interpreted as a thumbnail.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":143753,"byte_end":143807,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":143812,"byte_end":143815,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This method will return an error when animation control was not configured","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":143820,"byte_end":143898,"line_start":213,"line_end":213,"column_start":5,"column_end":83}},{"value":"/ (which is done by calling [`Encoder::set_animated`]).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":143903,"byte_end":143960,"line_start":214,"line_end":214,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":144394,"byte_end":144405,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"set_palette","qualname":"<Encoder>::set_palette","value":"fn set_palette<T, '_>(&'_ mut Self, T) where T: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Sets the raw byte contents of the PLTE chunk. This method accepts\n both borrowed and owned byte data.\n","sig":null,"attributes":[{"value":"/ Sets the raw byte contents of the PLTE chunk. This method accepts","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":144270,"byte_end":144339,"line_start":224,"line_end":224,"column_start":5,"column_end":74}},{"value":"/ both borrowed and owned byte data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":144344,"byte_end":144382,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":144640,"byte_end":144648,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"set_trns","qualname":"<Encoder>::set_trns","value":"fn set_trns<T, '_>(&'_ mut Self, T) where T: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Sets the raw byte contents of the tRNS chunk. This method accepts\n both borrowed and owned byte data.\n","sig":null,"attributes":[{"value":"/ Sets the raw byte contents of the tRNS chunk. This method accepts","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":144516,"byte_end":144585,"line_start":230,"line_end":230,"column_start":5,"column_end":74}},{"value":"/ both borrowed and owned byte data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":144590,"byte_end":144628,"line_start":231,"line_end":231,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":144857,"byte_end":144873,"line_start":237,"line_end":237,"column_start":12,"column_end":28},"name":"set_source_gamma","qualname":"<Encoder>::set_source_gamma","value":"fn set_source_gamma<'_>(&'_ mut Self, ScaledFloat)","parent":null,"children":[],"decl_id":null,"docs":" Set the display gamma of the source system on which the image was generated or last edited.\n","sig":null,"attributes":[{"value":"/ Set the display gamma of the source system on which the image was generated or last edited.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":144750,"byte_end":144845,"line_start":236,"line_end":236,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":145173,"byte_end":145198,"line_start":243,"line_end":243,"column_start":12,"column_end":37},"name":"set_source_chromaticities","qualname":"<Encoder>::set_source_chromaticities","value":"fn set_source_chromaticities<'_>(&'_ mut Self, super::SourceChromaticities)","parent":null,"children":[],"decl_id":null,"docs":" Set the chromaticities for the source system's display channels (red, green, blue) and the whitepoint\n of the source system on which the image was generated or last edited.\n","sig":null,"attributes":[{"value":"/ Set the chromaticities for the source system's display channels (red, green, blue) and the whitepoint","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":144978,"byte_end":145083,"line_start":241,"line_end":241,"column_start":5,"column_end":110}},{"value":"/ of the source system on which the image was generated or last edited.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":145088,"byte_end":145161,"line_start":242,"line_end":242,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":145647,"byte_end":145655,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"set_srgb","qualname":"<Encoder>::set_srgb","value":"fn set_srgb<'_>(&'_ mut Self, super::SrgbRenderingIntent)","parent":null,"children":[],"decl_id":null,"docs":" Mark the image data as conforming to the SRGB color space with the specified rendering intent.","sig":null,"attributes":[{"value":"/ Mark the image data as conforming to the SRGB color space with the specified rendering intent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":145369,"byte_end":145467,"line_start":250,"line_end":250,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":145472,"byte_end":145475,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Matching source gamma and chromaticities chunks are added automatically.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":145480,"byte_end":145556,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ Any manually specified source gamma or chromaticities will be ignored.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":145561,"byte_end":145635,"line_start":253,"line_end":253,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":145923,"byte_end":145935,"line_start":261,"line_end":261,"column_start":12,"column_end":24},"name":"write_header","qualname":"<Encoder>::write_header","value":"fn write_header(Self) -> Result<Writer<W>>","parent":null,"children":[],"decl_id":null,"docs":" Start encoding by writing the header data.","sig":null,"attributes":[{"value":"/ Start encoding by writing the header data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":145775,"byte_end":145821,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":145826,"byte_end":145829,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The remaining data can be supplied by methods on the returned [`Writer`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":145834,"byte_end":145911,"line_start":260,"line_end":260,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146342,"byte_end":146351,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"set_color","qualname":"<Encoder>::set_color","value":"fn set_color<'_>(&'_ mut Self, ColorType)","parent":null,"children":[],"decl_id":null,"docs":" Set the color of the encoded image.","sig":null,"attributes":[{"value":"/ Set the color of the encoded image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146065,"byte_end":146104,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146109,"byte_end":146112,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ These correspond to the color types in the png IHDR data that will be written. The length","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146117,"byte_end":146210,"line_start":267,"line_end":267,"column_start":5,"column_end":98}},{"value":"/ of the image data that is later supplied must match the color type, otherwise an error will","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146215,"byte_end":146310,"line_start":268,"line_end":268,"column_start":5,"column_end":100}},{"value":"/ be emitted.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146315,"byte_end":146330,"line_start":269,"line_end":269,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146490,"byte_end":146499,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"set_depth","qualname":"<Encoder>::set_depth","value":"fn set_depth<'_>(&'_ mut Self, BitDepth)","parent":null,"children":[],"decl_id":null,"docs":" Set the indicated depth of the image data.\n","sig":null,"attributes":[{"value":"/ Set the indicated depth of the image data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146432,"byte_end":146478,"line_start":274,"line_end":274,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146806,"byte_end":146821,"line_start":283,"line_end":283,"column_start":12,"column_end":27},"name":"set_compression","qualname":"<Encoder>::set_compression","value":"fn set_compression<'_>(&'_ mut Self, Compression)","parent":null,"children":[],"decl_id":null,"docs":" Set compression parameters.","sig":null,"attributes":[{"value":"/ Set compression parameters.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146578,"byte_end":146609,"line_start":279,"line_end":279,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146614,"byte_end":146617,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Accepts a `Compression` or any type that can transform into a `Compression`. Notably `deflate::Compression` and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146622,"byte_end":146737,"line_start":281,"line_end":281,"column_start":5,"column_end":120}},{"value":"/ `deflate::CompressionOptions` which \"just work\".","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146742,"byte_end":146794,"line_start":282,"line_end":282,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147368,"byte_end":147378,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<Encoder>::set_filter","value":"fn set_filter<'_>(&'_ mut Self, FilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the used filter type.","sig":null,"attributes":[{"value":"/ Set the used filter type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146917,"byte_end":146946,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146951,"byte_end":146954,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ The default filter is [`FilterType::Sub`] which provides a basic prediction algorithm for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":146959,"byte_end":147052,"line_start":289,"line_end":289,"column_start":5,"column_end":98}},{"value":"/ sample values based on the previous. For a potentially better compression ratio, at the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147057,"byte_end":147148,"line_start":290,"line_end":290,"column_start":5,"column_end":96}},{"value":"/ cost of more complex processing, try out [`FilterType::Paeth`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147153,"byte_end":147220,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147225,"byte_end":147228,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`FilterType::Sub`]: enum.FilterType.html#variant.Sub","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147233,"byte_end":147290,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"/ [`FilterType::Paeth`]: enum.FilterType.html#variant.Paeth","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147295,"byte_end":147356,"line_start":294,"line_end":294,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147874,"byte_end":147893,"line_start":307,"line_end":307,"column_start":12,"column_end":31},"name":"set_adaptive_filter","qualname":"<Encoder>::set_adaptive_filter","value":"fn set_adaptive_filter<'_>(&'_ mut Self, AdaptiveFilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the adaptive filter type.","sig":null,"attributes":[{"value":"/ Set the adaptive filter type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147461,"byte_end":147494,"line_start":299,"line_end":299,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147499,"byte_end":147502,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Adaptive filtering attempts to select the best filter for each line","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147507,"byte_end":147578,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/ based on heuristics which minimize the file size for compression rather","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147583,"byte_end":147658,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ than use a single filter for the entire image. The default method is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147663,"byte_end":147735,"line_start":303,"line_end":303,"column_start":5,"column_end":77}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147740,"byte_end":147780,"line_start":304,"line_end":304,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147785,"byte_end":147788,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`]: enum.AdaptiveFilterType.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":147793,"byte_end":147862,"line_start":306,"line_end":306,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148990,"byte_end":149005,"line_start":329,"line_end":329,"column_start":12,"column_end":27},"name":"set_frame_delay","qualname":"<Encoder>::set_frame_delay","value":"fn set_frame_delay<'_>(&'_ mut Self, u16, u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the fraction of time every frame is going to be displayed, in seconds.","sig":null,"attributes":[{"value":"/ Set the fraction of time every frame is going to be displayed, in seconds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148011,"byte_end":148089,"line_start":311,"line_end":311,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148094,"byte_end":148097,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ *Note that this parameter can be set for each individual frame after","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148102,"byte_end":148174,"line_start":313,"line_end":313,"column_start":5,"column_end":77}},{"value":"/ [`Encoder::write_header`] is called. (see [`Writer::set_frame_delay`])*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148179,"byte_end":148254,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148259,"byte_end":148262,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ If the denominator is 0, it is to be treated as if it were 100","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148267,"byte_end":148333,"line_start":316,"line_end":316,"column_start":5,"column_end":71}},{"value":"/ (that is, the numerator then specifies 1/100ths of a second).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148338,"byte_end":148403,"line_start":317,"line_end":317,"column_start":5,"column_end":70}},{"value":"/ If the the value of the numerator is 0 the decoder should render the next frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148408,"byte_end":148491,"line_start":318,"line_end":318,"column_start":5,"column_end":88}},{"value":"/ as quickly as possible, though viewers may impose a reasonable lower bound.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148496,"byte_end":148575,"line_start":319,"line_end":319,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148580,"byte_end":148583,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The default value is 0 for both the numerator and denominator.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148588,"byte_end":148654,"line_start":321,"line_end":321,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148659,"byte_end":148662,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148667,"byte_end":148733,"line_start":323,"line_end":323,"column_start":5,"column_end":71}},{"value":"/ (see [`set_animated`])","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148738,"byte_end":148764,"line_start":324,"line_end":324,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148769,"byte_end":148772,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [`write_header`]: struct.Encoder.html#method.write_header","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148777,"byte_end":148838,"line_start":326,"line_end":326,"column_start":5,"column_end":66}},{"value":"/ [`set_animated`]: struct.Encoder.html#method.set_animated","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148843,"byte_end":148904,"line_start":327,"line_end":327,"column_start":5,"column_end":66}},{"value":"/ [`Writer::set_frame_delay`]: struct.Writer#method.set_frame_delay","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":148909,"byte_end":148978,"line_start":328,"line_end":328,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150523,"byte_end":150535,"line_start":364,"line_end":364,"column_start":12,"column_end":24},"name":"set_blend_op","qualname":"<Encoder>::set_blend_op","value":"fn set_blend_op<'_>(&'_ mut Self, BlendOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the blend operation for every frame.","sig":null,"attributes":[{"value":"/ Set the blend operation for every frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149344,"byte_end":149388,"line_start":339,"line_end":339,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149393,"byte_end":149396,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The blend operation specifies whether the frame is to be alpha blended","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149401,"byte_end":149475,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/ into the current output buffer content, or whether it should completely","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149480,"byte_end":149555,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/ replace its region in the output buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149560,"byte_end":149604,"line_start":343,"line_end":343,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149609,"byte_end":149612,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ *Note that this parameter can be set for each individual frame after","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149617,"byte_end":149689,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/ [`write_header`] is called. (see [`Writer::set_blend_op`])*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149694,"byte_end":149757,"line_start":346,"line_end":346,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149762,"byte_end":149765,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ See the [`BlendOp`] documentation for the possible values and their effects.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149770,"byte_end":149850,"line_start":348,"line_end":348,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149855,"byte_end":149858,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ *Note that for the first frame the two blend modes are functionally","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149863,"byte_end":149934,"line_start":350,"line_end":350,"column_start":5,"column_end":76}},{"value":"/ equivalent due to the clearing of the output buffer at the beginning","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":149939,"byte_end":150011,"line_start":351,"line_end":351,"column_start":5,"column_end":77}},{"value":"/ of each play.*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150016,"byte_end":150034,"line_start":352,"line_end":352,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150039,"byte_end":150042,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The default value is [`BlendOp::Source`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150047,"byte_end":150092,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150097,"byte_end":150100,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150105,"byte_end":150171,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/ (see [`set_animated`])","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150176,"byte_end":150202,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150207,"byte_end":150210,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [`BlendOP`]: enum.BlendOp.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150215,"byte_end":150249,"line_start":359,"line_end":359,"column_start":5,"column_end":39}},{"value":"/ [`BlendOP::Source`]: enum.BlendOp.html#variant.Source","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150254,"byte_end":150311,"line_start":360,"line_end":360,"column_start":5,"column_end":62}},{"value":"/ [`write_header`]: struct.Encoder.html#method.write_header","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150316,"byte_end":150377,"line_start":361,"line_end":361,"column_start":5,"column_end":66}},{"value":"/ [`set_animated`]: struct.Encoder.html#method.set_animated","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150382,"byte_end":150443,"line_start":362,"line_end":362,"column_start":5,"column_end":66}},{"value":"/ [`Writer::set_blend_op`]: struct.Writer#method.set_blend_op","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150448,"byte_end":150511,"line_start":363,"line_end":363,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":152058,"byte_end":152072,"line_start":398,"line_end":398,"column_start":12,"column_end":26},"name":"set_dispose_op","qualname":"<Encoder>::set_dispose_op","value":"fn set_dispose_op<'_>(&'_ mut Self, DisposeOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dispose operation for every frame.","sig":null,"attributes":[{"value":"/ Set the dispose operation for every frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150803,"byte_end":150849,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150854,"byte_end":150857,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The dispose operation specifies how the output buffer should be changed","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150862,"byte_end":150937,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ at the end of the delay (before rendering the next frame)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":150942,"byte_end":151003,"line_start":376,"line_end":376,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151008,"byte_end":151011,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ *Note that this parameter can be set for each individual frame after","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151016,"byte_end":151088,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/ [`write_header`] is called (see [`Writer::set_dispose_op`])*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151093,"byte_end":151157,"line_start":379,"line_end":379,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151162,"byte_end":151165,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ See the [`DisposeOp`] documentation for the possible values and their effects.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151170,"byte_end":151252,"line_start":381,"line_end":381,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151257,"byte_end":151260,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ *Note that if the first frame uses [`DisposeOp::Previous`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151265,"byte_end":151327,"line_start":383,"line_end":383,"column_start":5,"column_end":67}},{"value":"/ it will be treated as [`DisposeOp::Background`].*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151332,"byte_end":151385,"line_start":384,"line_end":384,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151390,"byte_end":151393,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ The default value is [`DisposeOp::None`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151398,"byte_end":151443,"line_start":386,"line_end":386,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151448,"byte_end":151451,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151456,"byte_end":151522,"line_start":388,"line_end":388,"column_start":5,"column_end":71}},{"value":"/ (see [`set_animated`])","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151527,"byte_end":151553,"line_start":389,"line_end":389,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151558,"byte_end":151561,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ [`DisposeOp`]: ../common/enum.BlendOp.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151566,"byte_end":151612,"line_start":391,"line_end":391,"column_start":5,"column_end":51}},{"value":"/ [`DisposeOp::Previous`]: ../common/enum.BlendOp.html#variant.Previous","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151617,"byte_end":151690,"line_start":392,"line_end":392,"column_start":5,"column_end":78}},{"value":"/ [`DisposeOp::Background`]: ../common/enum.BlendOp.html#variant.Background","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151695,"byte_end":151772,"line_start":393,"line_end":393,"column_start":5,"column_end":82}},{"value":"/ [`DisposeOp::None`]: ../common/enum.BlendOp.html#variant.None","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151777,"byte_end":151842,"line_start":394,"line_end":394,"column_start":5,"column_end":70}},{"value":"/ [`write_header`]: struct.Encoder.html#method.write_header","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151847,"byte_end":151908,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/ [`set_animated`]: struct.Encoder.html#method.set_animated","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151913,"byte_end":151974,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/ [`Writer::set_dispose_op`]: struct.Writer#method.set_dispose_op","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":151979,"byte_end":152046,"line_start":397,"line_end":397,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":152418,"byte_end":152432,"line_start":408,"line_end":408,"column_start":12,"column_end":26},"name":"add_text_chunk","qualname":"<Encoder>::add_text_chunk","value":"fn add_text_chunk<'_>(&'_ mut Self, String, String) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to add tEXt chunks to [`Info`] struct\n","sig":null,"attributes":[{"value":"/ Convenience function to add tEXt chunks to [`Info`] struct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":152344,"byte_end":152406,"line_start":407,"line_end":407,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":152708,"byte_end":152722,"line_start":415,"line_end":415,"column_start":12,"column_end":26},"name":"add_ztxt_chunk","qualname":"<Encoder>::add_ztxt_chunk","value":"fn add_ztxt_chunk<'_>(&'_ mut Self, String, String) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to add zTXt chunks to [`Info`] struct\n","sig":null,"attributes":[{"value":"/ Convenience function to add zTXt chunks to [`Info`] struct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":152634,"byte_end":152696,"line_start":414,"line_end":414,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153193,"byte_end":153207,"line_start":425,"line_end":425,"column_start":12,"column_end":26},"name":"add_itxt_chunk","qualname":"<Encoder>::add_itxt_chunk","value":"fn add_itxt_chunk<'_>(&'_ mut Self, String, String) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to add iTXt chunks to [`Info`] struct","sig":null,"attributes":[{"value":"/ Convenience function to add iTXt chunks to [`Info`] struct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":152922,"byte_end":152984,"line_start":421,"line_end":421,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":152989,"byte_end":152992,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function only sets the `keyword` and `text` field of the iTXt chunk.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":152997,"byte_end":153074,"line_start":423,"line_end":423,"column_start":5,"column_end":82}},{"value":"/ To set the other fields, create a [`ITXtChunk`] directly, and then encode it to the output stream.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153079,"byte_end":153181,"line_start":424,"line_end":424,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153942,"byte_end":153959,"line_start":441,"line_end":441,"column_start":12,"column_end":29},"name":"validate_sequence","qualname":"<Encoder>::validate_sequence","value":"fn validate_sequence<'_>(&'_ mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Validate the written image sequence.","sig":null,"attributes":[{"value":"/ Validate the written image sequence.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153394,"byte_end":153434,"line_start":431,"line_end":431,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153439,"byte_end":153442,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ When validation is turned on (it's turned off by default) then attempts to write more than","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153447,"byte_end":153541,"line_start":433,"line_end":433,"column_start":5,"column_end":99}},{"value":"/ one `IDAT` image or images beyond the number of frames indicated in the animation control","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153546,"byte_end":153639,"line_start":434,"line_end":434,"column_start":5,"column_end":98}},{"value":"/ chunk will fail and return an error result instead. Attempts to [finish][finish] the image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153644,"byte_end":153738,"line_start":435,"line_end":435,"column_start":5,"column_end":99}},{"value":"/ with missing frames will also return an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153743,"byte_end":153793,"line_start":436,"line_end":436,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153798,"byte_end":153801,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ [finish]: StreamWriter::finish","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153806,"byte_end":153840,"line_start":438,"line_end":438,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153845,"byte_end":153848,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ (It's possible to circumvent these checks by writing raw chunks instead.)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":153853,"byte_end":153930,"line_start":440,"line_end":440,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":154490,"byte_end":154496,"line_start":454,"line_end":454,"column_start":12,"column_end":18},"name":"Writer","qualname":"::encoder::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726}],"decl_id":null,"docs":" PNG writer","sig":null,"attributes":[{"value":"/ PNG writer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":154049,"byte_end":154063,"line_start":446,"line_end":446,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":154064,"byte_end":154067,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ Progresses through the image by writing images, frames, or raw individual chunks. This is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":154068,"byte_end":154161,"line_start":448,"line_end":448,"column_start":1,"column_end":94}},{"value":"/ constructed through [`Encoder::write_header()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":154162,"byte_end":154214,"line_start":449,"line_end":449,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":154215,"byte_end":154218,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ FIXME: Writing of animated chunks might be clearer if we had an _adapter_ that you would call","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":154219,"byte_end":154316,"line_start":451,"line_end":451,"column_start":1,"column_end":98}},{"value":"/ to guarantee the next image to be prefaced with a fcTL-chunk, and all other chunks would be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":154317,"byte_end":154412,"line_start":452,"line_end":452,"column_start":1,"column_end":96}},{"value":"/ guaranteed to be `IDAT`/not affected by APNG's frame control.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":154413,"byte_end":154478,"line_start":453,"line_end":453,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":158395,"byte_end":158406,"line_start":582,"line_end":582,"column_start":12,"column_end":23},"name":"write_chunk","qualname":"<Writer<W>>::write_chunk","value":"fn write_chunk<'_, '_>(&'_ mut Self, ChunkType, &'_ [u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a raw chunk of PNG data.","sig":null,"attributes":[{"value":"/ Write a raw chunk of PNG data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":158157,"byte_end":158191,"line_start":578,"line_end":578,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":158196,"byte_end":158199,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ The chunk will have its CRC calculated and correctly. The data is not filtered in any way,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":158204,"byte_end":158298,"line_start":580,"line_end":580,"column_start":5,"column_end":99}},{"value":"/ but the chunk needs to be short enough to have its length encoded correctly.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":158303,"byte_end":158383,"line_start":581,"line_end":581,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":158809,"byte_end":158825,"line_start":593,"line_end":593,"column_start":12,"column_end":28},"name":"write_text_chunk","qualname":"<Writer<W>>::write_text_chunk","value":"fn write_text_chunk<T, '_, '_>(&'_ mut Self, &'_ T) -> Result<()> where\nT: EncodableTextChunk","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":160277,"byte_end":160293,"line_start":640,"line_end":640,"column_start":12,"column_end":28},"name":"write_image_data","qualname":"<Writer<W>>::write_image_data","value":"fn write_image_data<'_, '_>(&'_ mut Self, &'_ [u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the next image data.\n","sig":null,"attributes":[{"value":"/ Writes the next image data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":160234,"byte_end":160265,"line_start":639,"line_end":639,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":164838,"byte_end":164848,"line_start":755,"line_end":755,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<Writer<W>>::set_filter","value":"fn set_filter<'_>(&'_ mut Self, FilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the used filter type for the following frames.","sig":null,"attributes":[{"value":"/ Set the used filter type for the following frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":164362,"byte_end":164416,"line_start":747,"line_end":747,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":164421,"byte_end":164424,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ The default filter is [`FilterType::Sub`] which provides a basic prediction algorithm for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":164429,"byte_end":164522,"line_start":749,"line_end":749,"column_start":5,"column_end":98}},{"value":"/ sample values based on the previous. For a potentially better compression ratio, at the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":164527,"byte_end":164618,"line_start":750,"line_end":750,"column_start":5,"column_end":96}},{"value":"/ cost of more complex processing, try out [`FilterType::Paeth`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":164623,"byte_end":164690,"line_start":751,"line_end":751,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":164695,"byte_end":164698,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ [`FilterType::Sub`]: enum.FilterType.html#variant.Sub","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":164703,"byte_end":164760,"line_start":753,"line_end":753,"column_start":5,"column_end":62}},{"value":"/ [`FilterType::Paeth`]: enum.FilterType.html#variant.Paeth","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":164765,"byte_end":164826,"line_start":754,"line_end":754,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165369,"byte_end":165388,"line_start":767,"line_end":767,"column_start":12,"column_end":31},"name":"set_adaptive_filter","qualname":"<Writer<W>>::set_adaptive_filter","value":"fn set_adaptive_filter<'_>(&'_ mut Self, AdaptiveFilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the adaptive filter type for the following frames.","sig":null,"attributes":[{"value":"/ Set the adaptive filter type for the following frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":164931,"byte_end":164989,"line_start":759,"line_end":759,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":164994,"byte_end":164997,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ Adaptive filtering attempts to select the best filter for each line","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165002,"byte_end":165073,"line_start":761,"line_end":761,"column_start":5,"column_end":76}},{"value":"/ based on heuristics which minimize the file size for compression rather","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165078,"byte_end":165153,"line_start":762,"line_end":762,"column_start":5,"column_end":80}},{"value":"/ than use a single filter for the entire image. The default method is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165158,"byte_end":165230,"line_start":763,"line_end":763,"column_start":5,"column_end":77}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165235,"byte_end":165275,"line_start":764,"line_end":764,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165280,"byte_end":165283,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`]: enum.AdaptiveFilterType.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165288,"byte_end":165357,"line_start":766,"line_end":766,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":166013,"byte_end":166028,"line_start":780,"line_end":780,"column_start":12,"column_end":27},"name":"set_frame_delay","qualname":"<Writer<W>>::set_frame_delay","value":"fn set_frame_delay<'_>(&'_ mut Self, u16, u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the fraction of time the following frames are going to be displayed,\n in seconds","sig":null,"attributes":[{"value":"/ Set the fraction of time the following frames are going to be displayed,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165506,"byte_end":165582,"line_start":771,"line_end":771,"column_start":5,"column_end":81}},{"value":"/ in seconds","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165587,"byte_end":165601,"line_start":772,"line_end":772,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165606,"byte_end":165609,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ If the denominator is 0, it is to be treated as if it were 100","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165614,"byte_end":165680,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/ (that is, the numerator then specifies 1/100ths of a second).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165685,"byte_end":165750,"line_start":775,"line_end":775,"column_start":5,"column_end":70}},{"value":"/ If the the value of the numerator is 0 the decoder should render the next frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165755,"byte_end":165838,"line_start":776,"line_end":776,"column_start":5,"column_end":88}},{"value":"/ as quickly as possible, though viewers may impose a reasonable lower bound.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165843,"byte_end":165922,"line_start":777,"line_end":777,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165927,"byte_end":165930,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":165935,"byte_end":166001,"line_start":779,"line_end":779,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":166785,"byte_end":166804,"line_start":802,"line_end":802,"column_start":12,"column_end":31},"name":"set_frame_dimension","qualname":"<Writer<W>>::set_frame_dimension","value":"fn set_frame_dimension<'_>(&'_ mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dimension of the following frames.","sig":null,"attributes":[{"value":"/ Set the dimension of the following frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":166367,"byte_end":166413,"line_start":790,"line_end":790,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":166418,"byte_end":166421,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ This function will return an error when:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":166426,"byte_end":166470,"line_start":792,"line_end":792,"column_start":5,"column_end":49}},{"value":"/ - The image is not an animated;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":166475,"byte_end":166510,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":166515,"byte_end":166518,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ - The selected dimension, considering also the current frame position,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":166523,"byte_end":166597,"line_start":795,"line_end":795,"column_start":5,"column_end":79}},{"value":"/   goes outside the image boundaries;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":166602,"byte_end":166642,"line_start":796,"line_end":796,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":166647,"byte_end":166650,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ - One or both the width and height are 0;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":166655,"byte_end":166700,"line_start":798,"line_end":798,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":166705,"byte_end":166708,"line_start":799,"line_end":799,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":167973,"byte_end":167991,"line_start":831,"line_end":831,"column_start":12,"column_end":30},"name":"set_frame_position","qualname":"<Writer<W>>::set_frame_position","value":"fn set_frame_position<'_>(&'_ mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the position of the following frames.","sig":null,"attributes":[{"value":"/ Set the position of the following frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":167628,"byte_end":167673,"line_start":821,"line_end":821,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":167678,"byte_end":167681,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":167686,"byte_end":167719,"line_start":823,"line_end":823,"column_start":5,"column_end":38}},{"value":"/ - The image is not animated;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":167724,"byte_end":167756,"line_start":824,"line_end":824,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":167761,"byte_end":167764,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ - The selected position, considering also the current frame dimension,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":167769,"byte_end":167843,"line_start":826,"line_end":826,"column_start":5,"column_end":79}},{"value":"/   goes outside the image boundaries;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":167848,"byte_end":167888,"line_start":827,"line_end":827,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":167893,"byte_end":167896,"line_start":828,"line_end":828,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":168935,"byte_end":168956,"line_start":855,"line_end":855,"column_start":12,"column_end":33},"name":"reset_frame_dimension","qualname":"<Writer<W>>::reset_frame_dimension","value":"fn reset_frame_dimension<'_>(&'_ mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the frame dimension to occupy all the image, starting from\n the current position.","sig":null,"attributes":[{"value":"/ Set the frame dimension to occupy all the image, starting from","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":168544,"byte_end":168610,"line_start":846,"line_end":846,"column_start":5,"column_end":71}},{"value":"/ the current position.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":168615,"byte_end":168640,"line_start":847,"line_end":847,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":168645,"byte_end":168648,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ To reset the frame to the full image size [`reset_frame_position`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":168653,"byte_end":168723,"line_start":849,"line_end":849,"column_start":5,"column_end":75}},{"value":"/ should be called first.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":168728,"byte_end":168755,"line_start":850,"line_end":850,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":168760,"byte_end":168763,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":168768,"byte_end":168834,"line_start":852,"line_end":852,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":168839,"byte_end":168842,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ [`reset_frame_position`]: struct.Writer.html#method.reset_frame_position","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":168847,"byte_end":168923,"line_start":854,"line_end":854,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":169584,"byte_end":169604,"line_start":872,"line_end":872,"column_start":12,"column_end":32},"name":"reset_frame_position","qualname":"<Writer<W>>::reset_frame_position","value":"fn reset_frame_position<'_>(&'_ mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the frame position to (0, 0).","sig":null,"attributes":[{"value":"/ Set the frame position to (0, 0).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":169297,"byte_end":169334,"line_start":865,"line_end":865,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":169339,"byte_end":169342,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ Equivalent to calling [`set_frame_position(0, 0)`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":169347,"byte_end":169402,"line_start":867,"line_end":867,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":169407,"byte_end":169410,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":169415,"byte_end":169481,"line_start":869,"line_end":869,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":169486,"byte_end":169489,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ [`set_frame_position(0, 0)`]: struct.Writer.html#method.set_frame_position","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":169494,"byte_end":169572,"line_start":871,"line_end":871,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170573,"byte_end":170585,"line_start":897,"line_end":897,"column_start":12,"column_end":24},"name":"set_blend_op","qualname":"<Writer<W>>::set_blend_op","value":"fn set_blend_op<'_>(&'_ mut Self, BlendOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the blend operation for the following frames.","sig":null,"attributes":[{"value":"/ Set the blend operation for the following frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":169889,"byte_end":169942,"line_start":882,"line_end":882,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":169947,"byte_end":169950,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ The blend operation specifies whether the frame is to be alpha blended","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":169955,"byte_end":170029,"line_start":884,"line_end":884,"column_start":5,"column_end":79}},{"value":"/ into the current output buffer content, or whether it should completely","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170034,"byte_end":170109,"line_start":885,"line_end":885,"column_start":5,"column_end":80}},{"value":"/ replace its region in the output buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170114,"byte_end":170158,"line_start":886,"line_end":886,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170163,"byte_end":170166,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ See the [`BlendOp`] documentation for the possible values and their effects.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170171,"byte_end":170251,"line_start":888,"line_end":888,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170256,"byte_end":170259,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ *Note that for the first frame the two blend modes are functionally","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170264,"byte_end":170335,"line_start":890,"line_end":890,"column_start":5,"column_end":76}},{"value":"/ equivalent due to the clearing of the output buffer at the beginning","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170340,"byte_end":170412,"line_start":891,"line_end":891,"column_start":5,"column_end":77}},{"value":"/ of each play.*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170417,"byte_end":170435,"line_start":892,"line_end":892,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170440,"byte_end":170443,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170448,"byte_end":170514,"line_start":894,"line_end":894,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170519,"byte_end":170522,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ [`BlendOP`]: enum.BlendOp.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170527,"byte_end":170561,"line_start":896,"line_end":896,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171600,"byte_end":171614,"line_start":921,"line_end":921,"column_start":12,"column_end":26},"name":"set_dispose_op","qualname":"<Writer<W>>::set_dispose_op","value":"fn set_dispose_op<'_>(&'_ mut Self, DisposeOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dispose operation for the following frames.","sig":null,"attributes":[{"value":"/ Set the dispose operation for the following frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170853,"byte_end":170908,"line_start":906,"line_end":906,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170913,"byte_end":170916,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ The dispose operation specifies how the output buffer should be changed","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":170921,"byte_end":170996,"line_start":908,"line_end":908,"column_start":5,"column_end":80}},{"value":"/ at the end of the delay (before rendering the next frame)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171001,"byte_end":171062,"line_start":909,"line_end":909,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171067,"byte_end":171070,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ See the [`DisposeOp`] documentation for the possible values and their effects.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171075,"byte_end":171157,"line_start":911,"line_end":911,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171162,"byte_end":171165,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ *Note that if the first frame uses [`DisposeOp::Previous`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171170,"byte_end":171232,"line_start":913,"line_end":913,"column_start":5,"column_end":67}},{"value":"/ it will be treated as [`DisposeOp::Background`].*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171237,"byte_end":171290,"line_start":914,"line_end":914,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171295,"byte_end":171298,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171303,"byte_end":171369,"line_start":916,"line_end":916,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171374,"byte_end":171377,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ [`DisposeOp`]: ../common/enum.BlendOp.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171382,"byte_end":171428,"line_start":918,"line_end":918,"column_start":5,"column_end":51}},{"value":"/ [`DisposeOp::Previous`]: ../common/enum.BlendOp.html#variant.Previous","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171433,"byte_end":171506,"line_start":919,"line_end":919,"column_start":5,"column_end":78}},{"value":"/ [`DisposeOp::Background`]: ../common/enum.BlendOp.html#variant.Background","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171511,"byte_end":171588,"line_start":920,"line_end":920,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172245,"byte_end":172258,"line_start":938,"line_end":938,"column_start":12,"column_end":25},"name":"stream_writer","qualname":"<Writer<W>>::stream_writer","value":"fn stream_writer<'_>(&'_ mut Self) -> Result<StreamWriter>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream writer.","sig":null,"attributes":[{"value":"/ Create a stream writer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171886,"byte_end":171913,"line_start":930,"line_end":930,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171918,"byte_end":171921,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ This allows you to create images that do not fit in memory. The default","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":171926,"byte_end":172001,"line_start":932,"line_end":932,"column_start":5,"column_end":80}},{"value":"/ chunk size is 4K, use `stream_writer_with_size` to set another chunk","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172006,"byte_end":172078,"line_start":933,"line_end":933,"column_start":5,"column_end":77}},{"value":"/ size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172083,"byte_end":172092,"line_start":934,"line_end":934,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172097,"byte_end":172100,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ This borrows the writer which allows for manually appending additional","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172105,"byte_end":172179,"line_start":936,"line_end":936,"column_start":5,"column_end":79}},{"value":"/ chunks after the image data has been written.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172184,"byte_end":172233,"line_start":937,"line_end":937,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172525,"byte_end":172548,"line_start":947,"line_end":947,"column_start":12,"column_end":35},"name":"stream_writer_with_size","qualname":"<Writer<W>>::stream_writer_with_size","value":"fn stream_writer_with_size<'_>(&'_ mut Self, usize) -> Result<StreamWriter>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream writer with custom buffer size.","sig":null,"attributes":[{"value":"/ Create a stream writer with custom buffer size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172370,"byte_end":172421,"line_start":942,"line_end":942,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172426,"byte_end":172429,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ See [`stream_writer`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172434,"byte_end":172460,"line_start":944,"line_end":944,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172465,"byte_end":172468,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ [`stream_writer`]: #fn.stream_writer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172473,"byte_end":172513,"line_start":946,"line_end":946,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172915,"byte_end":172933,"line_start":956,"line_end":956,"column_start":12,"column_end":30},"name":"into_stream_writer","qualname":"<Writer<W>>::into_stream_writer","value":"fn into_stream_writer(Self) -> Result<StreamWriter>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into a stream writer for image data.","sig":null,"attributes":[{"value":"/ Turn this into a stream writer for image data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172674,"byte_end":172724,"line_start":951,"line_end":951,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172729,"byte_end":172732,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ This allows you to create images that do not fit in memory. The default","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172737,"byte_end":172812,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/ chunk size is 4K, use `stream_writer_with_size` to set another chunk","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172817,"byte_end":172889,"line_start":954,"line_end":954,"column_start":5,"column_end":77}},{"value":"/ size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":172894,"byte_end":172903,"line_start":955,"line_end":955,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173232,"byte_end":173260,"line_start":965,"line_end":965,"column_start":12,"column_end":40},"name":"into_stream_writer_with_size","qualname":"<Writer<W>>::into_stream_writer_with_size","value":"fn into_stream_writer_with_size(Self, usize) -> Result<StreamWriter>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into a stream writer with custom buffer size.","sig":null,"attributes":[{"value":"/ Turn this into a stream writer with custom buffer size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173054,"byte_end":173113,"line_start":960,"line_end":960,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173118,"byte_end":173121,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ See [`into_stream_writer`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173126,"byte_end":173157,"line_start":962,"line_end":962,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173162,"byte_end":173165,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ [`into_stream_writer`]: #fn.into_stream_writer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173170,"byte_end":173220,"line_start":964,"line_end":964,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173728,"byte_end":173734,"line_start":974,"line_end":974,"column_start":12,"column_end":18},"name":"finish","qualname":"<Writer<W>>::finish","value":"fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consume the stream writer with validation.","sig":null,"attributes":[{"value":"/ Consume the stream writer with validation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173387,"byte_end":173433,"line_start":969,"line_end":969,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173438,"byte_end":173441,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ Unlike a simple drop this ensures that the final chunk was written correctly. When other","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173446,"byte_end":173538,"line_start":971,"line_end":971,"column_start":5,"column_end":97}},{"value":"/ validation options (chunk sequencing) had been turned on in the configuration then it will","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173543,"byte_end":173637,"line_start":972,"line_end":972,"column_start":5,"column_end":99}},{"value":"/ also do a check on their correctness _before_ writing the final chunk.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173642,"byte_end":173716,"line_start":973,"line_end":973,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173994,"byte_end":173998,"line_start":986,"line_end":986,"column_start":8,"column_end":12},"name":"drop","qualname":"<Writer<W> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":181999,"byte_end":182011,"line_start":1233,"line_end":1233,"column_start":12,"column_end":24},"name":"StreamWriter","qualname":"::encoder::StreamWriter","value":"StreamWriter {  }","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856}],"decl_id":null,"docs":" Streaming PNG writer","sig":null,"attributes":[{"value":"/ Streaming PNG writer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":181732,"byte_end":181756,"line_start":1227,"line_end":1227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":181757,"byte_end":181760,"line_start":1228,"line_end":1228,"column_start":1,"column_end":4}},{"value":"/ This may silently fail in the destructor, so it is a good idea to call","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":181761,"byte_end":181835,"line_start":1229,"line_end":1229,"column_start":1,"column_end":75}},{"value":"/ [`finish`](#method.finish) or [`flush`] before dropping.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":181836,"byte_end":181896,"line_start":1230,"line_end":1230,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":181897,"byte_end":181900,"line_start":1231,"line_end":1231,"column_start":1,"column_end":4}},{"value":"/ [`flush`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html#tymethod.flush","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":181901,"byte_end":181987,"line_start":1232,"line_end":1232,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184309,"byte_end":184319,"line_start":1303,"line_end":1303,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<StreamWriter>::set_filter","value":"fn set_filter<'_>(&'_ mut Self, FilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the used filter type for the next frame.","sig":null,"attributes":[{"value":"/ Set the used filter type for the next frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":183839,"byte_end":183887,"line_start":1295,"line_end":1295,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":183892,"byte_end":183895,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ The default filter is [`FilterType::Sub`] which provides a basic prediction algorithm for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":183900,"byte_end":183993,"line_start":1297,"line_end":1297,"column_start":5,"column_end":98}},{"value":"/ sample values based on the previous. For a potentially better compression ratio, at the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":183998,"byte_end":184089,"line_start":1298,"line_end":1298,"column_start":5,"column_end":96}},{"value":"/ cost of more complex processing, try out [`FilterType::Paeth`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184094,"byte_end":184161,"line_start":1299,"line_end":1299,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184166,"byte_end":184169,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ [`FilterType::Sub`]: enum.FilterType.html#variant.Sub","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184174,"byte_end":184231,"line_start":1301,"line_end":1301,"column_start":5,"column_end":62}},{"value":"/ [`FilterType::Paeth`]: enum.FilterType.html#variant.Paeth","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184236,"byte_end":184297,"line_start":1302,"line_end":1302,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184826,"byte_end":184845,"line_start":1315,"line_end":1315,"column_start":12,"column_end":31},"name":"set_adaptive_filter","qualname":"<StreamWriter>::set_adaptive_filter","value":"fn set_adaptive_filter<'_>(&'_ mut Self, AdaptiveFilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the adaptive filter type for the next frame.","sig":null,"attributes":[{"value":"/ Set the adaptive filter type for the next frame.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184394,"byte_end":184446,"line_start":1307,"line_end":1307,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184451,"byte_end":184454,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ Adaptive filtering attempts to select the best filter for each line","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184459,"byte_end":184530,"line_start":1309,"line_end":1309,"column_start":5,"column_end":76}},{"value":"/ based on heuristics which minimize the file size for compression rather","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184535,"byte_end":184610,"line_start":1310,"line_end":1310,"column_start":5,"column_end":80}},{"value":"/ than use a single filter for the entire image. The default method is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184615,"byte_end":184687,"line_start":1311,"line_end":1311,"column_start":5,"column_end":77}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184692,"byte_end":184732,"line_start":1312,"line_end":1312,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184737,"byte_end":184740,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`]: enum.AdaptiveFilterType.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184745,"byte_end":184814,"line_start":1314,"line_end":1314,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185462,"byte_end":185477,"line_start":1328,"line_end":1328,"column_start":12,"column_end":27},"name":"set_frame_delay","qualname":"<StreamWriter>::set_frame_delay","value":"fn set_frame_delay<'_>(&'_ mut Self, u16, u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the fraction of time the following frames are going to be displayed,\n in seconds","sig":null,"attributes":[{"value":"/ Set the fraction of time the following frames are going to be displayed,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":184955,"byte_end":185031,"line_start":1319,"line_end":1319,"column_start":5,"column_end":81}},{"value":"/ in seconds","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185036,"byte_end":185050,"line_start":1320,"line_end":1320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185055,"byte_end":185058,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ If the denominator is 0, it is to be treated as if it were 100","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185063,"byte_end":185129,"line_start":1322,"line_end":1322,"column_start":5,"column_end":71}},{"value":"/ (that is, the numerator then specifies 1/100ths of a second).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185134,"byte_end":185199,"line_start":1323,"line_end":1323,"column_start":5,"column_end":70}},{"value":"/ If the the value of the numerator is 0 the decoder should render the next frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185204,"byte_end":185287,"line_start":1324,"line_end":1324,"column_start":5,"column_end":88}},{"value":"/ as quickly as possible, though viewers may impose a reasonable lower bound.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185292,"byte_end":185371,"line_start":1325,"line_end":1325,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185376,"byte_end":185379,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185384,"byte_end":185450,"line_start":1327,"line_end":1327,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":186155,"byte_end":186174,"line_start":1348,"line_end":1348,"column_start":12,"column_end":31},"name":"set_frame_dimension","qualname":"<StreamWriter>::set_frame_dimension","value":"fn set_frame_dimension<'_>(&'_ mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dimension of the following frames.","sig":null,"attributes":[{"value":"/ Set the dimension of the following frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185802,"byte_end":185848,"line_start":1338,"line_end":1338,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185853,"byte_end":185856,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ This function will return an error when:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185861,"byte_end":185905,"line_start":1340,"line_end":1340,"column_start":5,"column_end":49}},{"value":"/ - The image is not an animated;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185910,"byte_end":185945,"line_start":1341,"line_end":1341,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185950,"byte_end":185953,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ - The selected dimension, considering also the current frame position,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":185958,"byte_end":186032,"line_start":1343,"line_end":1343,"column_start":5,"column_end":79}},{"value":"/   goes outside the image boundaries;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":186037,"byte_end":186077,"line_start":1344,"line_end":1344,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":186082,"byte_end":186085,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ - One or both the width and height are 0;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":186090,"byte_end":186135,"line_start":1346,"line_end":1346,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":186140,"byte_end":186143,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187254,"byte_end":187272,"line_start":1375,"line_end":1375,"column_start":12,"column_end":30},"name":"set_frame_position","qualname":"<StreamWriter>::set_frame_position","value":"fn set_frame_position<'_>(&'_ mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the position of the following frames.","sig":null,"attributes":[{"value":"/ Set the position of the following frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":186974,"byte_end":187019,"line_start":1367,"line_end":1367,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187024,"byte_end":187027,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187032,"byte_end":187065,"line_start":1369,"line_end":1369,"column_start":5,"column_end":38}},{"value":"/ - The image is not animated;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187070,"byte_end":187102,"line_start":1370,"line_end":1370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187107,"byte_end":187110,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ - The selected position, considering also the current frame dimension,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187115,"byte_end":187189,"line_start":1372,"line_end":1372,"column_start":5,"column_end":79}},{"value":"/   goes outside the image boundaries;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187194,"byte_end":187234,"line_start":1373,"line_end":1373,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187239,"byte_end":187242,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188192,"byte_end":188213,"line_start":1399,"line_end":1399,"column_start":12,"column_end":33},"name":"reset_frame_dimension","qualname":"<StreamWriter>::reset_frame_dimension","value":"fn reset_frame_dimension<'_>(&'_ mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the frame dimension to occupy all the image, starting from\n the current position.","sig":null,"attributes":[{"value":"/ Set the frame dimension to occupy all the image, starting from","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187801,"byte_end":187867,"line_start":1390,"line_end":1390,"column_start":5,"column_end":71}},{"value":"/ the current position.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187872,"byte_end":187897,"line_start":1391,"line_end":1391,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187902,"byte_end":187905,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ To reset the frame to the full image size [`reset_frame_position`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187910,"byte_end":187980,"line_start":1393,"line_end":1393,"column_start":5,"column_end":75}},{"value":"/ should be called first.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":187985,"byte_end":188012,"line_start":1394,"line_end":1394,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188017,"byte_end":188020,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188025,"byte_end":188091,"line_start":1396,"line_end":1396,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188096,"byte_end":188099,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ [`reset_frame_position`]: struct.Writer.html#method.reset_frame_position","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188104,"byte_end":188180,"line_start":1398,"line_end":1398,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188817,"byte_end":188837,"line_start":1416,"line_end":1416,"column_start":12,"column_end":32},"name":"reset_frame_position","qualname":"<StreamWriter>::reset_frame_position","value":"fn reset_frame_position<'_>(&'_ mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the frame position to (0, 0).","sig":null,"attributes":[{"value":"/ Set the frame position to (0, 0).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188530,"byte_end":188567,"line_start":1409,"line_end":1409,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188572,"byte_end":188575,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ Equivalent to calling [`set_frame_position(0, 0)`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188580,"byte_end":188635,"line_start":1411,"line_end":1411,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188640,"byte_end":188643,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188648,"byte_end":188714,"line_start":1413,"line_end":1413,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188719,"byte_end":188722,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ [`set_frame_position(0, 0)`]: struct.Writer.html#method.set_frame_position","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":188727,"byte_end":188805,"line_start":1415,"line_end":1415,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189792,"byte_end":189804,"line_start":1441,"line_end":1441,"column_start":12,"column_end":24},"name":"set_blend_op","qualname":"<StreamWriter>::set_blend_op","value":"fn set_blend_op<'_>(&'_ mut Self, BlendOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the blend operation for the following frames.","sig":null,"attributes":[{"value":"/ Set the blend operation for the following frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189108,"byte_end":189161,"line_start":1426,"line_end":1426,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189166,"byte_end":189169,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ The blend operation specifies whether the frame is to be alpha blended","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189174,"byte_end":189248,"line_start":1428,"line_end":1428,"column_start":5,"column_end":79}},{"value":"/ into the current output buffer content, or whether it should completely","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189253,"byte_end":189328,"line_start":1429,"line_end":1429,"column_start":5,"column_end":80}},{"value":"/ replace its region in the output buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189333,"byte_end":189377,"line_start":1430,"line_end":1430,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189382,"byte_end":189385,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ See the [`BlendOp`] documentation for the possible values and their effects.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189390,"byte_end":189470,"line_start":1432,"line_end":1432,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189475,"byte_end":189478,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ *Note that for the first frame the two blend modes are functionally","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189483,"byte_end":189554,"line_start":1434,"line_end":1434,"column_start":5,"column_end":76}},{"value":"/ equivalent due to the clearing of the output buffer at the beginning","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189559,"byte_end":189631,"line_start":1435,"line_end":1435,"column_start":5,"column_end":77}},{"value":"/ of each play.*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189636,"byte_end":189654,"line_start":1436,"line_end":1436,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189659,"byte_end":189662,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189667,"byte_end":189733,"line_start":1438,"line_end":1438,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189738,"byte_end":189741,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ [`BlendOP`]: enum.BlendOp.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":189746,"byte_end":189780,"line_start":1440,"line_end":1440,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190805,"byte_end":190819,"line_start":1465,"line_end":1465,"column_start":12,"column_end":26},"name":"set_dispose_op","qualname":"<StreamWriter>::set_dispose_op","value":"fn set_dispose_op<'_>(&'_ mut Self, DisposeOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dispose operation for the following frames.","sig":null,"attributes":[{"value":"/ Set the dispose operation for the following frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190058,"byte_end":190113,"line_start":1450,"line_end":1450,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190118,"byte_end":190121,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ The dispose operation specifies how the output buffer should be changed","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190126,"byte_end":190201,"line_start":1452,"line_end":1452,"column_start":5,"column_end":80}},{"value":"/ at the end of the delay (before rendering the next frame)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190206,"byte_end":190267,"line_start":1453,"line_end":1453,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190272,"byte_end":190275,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ See the [`DisposeOp`] documentation for the possible values and their effects.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190280,"byte_end":190362,"line_start":1455,"line_end":1455,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190367,"byte_end":190370,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ *Note that if the first frame uses [`DisposeOp::Previous`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190375,"byte_end":190437,"line_start":1457,"line_end":1457,"column_start":5,"column_end":67}},{"value":"/ it will be treated as [`DisposeOp::Background`].*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190442,"byte_end":190495,"line_start":1458,"line_end":1458,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190500,"byte_end":190503,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190508,"byte_end":190574,"line_start":1460,"line_end":1460,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190579,"byte_end":190582,"line_start":1461,"line_end":1461,"column_start":5,"column_end":8}},{"value":"/ [`DisposeOp`]: ../common/enum.BlendOp.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190587,"byte_end":190633,"line_start":1462,"line_end":1462,"column_start":5,"column_end":51}},{"value":"/ [`DisposeOp::Previous`]: ../common/enum.BlendOp.html#variant.Previous","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190638,"byte_end":190711,"line_start":1463,"line_end":1463,"column_start":5,"column_end":78}},{"value":"/ [`DisposeOp::Background`]: ../common/enum.BlendOp.html#variant.Background","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":190716,"byte_end":190793,"line_start":1464,"line_end":1464,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":191084,"byte_end":191090,"line_start":1474,"line_end":1474,"column_start":12,"column_end":18},"name":"finish","qualname":"<StreamWriter>::finish","value":"fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":192973,"byte_end":192978,"line_start":1531,"line_end":1531,"column_start":8,"column_end":13},"name":"write","qualname":"<StreamWriter as std::io::Write>::write","value":"fn write<'_, '_>(&'_ mut Self, &'_ [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4725},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":194829,"byte_end":194834,"line_start":1586,"line_end":1586,"column_start":8,"column_end":13},"name":"flush","qualname":"<StreamWriter as std::io::Write>::flush","value":"fn flush<'_>(&'_ mut Self) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4729},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":195639,"byte_end":195643,"line_start":1608,"line_end":1608,"column_start":8,"column_end":12},"name":"drop","qualname":"<StreamWriter as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1824},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220770,"byte_end":220778,"line_start":11,"line_end":11,"column_start":5,"column_end":13},"name":"NoFilter","qualname":"::filter::FilterType::NoFilter","value":"FilterType::NoFilter","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220788,"byte_end":220791,"line_start":12,"line_end":12,"column_start":5,"column_end":8},"name":"Sub","qualname":"::filter::FilterType::Sub","value":"FilterType::Sub","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1830},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220801,"byte_end":220803,"line_start":13,"line_end":13,"column_start":5,"column_end":7},"name":"Up","qualname":"::filter::FilterType::Up","value":"FilterType::Up","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220813,"byte_end":220816,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Avg","qualname":"::filter::FilterType::Avg","value":"FilterType::Avg","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220826,"byte_end":220831,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Paeth","qualname":"::filter::FilterType::Paeth","value":"FilterType::Paeth","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220753,"byte_end":220763,"line_start":10,"line_end":10,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::filter::FilterType","value":"enum FilterType { NoFilter = , Sub = , Up = , Avg = , Paeth = , }","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1827},{"krate":0,"index":1830},{"krate":0,"index":1833},{"krate":0,"index":1836}],"decl_id":null,"docs":" The byte level filter applied to scanlines to prepare them for compression.","sig":null,"attributes":[{"value":"/ The byte level filter applied to scanlines to prepare them for compression.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220341,"byte_end":220420,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220421,"byte_end":220424,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Compression in general benefits from repetitive data. The filter is a content-aware method of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220425,"byte_end":220522,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ compressing the range of occurring byte values to help the compression algorithm. Note that","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220523,"byte_end":220618,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ this does not operate on pixels but on raw bytes of a scanline.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220619,"byte_end":220686,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220732,"byte_end":220743,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220877,"byte_end":220884,"line_start":19,"line_end":19,"column_start":8,"column_end":15},"name":"default","qualname":"<FilterType as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221035,"byte_end":221042,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<FilterType>::from_u8","value":"fn from_u8(u8) -> Option<FilterType>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220952,"byte_end":221023,"line_start":25,"line_end":25,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1851},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221742,"byte_end":221750,"line_start":47,"line_end":47,"column_start":5,"column_end":13},"name":"Adaptive","qualname":"::filter::AdaptiveFilterType::Adaptive","value":"AdaptiveFilterType::Adaptive","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221756,"byte_end":221767,"line_start":48,"line_end":48,"column_start":5,"column_end":16},"name":"NonAdaptive","qualname":"::filter::AdaptiveFilterType::NonAdaptive","value":"AdaptiveFilterType::NonAdaptive","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1850},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221717,"byte_end":221735,"line_start":46,"line_end":46,"column_start":10,"column_end":28},"name":"AdaptiveFilterType","qualname":"::filter::AdaptiveFilterType","value":"enum AdaptiveFilterType { Adaptive, NonAdaptive, }","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1853}],"decl_id":null,"docs":" The filtering method for preprocessing scanline data before compression.","sig":null,"attributes":[{"value":"/ The filtering method for preprocessing scanline data before compression.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221340,"byte_end":221416,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221417,"byte_end":221420,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Adaptive filtering performs additional computation in an attempt to maximize","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221421,"byte_end":221501,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ the compression of the data. [`NonAdaptive`] filtering is the default.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221502,"byte_end":221576,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221577,"byte_end":221580,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`NonAdaptive`]: enum.AdaptiveFilterType.html#variant.NonAdaptive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221581,"byte_end":221650,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221696,"byte_end":221707,"line_start":45,"line_end":45,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221817,"byte_end":221824,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"default","qualname":"<AdaptiveFilterType as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text_metadata","qualname":"::text_metadata","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":1872},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":948},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":965},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":968},{"krate":0,"index":980},{"krate":0,"index":1952},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":985},{"krate":0,"index":1001}],"decl_id":null,"docs":" # Text chunks (tEXt/zTXt/iTXt) structs and functions","sig":null,"attributes":[{"value":"/ # Text chunks (tEXt/zTXt/iTXt) structs and functions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234071,"byte_end":234127,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234128,"byte_end":234131,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [PNG spec](https://www.w3.org/TR/2003/REC-PNG-20031110/#11textinfo) optionally allows for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234132,"byte_end":234229,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ embedded text chunks in the file. They may appear either before or after the image data","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234230,"byte_end":234321,"line_start":4,"line_end":4,"column_start":1,"column_end":92}},{"value":"/ chunks. There are three kinds of text chunks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234322,"byte_end":234371,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/  -   `tEXt`: This has a `keyword` and `text` field, and is ISO 8859-1 encoded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234372,"byte_end":234454,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/  -   `zTXt`: This is semantically the same as `tEXt`, i.e. it has the same fields and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234455,"byte_end":234544,"line_start":7,"line_end":7,"column_start":1,"column_end":90}},{"value":"/       encoding, but the `text` field is compressed before being written into the PNG file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234545,"byte_end":234639,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/  -   `iTXt`: This chunk allows for its `text` field to be any valid UTF-8, and supports","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234640,"byte_end":234731,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/        compression of the text field as well.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234732,"byte_end":234781,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234782,"byte_end":234785,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/  The `ISO 8859-1` encoding technically doesn't allow any control characters","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234786,"byte_end":234865,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/  to be used, but in practice these values are encountered anyway. This can","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234866,"byte_end":234944,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/  either be the extended `ISO-8859-1` encoding with control characters or the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":234945,"byte_end":235025,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/  `Windows-1252` encoding. This crate assumes the `ISO-8859-1` encoding is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235026,"byte_end":235103,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/  used.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235104,"byte_end":235114,"line_start":16,"line_end":16,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235115,"byte_end":235118,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/  ## Reading text chunks","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235119,"byte_end":235146,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235147,"byte_end":235150,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/  As a PNG is decoded, any text chunk encountered is appended the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235151,"byte_end":235219,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/  [`Info`](`crate::common::Info`) struct, in the `uncompressed_latin1_text`,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235220,"byte_end":235299,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/  `compressed_latin1_text`, and the `utf8_text` fields depending on whether the encountered","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235300,"byte_end":235394,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/  chunk is `tEXt`, `zTXt`, or `iTXt`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235395,"byte_end":235435,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235436,"byte_end":235439,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235440,"byte_end":235448,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/  use std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235449,"byte_end":235472,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/  use std::iter::FromIterator;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235473,"byte_end":235506,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/  use std::path::PathBuf;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235507,"byte_end":235535,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235536,"byte_end":235539,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/  // Opening a png file that has a zTXt chunk","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235540,"byte_end":235588,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/  let decoder = png::Decoder::new(","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235589,"byte_end":235626,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/      File::open(PathBuf::from_iter([","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235627,"byte_end":235667,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/          \"tests\",","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235668,"byte_end":235689,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/          \"text_chunk_examples\",","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235690,"byte_end":235725,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/          \"ztxt_example.png\",","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235726,"byte_end":235758,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/      ]))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235759,"byte_end":235771,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/      .unwrap(),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235772,"byte_end":235791,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/  );","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235792,"byte_end":235799,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/  let mut reader = decoder.read_info().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235800,"byte_end":235851,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/  // If the text chunk is before the image data frames, `reader.info()` already contains the text.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235852,"byte_end":235953,"line_start":40,"line_end":40,"column_start":1,"column_end":102}},{"value":"/  for text_chunk in &reader.info().compressed_latin1_text {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":235954,"byte_end":236016,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/      println!(\"{:?}\", text_chunk.keyword); // Prints the keyword","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236017,"byte_end":236085,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/      println!(\"{:#?}\", text_chunk); // Prints out the text chunk.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236086,"byte_end":236155,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/      // To get the uncompressed text, use the `get_text` method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236156,"byte_end":236224,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/      println!(\"{}\", text_chunk.get_text().unwrap());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236225,"byte_end":236281,"line_start":45,"line_end":45,"column_start":1,"column_end":57}},{"value":"/  }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236282,"byte_end":236288,"line_start":46,"line_end":46,"column_start":1,"column_end":7}},{"value":"/  ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236289,"byte_end":236297,"line_start":47,"line_end":47,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236298,"byte_end":236301,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/  ## Writing text chunks","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236302,"byte_end":236329,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236330,"byte_end":236333,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/  There are two ways to write text chunks: the first is to add the appropriate text structs directly to the encoder header before the header is written to file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236334,"byte_end":236497,"line_start":51,"line_end":51,"column_start":1,"column_end":164}},{"value":"/  To add a text chunk at any point in the stream, use the `write_text_chunk` method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236498,"byte_end":236585,"line_start":52,"line_end":52,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236586,"byte_end":236589,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/  ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236590,"byte_end":236598,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"/  # use png::text_metadata::{ITXtChunk, ZTXtChunk};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236599,"byte_end":236653,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/  # use std::env;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236654,"byte_end":236674,"line_start":56,"line_end":56,"column_start":1,"column_end":21}},{"value":"/  # use std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236675,"byte_end":236700,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"/  # use std::io::BufWriter;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236701,"byte_end":236731,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/  # use std::iter::FromIterator;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236732,"byte_end":236767,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/  # use std::path::PathBuf;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236768,"byte_end":236798,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/  # let file = File::create(PathBuf::from_iter([\"target\", \"text_chunk.png\"])).unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236799,"byte_end":236889,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/  # let ref mut w = BufWriter::new(file);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236890,"byte_end":236934,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/  let mut encoder = png::Encoder::new(w, 2, 1); // Width is 2 pixels and height is 1.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":236935,"byte_end":237023,"line_start":63,"line_end":63,"column_start":1,"column_end":89}},{"value":"/  encoder.set_color(png::ColorType::Rgba);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237024,"byte_end":237069,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/  encoder.set_depth(png::BitDepth::Eight);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237070,"byte_end":237115,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/  // Adding text chunks to the header","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237116,"byte_end":237156,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/  encoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237157,"byte_end":237169,"line_start":67,"line_end":67,"column_start":1,"column_end":13}},{"value":"/     .add_text_chunk(","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237170,"byte_end":237194,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/         \"Testing tEXt\".to_string(),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237195,"byte_end":237234,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/         \"This is a tEXt chunk that will appear before the IDAT chunks.\".to_string(),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237235,"byte_end":237323,"line_start":70,"line_end":70,"column_start":1,"column_end":89}},{"value":"/     )","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237324,"byte_end":237333,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237334,"byte_end":237352,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"/  encoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237353,"byte_end":237365,"line_start":73,"line_end":73,"column_start":1,"column_end":13}},{"value":"/      .add_ztxt_chunk(","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237366,"byte_end":237391,"line_start":74,"line_end":74,"column_start":1,"column_end":26}},{"value":"/          \"Testing zTXt\".to_string(),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237392,"byte_end":237432,"line_start":75,"line_end":75,"column_start":1,"column_end":41}},{"value":"/          \"This is a zTXt chunk that is compressed in the png file.\".to_string(),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237433,"byte_end":237517,"line_start":76,"line_end":76,"column_start":1,"column_end":85}},{"value":"/      )","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237518,"byte_end":237528,"line_start":77,"line_end":77,"column_start":1,"column_end":11}},{"value":"/      .unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237529,"byte_end":237548,"line_start":78,"line_end":78,"column_start":1,"column_end":20}},{"value":"/  encoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237549,"byte_end":237561,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/      .add_itxt_chunk(","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237562,"byte_end":237587,"line_start":80,"line_end":80,"column_start":1,"column_end":26}},{"value":"/          \"Testing iTXt\".to_string(),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237588,"byte_end":237628,"line_start":81,"line_end":81,"column_start":1,"column_end":41}},{"value":"/          \"iTXt chunks support all of UTF8. Example: हिंदी.\".to_string(),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237629,"byte_end":237715,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/      )","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237716,"byte_end":237726,"line_start":83,"line_end":83,"column_start":1,"column_end":11}},{"value":"/      .unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237727,"byte_end":237746,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237747,"byte_end":237750,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  let mut writer = encoder.write_header().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237751,"byte_end":237805,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237806,"byte_end":237809,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/  let data = [255, 0, 0, 255, 0, 0, 0, 255]; // An array containing a RGBA sequence. First pixel is red and second pixel is black.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237810,"byte_end":237943,"line_start":88,"line_end":88,"column_start":1,"column_end":134}},{"value":"/  writer.write_image_data(&data).unwrap(); // Save","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237944,"byte_end":237997,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":237998,"byte_end":238001,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/  // We can add a tEXt/zTXt/iTXt at any point before the encoder is dropped from scope. These chunks will be at the end of the png file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":238002,"byte_end":238141,"line_start":91,"line_end":91,"column_start":1,"column_end":140}},{"value":"/  let tail_ztxt_chunk = ZTXtChunk::new(\"Comment\".to_string(), \"A zTXt chunk after the image data.\".to_string());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":238142,"byte_end":238257,"line_start":92,"line_end":92,"column_start":1,"column_end":116}},{"value":"/  writer.write_text_chunk(&tail_ztxt_chunk).unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":238258,"byte_end":238314,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":238315,"byte_end":238318,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/  // The fields of the text chunk are public, so they can be mutated before being written to the file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":238319,"byte_end":238424,"line_start":95,"line_end":95,"column_start":1,"column_end":106}},{"value":"/  let mut tail_itxt_chunk = ITXtChunk::new(\"Author\".to_string(), \"सायंतन खान\".to_string());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":238425,"byte_end":238537,"line_start":96,"line_end":96,"column_start":1,"column_end":95}},{"value":"/  tail_itxt_chunk.compressed = true;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":238538,"byte_end":238577,"line_start":97,"line_end":97,"column_start":1,"column_end":40}},{"value":"/  tail_itxt_chunk.language_tag = \"hi\".to_string();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":238578,"byte_end":238631,"line_start":98,"line_end":98,"column_start":1,"column_end":54}},{"value":"/  tail_itxt_chunk.translated_keyword = \"लेखक\".to_string();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":238632,"byte_end":238701,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/  writer.write_text_chunk(&tail_itxt_chunk).unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":238702,"byte_end":238758,"line_start":100,"line_end":100,"column_start":1,"column_end":57}},{"value":"/  ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":238759,"byte_end":238767,"line_start":101,"line_end":101,"column_start":1,"column_end":9}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":238769,"byte_end":238791,"line_start":103,"line_end":103,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":239107,"byte_end":239126,"line_start":112,"line_end":112,"column_start":11,"column_end":30},"name":"DECOMPRESSION_LIMIT","qualname":"::text_metadata::DECOMPRESSION_LIMIT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default decompression limit for compressed text chunks.\n","sig":null,"attributes":[{"value":"/ Default decompression limit for compressed text chunks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":239037,"byte_end":239096,"line_start":111,"line_end":111,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":240285,"byte_end":240303,"line_start":147,"line_end":147,"column_start":11,"column_end":29},"name":"EncodableTextChunk","qualname":"::text_metadata::EncodableTextChunk","value":"EncodableTextChunk","parent":null,"children":[{"krate":0,"index":949}],"decl_id":null,"docs":" A generalized text chunk trait\n","sig":null,"attributes":[{"value":"/ A generalized text chunk trait","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":240240,"byte_end":240274,"line_start":146,"line_end":146,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":240363,"byte_end":240369,"line_start":149,"line_end":149,"column_start":8,"column_end":14},"name":"encode","qualname":"::text_metadata::EncodableTextChunk::encode","value":"fn encode<W, '_, '_>(&'_ Self, &'_ mut W) -> Result<(), EncodingError> where\nW: Write","parent":{"krate":0,"index":948},"children":[],"decl_id":null,"docs":" Encode text chunk as Vec<u8> to a `Write`\n","sig":null,"attributes":[{"value":"/ Encode text chunk as Vec<u8> to a `Write`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":240310,"byte_end":240355,"line_start":148,"line_end":148,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":240518,"byte_end":240527,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"TEXtChunk","qualname":"::text_metadata::TEXtChunk","value":"TEXtChunk { keyword, text }","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908}],"decl_id":null,"docs":" Struct representing a tEXt chunk\n","sig":null,"attributes":[{"value":"/ Struct representing a tEXt chunk","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":240431,"byte_end":240467,"line_start":152,"line_end":152,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":240635,"byte_end":240642,"line_start":156,"line_end":156,"column_start":9,"column_end":16},"name":"keyword","qualname":"::text_metadata::TEXtChunk::keyword","value":"std::string::String","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":" Keyword field of the tEXt chunk. Needs to be between 1-79 bytes when encoded as Latin-1.\n","sig":null,"attributes":[{"value":"/ Keyword field of the tEXt chunk. Needs to be between 1-79 bytes when encoded as Latin-1.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":240534,"byte_end":240626,"line_start":155,"line_end":155,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":240714,"byte_end":240718,"line_start":158,"line_end":158,"column_start":9,"column_end":13},"name":"text","qualname":"::text_metadata::TEXtChunk::text","value":"std::string::String","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":" Text field of tEXt chunk. Can be at most 2GB.\n","sig":null,"attributes":[{"value":"/ Text field of tEXt chunk. Can be at most 2GB.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":240656,"byte_end":240705,"line_start":157,"line_end":157,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":241840,"byte_end":241843,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"new","qualname":"<TEXtChunk>::new","value":"fn new<impl Into<String>,\nimpl Into<String>>(impl Into<String>, impl Into<String>) -> Self where\nimpl Into<String>: Into<String>, impl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TEXtChunk.\n Not sure whether it should take &str or String.\n","sig":null,"attributes":[{"value":"/ Constructs a new TEXtChunk.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":241741,"byte_end":241772,"line_start":192,"line_end":192,"column_start":5,"column_end":36}},{"value":"/ Not sure whether it should take &str or String.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":241777,"byte_end":241828,"line_start":193,"line_end":193,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":242723,"byte_end":242729,"line_start":220,"line_end":220,"column_start":8,"column_end":14},"name":"encode","qualname":"<TEXtChunk as text_metadata::EncodableTextChunk>::encode","value":"fn encode<W, '_, '_>(&'_ Self, &'_ mut W) -> Result<(), EncodingError> where\nW: Write","parent":{"krate":0,"index":948},"children":[],"decl_id":{"krate":0,"index":949},"docs":" Encodes TEXtChunk to a Writer. The keyword and text are separated by a byte of zeroes.\n","sig":null,"attributes":[{"value":"/ Encodes TEXtChunk to a Writer. The keyword and text are separated by a byte of zeroes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":242625,"byte_end":242715,"line_start":219,"line_end":219,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":1920},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":243205,"byte_end":243214,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"ZTXtChunk","qualname":"::text_metadata::ZTXtChunk","value":"ZTXtChunk { keyword }","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922}],"decl_id":null,"docs":" Struct representing a zTXt chunk\n","sig":null,"attributes":[{"value":"/ Struct representing a zTXt chunk","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":243118,"byte_end":243154,"line_start":235,"line_end":235,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":243322,"byte_end":243329,"line_start":239,"line_end":239,"column_start":9,"column_end":16},"name":"keyword","qualname":"::text_metadata::ZTXtChunk::keyword","value":"std::string::String","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":" Keyword field of the tEXt chunk. Needs to be between 1-79 bytes when encoded as Latin-1.\n","sig":null,"attributes":[{"value":"/ Keyword field of the tEXt chunk. Needs to be between 1-79 bytes when encoded as Latin-1.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":243221,"byte_end":243313,"line_start":238,"line_end":238,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":243829,"byte_end":243832,"line_start":255,"line_end":255,"column_start":12,"column_end":15},"name":"new","qualname":"<ZTXtChunk>::new","value":"fn new<impl Into<String>,\nimpl Into<String>>(impl Into<String>, impl Into<String>) -> Self where\nimpl Into<String>: Into<String>, impl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ZTXt chunk.\n","sig":null,"attributes":[{"value":"/ Creates a new ZTXt chunk.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":243788,"byte_end":243817,"line_start":254,"line_end":254,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":244738,"byte_end":244753,"line_start":282,"line_end":282,"column_start":12,"column_end":27},"name":"decompress_text","qualname":"<ZTXtChunk>::decompress_text","value":"fn decompress_text<'_>(&'_ mut Self) -> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `DECOMPRESSION_LIMIT` bytes.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `DECOMPRESSION_LIMIT` bytes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":244601,"byte_end":244726,"line_start":281,"line_end":281,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":244991,"byte_end":245017,"line_start":287,"line_end":287,"column_start":12,"column_end":38},"name":"decompress_text_with_limit","qualname":"<ZTXtChunk>::decompress_text_with_limit","value":"fn decompress_text_with_limit<'_>(&'_ mut Self, usize)\n-> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `limit` bytes.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `limit` bytes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":244868,"byte_end":244979,"line_start":286,"line_end":286,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":246088,"byte_end":246096,"line_start":310,"line_end":310,"column_start":12,"column_end":20},"name":"get_text","qualname":"<ZTXtChunk>::get_text","value":"fn get_text<'_>(&'_ Self) -> Result<String, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, and returns it as a `String`.\n If decompression uses more the 2MiB, first call decompress with limit, and then this method.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, and returns it as a `String`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":245913,"byte_end":245975,"line_start":308,"line_end":308,"column_start":5,"column_end":67}},{"value":"/ If decompression uses more the 2MiB, first call decompress with limit, and then this method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":245980,"byte_end":246076,"line_start":309,"line_end":309,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":246592,"byte_end":246605,"line_start":322,"line_end":322,"column_start":12,"column_end":25},"name":"compress_text","qualname":"<ZTXtChunk>::compress_text","value":"fn compress_text<'_>(&'_ mut Self) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the inner text, mutating its own state.\n","sig":null,"attributes":[{"value":"/ Compresses the inner text, mutating its own state.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":246526,"byte_end":246580,"line_start":321,"line_end":321,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":247413,"byte_end":247419,"line_start":344,"line_end":344,"column_start":8,"column_end":14},"name":"encode","qualname":"<ZTXtChunk as text_metadata::EncodableTextChunk>::encode","value":"fn encode<W, '_, '_>(&'_ Self, &'_ mut W) -> Result<(), EncodingError> where\nW: Write","parent":{"krate":0,"index":948},"children":[],"decl_id":{"krate":0,"index":949},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":248693,"byte_end":248702,"line_start":380,"line_end":380,"column_start":12,"column_end":21},"name":"ITXtChunk","qualname":"::text_metadata::ITXtChunk","value":"ITXtChunk { keyword, compressed, language_tag, translated_keyword }","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957}],"decl_id":null,"docs":" Struct encoding an iTXt chunk\n","sig":null,"attributes":[{"value":"/ Struct encoding an iTXt chunk","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":248609,"byte_end":248642,"line_start":378,"line_end":378,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1953},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":248801,"byte_end":248808,"line_start":382,"line_end":382,"column_start":9,"column_end":16},"name":"keyword","qualname":"::text_metadata::ITXtChunk::keyword","value":"std::string::String","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" The keyword field. This needs to be between 1-79 bytes when encoded as Latin-1.\n","sig":null,"attributes":[{"value":"/ The keyword field. This needs to be between 1-79 bytes when encoded as Latin-1.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":248709,"byte_end":248792,"line_start":381,"line_end":381,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":248901,"byte_end":248911,"line_start":384,"line_end":384,"column_start":9,"column_end":19},"name":"compressed","qualname":"::text_metadata::ITXtChunk::compressed","value":"bool","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" Indicates whether the text will be (or was) compressed in the PNG.\n","sig":null,"attributes":[{"value":"/ Indicates whether the text will be (or was) compressed in the PNG.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":248822,"byte_end":248892,"line_start":383,"line_end":383,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1955},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":249032,"byte_end":249044,"line_start":386,"line_end":386,"column_start":9,"column_end":21},"name":"language_tag","qualname":"::text_metadata::ITXtChunk::language_tag","value":"std::string::String","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" A hyphen separated list of languages that the keyword is translated to. This is ASCII-7 encoded.\n","sig":null,"attributes":[{"value":"/ A hyphen separated list of languages that the keyword is translated to. This is ASCII-7 encoded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":248923,"byte_end":249023,"line_start":385,"line_end":385,"column_start":5,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":1956},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":249113,"byte_end":249131,"line_start":388,"line_end":388,"column_start":9,"column_end":27},"name":"translated_keyword","qualname":"::text_metadata::ITXtChunk::translated_keyword","value":"std::string::String","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" Translated keyword. This is UTF-8 encoded.\n","sig":null,"attributes":[{"value":"/ Translated keyword. This is UTF-8 encoded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":249058,"byte_end":249104,"line_start":387,"line_end":387,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":249386,"byte_end":249389,"line_start":395,"line_end":395,"column_start":12,"column_end":15},"name":"new","qualname":"<ITXtChunk>::new","value":"fn new<impl Into<String>,\nimpl Into<String>>(impl Into<String>, impl Into<String>) -> Self where\nimpl Into<String>: Into<String>, impl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new iTXt chunk. Leaves all but keyword and text to default values.\n","sig":null,"attributes":[{"value":"/ Constructs a new iTXt chunk. Leaves all but keyword and text to default values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":249291,"byte_end":249374,"line_start":394,"line_end":394,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":251318,"byte_end":251333,"line_start":452,"line_end":452,"column_start":12,"column_end":27},"name":"decompress_text","qualname":"<ITXtChunk>::decompress_text","value":"fn decompress_text<'_>(&'_ mut Self) -> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `DECOMPRESSION_LIMIT` bytes.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `DECOMPRESSION_LIMIT` bytes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":251181,"byte_end":251306,"line_start":451,"line_end":451,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":251571,"byte_end":251597,"line_start":457,"line_end":457,"column_start":12,"column_end":38},"name":"decompress_text_with_limit","qualname":"<ITXtChunk>::decompress_text_with_limit","value":"fn decompress_text_with_limit<'_>(&'_ mut Self, usize)\n-> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `limit` bytes.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `limit` bytes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":251448,"byte_end":251559,"line_start":456,"line_end":456,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":252785,"byte_end":252793,"line_start":483,"line_end":483,"column_start":12,"column_end":20},"name":"get_text","qualname":"<ITXtChunk>::get_text","value":"fn get_text<'_>(&'_ Self) -> Result<String, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, and returns it as a `String`.\n If decompression takes more than 2 MiB, try `decompress_text_with_limit` followed by this method.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, and returns it as a `String`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":252605,"byte_end":252667,"line_start":481,"line_end":481,"column_start":5,"column_end":67}},{"value":"/ If decompression takes more than 2 MiB, try `decompress_text_with_limit` followed by this method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":252672,"byte_end":252773,"line_start":482,"line_end":482,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":253360,"byte_end":253373,"line_start":496,"line_end":496,"column_start":12,"column_end":25},"name":"compress_text","qualname":"<ITXtChunk>::compress_text","value":"fn compress_text<'_>(&'_ mut Self) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the inner text, mutating its own state.\n","sig":null,"attributes":[{"value":"/ Compresses the inner text, mutating its own state.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":253294,"byte_end":253348,"line_start":495,"line_end":495,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":254171,"byte_end":254177,"line_start":518,"line_end":518,"column_start":8,"column_end":14},"name":"encode","qualname":"<ITXtChunk as text_metadata::EncodableTextChunk>::encode","value":"fn encode<W, '_, '_>(&'_ Self, &'_ mut W) -> Result<(), EncodingError> where\nW: Write","parent":{"krate":0,"index":948},"children":[],"decl_id":{"krate":0,"index":949},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":5150,"byte_end":5159,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":5285,"byte_end":5294,"line_start":81,"line_end":81,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6556,"byte_end":6565,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":9369,"byte_end":9377,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10244,"byte_end":10248,"line_start":146,"line_end":146,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10868,"byte_end":10877,"line_start":169,"line_end":169,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11249,"byte_end":11258,"line_start":181,"line_end":181,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11859,"byte_end":11866,"line_start":202,"line_end":202,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12184,"byte_end":12191,"line_start":213,"line_end":213,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13222,"byte_end":13234,"line_start":246,"line_end":246,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13579,"byte_end":13591,"line_start":262,"line_end":262,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":14737,"byte_end":14753,"line_start":296,"line_end":296,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15764,"byte_end":15775,"line_start":330,"line_end":330,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":16055,"byte_end":16066,"line_start":341,"line_end":341,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17914,"byte_end":17934,"line_start":402,"line_end":402,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":1325},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":20439,"byte_end":20458,"line_start":455,"line_end":455,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":23015,"byte_end":23019,"line_start":520,"line_end":520,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":23919,"byte_end":23923,"line_start":549,"line_end":549,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":29038,"byte_end":29051,"line_start":688,"line_end":688,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":31183,"byte_end":31198,"line_start":742,"line_end":742,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":31611,"byte_end":31626,"line_start":753,"line_end":753,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":32855,"byte_end":32869,"line_start":781,"line_end":781,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":32985,"byte_end":32999,"line_start":787,"line_end":787,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":75919,"byte_end":75932,"line_start":212,"line_end":212,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":76137,"byte_end":76150,"line_start":221,"line_end":221,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":76551,"byte_end":76562,"line_start":233,"line_end":233,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":82680,"byte_end":82693,"line_start":350,"line_end":350,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":82815,"byte_end":82828,"line_start":356,"line_end":356,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":82956,"byte_end":82967,"line_start":362,"line_end":362,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":83089,"byte_end":83094,"line_start":368,"line_end":368,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":83338,"byte_end":83351,"line_start":377,"line_end":377,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":83630,"byte_end":83642,"line_start":391,"line_end":391,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":84687,"byte_end":84703,"line_start":428,"line_end":428,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":116367,"byte_end":116371,"line_start":1251,"line_end":1251,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":117046,"byte_end":117062,"line_start":1269,"line_end":1269,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":117138,"byte_end":117148,"line_start":1275,"line_end":1275,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\zlib.rs","byte_start":130881,"byte_end":130891,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34526,"byte_end":34536,"line_start":46,"line_end":46,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35058,"byte_end":35064,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35613,"byte_end":35626,"line_start":87,"line_end":87,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36587,"byte_end":36590,"line_start":122,"line_end":122,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36681,"byte_end":36688,"line_start":128,"line_end":128,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":40517,"byte_end":40528,"line_start":232,"line_end":232,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":44584,"byte_end":44590,"line_start":354,"line_end":354,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":63269,"byte_end":63281,"line_start":825,"line_end":825,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":138094,"byte_end":138107,"line_start":53,"line_end":53,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":138312,"byte_end":138325,"line_start":62,"line_end":62,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":138734,"byte_end":138745,"line_start":74,"line_end":74,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":140611,"byte_end":140624,"line_start":114,"line_end":114,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":140752,"byte_end":140757,"line_start":120,"line_end":120,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":140926,"byte_end":140937,"line_start":127,"line_end":127,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141063,"byte_end":141076,"line_start":133,"line_end":133,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141899,"byte_end":141906,"line_start":163,"line_end":163,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":155417,"byte_end":155428,"line_start":482,"line_end":482,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":157106,"byte_end":157112,"line_start":540,"line_end":540,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173975,"byte_end":173981,"line_start":985,"line_end":985,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":174263,"byte_end":174274,"line_start":999,"line_end":999,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":174528,"byte_end":174539,"line_start":1010,"line_end":1010,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":175600,"byte_end":175611,"line_start":1041,"line_end":1041,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":178956,"byte_end":178967,"line_start":1145,"line_end":1145,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":180323,"byte_end":180334,"line_start":1186,"line_end":1186,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":181456,"byte_end":181463,"line_start":1217,"line_end":1217,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":182676,"byte_end":182688,"line_start":1256,"line_end":1256,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":192944,"byte_end":192956,"line_start":1530,"line_end":1530,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":195610,"byte_end":195622,"line_start":1607,"line_end":1607,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":219885,"byte_end":219896,"line_start":2290,"line_end":2290,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220857,"byte_end":220867,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220935,"byte_end":220945,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221789,"byte_end":221807,"line_start":51,"line_end":51,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":241725,"byte_end":241734,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":242609,"byte_end":242618,"line_start":218,"line_end":218,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":243772,"byte_end":243781,"line_start":253,"line_end":253,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":247394,"byte_end":247403,"line_start":343,"line_end":343,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":249275,"byte_end":249284,"line_start":393,"line_end":393,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":254152,"byte_end":254161,"line_start":517,"line_end":517,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\utils.rs","byte_start":260751,"byte_end":260764,"line_start":112,"line_end":112,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\utils.rs","byte_start":261913,"byte_end":261926,"line_start":152,"line_end":152,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2574,"byte_end":2579,"line_start":66,"line_end":66,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\lib.rs","byte_start":2649,"byte_end":2662,"line_start":72,"line_end":72,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":913}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":5150,"byte_end":5159,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1091},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\chunk.rs","byte_start":5285,"byte_end":5294,"line_start":81,"line_end":81,"column_start":29,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":6556,"byte_end":6565,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":9369,"byte_end":9377,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10244,"byte_end":10248,"line_start":146,"line_end":146,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":10868,"byte_end":10877,"line_start":169,"line_end":169,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11249,"byte_end":11258,"line_start":181,"line_end":181,"column_start":23,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":11859,"byte_end":11866,"line_start":202,"line_end":202,"column_start":6,"column_end":13},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":12184,"byte_end":12191,"line_start":213,"line_end":213,"column_start":23,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1236},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13222,"byte_end":13234,"line_start":246,"line_end":246,"column_start":18,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1254},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":13579,"byte_end":13591,"line_start":262,"line_end":262,"column_start":6,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":14737,"byte_end":14753,"line_start":296,"line_end":296,"column_start":6,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":15764,"byte_end":15775,"line_start":330,"line_end":330,"column_start":18,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1277},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":16055,"byte_end":16066,"line_start":341,"line_end":341,"column_start":6,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":17914,"byte_end":17934,"line_start":402,"line_end":402,"column_start":6,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":20439,"byte_end":20458,"line_start":455,"line_end":455,"column_start":6,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":23015,"byte_end":23019,"line_start":520,"line_end":520,"column_start":18,"column_end":22},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1351},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":23919,"byte_end":23923,"line_start":549,"line_end":549,"column_start":6,"column_end":10},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":29038,"byte_end":29051,"line_start":688,"line_end":688,"column_start":6,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":31183,"byte_end":31198,"line_start":742,"line_end":742,"column_start":6,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":31611,"byte_end":31626,"line_start":753,"line_end":753,"column_start":18,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1379},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":32855,"byte_end":32869,"line_start":781,"line_end":781,"column_start":35,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1476},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\common.rs","byte_start":32985,"byte_end":32999,"line_start":787,"line_end":787,"column_start":23,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1476},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":75919,"byte_end":75932,"line_start":212,"line_end":212,"column_start":23,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1570},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":76137,"byte_end":76150,"line_start":221,"line_end":221,"column_start":23,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1570},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":76551,"byte_end":76562,"line_start":233,"line_end":233,"column_start":23,"column_end":34},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1584},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":82680,"byte_end":82693,"line_start":350,"line_end":350,"column_start":26,"column_end":39},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1570},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":82815,"byte_end":82828,"line_start":356,"line_end":356,"column_start":28,"column_end":41},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1570},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":82956,"byte_end":82967,"line_start":362,"line_end":362,"column_start":33,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1584},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":83089,"byte_end":83094,"line_start":368,"line_end":368,"column_start":34,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":4084},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":83338,"byte_end":83351,"line_start":377,"line_end":377,"column_start":34,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1570},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":83630,"byte_end":83642,"line_start":391,"line_end":391,"column_start":6,"column_end":18},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":84687,"byte_end":84703,"line_start":428,"line_end":428,"column_start":6,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":116367,"byte_end":116371,"line_start":1251,"line_end":1251,"column_start":6,"column_end":10},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":117046,"byte_end":117062,"line_start":1269,"line_end":1269,"column_start":18,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\stream.rs","byte_start":117138,"byte_end":117148,"line_start":1275,"line_end":1275,"column_start":18,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":294},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\zlib.rs","byte_start":130881,"byte_end":130891,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":34526,"byte_end":34536,"line_start":46,"line_end":46,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35058,"byte_end":35064,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1689},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":35613,"byte_end":35626,"line_start":87,"line_end":87,"column_start":13,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36587,"byte_end":36590,"line_start":122,"line_end":122,"column_start":13,"column_end":16},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":36681,"byte_end":36688,"line_start":128,"line_end":128,"column_start":15,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":40517,"byte_end":40528,"line_start":232,"line_end":232,"column_start":15,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":44584,"byte_end":44590,"line_start":354,"line_end":354,"column_start":15,"column_end":21},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\decoder\\mod.rs","byte_start":63269,"byte_end":63281,"line_start":825,"line_end":825,"column_start":6,"column_end":18},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":138094,"byte_end":138107,"line_start":53,"line_end":53,"column_start":23,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1764},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":138312,"byte_end":138325,"line_start":62,"line_end":62,"column_start":23,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1764},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":138734,"byte_end":138745,"line_start":74,"line_end":74,"column_start":23,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1778},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":140611,"byte_end":140624,"line_start":114,"line_end":114,"column_start":26,"column_end":39},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1764},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":140752,"byte_end":140757,"line_start":120,"line_end":120,"column_start":34,"column_end":39},"kind":{"Impl":{"id":49}},"from":{"krate":1,"index":4084},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":140926,"byte_end":140937,"line_start":127,"line_end":127,"column_start":32,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1778},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141063,"byte_end":141076,"line_start":133,"line_end":133,"column_start":34,"column_end":47},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1764},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":141899,"byte_end":141906,"line_start":163,"line_end":163,"column_start":20,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":155417,"byte_end":155428,"line_start":482,"line_end":482,"column_start":6,"column_end":17},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":157106,"byte_end":157112,"line_start":540,"line_end":540,"column_start":16,"column_end":22},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":173975,"byte_end":173981,"line_start":985,"line_end":985,"column_start":25,"column_end":31},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":719},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":174263,"byte_end":174274,"line_start":999,"line_end":999,"column_start":30,"column_end":41},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":782},"to":{"krate":2,"index":3491}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":174528,"byte_end":174539,"line_start":1010,"line_end":1010,"column_start":33,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":782},"to":{"krate":2,"index":3504}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":175600,"byte_end":175611,"line_start":1041,"line_end":1041,"column_start":20,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":178956,"byte_end":178967,"line_start":1145,"line_end":1145,"column_start":30,"column_end":41},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":800},"to":{"krate":1,"index":4724}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":180323,"byte_end":180334,"line_start":1186,"line_end":1186,"column_start":25,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":800},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":181456,"byte_end":181463,"line_start":1217,"line_end":1217,"column_start":20,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":182676,"byte_end":182688,"line_start":1256,"line_end":1256,"column_start":20,"column_end":32},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":192944,"byte_end":192956,"line_start":1530,"line_end":1530,"column_start":30,"column_end":42},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":841},"to":{"krate":1,"index":4724}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":195610,"byte_end":195622,"line_start":1607,"line_end":1607,"column_start":25,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\encoder.rs","byte_start":219885,"byte_end":219896,"line_start":2290,"line_end":2290,"column_start":6,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220857,"byte_end":220867,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1823},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":220935,"byte_end":220945,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\filter.rs","byte_start":221789,"byte_end":221807,"line_start":51,"line_end":51,"column_start":18,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1850},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":241725,"byte_end":241734,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":242609,"byte_end":242618,"line_start":218,"line_end":218,"column_start":29,"column_end":38},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1906},"to":{"krate":0,"index":948}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":243772,"byte_end":243781,"line_start":253,"line_end":253,"column_start":6,"column_end":15},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":247394,"byte_end":247403,"line_start":343,"line_end":343,"column_start":29,"column_end":38},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1920},"to":{"krate":0,"index":948}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":249275,"byte_end":249284,"line_start":393,"line_end":393,"column_start":6,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\text_metadata.rs","byte_start":254152,"byte_end":254161,"line_start":517,"line_end":517,"column_start":29,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1952},"to":{"krate":0,"index":948}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\traits.rs","byte_start":257240,"byte_end":257244,"line_start":28,"line_end":28,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":4667},"to":{"krate":0,"index":1013}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\traits.rs","byte_start":257438,"byte_end":257443,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":4724},"to":{"krate":0,"index":1016}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\utils.rs","byte_start":260751,"byte_end":260764,"line_start":112,"line_end":112,"column_start":6,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.7\\src\\utils.rs","byte_start":261913,"byte_end":261926,"line_start":152,"line_end":152,"column_start":19,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1984},"to":{"krate":2,"index":8608}}]}