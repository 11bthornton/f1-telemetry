{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0","program":"C:\\Users\\Ben\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","async_channel","--edition=2018","C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2ec4d088c446dd8e","-C","extra-filename=-2ec4d088c446dd8e","--out-dir","c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps","--extern","concurrent_queue=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libconcurrent_queue-2954f6c04b077cea.rmeta","--extern","event_listener=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libevent_listener-cfcee7f3336adf36.rmeta","--extern","futures_core=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libfutures_core-6c662d95f77b2f87.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ben\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libasync_channel-2ec4d088c446dd8e.rmeta"},"prelude":{"crate_id":{"name":"async_channel","disambiguator":[7935052298102017327,0]},"crate_root":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src","external_crates":[{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10288641326355699271,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5178777620647193466,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7203661724729889941,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17525700935344431946,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14114419768508526436,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[7430704726206783492,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12664251144516306473,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5349691386245612169,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7588176879124425336,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12802573245210436658,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[15058356585373963657,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11406058276128544710,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[12054102872615165506,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15575797803660711391,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[2170788131994516450,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":16,"id":{"name":"concurrent_queue","disambiguator":[17317036530603466288,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":17,"id":{"name":"crossbeam_utils","disambiguator":[12261398158359852006,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[7872221195650628815,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":19,"id":{"name":"event_listener","disambiguator":[9686504692904195901,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","num":20,"id":{"name":"futures_core","disambiguator":[13412865793139997503,0]}}],"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":0,"byte_end":34256,"line_start":1,"line_end":1194,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":0,"byte_end":34256,"line_start":1,"line_end":1194,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":130},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":254},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":156},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":291},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":307},{"krate":0,"index":313},{"krate":0,"index":178},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":317},{"krate":0,"index":322},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":201},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":213},{"krate":0,"index":217},{"krate":0,"index":219}],"decl_id":null,"docs":" An async multi-producer multi-consumer channel, where each message can be received by only\n one of all existing consumers.","sig":null,"attributes":[{"value":"/ An async multi-producer multi-consumer channel, where each message can be received by only","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":0,"byte_end":94,"line_start":1,"line_end":1,"column_start":1,"column_end":95}},{"value":"/ one of all existing consumers.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":95,"byte_end":129,"line_start":2,"line_end":2,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":130,"byte_end":133,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ There are two kinds of channels:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":134,"byte_end":170,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":171,"byte_end":174,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ 1. [Bounded][`bounded()`] channel with limited capacity.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":175,"byte_end":235,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ 2. [Unbounded][`unbounded()`] channel with unlimited capacity.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":236,"byte_end":302,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":303,"byte_end":306,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A channel has the [`Sender`] and [`Receiver`] side. Both sides are cloneable and can be shared","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":307,"byte_end":405,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"/ among multiple threads.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":406,"byte_end":433,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":434,"byte_end":437,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`]s or all [`Receiver`]s are dropped, the channel becomes closed. When a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":438,"byte_end":531,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ channel is closed, no more messages can be sent, but remaining messages can still be received.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":532,"byte_end":630,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":631,"byte_end":634,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The channel can also be closed manually by calling [`Sender::close()`] or","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":635,"byte_end":712,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ [`Receiver::close()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":713,"byte_end":739,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":740,"byte_end":743,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":744,"byte_end":758,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":759,"byte_end":762,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":763,"byte_end":770,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":771,"byte_end":815,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ let (s, r) = async_channel::unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":816,"byte_end":860,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":861,"byte_end":864,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.send(\"Hello\").await, Ok(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":865,"byte_end":911,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(r.recv().await, Ok(\"Hello\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":912,"byte_end":956,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":957,"byte_end":966,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":967,"byte_end":974,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":976,"byte_end":999,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":1000,"byte_end":1071,"line_start":30,"line_end":30,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3126,"byte_end":3133,"line_start":109,"line_end":109,"column_start":8,"column_end":15},"name":"bounded","qualname":"::bounded","value":"fn bounded<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded channel.","sig":null,"attributes":[{"value":"/ Creates a bounded channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2507,"byte_end":2537,"line_start":86,"line_end":86,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2538,"byte_end":2541,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The created channel has space to hold at most `cap` messages at a time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2542,"byte_end":2617,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2618,"byte_end":2621,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2622,"byte_end":2634,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2635,"byte_end":2638,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Capacity must be a positive number. If `cap` is zero, this function will panic.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2639,"byte_end":2722,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2723,"byte_end":2726,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2727,"byte_end":2741,"line_start":94,"line_end":94,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2742,"byte_end":2745,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2746,"byte_end":2753,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2754,"byte_end":2798,"line_start":97,"line_end":97,"column_start":1,"column_end":45}},{"value":"/ use async_channel::{bounded, TryRecvError, TrySendError};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2799,"byte_end":2860,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2861,"byte_end":2864,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let (s, r) = bounded(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2865,"byte_end":2893,"line_start":100,"line_end":100,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2894,"byte_end":2897,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.send(10).await, Ok(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2898,"byte_end":2939,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.try_send(20), Err(TrySendError::Full(20)));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":2940,"byte_end":3000,"line_start":103,"line_end":103,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3001,"byte_end":3004,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r.recv().await, Ok(10));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3005,"byte_end":3044,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(r.try_recv(), Err(TryRecvError::Empty));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3045,"byte_end":3100,"line_start":106,"line_end":106,"column_start":1,"column_end":56}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3101,"byte_end":3110,"line_start":107,"line_end":107,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3111,"byte_end":3118,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4171,"byte_end":4180,"line_start":151,"line_end":151,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::unbounded","value":"fn unbounded<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded channel.","sig":null,"attributes":[{"value":"/ Creates an unbounded channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3654,"byte_end":3687,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3688,"byte_end":3691,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The created channel can hold an unlimited number of messages.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3692,"byte_end":3757,"line_start":133,"line_end":133,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3758,"byte_end":3761,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3762,"byte_end":3776,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3777,"byte_end":3780,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3781,"byte_end":3788,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3789,"byte_end":3833,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/ use async_channel::{unbounded, TryRecvError};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3834,"byte_end":3883,"line_start":139,"line_end":139,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3884,"byte_end":3887,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3888,"byte_end":3917,"line_start":141,"line_end":141,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3918,"byte_end":3921,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.send(10).await, Ok(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3922,"byte_end":3963,"line_start":143,"line_end":143,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.send(20).await, Ok(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":3964,"byte_end":4005,"line_start":144,"line_end":144,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4006,"byte_end":4009,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r.recv().await, Ok(10));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4010,"byte_end":4049,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(r.recv().await, Ok(20));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4050,"byte_end":4089,"line_start":147,"line_end":147,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(r.try_recv(), Err(TryRecvError::Empty));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4090,"byte_end":4145,"line_start":148,"line_end":148,"column_start":1,"column_end":56}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4146,"byte_end":4155,"line_start":149,"line_end":149,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4156,"byte_end":4163,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4910,"byte_end":4916,"line_start":177,"line_end":177,"column_start":12,"column_end":18},"name":"Sender","qualname":"::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":75}],"decl_id":null,"docs":" The sending side of a channel.","sig":null,"attributes":[{"value":"/ The sending side of a channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4640,"byte_end":4674,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4675,"byte_end":4678,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ Senders can be cloned and shared among threads. When all senders associated with a channel are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4679,"byte_end":4777,"line_start":173,"line_end":173,"column_start":1,"column_end":99}},{"value":"/ dropped, the channel becomes closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4778,"byte_end":4818,"line_start":174,"line_end":174,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4819,"byte_end":4822,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The channel can also be closed manually by calling [`Sender::close()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4823,"byte_end":4898,"line_start":176,"line_end":176,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5504,"byte_end":5512,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn try_send<'_>(&'_ Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message into the channel.","sig":null,"attributes":[{"value":"/ Attempts to send a message into the channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5008,"byte_end":5056,"line_start":183,"line_end":183,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5061,"byte_end":5064,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ If the channel is full or closed, this method returns an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5069,"byte_end":5136,"line_start":185,"line_end":185,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5141,"byte_end":5144,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5149,"byte_end":5163,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5168,"byte_end":5171,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5176,"byte_end":5183,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_channel::{bounded, TrySendError};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5188,"byte_end":5235,"line_start":190,"line_end":190,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5240,"byte_end":5243,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = bounded(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5248,"byte_end":5276,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5281,"byte_end":5284,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.try_send(1), Ok(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5289,"byte_end":5327,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(s.try_send(2), Err(TrySendError::Full(2)));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5332,"byte_end":5390,"line_start":195,"line_end":195,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5395,"byte_end":5398,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ drop(r);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5403,"byte_end":5415,"line_start":197,"line_end":197,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(s.try_send(3), Err(TrySendError::Closed(3)));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5420,"byte_end":5480,"line_start":198,"line_end":198,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":5485,"byte_end":5492,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6724,"byte_end":6728,"line_start":236,"line_end":236,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn send<'_>(&'_ Self, T) -> Send","parent":null,"children":[],"decl_id":null,"docs":" Sends a message into the channel.","sig":null,"attributes":[{"value":"/ Sends a message into the channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6168,"byte_end":6205,"line_start":217,"line_end":217,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6210,"byte_end":6213,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, this method waits until there is space for a message.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6218,"byte_end":6299,"line_start":219,"line_end":219,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6304,"byte_end":6307,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6312,"byte_end":6371,"line_start":221,"line_end":221,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6376,"byte_end":6379,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6384,"byte_end":6398,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6403,"byte_end":6406,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6411,"byte_end":6418,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6423,"byte_end":6467,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, SendError};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6472,"byte_end":6518,"line_start":227,"line_end":227,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6523,"byte_end":6526,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6531,"byte_end":6560,"line_start":229,"line_end":229,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6565,"byte_end":6568,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.send(1).await, Ok(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6573,"byte_end":6613,"line_start":231,"line_end":231,"column_start":5,"column_end":45}},{"value":"/ drop(r);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6618,"byte_end":6630,"line_start":232,"line_end":232,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(s.send(2).await, Err(SendError(2)));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6635,"byte_end":6686,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6691,"byte_end":6700,"line_start":234,"line_end":234,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6705,"byte_end":6712,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7855,"byte_end":7868,"line_start":269,"line_end":269,"column_start":12,"column_end":25},"name":"send_blocking","qualname":"<Sender<T>>::send_blocking","value":"fn send_blocking<'_>(&'_ Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message into this channel using the blocking strategy.","sig":null,"attributes":[{"value":"/ Sends a message into this channel using the blocking strategy.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6879,"byte_end":6945,"line_start":244,"line_end":244,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6950,"byte_end":6953,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, this method will block until there is room.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":6958,"byte_end":7029,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ If the channel is closed, this method returns an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7034,"byte_end":7093,"line_start":247,"line_end":247,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7098,"byte_end":7101,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Blocking","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7106,"byte_end":7120,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7125,"byte_end":7128,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Rather than using asynchronous waiting, like the [`send`](Self::send) method,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7133,"byte_end":7214,"line_start":251,"line_end":251,"column_start":5,"column_end":86}},{"value":"/ this method will block the current thread until the message is sent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7219,"byte_end":7291,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7296,"byte_end":7299,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This method should not be used in an asynchronous context. It is intended","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7304,"byte_end":7381,"line_start":254,"line_end":254,"column_start":5,"column_end":82}},{"value":"/ to be used such that a channel can be used in both asynchronous and synchronous contexts.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7386,"byte_end":7479,"line_start":255,"line_end":255,"column_start":5,"column_end":98}},{"value":"/ Calling this method in an asynchronous context may result in deadlocks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7484,"byte_end":7559,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7564,"byte_end":7567,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7572,"byte_end":7586,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7591,"byte_end":7594,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7599,"byte_end":7606,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use async_channel::{unbounded, SendError};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7611,"byte_end":7657,"line_start":261,"line_end":261,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7662,"byte_end":7665,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7670,"byte_end":7699,"line_start":263,"line_end":263,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7704,"byte_end":7707,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.send_blocking(1), Ok(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7712,"byte_end":7755,"line_start":265,"line_end":265,"column_start":5,"column_end":48}},{"value":"/ drop(r);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7760,"byte_end":7772,"line_start":266,"line_end":266,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(s.send_blocking(2), Err(SendError(2)));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7777,"byte_end":7831,"line_start":267,"line_end":267,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7836,"byte_end":7843,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8541,"byte_end":8546,"line_start":293,"line_end":293,"column_start":12,"column_end":17},"name":"close","qualname":"<Sender<T>>::close","value":"fn close<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Closes the channel.","sig":null,"attributes":[{"value":"/ Closes the channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7955,"byte_end":7978,"line_start":273,"line_end":273,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7983,"byte_end":7986,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if this call has closed the channel and it was not closed already.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":7991,"byte_end":8076,"line_start":275,"line_end":275,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8081,"byte_end":8084,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ The remaining messages can still be received.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8089,"byte_end":8138,"line_start":277,"line_end":277,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8143,"byte_end":8146,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8151,"byte_end":8165,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8170,"byte_end":8173,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8178,"byte_end":8185,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8190,"byte_end":8234,"line_start":282,"line_end":282,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, RecvError};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8239,"byte_end":8285,"line_start":283,"line_end":283,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8290,"byte_end":8293,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8298,"byte_end":8327,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s.send(1).await, Ok(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8332,"byte_end":8372,"line_start":286,"line_end":286,"column_start":5,"column_end":45}},{"value":"/ assert!(s.close());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8377,"byte_end":8400,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8405,"byte_end":8408,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r.recv().await, Ok(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8413,"byte_end":8451,"line_start":289,"line_end":289,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(r.recv().await, Err(RecvError));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8456,"byte_end":8503,"line_start":290,"line_end":290,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8508,"byte_end":8517,"line_start":291,"line_end":291,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8522,"byte_end":8529,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8971,"byte_end":8980,"line_start":312,"line_end":312,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is closed.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8604,"byte_end":8648,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8653,"byte_end":8656,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8661,"byte_end":8675,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8680,"byte_end":8683,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8688,"byte_end":8695,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8700,"byte_end":8744,"line_start":302,"line_end":302,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, RecvError};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8749,"byte_end":8795,"line_start":303,"line_end":303,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8800,"byte_end":8803,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<()>();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8808,"byte_end":8843,"line_start":305,"line_end":305,"column_start":5,"column_end":40}},{"value":"/ assert!(!s.is_closed());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8848,"byte_end":8876,"line_start":306,"line_end":306,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8881,"byte_end":8884,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ drop(r);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8889,"byte_end":8901,"line_start":308,"line_end":308,"column_start":5,"column_end":17}},{"value":"/ assert!(s.is_closed());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8906,"byte_end":8933,"line_start":309,"line_end":309,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8938,"byte_end":8947,"line_start":310,"line_end":310,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":8952,"byte_end":8959,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9401,"byte_end":9409,"line_start":331,"line_end":331,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Sender<T>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is empty.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is empty.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9048,"byte_end":9091,"line_start":316,"line_end":316,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9096,"byte_end":9099,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9104,"byte_end":9118,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9123,"byte_end":9126,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9131,"byte_end":9138,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9143,"byte_end":9187,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9192,"byte_end":9225,"line_start":322,"line_end":322,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9230,"byte_end":9233,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9238,"byte_end":9267,"line_start":324,"line_end":324,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9272,"byte_end":9275,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9280,"byte_end":9306,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ s.send(1).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9311,"byte_end":9331,"line_start":327,"line_end":327,"column_start":5,"column_end":25}},{"value":"/ assert!(!s.is_empty());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9336,"byte_end":9363,"line_start":328,"line_end":328,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9368,"byte_end":9377,"line_start":329,"line_end":329,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9382,"byte_end":9389,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9874,"byte_end":9881,"line_start":352,"line_end":352,"column_start":12,"column_end":19},"name":"is_full","qualname":"<Sender<T>>::is_full","value":"fn is_full<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is full.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is full.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9476,"byte_end":9518,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9523,"byte_end":9526,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Unbounded channels are never full.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9531,"byte_end":9569,"line_start":337,"line_end":337,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9574,"byte_end":9577,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9582,"byte_end":9596,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9601,"byte_end":9604,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9609,"byte_end":9616,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9621,"byte_end":9665,"line_start":342,"line_end":342,"column_start":5,"column_end":49}},{"value":"/ use async_channel::bounded;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9670,"byte_end":9701,"line_start":343,"line_end":343,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9706,"byte_end":9709,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = bounded(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9714,"byte_end":9742,"line_start":345,"line_end":345,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9747,"byte_end":9750,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ assert!(!s.is_full());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9755,"byte_end":9781,"line_start":347,"line_end":347,"column_start":5,"column_end":31}},{"value":"/ s.send(1).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9786,"byte_end":9806,"line_start":348,"line_end":348,"column_start":5,"column_end":25}},{"value":"/ assert!(s.is_full());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9811,"byte_end":9836,"line_start":349,"line_end":349,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9841,"byte_end":9850,"line_start":350,"line_end":350,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9855,"byte_end":9862,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10333,"byte_end":10336,"line_start":372,"line_end":372,"column_start":12,"column_end":15},"name":"len","qualname":"<Sender<T>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages in the channel.","sig":null,"attributes":[{"value":"/ Returns the number of messages in the channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":9947,"byte_end":9997,"line_start":356,"line_end":356,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10002,"byte_end":10005,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10010,"byte_end":10024,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10029,"byte_end":10032,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10037,"byte_end":10044,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10049,"byte_end":10093,"line_start":361,"line_end":361,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10098,"byte_end":10131,"line_start":362,"line_end":362,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10136,"byte_end":10139,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10144,"byte_end":10173,"line_start":364,"line_end":364,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s.len(), 0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10178,"byte_end":10205,"line_start":365,"line_end":365,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10210,"byte_end":10213,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ s.send(1).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10218,"byte_end":10238,"line_start":367,"line_end":367,"column_start":5,"column_end":25}},{"value":"/ s.send(2).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10243,"byte_end":10263,"line_start":368,"line_end":368,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(s.len(), 2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10268,"byte_end":10295,"line_start":369,"line_end":369,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10300,"byte_end":10309,"line_start":370,"line_end":370,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10314,"byte_end":10321,"line_start":371,"line_end":371,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10748,"byte_end":10756,"line_start":389,"line_end":389,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Sender<T>>::capacity","value":"fn capacity<'_>(&'_ Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel capacity if it's bounded.","sig":null,"attributes":[{"value":"/ Returns the channel capacity if it's bounded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10399,"byte_end":10448,"line_start":376,"line_end":376,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10453,"byte_end":10456,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10461,"byte_end":10475,"line_start":378,"line_end":378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10480,"byte_end":10483,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10488,"byte_end":10495,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use async_channel::{bounded, unbounded};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10500,"byte_end":10544,"line_start":381,"line_end":381,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10549,"byte_end":10552,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = bounded::<i32>(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10557,"byte_end":10592,"line_start":383,"line_end":383,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.capacity(), Some(5));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10597,"byte_end":10635,"line_start":384,"line_end":384,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10640,"byte_end":10643,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<i32>();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10648,"byte_end":10684,"line_start":386,"line_end":386,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(s.capacity(), None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10689,"byte_end":10724,"line_start":387,"line_end":387,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10729,"byte_end":10736,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11226,"byte_end":11240,"line_start":408,"line_end":408,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"fn receiver_count<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of receivers for the channel.","sig":null,"attributes":[{"value":"/ Returns the number of receivers for the channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10832,"byte_end":10884,"line_start":393,"line_end":393,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10889,"byte_end":10892,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10897,"byte_end":10911,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10916,"byte_end":10919,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10924,"byte_end":10931,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10936,"byte_end":10980,"line_start":398,"line_end":398,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":10985,"byte_end":11018,"line_start":399,"line_end":399,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11023,"byte_end":11026,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<()>();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11031,"byte_end":11066,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.receiver_count(), 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11071,"byte_end":11109,"line_start":402,"line_end":402,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11114,"byte_end":11117,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let r2 = r.clone();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11122,"byte_end":11145,"line_start":404,"line_end":404,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(s.receiver_count(), 2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11150,"byte_end":11188,"line_start":405,"line_end":405,"column_start":5,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11193,"byte_end":11202,"line_start":406,"line_end":406,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11207,"byte_end":11214,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11717,"byte_end":11729,"line_start":427,"line_end":427,"column_start":12,"column_end":24},"name":"sender_count","qualname":"<Sender<T>>::sender_count","value":"fn sender_count<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of senders for the channel.","sig":null,"attributes":[{"value":"/ Returns the number of senders for the channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11329,"byte_end":11379,"line_start":412,"line_end":412,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11384,"byte_end":11387,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11392,"byte_end":11406,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11411,"byte_end":11414,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11419,"byte_end":11426,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11431,"byte_end":11475,"line_start":417,"line_end":417,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11480,"byte_end":11513,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11518,"byte_end":11521,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<()>();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11526,"byte_end":11561,"line_start":420,"line_end":420,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.sender_count(), 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11566,"byte_end":11602,"line_start":421,"line_end":421,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11607,"byte_end":11610,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ let s2 = s.clone();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11615,"byte_end":11638,"line_start":423,"line_end":423,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(s.sender_count(), 2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11643,"byte_end":11679,"line_start":424,"line_end":424,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11684,"byte_end":11693,"line_start":425,"line_end":425,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11698,"byte_end":11705,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11873,"byte_end":11882,"line_start":432,"line_end":432,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Sender<T>>::downgrade","value":"fn downgrade<'_>(&'_ Self) -> WeakSender<T>","parent":null,"children":[],"decl_id":null,"docs":" Downgrade the sender to a weak reference.\n","sig":null,"attributes":[{"value":"/ Downgrade the sender to a weak reference.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":11816,"byte_end":11861,"line_start":431,"line_end":431,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12028,"byte_end":12032,"line_start":440,"line_end":440,"column_start":8,"column_end":12},"name":"drop","qualname":"<Sender<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12302,"byte_end":12305,"line_start":449,"line_end":449,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Sender<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12441,"byte_end":12446,"line_start":455,"line_end":455,"column_start":8,"column_end":13},"name":"clone","qualname":"<Sender<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Sender<T>","parent":{"krate":2,"index":2887},"children":[],"decl_id":{"krate":2,"index":2888},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13123,"byte_end":13131,"line_start":477,"line_end":477,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"decl_id":null,"docs":" The receiving side of a channel.","sig":null,"attributes":[{"value":"/ The receiving side of a channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12795,"byte_end":12831,"line_start":469,"line_end":469,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12832,"byte_end":12835,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ Receivers can be cloned and shared among threads. When all receivers associated with a channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12836,"byte_end":12934,"line_start":471,"line_end":471,"column_start":1,"column_end":99}},{"value":"/ are dropped, the channel becomes closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12935,"byte_end":12979,"line_start":472,"line_end":472,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12980,"byte_end":12983,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ The channel can also be closed manually by calling [`Receiver::close()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12984,"byte_end":13061,"line_start":474,"line_end":474,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13062,"byte_end":13065,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ Receivers implement the [`Stream`] trait.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13066,"byte_end":13111,"line_start":476,"line_end":476,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13942,"byte_end":13950,"line_start":506,"line_end":506,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn try_recv<'_>(&'_ Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message from the channel.","sig":null,"attributes":[{"value":"/ Attempts to receive a message from the channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13329,"byte_end":13380,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13385,"byte_end":13388,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ If the channel is empty, or empty and closed, this method returns an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13393,"byte_end":13472,"line_start":488,"line_end":488,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13477,"byte_end":13480,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13485,"byte_end":13499,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13504,"byte_end":13507,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13512,"byte_end":13519,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13524,"byte_end":13568,"line_start":493,"line_end":493,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, TryRecvError};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13573,"byte_end":13622,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13627,"byte_end":13630,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13635,"byte_end":13664,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s.send(1).await, Ok(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13669,"byte_end":13709,"line_start":497,"line_end":497,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13714,"byte_end":13717,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r.try_recv(), Ok(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13722,"byte_end":13758,"line_start":499,"line_end":499,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(r.try_recv(), Err(TryRecvError::Empty));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13763,"byte_end":13818,"line_start":500,"line_end":500,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13823,"byte_end":13826,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ drop(s);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13831,"byte_end":13843,"line_start":502,"line_end":502,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(r.try_recv(), Err(TryRecvError::Closed));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13848,"byte_end":13904,"line_start":503,"line_end":503,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13909,"byte_end":13918,"line_start":504,"line_end":504,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13923,"byte_end":13930,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15115,"byte_end":15119,"line_start":542,"line_end":542,"column_start":12,"column_end":16},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn recv<'_>(&'_ Self) -> Recv","parent":null,"children":[],"decl_id":null,"docs":" Receives a message from the channel.","sig":null,"attributes":[{"value":"/ Receives a message from the channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14458,"byte_end":14498,"line_start":520,"line_end":520,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14503,"byte_end":14506,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ If the channel is empty, this method waits until there is a message.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14511,"byte_end":14583,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14588,"byte_end":14591,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method receives a message or returns an error if there are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14596,"byte_end":14689,"line_start":524,"line_end":524,"column_start":5,"column_end":98}},{"value":"/ no more messages.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14694,"byte_end":14715,"line_start":525,"line_end":525,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14720,"byte_end":14723,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14728,"byte_end":14742,"line_start":527,"line_end":527,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14747,"byte_end":14750,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14755,"byte_end":14762,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14767,"byte_end":14811,"line_start":530,"line_end":530,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, RecvError};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14816,"byte_end":14862,"line_start":531,"line_end":531,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14867,"byte_end":14870,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14875,"byte_end":14904,"line_start":533,"line_end":533,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14909,"byte_end":14912,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.send(1).await, Ok(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14917,"byte_end":14957,"line_start":535,"line_end":535,"column_start":5,"column_end":45}},{"value":"/ drop(s);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14962,"byte_end":14974,"line_start":536,"line_end":536,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14979,"byte_end":14982,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r.recv().await, Ok(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":14987,"byte_end":15025,"line_start":538,"line_end":538,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(r.recv().await, Err(RecvError));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15030,"byte_end":15077,"line_start":539,"line_end":539,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15082,"byte_end":15091,"line_start":540,"line_end":540,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15096,"byte_end":15103,"line_start":541,"line_end":541,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16325,"byte_end":16338,"line_start":577,"line_end":577,"column_start":12,"column_end":25},"name":"recv_blocking","qualname":"<Receiver<T>>::recv_blocking","value":"fn recv_blocking<'_>(&'_ Self) -> Result<T, RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Receives a message from the channel using the blocking strategy.","sig":null,"attributes":[{"value":"/ Receives a message from the channel using the blocking strategy.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15236,"byte_end":15304,"line_start":549,"line_end":549,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15309,"byte_end":15312,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ If the channel is empty, this method waits until there is a message.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15317,"byte_end":15389,"line_start":551,"line_end":551,"column_start":5,"column_end":77}},{"value":"/ If the channel is closed, this method receives a message or returns an error if there are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15394,"byte_end":15487,"line_start":552,"line_end":552,"column_start":5,"column_end":98}},{"value":"/ no more messages.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15492,"byte_end":15513,"line_start":553,"line_end":553,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15518,"byte_end":15521,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Blocking","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15526,"byte_end":15540,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15545,"byte_end":15548,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Rather than using asynchronous waiting, like the [`recv`](Self::recv) method,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15553,"byte_end":15634,"line_start":557,"line_end":557,"column_start":5,"column_end":86}},{"value":"/ this method will block the current thread until the message is sent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15639,"byte_end":15711,"line_start":558,"line_end":558,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15716,"byte_end":15719,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ This method should not be used in an asynchronous context. It is intended","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15724,"byte_end":15801,"line_start":560,"line_end":560,"column_start":5,"column_end":82}},{"value":"/ to be used such that a channel can be used in both asynchronous and synchronous contexts.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15806,"byte_end":15899,"line_start":561,"line_end":561,"column_start":5,"column_end":98}},{"value":"/ Calling this method in an asynchronous context may result in deadlocks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15904,"byte_end":15979,"line_start":562,"line_end":562,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15984,"byte_end":15987,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":15992,"byte_end":16006,"line_start":564,"line_end":564,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16011,"byte_end":16014,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16019,"byte_end":16026,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ use async_channel::{unbounded, RecvError};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16031,"byte_end":16077,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16082,"byte_end":16085,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16090,"byte_end":16119,"line_start":569,"line_end":569,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16124,"byte_end":16127,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.send_blocking(1), Ok(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16132,"byte_end":16175,"line_start":571,"line_end":571,"column_start":5,"column_end":48}},{"value":"/ drop(s);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16180,"byte_end":16192,"line_start":572,"line_end":572,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16197,"byte_end":16200,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r.recv_blocking(), Ok(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16205,"byte_end":16246,"line_start":574,"line_end":574,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(r.recv_blocking(), Err(RecvError));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16251,"byte_end":16301,"line_start":575,"line_end":575,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16306,"byte_end":16313,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16996,"byte_end":17001,"line_start":601,"line_end":601,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn close<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Closes the channel.","sig":null,"attributes":[{"value":"/ Closes the channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16410,"byte_end":16433,"line_start":581,"line_end":581,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16438,"byte_end":16441,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if this call has closed the channel and it was not closed already.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16446,"byte_end":16531,"line_start":583,"line_end":583,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16536,"byte_end":16539,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ The remaining messages can still be received.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16544,"byte_end":16593,"line_start":585,"line_end":585,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16598,"byte_end":16601,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16606,"byte_end":16620,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16625,"byte_end":16628,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16633,"byte_end":16640,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16645,"byte_end":16689,"line_start":590,"line_end":590,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, RecvError};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16694,"byte_end":16740,"line_start":591,"line_end":591,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16745,"byte_end":16748,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16753,"byte_end":16782,"line_start":593,"line_end":593,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s.send(1).await, Ok(()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16787,"byte_end":16827,"line_start":594,"line_end":594,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16832,"byte_end":16835,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ assert!(r.close());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16840,"byte_end":16863,"line_start":596,"line_end":596,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(r.recv().await, Ok(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16868,"byte_end":16906,"line_start":597,"line_end":597,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(r.recv().await, Err(RecvError));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16911,"byte_end":16958,"line_start":598,"line_end":598,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16963,"byte_end":16972,"line_start":599,"line_end":599,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":16977,"byte_end":16984,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17426,"byte_end":17435,"line_start":620,"line_end":620,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Receiver<T>>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is closed.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17059,"byte_end":17103,"line_start":605,"line_end":605,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17108,"byte_end":17111,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17116,"byte_end":17130,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17135,"byte_end":17138,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17143,"byte_end":17150,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17155,"byte_end":17199,"line_start":610,"line_end":610,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, RecvError};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17204,"byte_end":17250,"line_start":611,"line_end":611,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17255,"byte_end":17258,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<()>();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17263,"byte_end":17298,"line_start":613,"line_end":613,"column_start":5,"column_end":40}},{"value":"/ assert!(!r.is_closed());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17303,"byte_end":17331,"line_start":614,"line_end":614,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17336,"byte_end":17339,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ drop(s);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17344,"byte_end":17356,"line_start":616,"line_end":616,"column_start":5,"column_end":17}},{"value":"/ assert!(r.is_closed());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17361,"byte_end":17388,"line_start":617,"line_end":617,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17393,"byte_end":17402,"line_start":618,"line_end":618,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17407,"byte_end":17414,"line_start":619,"line_end":619,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17856,"byte_end":17864,"line_start":639,"line_end":639,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Receiver<T>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is empty.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is empty.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17503,"byte_end":17546,"line_start":624,"line_end":624,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17551,"byte_end":17554,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17559,"byte_end":17573,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17578,"byte_end":17581,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17586,"byte_end":17593,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17598,"byte_end":17642,"line_start":629,"line_end":629,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17647,"byte_end":17680,"line_start":630,"line_end":630,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17685,"byte_end":17688,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17693,"byte_end":17722,"line_start":632,"line_end":632,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17727,"byte_end":17730,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17735,"byte_end":17761,"line_start":634,"line_end":634,"column_start":5,"column_end":31}},{"value":"/ s.send(1).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17766,"byte_end":17786,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/ assert!(!s.is_empty());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17791,"byte_end":17818,"line_start":636,"line_end":636,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17823,"byte_end":17832,"line_start":637,"line_end":637,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17837,"byte_end":17844,"line_start":638,"line_end":638,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18329,"byte_end":18336,"line_start":660,"line_end":660,"column_start":12,"column_end":19},"name":"is_full","qualname":"<Receiver<T>>::is_full","value":"fn is_full<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is full.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is full.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17931,"byte_end":17973,"line_start":643,"line_end":643,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17978,"byte_end":17981,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Unbounded channels are never full.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":17986,"byte_end":18024,"line_start":645,"line_end":645,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18029,"byte_end":18032,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18037,"byte_end":18051,"line_start":647,"line_end":647,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18056,"byte_end":18059,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18064,"byte_end":18071,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18076,"byte_end":18120,"line_start":650,"line_end":650,"column_start":5,"column_end":49}},{"value":"/ use async_channel::bounded;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18125,"byte_end":18156,"line_start":651,"line_end":651,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18161,"byte_end":18164,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = bounded(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18169,"byte_end":18197,"line_start":653,"line_end":653,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18202,"byte_end":18205,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ assert!(!r.is_full());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18210,"byte_end":18236,"line_start":655,"line_end":655,"column_start":5,"column_end":31}},{"value":"/ s.send(1).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18241,"byte_end":18261,"line_start":656,"line_end":656,"column_start":5,"column_end":25}},{"value":"/ assert!(r.is_full());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18266,"byte_end":18291,"line_start":657,"line_end":657,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18296,"byte_end":18305,"line_start":658,"line_end":658,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18310,"byte_end":18317,"line_start":659,"line_end":659,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18788,"byte_end":18791,"line_start":680,"line_end":680,"column_start":12,"column_end":15},"name":"len","qualname":"<Receiver<T>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages in the channel.","sig":null,"attributes":[{"value":"/ Returns the number of messages in the channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18402,"byte_end":18452,"line_start":664,"line_end":664,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18457,"byte_end":18460,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18465,"byte_end":18479,"line_start":666,"line_end":666,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18484,"byte_end":18487,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18492,"byte_end":18499,"line_start":668,"line_end":668,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18504,"byte_end":18548,"line_start":669,"line_end":669,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18553,"byte_end":18586,"line_start":670,"line_end":670,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18591,"byte_end":18594,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18599,"byte_end":18628,"line_start":672,"line_end":672,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(r.len(), 0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18633,"byte_end":18660,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18665,"byte_end":18668,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ s.send(1).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18673,"byte_end":18693,"line_start":675,"line_end":675,"column_start":5,"column_end":25}},{"value":"/ s.send(2).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18698,"byte_end":18718,"line_start":676,"line_end":676,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(r.len(), 2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18723,"byte_end":18750,"line_start":677,"line_end":677,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18755,"byte_end":18764,"line_start":678,"line_end":678,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18769,"byte_end":18776,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19203,"byte_end":19211,"line_start":697,"line_end":697,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Receiver<T>>::capacity","value":"fn capacity<'_>(&'_ Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel capacity if it's bounded.","sig":null,"attributes":[{"value":"/ Returns the channel capacity if it's bounded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18854,"byte_end":18903,"line_start":684,"line_end":684,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18908,"byte_end":18911,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18916,"byte_end":18930,"line_start":686,"line_end":686,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18935,"byte_end":18938,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18943,"byte_end":18950,"line_start":688,"line_end":688,"column_start":5,"column_end":12}},{"value":"/ use async_channel::{bounded, unbounded};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":18955,"byte_end":18999,"line_start":689,"line_end":689,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19004,"byte_end":19007,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = bounded::<i32>(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19012,"byte_end":19047,"line_start":691,"line_end":691,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(r.capacity(), Some(5));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19052,"byte_end":19090,"line_start":692,"line_end":692,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19095,"byte_end":19098,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<i32>();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19103,"byte_end":19139,"line_start":694,"line_end":694,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(r.capacity(), None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19144,"byte_end":19179,"line_start":695,"line_end":695,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19184,"byte_end":19191,"line_start":696,"line_end":696,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19681,"byte_end":19695,"line_start":716,"line_end":716,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Receiver<T>>::receiver_count","value":"fn receiver_count<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of receivers for the channel.","sig":null,"attributes":[{"value":"/ Returns the number of receivers for the channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19287,"byte_end":19339,"line_start":701,"line_end":701,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19344,"byte_end":19347,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19352,"byte_end":19366,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19371,"byte_end":19374,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19379,"byte_end":19386,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19391,"byte_end":19435,"line_start":706,"line_end":706,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19440,"byte_end":19473,"line_start":707,"line_end":707,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19478,"byte_end":19481,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<()>();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19486,"byte_end":19521,"line_start":709,"line_end":709,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(r.receiver_count(), 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19526,"byte_end":19564,"line_start":710,"line_end":710,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19569,"byte_end":19572,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ let r2 = r.clone();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19577,"byte_end":19600,"line_start":712,"line_end":712,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(r.receiver_count(), 2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19605,"byte_end":19643,"line_start":713,"line_end":713,"column_start":5,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19648,"byte_end":19657,"line_start":714,"line_end":714,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19662,"byte_end":19669,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20172,"byte_end":20184,"line_start":735,"line_end":735,"column_start":12,"column_end":24},"name":"sender_count","qualname":"<Receiver<T>>::sender_count","value":"fn sender_count<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of senders for the channel.","sig":null,"attributes":[{"value":"/ Returns the number of senders for the channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19784,"byte_end":19834,"line_start":720,"line_end":720,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19839,"byte_end":19842,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19847,"byte_end":19861,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19866,"byte_end":19869,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19874,"byte_end":19881,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19886,"byte_end":19930,"line_start":725,"line_end":725,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19935,"byte_end":19968,"line_start":726,"line_end":726,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19973,"byte_end":19976,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<()>();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":19981,"byte_end":20016,"line_start":728,"line_end":728,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(r.sender_count(), 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20021,"byte_end":20057,"line_start":729,"line_end":729,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20062,"byte_end":20065,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let s2 = s.clone();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20070,"byte_end":20093,"line_start":731,"line_end":731,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(r.sender_count(), 2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20098,"byte_end":20134,"line_start":732,"line_end":732,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20139,"byte_end":20148,"line_start":733,"line_end":733,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20153,"byte_end":20160,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20330,"byte_end":20339,"line_start":740,"line_end":740,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Receiver<T>>::downgrade","value":"fn downgrade<'_>(&'_ Self) -> WeakReceiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Downgrade the receiver to a weak reference.\n","sig":null,"attributes":[{"value":"/ Downgrade the receiver to a weak reference.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20271,"byte_end":20318,"line_start":739,"line_end":739,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20491,"byte_end":20495,"line_start":748,"line_end":748,"column_start":8,"column_end":12},"name":"drop","qualname":"<Receiver<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20771,"byte_end":20774,"line_start":757,"line_end":757,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Receiver<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20914,"byte_end":20919,"line_start":763,"line_end":763,"column_start":8,"column_end":13},"name":"clone","qualname":"<Receiver<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Receiver<T>","parent":{"krate":2,"index":2887},"children":[],"decl_id":{"krate":2,"index":2888},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":21364,"byte_end":21373,"line_start":781,"line_end":781,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Receiver<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":23040,"byte_end":23053,"line_start":822,"line_end":822,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Receiver<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":23408,"byte_end":23418,"line_start":832,"line_end":832,"column_start":12,"column_end":22},"name":"WeakSender","qualname":"::WeakSender","value":"WeakSender {  }","parent":null,"children":[{"krate":0,"index":224}],"decl_id":null,"docs":" A [`Sender`] that prevents the channel from not being closed.","sig":null,"attributes":[{"value":"/ A [`Sender`] that prevents the channel from not being closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":23152,"byte_end":23217,"line_start":827,"line_end":827,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":23218,"byte_end":23221,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ This is created through the [`Sender::downgrade`] method. In order to use it, it needs","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":23222,"byte_end":23312,"line_start":829,"line_end":829,"column_start":1,"column_end":91}},{"value":"/ to be upgraded into a [`Sender`] through the `upgrade` method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":23313,"byte_end":23379,"line_start":830,"line_end":830,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":23546,"byte_end":23553,"line_start":838,"line_end":838,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakSender<T>>::upgrade","value":"fn upgrade<'_>(&'_ Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Upgrade the [`WeakSender`] into a [`Sender`].\n","sig":null,"attributes":[{"value":"/ Upgrade the [`WeakSender`] into a [`Sender`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":23485,"byte_end":23534,"line_start":837,"line_end":837,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":24332,"byte_end":24335,"line_start":860,"line_end":860,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WeakSender<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":24700,"byte_end":24712,"line_start":870,"line_end":870,"column_start":12,"column_end":24},"name":"WeakReceiver","qualname":"::WeakReceiver","value":"WeakReceiver {  }","parent":null,"children":[{"krate":0,"index":230}],"decl_id":null,"docs":" A [`Receiver`] that prevents the channel from not being closed.","sig":null,"attributes":[{"value":"/ A [`Receiver`] that prevents the channel from not being closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":24438,"byte_end":24505,"line_start":865,"line_end":865,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":24506,"byte_end":24509,"line_start":866,"line_end":866,"column_start":1,"column_end":4}},{"value":"/ This is created through the [`Receiver::downgrade`] method. In order to use it, it needs","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":24510,"byte_end":24602,"line_start":867,"line_end":867,"column_start":1,"column_end":93}},{"value":"/ to be upgraded into a [`Receiver`] through the `upgrade` method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":24603,"byte_end":24671,"line_start":868,"line_end":868,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":24846,"byte_end":24853,"line_start":876,"line_end":876,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakReceiver<T>>::upgrade","value":"fn upgrade<'_>(&'_ Self) -> Option<Receiver<T>>","parent":null,"children":[],"decl_id":null,"docs":" Upgrade the [`WeakReceiver`] into a [`Receiver`].\n","sig":null,"attributes":[{"value":"/ Upgrade the [`WeakReceiver`] into a [`Receiver`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":24781,"byte_end":24834,"line_start":875,"line_end":875,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":25680,"byte_end":25683,"line_start":899,"line_end":899,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WeakReceiver<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":25932,"byte_end":25941,"line_start":908,"line_end":908,"column_start":12,"column_end":21},"name":"SendError","qualname":"::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from [`Sender::send()`].","sig":null,"attributes":[{"value":"/ An error returned from [`Sender::send()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":25788,"byte_end":25834,"line_start":904,"line_end":904,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":25835,"byte_end":25838,"line_start":905,"line_end":905,"column_start":1,"column_end":4}},{"value":"/ Received because the channel is closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":25839,"byte_end":25882,"line_start":906,"line_end":906,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":25945,"byte_end":25950,"line_start":908,"line_end":908,"column_start":25,"column_end":30},"name":"0","qualname":"::SendError::0","value":"T","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26039,"byte_end":26049,"line_start":912,"line_end":912,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SendError<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the message that couldn't be sent.\n","sig":null,"attributes":[{"value":"/ Unwraps the message that couldn't be sent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":25981,"byte_end":26027,"line_start":911,"line_end":911,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26174,"byte_end":26177,"line_start":920,"line_end":920,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SendError<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26321,"byte_end":26324,"line_start":926,"line_end":926,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SendError<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26601,"byte_end":26605,"line_start":935,"line_end":935,"column_start":5,"column_end":9},"name":"Full","qualname":"::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" The channel is full but not closed.\n","sig":null,"attributes":[{"value":"/ The channel is full but not closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26557,"byte_end":26596,"line_start":934,"line_end":934,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26606,"byte_end":26607,"line_start":935,"line_end":935,"column_start":10,"column_end":11},"name":"0","qualname":"::TrySendError::Full::0","value":"T","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26646,"byte_end":26652,"line_start":938,"line_end":938,"column_start":5,"column_end":11},"name":"Closed","qualname":"::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" The channel is closed.\n","sig":null,"attributes":[{"value":"/ The channel is closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26615,"byte_end":26641,"line_start":937,"line_end":937,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26653,"byte_end":26654,"line_start":938,"line_end":938,"column_start":12,"column_end":13},"name":"0","qualname":"::TrySendError::Closed::0","value":"T","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26535,"byte_end":26547,"line_start":933,"line_end":933,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::TrySendError","value":"enum TrySendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":259}],"decl_id":null,"docs":" An error returned from [`Sender::try_send()`].\n","sig":null,"attributes":[{"value":"/ An error returned from [`Sender::try_send()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26437,"byte_end":26487,"line_start":931,"line_end":931,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26748,"byte_end":26758,"line_start":943,"line_end":943,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the message that couldn't be sent.\n","sig":null,"attributes":[{"value":"/ Unwraps the message that couldn't be sent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26690,"byte_end":26736,"line_start":942,"line_end":942,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26965,"byte_end":26972,"line_start":951,"line_end":951,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"fn is_full<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is full but not closed.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is full but not closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26896,"byte_end":26953,"line_start":950,"line_end":950,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":27177,"byte_end":27186,"line_start":959,"line_end":959,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<TrySendError<T>>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is closed.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":27121,"byte_end":27165,"line_start":958,"line_end":958,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":27426,"byte_end":27429,"line_start":970,"line_end":970,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySendError<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":27699,"byte_end":27702,"line_start":979,"line_end":979,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySendError<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28123,"byte_end":28132,"line_start":991,"line_end":991,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from [`Receiver::recv()`].","sig":null,"attributes":[{"value":"/ An error returned from [`Receiver::recv()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":27960,"byte_end":28008,"line_start":987,"line_end":987,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28009,"byte_end":28012,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ Received because the channel is empty and closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28013,"byte_end":28066,"line_start":989,"line_end":989,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28212,"byte_end":28215,"line_start":996,"line_end":996,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RecvError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28512,"byte_end":28517,"line_start":1005,"line_end":1005,"column_start":5,"column_end":10},"name":"Empty","qualname":"::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" The channel is empty but not closed.\n","sig":null,"attributes":[{"value":"/ The channel is empty but not closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28467,"byte_end":28507,"line_start":1004,"line_end":1004,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28565,"byte_end":28571,"line_start":1008,"line_end":1008,"column_start":5,"column_end":11},"name":"Closed","qualname":"::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" The channel is empty and closed.\n","sig":null,"attributes":[{"value":"/ The channel is empty and closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28524,"byte_end":28560,"line_start":1007,"line_end":1007,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28448,"byte_end":28460,"line_start":1003,"line_end":1003,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::TryRecvError","value":"enum TryRecvError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":294}],"decl_id":null,"docs":" An error returned from [`Receiver::try_recv()`].\n","sig":null,"attributes":[{"value":"/ An error returned from [`Receiver::try_recv()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28341,"byte_end":28393,"line_start":1001,"line_end":1001,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28670,"byte_end":28678,"line_start":1013,"line_end":1013,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TryRecvError>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is empty but not closed.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is empty but not closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28600,"byte_end":28658,"line_start":1012,"line_end":1012,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28888,"byte_end":28897,"line_start":1021,"line_end":1021,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<TryRecvError>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is empty and closed.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is empty and closed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28822,"byte_end":28876,"line_start":1020,"line_end":1020,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":29122,"byte_end":29125,"line_start":1032,"line_end":1032,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryRecvError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":29534,"byte_end":29538,"line_start":1043,"line_end":1043,"column_start":12,"column_end":16},"name":"Send","qualname":"::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"decl_id":null,"docs":" A future returned by [`Sender::send()`].\n","sig":null,"attributes":[{"value":"/ A future returned by [`Sender::send()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":29393,"byte_end":29437,"line_start":1040,"line_end":1040,"column_start":1,"column_end":45}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":29455,"byte_end":29522,"line_start":1042,"line_end":1042,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":31220,"byte_end":31224,"line_start":1095,"line_end":1095,"column_start":8,"column_end":12},"name":"poll","qualname":"<Send as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":31503,"byte_end":31507,"line_start":1103,"line_end":1103,"column_start":12,"column_end":16},"name":"Recv","qualname":"::Recv","value":"Recv {  }","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":" A future returned by [`Receiver::recv()`].\n","sig":null,"attributes":[{"value":"/ A future returned by [`Receiver::recv()`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":31360,"byte_end":31406,"line_start":1100,"line_end":1100,"column_start":1,"column_end":47}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":31424,"byte_end":31491,"line_start":1102,"line_end":1102,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":33094,"byte_end":33098,"line_start":1153,"line_end":1153,"column_start":8,"column_end":12},"name":"poll","qualname":"<Recv as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":33368,"byte_end":33375,"line_start":1161,"line_end":1161,"column_start":10,"column_end":17},"name":"Context","qualname":"::Strategy::Context","value":"type Context;","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Context needed to be provided to the `poll` method.\n","sig":null,"attributes":[{"value":"/ Context needed to be provided to the `poll` method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":33303,"byte_end":33358,"line_start":1160,"line_end":1160,"column_start":5,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":1957,"byte_end":1964,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4992,"byte_end":4998,"line_start":182,"line_end":182,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12009,"byte_end":12015,"line_start":439,"line_end":439,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12283,"byte_end":12289,"line_start":448,"line_end":448,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12422,"byte_end":12428,"line_start":454,"line_end":454,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13311,"byte_end":13319,"line_start":485,"line_end":485,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20470,"byte_end":20478,"line_start":747,"line_end":747,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20750,"byte_end":20758,"line_start":756,"line_end":756,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20893,"byte_end":20901,"line_start":762,"line_end":762,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":21323,"byte_end":21331,"line_start":778,"line_end":778,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":23019,"byte_end":23027,"line_start":821,"line_end":821,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":23465,"byte_end":23475,"line_start":836,"line_end":836,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":24309,"byte_end":24319,"line_start":859,"line_end":859,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":24759,"byte_end":24771,"line_start":874,"line_end":874,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":25655,"byte_end":25667,"line_start":898,"line_end":898,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":25962,"byte_end":25971,"line_start":910,"line_end":910,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26112,"byte_end":26121,"line_start":917,"line_end":917,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26152,"byte_end":26161,"line_start":919,"line_end":919,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26299,"byte_end":26308,"line_start":925,"line_end":925,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26668,"byte_end":26680,"line_start":941,"line_end":941,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":27358,"byte_end":27370,"line_start":967,"line_end":967,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":27401,"byte_end":27413,"line_start":969,"line_end":969,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":27674,"byte_end":27686,"line_start":978,"line_end":978,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28157,"byte_end":28166,"line_start":993,"line_end":993,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28193,"byte_end":28202,"line_start":995,"line_end":995,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28581,"byte_end":28593,"line_start":1011,"line_end":1011,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":29061,"byte_end":29073,"line_start":1029,"line_end":1029,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":29100,"byte_end":29112,"line_start":1031,"line_end":1031,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":29647,"byte_end":29651,"line_start":1049,"line_end":1049,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":31115,"byte_end":31119,"line_start":1090,"line_end":1090,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":31154,"byte_end":31158,"line_start":1092,"line_end":1092,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":31610,"byte_end":31614,"line_start":1108,"line_end":1108,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":31638,"byte_end":31642,"line_start":1110,"line_end":1110,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":33032,"byte_end":33036,"line_start":1150,"line_end":1150,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":33734,"byte_end":33745,"line_start":1173,"line_end":1173,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":34102,"byte_end":34110,"line_start":1187,"line_end":1187,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":1957,"byte_end":1964,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":4992,"byte_end":4998,"line_start":182,"line_end":182,"column_start":9,"column_end":15},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":73},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12009,"byte_end":12015,"line_start":439,"line_end":439,"column_start":18,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12283,"byte_end":12289,"line_start":448,"line_end":448,"column_start":24,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":12422,"byte_end":12428,"line_start":454,"line_end":454,"column_start":19,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":13311,"byte_end":13319,"line_start":485,"line_end":485,"column_start":9,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20470,"byte_end":20478,"line_start":747,"line_end":747,"column_start":18,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":99},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20750,"byte_end":20758,"line_start":756,"line_end":756,"column_start":24,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":99},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":20893,"byte_end":20901,"line_start":762,"line_end":762,"column_start":19,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":99},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":21323,"byte_end":21331,"line_start":778,"line_end":778,"column_start":20,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":99},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":23019,"byte_end":23027,"line_start":821,"line_end":821,"column_start":47,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":99},"to":{"krate":20,"index":110}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":23465,"byte_end":23475,"line_start":836,"line_end":836,"column_start":9,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":24309,"byte_end":24319,"line_start":859,"line_end":859,"column_start":24,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":222},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":24759,"byte_end":24771,"line_start":874,"line_end":874,"column_start":9,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":25655,"byte_end":25667,"line_start":898,"line_end":898,"column_start":24,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":25962,"byte_end":25971,"line_start":910,"line_end":910,"column_start":9,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26112,"byte_end":26121,"line_start":917,"line_end":917,"column_start":26,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26152,"byte_end":26161,"line_start":919,"line_end":919,"column_start":24,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26299,"byte_end":26308,"line_start":925,"line_end":925,"column_start":26,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":26668,"byte_end":26680,"line_start":941,"line_end":941,"column_start":9,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":27358,"byte_end":27370,"line_start":967,"line_end":967,"column_start":26,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":254},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":27401,"byte_end":27413,"line_start":969,"line_end":969,"column_start":24,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":27674,"byte_end":27686,"line_start":978,"line_end":978,"column_start":26,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28157,"byte_end":28166,"line_start":993,"line_end":993,"column_start":23,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":278},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28193,"byte_end":28202,"line_start":995,"line_end":995,"column_start":23,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":278},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":28581,"byte_end":28593,"line_start":1011,"line_end":1011,"column_start":6,"column_end":18},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":29061,"byte_end":29073,"line_start":1029,"line_end":1029,"column_start":23,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":291},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":29100,"byte_end":29112,"line_start":1031,"line_end":1031,"column_start":23,"column_end":35},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":29647,"byte_end":29651,"line_start":1049,"line_end":1049,"column_start":13,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":31115,"byte_end":31119,"line_start":1090,"line_end":1090,"column_start":23,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":31154,"byte_end":31158,"line_start":1092,"line_end":1092,"column_start":24,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":31610,"byte_end":31614,"line_start":1108,"line_end":1108,"column_start":23,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":317},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":31638,"byte_end":31642,"line_start":1110,"line_end":1110,"column_start":13,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":33032,"byte_end":33036,"line_start":1150,"line_end":1150,"column_start":24,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":317},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":33734,"byte_end":33745,"line_start":1173,"line_end":1173,"column_start":23,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":209},"to":{"krate":0,"index":206}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.8.0\\src\\lib.rs","byte_start":34102,"byte_end":34110,"line_start":1187,"line_end":1187,"column_start":19,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":217},"to":{"krate":0,"index":206}}]}