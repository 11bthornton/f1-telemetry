{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5","program":"C:\\Users\\Ben\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","image","--edition=2018","C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"dds\"","--cfg","feature=\"default\"","--cfg","feature=\"dxt\"","--cfg","feature=\"exr\"","--cfg","feature=\"farbfeld\"","--cfg","feature=\"gif\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg_rayon\"","--cfg","feature=\"openexr\"","--cfg","feature=\"png\"","--cfg","feature=\"pnm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=cd2bc5241ca22c35","-C","extra-filename=-cd2bc5241ca22c35","--out-dir","c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps","--extern","bytemuck=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libbytemuck-00fcd7dca4ccccf1.rmeta","--extern","byteorder=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libbyteorder-5be4a39882f286b3.rmeta","--extern","color_quant=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libcolor_quant-39a16d9a371dff98.rmeta","--extern","exr=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libexr-2d4cb3d85a58eef7.rmeta","--extern","gif=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libgif-1f4d186596be2361.rmeta","--extern","jpeg=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libjpeg_decoder-37b618be555c7bed.rmeta","--extern","num_rational=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libnum_rational-e05935dd729efe3f.rmeta","--extern","num_traits=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libnum_traits-21f6d0ee1c575b5e.rmeta","--extern","png=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libpng-932c9b50bd2ff295.rmeta","--extern","scoped_threadpool=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libscoped_threadpool-e3e8491112333ec8.rmeta","--extern","tiff=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libtiff-393c896653141238.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Ben\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libimage-cd2bc5241ca22c35.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[4191810529155343305,0]},"crate_root":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src","external_crates":[{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10288641326355699271,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5178777620647193466,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7203661724729889941,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17525700935344431946,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14114419768508526436,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7430704726206783492,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12664251144516306473,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5349691386245612169,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7588176879124425336,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12802573245210436658,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[15058356585373963657,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11406058276128544710,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[12054102872615165506,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15575797803660711391,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[2170788131994516450,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":16,"id":{"name":"tiff","disambiguator":[2880464473342771292,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","num":17,"id":{"name":"jpeg_decoder","disambiguator":[9151749207137980536,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":18,"id":{"name":"rayon","disambiguator":[6308293571880440421,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":19,"id":{"name":"either","disambiguator":[10025387153102701622,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":20,"id":{"name":"rayon_core","disambiguator":[17405941497914606282,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":21,"id":{"name":"crossbeam_channel","disambiguator":[7374301403653873515,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":22,"id":{"name":"cfg_if","disambiguator":[7872221195650628815,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":23,"id":{"name":"crossbeam_utils","disambiguator":[12261398158359852006,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":24,"id":{"name":"crossbeam_deque","disambiguator":[16441111954660741848,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":25,"id":{"name":"crossbeam_epoch","disambiguator":[5184695896108171613,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":26,"id":{"name":"scopeguard","disambiguator":[6110210485670846652,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":27,"id":{"name":"memoffset","disambiguator":[2834825929873401625,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":28,"id":{"name":"num_cpus","disambiguator":[9151932574218723595,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":29,"id":{"name":"weezl","disambiguator":[18067071045797257770,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":30,"id":{"name":"flate2","disambiguator":[12859612557728695836,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":31,"id":{"name":"crc32fast","disambiguator":[14420963381754395763,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":32,"id":{"name":"miniz_oxide","disambiguator":[3447107439928363180,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","num":33,"id":{"name":"adler","disambiguator":[16647164027692654332,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","num":34,"id":{"name":"num_traits","disambiguator":[12944768140713592883,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","num":35,"id":{"name":"byteorder","disambiguator":[4798387982638891602,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","num":36,"id":{"name":"gif","disambiguator":[10658607217805000996,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","num":37,"id":{"name":"color_quant","disambiguator":[17874487439497243629,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","num":38,"id":{"name":"num_rational","disambiguator":[12415247510865495071,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","num":39,"id":{"name":"num_integer","disambiguator":[15303583651103840441,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","num":40,"id":{"name":"scoped_threadpool","disambiguator":[4954557323130227306,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":41,"id":{"name":"exr","disambiguator":[16788770422276764091,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":42,"id":{"name":"smallvec","disambiguator":[3142930680554501111,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":43,"id":{"name":"half","disambiguator":[9530666300167332363,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":44,"id":{"name":"lebe","disambiguator":[12564001807928221186,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":45,"id":{"name":"bit_field","disambiguator":[8427514154324319971,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":46,"id":{"name":"threadpool","disambiguator":[6373306038024356015,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":47,"id":{"name":"flume","disambiguator":[16522783103470041495,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":48,"id":{"name":"nanorand","disambiguator":[3227855925118354870,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":49,"id":{"name":"getrandom","disambiguator":[15237022176755909937,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":50,"id":{"name":"futures_core","disambiguator":[13412865793139997503,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":51,"id":{"name":"futures_sink","disambiguator":[10928550804058915044,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":52,"id":{"name":"pin_project","disambiguator":[16823998681754556694,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":53,"id":{"name":"pin_project_internal","disambiguator":[9715180092680908338,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":54,"id":{"name":"spin","disambiguator":[9003672122233317963,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":55,"id":{"name":"lock_api","disambiguator":[5282362868738777283,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","num":56,"id":{"name":"png","disambiguator":[15060692395648810683,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","num":57,"id":{"name":"bitflags","disambiguator":[16296419251187714830,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":58,"id":{"name":"bytemuck","disambiguator":[12474186806860358612,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","num":59,"id":{"name":"bytemuck_derive","disambiguator":[15746579042910254411,0]}}],"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":0,"byte_end":9276,"line_start":1,"line_end":277,"column_start":1,"column_end":46}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":7940},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3983,"byte_end":3992,"line_start":104,"line_end":104,"column_start":24,"column_end":33},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7975},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3994,"byte_end":4011,"line_start":104,"line_end":104,"column_start":35,"column_end":52},"alias_span":null,"name":"ExtendedColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8261},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4038,"byte_end":4042,"line_start":106,"line_end":106,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8262},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4038,"byte_end":4042,"line_start":106,"line_end":106,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8319},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4044,"byte_end":4049,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8320},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4044,"byte_end":4049,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8232},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4051,"byte_end":4054,"line_start":106,"line_end":106,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8233},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4051,"byte_end":4054,"line_start":106,"line_end":106,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8290},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4056,"byte_end":4060,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8291},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4056,"byte_end":4060,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6206},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4087,"byte_end":4097,"line_start":108,"line_end":108,"column_start":24,"column_end":34},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4099,"byte_end":4110,"line_start":108,"line_end":108,"column_start":36,"column_end":47},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5961},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4142,"byte_end":4158,"line_start":111,"line_end":111,"column_start":5,"column_end":21},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5985},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4164,"byte_end":4176,"line_start":112,"line_end":112,"column_start":5,"column_end":17},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5974},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4182,"byte_end":4198,"line_start":113,"line_end":113,"column_start":5,"column_end":21},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5941},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4204,"byte_end":4216,"line_start":114,"line_end":114,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5955},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4222,"byte_end":4238,"line_start":115,"line_end":115,"column_start":5,"column_end":21},"alias_span":null,"name":"ImageDecoderRect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5964},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4244,"byte_end":4256,"line_start":116,"line_end":116,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8402},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4262,"byte_end":4273,"line_start":117,"line_end":117,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8445},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4279,"byte_end":4296,"line_start":118,"line_end":118,"column_start":5,"column_end":22},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8497},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4319,"byte_end":4325,"line_start":120,"line_end":120,"column_start":5,"column_end":11},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8482},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4331,"byte_end":4339,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8509},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4345,"byte_end":4353,"line_start":122,"line_end":122,"column_start":5,"column_end":13},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5371},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4389,"byte_end":4403,"line_start":126,"line_end":126,"column_start":5,"column_end":19},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5370},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4409,"byte_end":4418,"line_start":127,"line_end":127,"column_start":5,"column_end":14},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7909},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4443,"byte_end":4454,"line_start":129,"line_end":129,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5376},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4460,"byte_end":4471,"line_start":130,"line_end":130,"column_start":5,"column_end":16},"alias_span":null,"name":"Rgb32FImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5368},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4477,"byte_end":4485,"line_start":131,"line_end":131,"column_start":5,"column_end":13},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5377},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4491,"byte_end":4503,"line_start":132,"line_end":132,"column_start":5,"column_end":17},"alias_span":null,"name":"Rgba32FImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5369},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4509,"byte_end":4518,"line_start":133,"line_end":133,"column_start":5,"column_end":14},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6417},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4545,"byte_end":4556,"line_start":136,"line_end":136,"column_start":22,"column_end":33},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6063},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4593,"byte_end":4608,"line_start":139,"line_end":139,"column_start":25,"column_end":40},"alias_span":null,"name":"EncodableLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6150},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4610,"byte_end":4615,"line_start":139,"line_end":139,"column_start":42,"column_end":47},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6115},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4617,"byte_end":4635,"line_start":139,"line_end":139,"column_start":49,"column_end":67},"alias_span":null,"name":"PixelWithColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6071},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4637,"byte_end":4646,"line_start":139,"line_end":139,"column_start":69,"column_end":78},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5818},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4711,"byte_end":4727,"line_start":143,"line_end":143,"column_start":5,"column_end":21},"alias_span":null,"name":"image_dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5827},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4729,"byte_end":4745,"line_start":143,"line_end":143,"column_start":23,"column_end":39},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5828},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4747,"byte_end":4775,"line_start":143,"line_end":143,"column_start":41,"column_end":69},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5816},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4777,"byte_end":4781,"line_start":143,"line_end":143,"column_start":71,"column_end":75},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5820},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4783,"byte_end":4794,"line_start":143,"line_end":143,"column_start":77,"column_end":88},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5822},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4800,"byte_end":4823,"line_start":144,"line_end":144,"column_start":5,"column_end":28},"alias_span":null,"name":"save_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5824},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4825,"byte_end":4849,"line_start":144,"line_end":144,"column_start":30,"column_end":54},"alias_span":null,"name":"write_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4890,"byte_end":4902,"line_start":146,"line_end":146,"column_start":37,"column_end":49},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4904,"byte_end":4908,"line_start":146,"line_end":146,"column_start":51,"column_end":55},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8348},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4937,"byte_end":4949,"line_start":148,"line_end":148,"column_start":26,"column_end":38},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7893},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4979,"byte_end":4984,"line_start":150,"line_end":150,"column_start":28,"column_end":33},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7886},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4986,"byte_end":4991,"line_start":150,"line_end":150,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4921},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":4993,"byte_end":4999,"line_start":150,"line_end":150,"column_start":42,"column_end":48},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5355},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5222,"byte_end":5235,"line_start":159,"line_end":159,"column_start":9,"column_end":22},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":5161},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5237,"byte_end":5252,"line_start":159,"line_end":159,"column_start":24,"column_end":39},"alias_span":null,"name":"EnumeratePixels","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":5208},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5254,"byte_end":5272,"line_start":159,"line_end":159,"column_start":41,"column_end":59},"alias_span":null,"name":"EnumeratePixelsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":5185},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5274,"byte_end":5287,"line_start":159,"line_end":159,"column_start":61,"column_end":74},"alias_span":null,"name":"EnumerateRows","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":5229},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5289,"byte_end":5305,"line_start":159,"line_end":159,"column_start":76,"column_end":92},"alias_span":null,"name":"EnumerateRowsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":5059},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5315,"byte_end":5321,"line_start":160,"line_end":160,"column_start":9,"column_end":15},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":5085},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5323,"byte_end":5332,"line_start":160,"line_end":160,"column_start":17,"column_end":26},"alias_span":null,"name":"PixelsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":5108},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5334,"byte_end":5338,"line_start":160,"line_end":160,"column_start":28,"column_end":32},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":5136},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5340,"byte_end":5347,"line_start":160,"line_end":160,"column_start":34,"column_end":41},"alias_span":null,"name":"RowsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":6338},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\mod.rs","byte_start":26443,"byte_end":26447,"line_start":5,"line_end":5,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":244}},{"kind":"Use","ref_id":{"krate":0,"index":6363},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31510,"byte_end":31520,"line_start":7,"line_end":7,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6368},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31558,"byte_end":31568,"line_start":9,"line_end":9,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6369},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31558,"byte_end":31568,"line_start":9,"line_end":9,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6370},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31570,"byte_end":31578,"line_start":9,"line_end":9,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6371},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31570,"byte_end":31578,"line_start":9,"line_end":9,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6372},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31580,"byte_end":31588,"line_start":9,"line_end":9,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6373},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31580,"byte_end":31588,"line_start":9,"line_end":9,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6364},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31590,"byte_end":31597,"line_start":9,"line_end":9,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6365},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31590,"byte_end":31597,"line_start":9,"line_end":9,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6366},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31599,"byte_end":31607,"line_start":9,"line_end":9,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6367},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31599,"byte_end":31607,"line_start":9,"line_end":9,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31666,"byte_end":31681,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31683,"byte_end":31701,"line_start":13,"line_end":13,"column_start":22,"column_end":40},"alias_span":null,"name":"flip_horizontal_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31703,"byte_end":31727,"line_start":13,"line_end":13,"column_start":42,"column_end":66},"alias_span":null,"name":"flip_horizontal_in_place","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31729,"byte_end":31742,"line_start":13,"line_end":13,"column_start":68,"column_end":81},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31744,"byte_end":31760,"line_start":13,"line_end":13,"column_start":83,"column_end":99},"alias_span":null,"name":"flip_vertical_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31766,"byte_end":31788,"line_start":14,"line_end":14,"column_start":5,"column_end":27},"alias_span":null,"name":"flip_vertical_in_place","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31790,"byte_end":31799,"line_start":14,"line_end":14,"column_start":29,"column_end":38},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31801,"byte_end":31813,"line_start":14,"line_end":14,"column_start":40,"column_end":52},"alias_span":null,"name":"rotate180_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31815,"byte_end":31833,"line_start":14,"line_end":14,"column_start":54,"column_end":72},"alias_span":null,"name":"rotate180_in_place","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31835,"byte_end":31844,"line_start":14,"line_end":14,"column_start":74,"column_end":83},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31846,"byte_end":31858,"line_start":14,"line_end":14,"column_start":85,"column_end":97},"alias_span":null,"name":"rotate270_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31864,"byte_end":31872,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31874,"byte_end":31885,"line_start":15,"line_end":15,"column_start":15,"column_end":26},"alias_span":null,"name":"rotate90_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31933,"byte_end":31937,"line_start":19,"line_end":19,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31939,"byte_end":31948,"line_start":19,"line_end":19,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31950,"byte_end":31956,"line_start":19,"line_end":19,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31958,"byte_end":31967,"line_start":19,"line_end":19,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31969,"byte_end":31978,"line_start":19,"line_end":19,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32033,"byte_end":32041,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32043,"byte_end":32051,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32053,"byte_end":32059,"line_start":23,"line_end":23,"column_start":25,"column_end":31},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32061,"byte_end":32070,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32072,"byte_end":32087,"line_start":23,"line_end":23,"column_start":44,"column_end":59},"alias_span":null,"name":"grayscale_alpha","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32089,"byte_end":32108,"line_start":23,"line_end":23,"column_start":61,"column_end":80},"alias_span":null,"name":"grayscale_with_type","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32114,"byte_end":32139,"line_start":24,"line_end":24,"column_start":5,"column_end":30},"alias_span":null,"name":"grayscale_with_type_alpha","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32141,"byte_end":32150,"line_start":24,"line_end":24,"column_start":32,"column_end":41},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32152,"byte_end":32164,"line_start":24,"line_end":24,"column_start":43,"column_end":55},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32166,"byte_end":32172,"line_start":24,"line_end":24,"column_start":57,"column_end":63},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6358},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32174,"byte_end":32181,"line_start":24,"line_end":24,"column_start":65,"column_end":72},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":6359},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32174,"byte_end":32181,"line_start":24,"line_end":24,"column_start":65,"column_end":72},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32183,"byte_end":32191,"line_start":24,"line_end":24,"column_start":74,"column_end":82},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112108,"byte_end":112114,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":714}},{"kind":"Use","ref_id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\mod.rs","byte_start":201533,"byte_end":201543,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BmpDecoder","value":"","parent":{"krate":0,"index":1147}},{"kind":"Use","ref_id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\mod.rs","byte_start":201568,"byte_end":201578,"line_start":11,"line_end":11,"column_start":24,"column_end":34},"alias_span":null,"name":"BmpEncoder","value":"","parent":{"krate":0,"index":1147}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","byte_start":353449,"byte_end":353450,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Rgbe8Pixel, rgbe8, SIGNATURE, HdrAdapter","parent":{"krate":0,"index":2067}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","byte_start":353475,"byte_end":353476,"line_start":15,"line_end":15,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2067}},{"kind":"Use","ref_id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\mod.rs","byte_start":405984,"byte_end":405994,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"IcoDecoder","value":"","parent":{"krate":0,"index":2379}},{"kind":"Use","ref_id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\mod.rs","byte_start":406041,"byte_end":406051,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"alias_span":null,"name":"IcoEncoder","value":"","parent":{"krate":0,"index":2379}},{"kind":"Use","ref_id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\mod.rs","byte_start":406053,"byte_end":406061,"line_start":11,"line_end":11,"column_start":37,"column_end":45},"alias_span":null,"name":"IcoFrame","value":"","parent":{"krate":0,"index":2379}},{"kind":"Use","ref_id":{"krate":0,"index":2657},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":432392,"byte_end":432403,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":2597}},{"kind":"Use","ref_id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":432429,"byte_end":432440,"line_start":11,"line_end":11,"column_start":25,"column_end":36},"alias_span":null,"name":"JpegEncoder","value":"","parent":{"krate":0,"index":2597}},{"kind":"Use","ref_id":{"krate":0,"index":7068},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":432442,"byte_end":432454,"line_start":11,"line_end":11,"column_start":38,"column_end":50},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":2597}},{"kind":"Use","ref_id":{"krate":0,"index":7050},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":432456,"byte_end":432472,"line_start":11,"line_end":11,"column_start":52,"column_end":68},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":2597}},{"kind":"Use","ref_id":{"krate":0,"index":3456},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565358,"byte_end":565368,"line_start":7,"line_end":7,"column_start":24,"column_end":34},"alias_span":null,"name":"PnmDecoder","value":"","parent":{"krate":0,"index":3250}},{"kind":"Use","ref_id":{"krate":0,"index":3643},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565393,"byte_end":565403,"line_start":8,"line_end":8,"column_start":24,"column_end":34},"alias_span":null,"name":"PnmEncoder","value":"","parent":{"krate":0,"index":3250}},{"kind":"Use","ref_id":{"krate":0,"index":7372},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565465,"byte_end":565480,"line_start":11,"line_end":11,"column_start":5,"column_end":20},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":3250}},{"kind":"Use","ref_id":{"krate":0,"index":7382},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565482,"byte_end":565499,"line_start":11,"line_end":11,"column_start":22,"column_end":39},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":3250}},{"kind":"Use","ref_id":{"krate":0,"index":7343},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565501,"byte_end":565513,"line_start":11,"line_end":11,"column_start":41,"column_end":53},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":3250}},{"kind":"Use","ref_id":{"krate":0,"index":7352},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565515,"byte_end":565528,"line_start":11,"line_end":11,"column_start":55,"column_end":68},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":3250}},{"kind":"Use","ref_id":{"krate":0,"index":7362},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565530,"byte_end":565542,"line_start":11,"line_end":11,"column_start":70,"column_end":82},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":3250}},{"kind":"Use","ref_id":{"krate":0,"index":3746},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565570,"byte_end":565579,"line_start":13,"line_end":13,"column_start":24,"column_end":33},"alias_span":null,"name":"PnmHeader","value":"","parent":{"krate":0,"index":3250}},{"kind":"Use","ref_id":{"krate":0,"index":7319},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565581,"byte_end":565591,"line_start":13,"line_end":13,"column_start":35,"column_end":45},"alias_span":null,"name":"PnmSubtype","value":"","parent":{"krate":0,"index":3250}},{"kind":"Use","ref_id":{"krate":0,"index":7303},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565593,"byte_end":565607,"line_start":13,"line_end":13,"column_start":47,"column_end":61},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":3250}},{"kind":"Use","ref_id":{"krate":0,"index":3878},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\mod.rs","byte_start":655064,"byte_end":655074,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaDecoder","value":"","parent":{"krate":0,"index":3793}},{"kind":"Use","ref_id":{"krate":0,"index":3970},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\mod.rs","byte_start":655140,"byte_end":655150,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaEncoder","value":"","parent":{"krate":0,"index":3793}},{"kind":"Use","ref_id":{"krate":0,"index":4291},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\mod.rs","byte_start":697916,"byte_end":697927,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"WebPDecoder","value":"","parent":{"krate":0,"index":4176}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":0,"byte_end":9276,"line_start":1,"line_end":277,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":215},{"krate":0,"index":244},{"krate":0,"index":257},{"krate":0,"index":714},{"krate":0,"index":931},{"krate":0,"index":1146},{"krate":0,"index":4905},{"krate":0,"index":4958},{"krate":0,"index":5378},{"krate":0,"index":5546},{"krate":0,"index":5829},{"krate":0,"index":6033},{"krate":0,"index":6191},{"krate":0,"index":6205},{"krate":0,"index":8565}],"decl_id":null,"docs":" # Overview","sig":null,"attributes":[{"value":"/ # Overview","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":1,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":15,"byte_end":18,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides native rust implementations of image encoding and decoding as well as some","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":19,"byte_end":117,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ basic image manipulation functions. Additional documentation can currently also be found in the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":118,"byte_end":217,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ [README.md file which is most easily viewed on","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":218,"byte_end":268,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/ github](https://github.com/image-rs/image/blob/master/README.md).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":269,"byte_end":338,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":339,"byte_end":342,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are two core problems for which this library provides solutions: a unified interface for image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":343,"byte_end":447,"line_start":8,"line_end":8,"column_start":1,"column_end":105}},{"value":"/ encodings and simple generic buffers for their content. It's possible to use either feature","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":448,"byte_end":543,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ without the other. The focus is on a small and stable set of common operations that can be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":544,"byte_end":638,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ supplemented by other specialized crates. The library also prefers safe solutions with few","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":639,"byte_end":733,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ dependencies.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":734,"byte_end":751,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":752,"byte_end":755,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # High level API","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":756,"byte_end":776,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":777,"byte_end":780,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Load images using [`io::Reader`]:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":781,"byte_end":818,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":819,"byte_end":822,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":823,"byte_end":841,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":842,"byte_end":866,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ use image::io::Reader as ImageReader;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":867,"byte_end":908,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":909,"byte_end":959,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ # let bytes = vec![0u8];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":960,"byte_end":988,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":989,"byte_end":992,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let img = ImageReader::open(\"myimage.png\")?.decode()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":993,"byte_end":1051,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ let img2 = ImageReader::new(Cursor::new(bytes)).with_guessed_format()?.decode()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1052,"byte_end":1137,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1138,"byte_end":1150,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1151,"byte_end":1158,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1159,"byte_end":1166,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1167,"byte_end":1170,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ And save them using [`save`] or [`write_to`] methods:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1171,"byte_end":1228,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1229,"byte_end":1232,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1233,"byte_end":1251,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ # use std::io::{Write, Cursor};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1252,"byte_end":1287,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"/ # use image::ImageOutputFormat;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1288,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ # use image::DynamicImage;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1324,"byte_end":1354,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(feature = \"png\")]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1355,"byte_end":1384,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1385,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/ # let img: DynamicImage = unimplemented!();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1436,"byte_end":1483,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ # let img2: DynamicImage = unimplemented!();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1484,"byte_end":1532,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ img.save(\"empty.jpg\")?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1533,"byte_end":1560,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1561,"byte_end":1564,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let mut bytes: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1565,"byte_end":1605,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/ img2.write_to(&mut Cursor::new(&mut bytes), image::ImageOutputFormat::Png)?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1606,"byte_end":1686,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1687,"byte_end":1699,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1700,"byte_end":1707,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"png\"))] fn main() {}","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1708,"byte_end":1755,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1756,"byte_end":1763,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1764,"byte_end":1767,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ With default features, the crate includes support for [many common image formats](codecs/index.html#supported-formats).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1768,"byte_end":1891,"line_start":49,"line_end":49,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1892,"byte_end":1895,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`save`]: enum.DynamicImage.html#method.save","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1896,"byte_end":1944,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/ [`write_to`]: enum.DynamicImage.html#method.write_to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":1945,"byte_end":2001,"line_start":52,"line_end":52,"column_start":1,"column_end":57}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2002,"byte_end":2043,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2044,"byte_end":2047,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Image buffers","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2048,"byte_end":2067,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2068,"byte_end":2071,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The two main types for storing images:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2072,"byte_end":2114,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/ * [`ImageBuffer`] which holds statically typed image contents.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2115,"byte_end":2181,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ * [`DynamicImage`] which is an enum over the supported ImageBuffer formats","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2182,"byte_end":2260,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/     and supports conversions between them.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2261,"byte_end":2307,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2308,"byte_end":2311,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ As well as a few more specialized options:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2312,"byte_end":2358,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"/ * [`GenericImage`] trait for a mutable image buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2359,"byte_end":2415,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/ * [`GenericImageView`] trait for read only references to a GenericImage.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2416,"byte_end":2492,"line_start":64,"line_end":64,"column_start":1,"column_end":77}},{"value":"/ * [`flat`] module containing types for interoperability with generic channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2493,"byte_end":2573,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/     matrices and foreign interfaces.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2574,"byte_end":2614,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2615,"byte_end":2618,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2619,"byte_end":2672,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2673,"byte_end":2718,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/ [`ImageBuffer`]: struct.ImageBuffer.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2719,"byte_end":2763,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2764,"byte_end":2808,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/ [`flat`]: flat/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2809,"byte_end":2838,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2839,"byte_end":2842,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Low level encoding/decoding API","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2843,"byte_end":2880,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2881,"byte_end":2884,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The [`ImageDecoder`] and [`ImageDecoderRect`] traits are implemented for many image file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2885,"byte_end":2977,"line_start":76,"line_end":76,"column_start":1,"column_end":93}},{"value":"/ formats. They decode image data by directly on raw byte slices. Given an ImageDecoder, you can","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":2978,"byte_end":3076,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ produce a DynamicImage via [`DynamicImage::from_decoder`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3077,"byte_end":3139,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3140,"byte_end":3143,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`ImageEncoder`] provides the analogous functionality for encoding image data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3144,"byte_end":3226,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3227,"byte_end":3230,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage::from_decoder`]: enum.DynamicImage.html#method.from_decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3231,"byte_end":3309,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ [`ImageDecoderRect`]: trait.ImageDecoderRect.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3310,"byte_end":3363,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/ [`ImageDecoder`]: trait.ImageDecoder.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3364,"byte_end":3409,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ [`ImageEncoder`]: trait.ImageEncoder.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3410,"byte_end":3455,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3456,"byte_end":3478,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3479,"byte_end":3510,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"deny(unreachable_pub)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3511,"byte_end":3536,"line_start":88,"line_end":88,"column_start":1,"column_end":26}},{"value":"deny(deprecated)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3537,"byte_end":3557,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3558,"byte_end":3596,"line_start":90,"line_end":90,"column_start":1,"column_end":39}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3694,"byte_end":3735,"line_start":93,"line_end":93,"column_start":1,"column_end":42}},{"value":"allow(clippy :: wrong_self_convention, clippy :: enum_variant_names)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":3776,"byte_end":3844,"line_start":95,"line_end":95,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":6206},{"krate":0,"index":6225},{"krate":0,"index":6227},{"krate":0,"index":6230},{"krate":0,"index":6232},{"krate":0,"index":6242},{"krate":0,"index":6244},{"krate":0,"index":6246},{"krate":0,"index":6249},{"krate":0,"index":6250},{"krate":0,"index":6253},{"krate":0,"index":6256},{"krate":0,"index":6258},{"krate":0,"index":6261},{"krate":0,"index":6263},{"krate":0,"index":6273},{"krate":0,"index":6275},{"krate":0,"index":6277},{"krate":0,"index":6280},{"krate":0,"index":6281},{"krate":0,"index":6284},{"krate":0,"index":6287},{"krate":0,"index":6289},{"krate":0,"index":6291},{"krate":0,"index":6293},{"krate":0,"index":6301},{"krate":0,"index":6303},{"krate":0,"index":6305},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6312},{"krate":0,"index":6313},{"krate":0,"index":6315},{"krate":0,"index":6327},{"krate":0,"index":6329},{"krate":0,"index":6331},{"krate":0,"index":6334},{"krate":0,"index":6335},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":170},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213}],"decl_id":null,"docs":" Contains detailed error representation.","sig":null,"attributes":[{"value":"/ Contains detailed error representation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":9278,"byte_end":9321,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":9322,"byte_end":9325,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See the main [`ImageError`] which contains a variant for each specialized error type. The","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":9326,"byte_end":9419,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ subtypes used in each variant are opaque by design. They can be roughly inspected through their","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":9420,"byte_end":9519,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ respective `kind` methods which work similar to `std::io::Error::kind`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":9520,"byte_end":9595,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":9596,"byte_end":9599,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The error interface makes it possible to inspect the error of an underlying decoder or encoder,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":9600,"byte_end":9699,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ through the `Error::source` method. Note that this is not part of the stable interface and you","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":9700,"byte_end":9798,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ may not rely on a particular error value for a particular operation. This means mainly that","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":9799,"byte_end":9894,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ `image` does not promise to remain on a particular version of its underlying decoders but if","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":9895,"byte_end":9991,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ you ensure to use the same version of the dependency (or at least of the error type) through","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":9992,"byte_end":10088,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ external means then you could inspect the error type in slightly more detail.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10089,"byte_end":10170,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10171,"byte_end":10174,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`ImageError`]: enum.ImageError.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10175,"byte_end":10215,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6207},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10888,"byte_end":10896,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"Decoding","qualname":"::error::ImageError::Decoding","value":"ImageError::Decoding(DecodingError)","parent":{"krate":0,"index":6206},"children":[],"decl_id":null,"docs":" An error was encountered while decoding.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10605,"byte_end":10649,"line_start":28,"line_end":28,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10654,"byte_end":10657,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This means that the input data did not conform to the specification of some image format,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10662,"byte_end":10755,"line_start":30,"line_end":30,"column_start":5,"column_end":98}},{"value":"/ or that no format could be determined, or that it did not match format specific","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10760,"byte_end":10843,"line_start":31,"line_end":31,"column_start":5,"column_end":88}},{"value":"/ requirements set by the caller.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10848,"byte_end":10883,"line_start":32,"line_end":32,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6209},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10897,"byte_end":10910,"line_start":33,"line_end":33,"column_start":14,"column_end":27},"name":"0","qualname":"::error::ImageError::Decoding::0","value":"error::DecodingError","parent":{"krate":0,"index":6207},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6210},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11282,"byte_end":11290,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::error::ImageError::Encoding","value":"ImageError::Encoding(EncodingError)","parent":{"krate":0,"index":6206},"children":[],"decl_id":null,"docs":" An error was encountered while encoding.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10918,"byte_end":10962,"line_start":35,"line_end":35,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10967,"byte_end":10970,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The input image can not be encoded with the chosen format, for example because the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10975,"byte_end":11061,"line_start":37,"line_end":37,"column_start":5,"column_end":91}},{"value":"/ specification has no representation for its color space or because a necessary conversion","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11066,"byte_end":11159,"line_start":38,"line_end":38,"column_start":5,"column_end":98}},{"value":"/ is ambiguous. In some cases it might also happen that the dimensions can not be used with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11164,"byte_end":11257,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ the format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11262,"byte_end":11277,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6212},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11291,"byte_end":11304,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"name":"0","qualname":"::error::ImageError::Encoding::0","value":"error::EncodingError","parent":{"krate":0,"index":6210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6213},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11530,"byte_end":11539,"line_start":47,"line_end":47,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::error::ImageError::Parameter","value":"ImageError::Parameter(ParameterError)","parent":{"krate":0,"index":6206},"children":[],"decl_id":null,"docs":" An error was encountered in input arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in input arguments.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11312,"byte_end":11360,"line_start":43,"line_end":43,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11365,"byte_end":11368,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is a catch-all case for strictly internal operations such as scaling, conversions,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11373,"byte_end":11464,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ etc. that involve no external format specifications.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11469,"byte_end":11525,"line_start":46,"line_end":46,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":6215},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11540,"byte_end":11554,"line_start":47,"line_end":47,"column_start":15,"column_end":29},"name":"0","qualname":"::error::ImageError::Parameter::0","value":"error::ParameterError","parent":{"krate":0,"index":6213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6216},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11799,"byte_end":11805,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Limits","qualname":"::error::ImageError::Limits","value":"ImageError::Limits(LimitError)","parent":{"krate":0,"index":6206},"children":[],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11562,"byte_end":11639,"line_start":49,"line_end":49,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11644,"byte_end":11647,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Errors of this type are limits set by the user or environment, *not* inherent in a specific","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11652,"byte_end":11747,"line_start":51,"line_end":51,"column_start":5,"column_end":100}},{"value":"/ format or operation that was executed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11752,"byte_end":11794,"line_start":52,"line_end":52,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6218},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11806,"byte_end":11816,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"0","qualname":"::error::ImageError::Limits::0","value":"error::LimitError","parent":{"krate":0,"index":6216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6219},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12143,"byte_end":12154,"line_start":61,"line_end":61,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ImageError::Unsupported","value":"ImageError::Unsupported(UnsupportedError)","parent":{"krate":0,"index":6206},"children":[],"decl_id":null,"docs":" An operation can not be completed by the chosen abstraction.","sig":null,"attributes":[{"value":"/ An operation can not be completed by the chosen abstraction.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11824,"byte_end":11888,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11893,"byte_end":11896,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This means that it might be possible for the operation to succeed in general but","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11901,"byte_end":11985,"line_start":57,"line_end":57,"column_start":5,"column_end":89}},{"value":"/ * it requires a disabled feature,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":11990,"byte_end":12027,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"/ * the implementation does not yet exist, or","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12032,"byte_end":12079,"line_start":59,"line_end":59,"column_start":5,"column_end":52}},{"value":"/ * no abstraction for a lower level could be found.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12084,"byte_end":12138,"line_start":60,"line_end":60,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6221},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12155,"byte_end":12171,"line_start":61,"line_end":61,"column_start":17,"column_end":33},"name":"0","qualname":"::error::ImageError::Unsupported::0","value":"error::UnsupportedError","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6222},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12245,"byte_end":12252,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":6206},"children":[],"decl_id":null,"docs":" An error occurred while interacting with the environment.\n","sig":null,"attributes":[{"value":"/ An error occurred while interacting with the environment.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12179,"byte_end":12240,"line_start":63,"line_end":63,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":6224},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12253,"byte_end":12262,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"name":"0","qualname":"::error::ImageError::IoError::0","value":"std::io::Error","parent":{"krate":0,"index":6222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6206},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10588,"byte_end":10598,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::error::ImageError","value":"enum ImageError {\n    Decoding(DecodingError),\n    Encoding(EncodingError),\n    Parameter(ParameterError),\n    Limits(LimitError),\n    Unsupported(UnsupportedError),\n    IoError(io::Error),\n}","parent":null,"children":[{"krate":0,"index":6207},{"krate":0,"index":6210},{"krate":0,"index":6213},{"krate":0,"index":6216},{"krate":0,"index":6219},{"krate":0,"index":6222}],"decl_id":null,"docs":" The generic error type for image operations.","sig":null,"attributes":[{"value":"/ The generic error type for image operations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10330,"byte_end":10378,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10379,"byte_end":10382,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This high level enum allows, by variant matching, a rough separation of concerns between","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10383,"byte_end":10475,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ underlying IO, the caller, format specifications, and the `image` implementation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":10476,"byte_end":10561,"line_start":25,"line_end":25,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":6227},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12484,"byte_end":12500,"line_start":73,"line_end":73,"column_start":12,"column_end":28},"name":"UnsupportedError","qualname":"::error::UnsupportedError","value":"UnsupportedError {  }","parent":null,"children":[{"krate":0,"index":6228},{"krate":0,"index":6229}],"decl_id":null,"docs":" The implementation for an operation was not provided.","sig":null,"attributes":[{"value":"/ The implementation for an operation was not provided.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12268,"byte_end":12325,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12326,"byte_end":12329,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ See the variant [`Unsupported`] for more documentation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12330,"byte_end":12389,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12390,"byte_end":12393,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [`Unsupported`]: enum.ImageError.html#variant.Unsupported","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12394,"byte_end":12455,"line_start":71,"line_end":71,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6233},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12757,"byte_end":12762,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Color","qualname":"::error::UnsupportedErrorKind::Color","value":"UnsupportedErrorKind::Color(ExtendedColorType)","parent":{"krate":0,"index":6232},"children":[],"decl_id":null,"docs":" The required color type can not be handled.\n","sig":null,"attributes":[{"value":"/ The required color type can not be handled.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12705,"byte_end":12752,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6235},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12763,"byte_end":12780,"line_start":83,"line_end":83,"column_start":11,"column_end":28},"name":"0","qualname":"::error::UnsupportedErrorKind::Color::0","value":"color::ExtendedColorType","parent":{"krate":0,"index":6233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6236},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12829,"byte_end":12835,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::UnsupportedErrorKind::Format","value":"UnsupportedErrorKind::Format(ImageFormatHint)","parent":{"krate":0,"index":6232},"children":[],"decl_id":null,"docs":" An image format is not supported.\n","sig":null,"attributes":[{"value":"/ An image format is not supported.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12787,"byte_end":12824,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6238},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12836,"byte_end":12851,"line_start":85,"line_end":85,"column_start":12,"column_end":27},"name":"0","qualname":"::error::UnsupportedErrorKind::Format::0","value":"error::ImageFormatHint","parent":{"krate":0,"index":6236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6239},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12979,"byte_end":12993,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"GenericFeature","qualname":"::error::UnsupportedErrorKind::GenericFeature","value":"UnsupportedErrorKind::GenericFeature(String)","parent":{"krate":0,"index":6232},"children":[],"decl_id":null,"docs":" Some feature specified by string.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ Some feature specified by string.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12858,"byte_end":12895,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12900,"byte_end":12974,"line_start":87,"line_end":87,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6241},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12994,"byte_end":13000,"line_start":88,"line_end":88,"column_start":20,"column_end":26},"name":"0","qualname":"::error::UnsupportedErrorKind::GenericFeature::0","value":"std::string::String","parent":{"krate":0,"index":6239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6232},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12678,"byte_end":12698,"line_start":81,"line_end":81,"column_start":10,"column_end":30},"name":"UnsupportedErrorKind","qualname":"::error::UnsupportedErrorKind","value":"enum UnsupportedErrorKind {\n    Color(ExtendedColorType),\n    Format(ImageFormatHint),\n    GenericFeature(String),\n}","parent":null,"children":[{"krate":0,"index":6233},{"krate":0,"index":6236},{"krate":0,"index":6239}],"decl_id":null,"docs":" Details what feature is not supported.\n","sig":null,"attributes":[{"value":"/ Details what feature is not supported.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12567,"byte_end":12609,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":12651,"byte_end":12668,"line_start":80,"line_end":80,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6253},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13299,"byte_end":13312,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"name":"EncodingError","qualname":"::error::EncodingError","value":"EncodingError {  }","parent":null,"children":[{"krate":0,"index":6254},{"krate":0,"index":6255}],"decl_id":null,"docs":" An error was encountered while encoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding an image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13006,"byte_end":13059,"line_start":91,"line_end":91,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13060,"byte_end":13063,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Encoding`] variant. See its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13064,"byte_end":13158,"line_start":93,"line_end":93,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13159,"byte_end":13198,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13199,"byte_end":13202,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Encoding`]: enum.ImageError.html#variant.Encoding","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13203,"byte_end":13270,"line_start":96,"line_end":96,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6258},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13693,"byte_end":13707,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::error::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":6259},{"krate":0,"index":6260}],"decl_id":null,"docs":" An error was encountered in inputs arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in inputs arguments.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13401,"byte_end":13450,"line_start":103,"line_end":103,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13451,"byte_end":13454,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Parameter`] variant. See its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13455,"byte_end":13550,"line_start":105,"line_end":105,"column_start":1,"column_end":96}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13551,"byte_end":13590,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13591,"byte_end":13594,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Parameter`]: enum.ImageError.html#variant.Parameter","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13595,"byte_end":13664,"line_start":108,"line_end":108,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6264},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13973,"byte_end":13990,"line_start":120,"line_end":120,"column_start":5,"column_end":22},"name":"DimensionMismatch","qualname":"::error::ParameterErrorKind::DimensionMismatch","value":"ParameterErrorKind::DimensionMismatch","parent":{"krate":0,"index":6263},"children":[],"decl_id":null,"docs":" The dimensions passed are wrong.\n","sig":null,"attributes":[{"value":"/ The dimensions passed are wrong.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13932,"byte_end":13968,"line_start":119,"line_end":119,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6266},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14088,"byte_end":14101,"line_start":122,"line_end":122,"column_start":5,"column_end":18},"name":"FailedAlready","qualname":"::error::ParameterErrorKind::FailedAlready","value":"ParameterErrorKind::FailedAlready","parent":{"krate":0,"index":6263},"children":[],"decl_id":null,"docs":" Repeated an operation for which error that could not be cloned was emitted already.\n","sig":null,"attributes":[{"value":"/ Repeated an operation for which error that could not be cloned was emitted already.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13996,"byte_end":14083,"line_start":121,"line_end":121,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6268},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14229,"byte_end":14236,"line_start":125,"line_end":125,"column_start":5,"column_end":12},"name":"Generic","qualname":"::error::ParameterErrorKind::Generic","value":"ParameterErrorKind::Generic(String)","parent":{"krate":0,"index":6263},"children":[],"decl_id":null,"docs":" A string describing the parameter.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ A string describing the parameter.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14107,"byte_end":14145,"line_start":123,"line_end":123,"column_start":5,"column_end":43}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14150,"byte_end":14224,"line_start":124,"line_end":124,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6270},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14237,"byte_end":14243,"line_start":125,"line_end":125,"column_start":13,"column_end":19},"name":"0","qualname":"::error::ParameterErrorKind::Generic::0","value":"std::string::String","parent":{"krate":0,"index":6268},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6271},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14297,"byte_end":14307,"line_start":127,"line_end":127,"column_start":5,"column_end":15},"name":"NoMoreData","qualname":"::error::ParameterErrorKind::NoMoreData","value":"ParameterErrorKind::NoMoreData","parent":{"krate":0,"index":6263},"children":[],"decl_id":null,"docs":" The end of the image has been reached.\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14250,"byte_end":14292,"line_start":126,"line_end":126,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":6263},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13907,"byte_end":13925,"line_start":118,"line_end":118,"column_start":10,"column_end":28},"name":"ParameterErrorKind","qualname":"::error::ParameterErrorKind","value":"enum ParameterErrorKind {\n    DimensionMismatch,\n    FailedAlready,\n    Generic(String),\n    NoMoreData,\n}","parent":null,"children":[{"krate":0,"index":6264},{"krate":0,"index":6266},{"krate":0,"index":6268},{"krate":0,"index":6271}],"decl_id":null,"docs":" Details how a parameter is malformed.\n","sig":null,"attributes":[{"value":"/ Details how a parameter is malformed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13797,"byte_end":13838,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":13880,"byte_end":13897,"line_start":117,"line_end":117,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6284},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14605,"byte_end":14618,"line_start":137,"line_end":137,"column_start":12,"column_end":25},"name":"DecodingError","qualname":"::error::DecodingError","value":"DecodingError {  }","parent":null,"children":[{"krate":0,"index":6285},{"krate":0,"index":6286}],"decl_id":null,"docs":" An error was encountered while decoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding an image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14312,"byte_end":14365,"line_start":130,"line_end":130,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14366,"byte_end":14369,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Decoding`] variant. See its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14370,"byte_end":14464,"line_start":132,"line_end":132,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14465,"byte_end":14504,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14505,"byte_end":14508,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Decoding`]: enum.ImageError.html#variant.Decoding","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14509,"byte_end":14576,"line_start":135,"line_end":135,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6289},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15018,"byte_end":15028,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"LimitError","qualname":"::error::LimitError","value":"LimitError {  }","parent":null,"children":[{"krate":0,"index":6290}],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14707,"byte_end":14784,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14785,"byte_end":14788,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Limits`] variant. See its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14789,"byte_end":14881,"line_start":144,"line_end":144,"column_start":1,"column_end":93}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14882,"byte_end":14921,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14922,"byte_end":14925,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Limits`]: enum.ImageError.html#variant.Limits","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":14926,"byte_end":14989,"line_start":147,"line_end":147,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6294},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15578,"byte_end":15592,"line_start":163,"line_end":163,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::error::LimitErrorKind::DimensionError","value":"LimitErrorKind::DimensionError","parent":{"krate":0,"index":6293},"children":[],"decl_id":null,"docs":" The resulting image exceed dimension limits in either direction.\n","sig":null,"attributes":[{"value":"/ The resulting image exceed dimension limits in either direction.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15505,"byte_end":15573,"line_start":162,"line_end":162,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6296},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15676,"byte_end":15694,"line_start":165,"line_end":165,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::error::LimitErrorKind::InsufficientMemory","value":"LimitErrorKind::InsufficientMemory","parent":{"krate":0,"index":6293},"children":[],"decl_id":null,"docs":" The operation would have performed an allocation larger than allowed.\n","sig":null,"attributes":[{"value":"/ The operation would have performed an allocation larger than allowed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15598,"byte_end":15671,"line_start":164,"line_end":164,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":6298},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15773,"byte_end":15784,"line_start":167,"line_end":167,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::LimitErrorKind::Unsupported","value":"LimitErrorKind::Unsupported { limits, supported }","parent":{"krate":0,"index":6293},"children":[],"decl_id":null,"docs":" The specified strict limits are not supported for this operation\n","sig":null,"attributes":[{"value":"/ The specified strict limits are not supported for this operation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15700,"byte_end":15768,"line_start":166,"line_end":166,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":6299},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15824,"byte_end":15830,"line_start":169,"line_end":169,"column_start":9,"column_end":15},"name":"limits","qualname":"::error::LimitErrorKind::Unsupported::limits","value":"io::Limits","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" The given limits\n","sig":null,"attributes":[{"value":"/ The given limits","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15795,"byte_end":15815,"line_start":168,"line_end":168,"column_start":9,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":6300},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15899,"byte_end":15908,"line_start":171,"line_end":171,"column_start":9,"column_end":18},"name":"supported","qualname":"::error::LimitErrorKind::Unsupported::supported","value":"io::LimitSupport","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" The supported strict limits\n","sig":null,"attributes":[{"value":"/ The supported strict limits","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15859,"byte_end":15890,"line_start":170,"line_end":170,"column_start":9,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":6293},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15484,"byte_end":15498,"line_start":161,"line_end":161,"column_start":10,"column_end":24},"name":"LimitErrorKind","qualname":"::error::LimitErrorKind","value":"enum LimitErrorKind {\n    DimensionError,\n    InsufficientMemory,\n    Unsupported {\n            limits: crate::io::Limits,\n            supported: crate::io::LimitSupport,\n        },\n}","parent":null,"children":[{"krate":0,"index":6294},{"krate":0,"index":6296},{"krate":0,"index":6298}],"decl_id":null,"docs":" Indicates the limit that prevented an operation from completing.","sig":null,"attributes":[{"value":"/ Indicates the limit that prevented an operation from completing.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15099,"byte_end":15167,"line_start":154,"line_end":154,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15168,"byte_end":15171,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Note that this enumeration is not exhaustive and may in the future be extended to provide more","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15172,"byte_end":15270,"line_start":156,"line_end":156,"column_start":1,"column_end":99}},{"value":"/ detailed information or to incorporate other resources types.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15271,"byte_end":15336,"line_start":157,"line_end":157,"column_start":1,"column_end":66}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15382,"byte_end":15399,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15400,"byte_end":15438,"line_start":160,"line_end":160,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6316},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16124,"byte_end":16129,"line_start":180,"line_end":180,"column_start":5,"column_end":10},"name":"Exact","qualname":"::error::ImageFormatHint::Exact","value":"ImageFormatHint::Exact(ImageFormat)","parent":{"krate":0,"index":6315},"children":[],"decl_id":null,"docs":" The format is known exactly.\n","sig":null,"attributes":[{"value":"/ The format is known exactly.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16087,"byte_end":16119,"line_start":179,"line_end":179,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6318},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16130,"byte_end":16141,"line_start":180,"line_end":180,"column_start":11,"column_end":22},"name":"0","qualname":"::error::ImageFormatHint::Exact::0","value":"image::ImageFormat","parent":{"krate":0,"index":6316},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6319},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16197,"byte_end":16201,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"Name","qualname":"::error::ImageFormatHint::Name","value":"ImageFormatHint::Name(String)","parent":{"krate":0,"index":6315},"children":[],"decl_id":null,"docs":" The format can be identified by a name.\n","sig":null,"attributes":[{"value":"/ The format can be identified by a name.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16149,"byte_end":16192,"line_start":182,"line_end":182,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":6321},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16202,"byte_end":16208,"line_start":183,"line_end":183,"column_start":10,"column_end":16},"name":"0","qualname":"::error::ImageFormatHint::Name::0","value":"std::string::String","parent":{"krate":0,"index":6319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6322},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16273,"byte_end":16286,"line_start":186,"line_end":186,"column_start":5,"column_end":18},"name":"PathExtension","qualname":"::error::ImageFormatHint::PathExtension","value":"ImageFormatHint::PathExtension(std::path::PathBuf)","parent":{"krate":0,"index":6315},"children":[],"decl_id":null,"docs":" A common path extension for the format is known.\n","sig":null,"attributes":[{"value":"/ A common path extension for the format is known.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16216,"byte_end":16268,"line_start":185,"line_end":185,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":6324},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16287,"byte_end":16305,"line_start":186,"line_end":186,"column_start":19,"column_end":37},"name":"0","qualname":"::error::ImageFormatHint::PathExtension::0","value":"std::path::PathBuf","parent":{"krate":0,"index":6322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6325},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16373,"byte_end":16380,"line_start":189,"line_end":189,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::ImageFormatHint::Unknown","value":"ImageFormatHint::Unknown","parent":{"krate":0,"index":6315},"children":[],"decl_id":null,"docs":" The format is not known or could not be determined.\n","sig":null,"attributes":[{"value":"/ The format is not known or could not be determined.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16313,"byte_end":16368,"line_start":188,"line_end":188,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":6315},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16065,"byte_end":16080,"line_start":178,"line_end":178,"column_start":10,"column_end":25},"name":"ImageFormatHint","qualname":"::error::ImageFormatHint","value":"enum ImageFormatHint {\n    Exact(ImageFormat),\n    Name(String),\n    PathExtension(std::path::PathBuf),\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":6316},{"krate":0,"index":6319},{"krate":0,"index":6322},{"krate":0,"index":6325}],"decl_id":null,"docs":" A best effort representation for image formats.\n","sig":null,"attributes":[{"value":"/ A best effort representation for image formats.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":15945,"byte_end":15996,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16038,"byte_end":16055,"line_start":177,"line_end":177,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16631,"byte_end":16651,"line_start":197,"line_end":197,"column_start":12,"column_end":32},"name":"from_format_and_kind","qualname":"<UnsupportedError>::from_format_and_kind","value":"fn from_format_and_kind(ImageFormatHint, UnsupportedErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `UnsupportedError` for an image with details on the unsupported feature.","sig":null,"attributes":[{"value":"/ Create an `UnsupportedError` for an image with details on the unsupported feature.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16413,"byte_end":16499,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16504,"byte_end":16507,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ If the operation was not connected to a particular image format then the hint may be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16512,"byte_end":16600,"line_start":195,"line_end":195,"column_start":5,"column_end":93}},{"value":"/ `Unknown`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16605,"byte_end":16619,"line_start":196,"line_end":196,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16846,"byte_end":16850,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"kind","qualname":"<UnsupportedError>::kind","value":"fn kind<'_>(&'_ Self) -> UnsupportedErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `UnsupportedErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `UnsupportedErrorKind` of the error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16768,"byte_end":16834,"line_start":201,"line_end":201,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16989,"byte_end":17000,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<UnsupportedError>::format_hint","value":"fn format_hint<'_>(&'_ Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16921,"byte_end":16977,"line_start":206,"line_end":206,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17192,"byte_end":17195,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodingError>::new","value":"fn new<impl Into<Box<dyn Error + Send + Sync>>>(ImageFormatHint,\nimpl Into<Box<dyn Error + Send + Sync>>) -> Self where\nimpl Into<Box<dyn Error + Send + Sync>>: Into<Box<dyn Error + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.\n","sig":null,"attributes":[{"value":"/ Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17091,"byte_end":17180,"line_start":213,"line_end":213,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17540,"byte_end":17556,"line_start":224,"line_end":224,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<DecodingError>::from_format_hint","value":"fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create a `DecodingError` for an image format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17384,"byte_end":17433,"line_start":221,"line_end":221,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17438,"byte_end":17441,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17446,"byte_end":17528,"line_start":223,"line_end":223,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17755,"byte_end":17766,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<DecodingError>::format_hint","value":"fn format_hint<'_>(&'_ Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17687,"byte_end":17743,"line_start":231,"line_end":231,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17959,"byte_end":17962,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodingError>::new","value":"fn new<impl Into<Box<dyn Error + Send + Sync>>>(ImageFormatHint,\nimpl Into<Box<dyn Error + Send + Sync>>) -> Self where\nimpl Into<Box<dyn Error + Send + Sync>>: Into<Box<dyn Error + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.\n","sig":null,"attributes":[{"value":"/ Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17857,"byte_end":17947,"line_start":238,"line_end":238,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18308,"byte_end":18324,"line_start":249,"line_end":249,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<EncodingError>::from_format_hint","value":"fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create an `EncodingError` for an image format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18151,"byte_end":18201,"line_start":246,"line_end":246,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18206,"byte_end":18209,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18214,"byte_end":18296,"line_start":248,"line_end":248,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18522,"byte_end":18533,"line_start":257,"line_end":257,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<EncodingError>::format_hint","value":"fn format_hint<'_>(&'_ Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Return the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Return the image format associated with this error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18455,"byte_end":18510,"line_start":256,"line_end":256,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18705,"byte_end":18714,"line_start":264,"line_end":264,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ParameterError>::from_kind","value":"fn from_kind(ParameterErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ParameterError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a `ParameterError` directly from a corresponding kind.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18625,"byte_end":18693,"line_start":263,"line_end":263,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18921,"byte_end":18925,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParameterError>::kind","value":"fn kind<'_>(&'_ Self) -> ParameterErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ParameterErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `ParameterErrorKind` of the error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18845,"byte_end":18909,"line_start":271,"line_end":271,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19098,"byte_end":19107,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<LimitError>::from_kind","value":"fn from_kind(LimitErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic `LimitError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a generic `LimitError` directly from a corresponding kind.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19014,"byte_end":19086,"line_start":278,"line_end":278,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19251,"byte_end":19255,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"kind","qualname":"<LimitError>::kind","value":"fn kind<'_>(&'_ Self) -> LimitErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `LimitErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `LimitErrorKind` of the error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19179,"byte_end":19239,"line_start":283,"line_end":283,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19363,"byte_end":19367,"line_start":290,"line_end":290,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageError as std::convert::From>::from","value":"fn from(io::Error) -> ImageError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19494,"byte_end":19498,"line_start":296,"line_end":296,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageFormatHint as std::convert::From>::from","value":"fn from(ImageFormat) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19638,"byte_end":19642,"line_start":302,"line_end":302,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageFormatHint as std::convert::From>::from","value":"fn from<'_>(&'_ std::path::Path) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19904,"byte_end":19908,"line_start":311,"line_end":311,"column_start":8,"column_end":12},"name":"from","qualname":"<UnsupportedError as std::convert::From>::from","value":"fn from(ImageFormatHint) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":20134,"byte_end":20145,"line_start":320,"line_end":320,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::error::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":20076,"byte_end":20124,"line_start":319,"line_end":319,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":20217,"byte_end":20220,"line_start":323,"line_end":323,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ImageError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":20688,"byte_end":20694,"line_start":336,"line_end":336,"column_start":8,"column_end":14},"name":"source","qualname":"<ImageError as std::error::Error>::source","value":"fn source<'_>(&'_ Self) -> Option<&'_ dyn Error + 'static>","parent":{"krate":1,"index":2576},"children":[],"decl_id":{"krate":1,"index":2577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":21157,"byte_end":21160,"line_start":349,"line_end":349,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnsupportedError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":22587,"byte_end":22590,"line_start":386,"line_end":386,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParameterError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":23474,"byte_end":23480,"line_start":412,"line_end":412,"column_start":8,"column_end":14},"name":"source","qualname":"<ParameterError as std::error::Error>::source","value":"fn source<'_>(&'_ Self) -> Option<&'_ dyn Error + 'static>","parent":{"krate":1,"index":2576},"children":[],"decl_id":{"krate":1,"index":2577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":23692,"byte_end":23695,"line_start":421,"line_end":421,"column_start":8,"column_end":11},"name":"fmt","qualname":"<EncodingError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":24088,"byte_end":24094,"line_start":434,"line_end":434,"column_start":8,"column_end":14},"name":"source","qualname":"<EncodingError as std::error::Error>::source","value":"fn source<'_>(&'_ Self) -> Option<&'_ dyn Error + 'static>","parent":{"krate":1,"index":2576},"children":[],"decl_id":{"krate":1,"index":2577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":24306,"byte_end":24309,"line_start":443,"line_end":443,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DecodingError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":24797,"byte_end":24803,"line_start":457,"line_end":457,"column_start":8,"column_end":14},"name":"source","qualname":"<DecodingError as std::error::Error>::source","value":"fn source<'_>(&'_ Self) -> Option<&'_ dyn Error + 'static>","parent":{"krate":1,"index":2576},"children":[],"decl_id":{"krate":1,"index":2577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":25012,"byte_end":25015,"line_start":466,"line_end":466,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LimitError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":25568,"byte_end":25571,"line_start":481,"line_end":481,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ImageFormatHint as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5127,"byte_end":5133,"line_start":156,"line_end":156,"column_start":9,"column_end":15},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241}],"decl_id":null,"docs":" Iterators and other auxiliary structure for the `ImageBuffer` type.\n","sig":null,"attributes":[{"value":"/ Iterators and other auxiliary structure for the `ImageBuffer` type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5047,"byte_end":5118,"line_start":155,"line_end":155,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\mod.rs","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":251},{"krate":0,"index":254}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"/ Mathematical helper functions and types.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\mod.rs","byte_start":26356,"byte_end":26400,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":6338},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\rect.rs","byte_start":26619,"byte_end":26623,"line_start":3,"line_end":3,"column_start":12,"column_end":16},"name":"Rect","qualname":"::math::rect::Rect","value":"Rect { x, y, width, height }","parent":null,"children":[{"krate":0,"index":6339},{"krate":0,"index":6340},{"krate":0,"index":6341},{"krate":0,"index":6342}],"decl_id":null,"docs":" A Rectangle defined by its top left corner, width and height.\n","sig":null,"attributes":[{"value":"/ A Rectangle defined by its top left corner, width and height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\rect.rs","byte_start":26491,"byte_end":26556,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":6339},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\rect.rs","byte_start":26683,"byte_end":26684,"line_start":5,"line_end":5,"column_start":9,"column_end":10},"name":"x","qualname":"::math::rect::Rect::x","value":"u32","parent":{"krate":0,"index":6338},"children":[],"decl_id":null,"docs":" The x coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The x coordinate of the top left corner.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\rect.rs","byte_start":26630,"byte_end":26674,"line_start":4,"line_end":4,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6340},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\rect.rs","byte_start":26748,"byte_end":26749,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::math::rect::Rect::y","value":"u32","parent":{"krate":0,"index":6338},"children":[],"decl_id":null,"docs":" The y coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The y coordinate of the top left corner.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\rect.rs","byte_start":26695,"byte_end":26739,"line_start":6,"line_end":6,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6341},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\rect.rs","byte_start":26795,"byte_end":26800,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"width","qualname":"::math::rect::Rect::width","value":"u32","parent":{"krate":0,"index":6338},"children":[],"decl_id":null,"docs":" The rectangle's width.\n","sig":null,"attributes":[{"value":"/ The rectangle's width.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\rect.rs","byte_start":26760,"byte_end":26786,"line_start":8,"line_end":8,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6342},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\rect.rs","byte_start":26847,"byte_end":26853,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"height","qualname":"::math::rect::Rect::height","value":"u32","parent":{"krate":0,"index":6338},"children":[],"decl_id":null,"docs":" The rectangle's height.\n","sig":null,"attributes":[{"value":"/ The rectangle's height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\math\\rect.rs","byte_start":26811,"byte_end":26838,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":448},{"krate":0,"index":562},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":706},{"krate":0,"index":711}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"/ Image Processing Functions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":31334,"byte_end":31364,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":48028,"byte_end":48036,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"fn rotate90<I, '_>(&'_ I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI: GenericImageView, I::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":47979,"byte_end":48020,"line_start":8,"line_end":8,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":48368,"byte_end":48377,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"fn rotate180<I, '_>(&'_ I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI: GenericImageView, I::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":48318,"byte_end":48360,"line_start":21,"line_end":21,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":48710,"byte_end":48719,"line_start":35,"line_end":35,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"fn rotate270<I, '_>(&'_ I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI: GenericImageView, I::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":48660,"byte_end":48702,"line_start":34,"line_end":34,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":49107,"byte_end":49118,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"rotate90_in","qualname":"::imageops::affine::rotate90_in","value":"fn rotate90_in<I, Container, '_,\n'_>(&'_ I, &'_ mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>\nwhere I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":49002,"byte_end":49099,"line_start":47,"line_end":47,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":49892,"byte_end":49904,"line_start":74,"line_end":74,"column_start":8,"column_end":20},"name":"rotate180_in","qualname":"::imageops::affine::rotate180_in","value":"fn rotate180_in<I, Container, '_,\n'_>(&'_ I, &'_ mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>\nwhere I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":49786,"byte_end":49884,"line_start":73,"line_end":73,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":50687,"byte_end":50699,"line_start":100,"line_end":100,"column_start":8,"column_end":20},"name":"rotate270_in","qualname":"::imageops::affine::rotate270_in","value":"fn rotate270_in<I, Container, '_,\n'_>(&'_ I, &'_ mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>\nwhere I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":50581,"byte_end":50679,"line_start":99,"line_end":99,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":51405,"byte_end":51420,"line_start":126,"line_end":126,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"fn flip_horizontal<I, '_>(&'_ I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI: GenericImageView, I::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":51367,"byte_end":51397,"line_start":125,"line_end":125,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":51745,"byte_end":51758,"line_start":139,"line_end":139,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"fn flip_vertical<I, '_>(&'_ I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI: GenericImageView, I::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":51709,"byte_end":51737,"line_start":138,"line_end":138,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":52140,"byte_end":52158,"line_start":152,"line_end":152,"column_start":8,"column_end":26},"name":"flip_horizontal_in","qualname":"::imageops::affine::flip_horizontal_in","value":"fn flip_horizontal_in<I, Container, '_,\n'_>(&'_ I, &'_ mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>\nwhere I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":52045,"byte_end":52132,"line_start":151,"line_end":151,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":52919,"byte_end":52935,"line_start":178,"line_end":178,"column_start":8,"column_end":24},"name":"flip_vertical_in","qualname":"::imageops::affine::flip_vertical_in","value":"fn flip_vertical_in<I, Container, '_,\n'_>(&'_ I, &'_ mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>\nwhere I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image vertically and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":52826,"byte_end":52911,"line_start":177,"line_end":177,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":53662,"byte_end":53680,"line_start":204,"line_end":204,"column_start":8,"column_end":26},"name":"rotate180_in_place","qualname":"::imageops::affine::rotate180_in_place","value":"fn rotate180_in_place<I, '_>(&'_ mut I) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise in place.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise in place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":53603,"byte_end":53654,"line_start":203,"line_end":203,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":54460,"byte_end":54484,"line_start":235,"line_end":235,"column_start":8,"column_end":32},"name":"flip_horizontal_in_place","qualname":"::imageops::affine::flip_horizontal_in_place","value":"fn flip_horizontal_in_place<I, '_>(&'_ mut I) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally in place.\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally in place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":54412,"byte_end":54452,"line_start":234,"line_end":234,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":54890,"byte_end":54912,"line_start":250,"line_end":250,"column_start":8,"column_end":30},"name":"flip_vertical_in_place","qualname":"::imageops::affine::flip_vertical_in_place","value":"fn flip_vertical_in_place<I, '_>(&'_ mut I) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically in place.\n","sig":null,"attributes":[{"value":"/ Flip an image vertically in place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\affine.rs","byte_start":54844,"byte_end":54882,"line_start":249,"line_end":249,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":519},{"krate":0,"index":523},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":6358},{"krate":0,"index":6360},{"krate":0,"index":6362},{"krate":0,"index":537},{"krate":0,"index":543},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":559}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"/ Functions for altering and converting the color of pixelbufs","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":59873,"byte_end":59937,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":60346,"byte_end":60355,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"fn grayscale<I, '_>(&'_ I) -> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>>\nwhere I: GenericImageView","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale. Alpha channel is discarded.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale. Alpha channel is discarded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":60266,"byte_end":60338,"line_start":14,"line_end":14,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":60563,"byte_end":60578,"line_start":22,"line_end":22,"column_start":8,"column_end":23},"name":"grayscale_alpha","qualname":"::imageops::colorops::grayscale_alpha","value":"fn grayscale_alpha<I, '_>(&'_ I)\n-> ImageBuffer<LumaA<Subpixel<I>>, Vec<Subpixel<I>>> where I: GenericImageView","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale. Alpha channel is preserved.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale. Alpha channel is preserved.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":60483,"byte_end":60555,"line_start":21,"line_end":21,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":60831,"byte_end":60850,"line_start":29,"line_end":29,"column_start":8,"column_end":27},"name":"grayscale_with_type","qualname":"::imageops::colorops::grayscale_with_type","value":"fn grayscale_with_type<NewPixel, I, '_>(&'_ I)\n-> ImageBuffer<NewPixel, Vec<NewPixel::Subpixel>> where I: GenericImageView,\nNewPixel: Pixel + FromColor<Luma<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is discarded.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is discarded.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":60713,"byte_end":60823,"line_start":28,"line_end":28,"column_start":1,"column_end":111}}]},{"kind":"Function","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":61440,"byte_end":61465,"line_start":49,"line_end":49,"column_start":8,"column_end":33},"name":"grayscale_with_type_alpha","qualname":"::imageops::colorops::grayscale_with_type_alpha","value":"fn grayscale_with_type_alpha<NewPixel, I, '_>(&'_ I)\n-> ImageBuffer<NewPixel, Vec<NewPixel::Subpixel>> where I: GenericImageView,\nNewPixel: Pixel + FromColor<LumaA<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is preserved.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is preserved.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":61322,"byte_end":61432,"line_start":48,"line_end":48,"column_start":1,"column_end":111}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":62037,"byte_end":62043,"line_start":70,"line_end":70,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"fn invert<I, '_>(&'_ mut I) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":61944,"byte_end":61992,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":61993,"byte_end":62029,"line_start":69,"line_end":69,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":62605,"byte_end":62613,"line_start":89,"line_end":89,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"fn contrast<I, P, S, '_>(&'_ I, f32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":62345,"byte_end":62391,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":62392,"byte_end":62451,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":62452,"byte_end":62536,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":62537,"byte_end":62540,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ *[See also `contrast_in_place`.][contrast_in_place]*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":62541,"byte_end":62597,"line_start":88,"line_end":88,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":63605,"byte_end":63622,"line_start":123,"line_end":123,"column_start":8,"column_end":25},"name":"contrast_in_place","qualname":"::imageops::colorops::contrast_in_place","value":"fn contrast_in_place<I, '_>(&'_ mut I, f32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image in place.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image in place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":63354,"byte_end":63409,"line_start":118,"line_end":118,"column_start":1,"column_end":56}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":63410,"byte_end":63469,"line_start":119,"line_end":119,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":63470,"byte_end":63554,"line_start":120,"line_end":120,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":63555,"byte_end":63558,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ *[See also `contrast`.][contrast]*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":63559,"byte_end":63597,"line_start":122,"line_end":122,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":64563,"byte_end":64571,"line_start":156,"line_end":156,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"fn brighten<I, P, S, '_>(&'_ I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":64328,"byte_end":64360,"line_start":151,"line_end":151,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":64361,"byte_end":64417,"line_start":152,"line_end":152,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":64418,"byte_end":64494,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":64495,"byte_end":64498,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ *[See also `brighten_in_place`.][brighten_in_place]*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":64499,"byte_end":64555,"line_start":155,"line_end":155,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":65499,"byte_end":65516,"line_start":189,"line_end":189,"column_start":8,"column_end":25},"name":"brighten_in_place","qualname":"::imageops::colorops::brighten_in_place","value":"fn brighten_in_place<I, '_>(&'_ mut I, i32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image in place.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.","sig":null,"attributes":[{"value":"/ Brighten the supplied image in place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":65273,"byte_end":65314,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":65315,"byte_end":65371,"line_start":185,"line_end":185,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":65372,"byte_end":65448,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":65449,"byte_end":65452,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ *[See also `brighten`.][brighten]*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":65453,"byte_end":65491,"line_start":188,"line_end":188,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":66518,"byte_end":66527,"line_start":222,"line_end":222,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"fn huerotate<I, P, S, '_>(&'_ I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":66239,"byte_end":66273,"line_start":216,"line_end":216,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":66274,"byte_end":66325,"line_start":217,"line_end":217,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":66326,"byte_end":66395,"line_start":218,"line_end":218,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":66396,"byte_end":66447,"line_start":219,"line_end":219,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":66448,"byte_end":66451,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ *[See also `huerotate_in_place`.][huerotate_in_place]*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":66452,"byte_end":66510,"line_start":221,"line_end":221,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":68745,"byte_end":68763,"line_start":288,"line_end":288,"column_start":8,"column_end":26},"name":"huerotate_in_place","qualname":"::imageops::colorops::huerotate_in_place","value":"fn huerotate_in_place<I, '_>(&'_ mut I, i32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image in place.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image in place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":68475,"byte_end":68518,"line_start":282,"line_end":282,"column_start":1,"column_end":44}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":68519,"byte_end":68570,"line_start":283,"line_end":283,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":68571,"byte_end":68640,"line_start":284,"line_end":284,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":68641,"byte_end":68692,"line_start":285,"line_end":285,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":68693,"byte_end":68696,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ *[See also `huerotate`.][huerotate]*","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":68697,"byte_end":68737,"line_start":287,"line_end":287,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":70737,"byte_end":70745,"line_start":351,"line_end":351,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":70711,"byte_end":70726,"line_start":350,"line_end":350,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":70809,"byte_end":70814,"line_start":353,"line_end":353,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":70752,"byte_end":70799,"line_start":352,"line_end":352,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":70907,"byte_end":70915,"line_start":356,"line_end":356,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"fn index_of<'_, '_>(&'_ Self, &'_ Self::Color) -> usize","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Returns the index of the closest match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closest match of `color`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":70820,"byte_end":70873,"line_start":354,"line_end":354,"column_start":5,"column_end":58}},{"value":"/ in the color map.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":70878,"byte_end":70899,"line_start":355,"line_end":355,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71123,"byte_end":71129,"line_start":359,"line_end":359,"column_start":8,"column_end":14},"name":"lookup","qualname":"::imageops::colorops::ColorMap::lookup","value":"fn lookup<'_>(&'_ Self, usize) -> Option<Self::Color>","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Looks up color by index in the color map.  If `idx` is out of range for the color map, or\n ColorMap doesn't implement `lookup` `None` is returned.\n","sig":null,"attributes":[{"value":"/ Looks up color by index in the color map.  If `idx` is out of range for the color map, or","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":70958,"byte_end":71051,"line_start":357,"line_end":357,"column_start":5,"column_end":98}},{"value":"/ ColorMap doesn't implement `lookup` `None` is returned.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71056,"byte_end":71115,"line_start":358,"line_end":358,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71310,"byte_end":71320,"line_start":364,"line_end":364,"column_start":8,"column_end":18},"name":"has_lookup","qualname":"::imageops::colorops::ColorMap::has_lookup","value":"fn has_lookup<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Determine if this implementation of ColorMap overrides the default `lookup`.\n","sig":null,"attributes":[{"value":"/ Determine if this implementation of ColorMap overrides the default `lookup`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71222,"byte_end":71302,"line_start":363,"line_end":363,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71425,"byte_end":71434,"line_start":368,"line_end":368,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"fn map_color<'_, '_>(&'_ Self, &'_ mut Self::Color)","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71362,"byte_end":71417,"line_start":367,"line_end":367,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6358},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72579,"byte_end":72586,"line_start":401,"line_end":401,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71471,"byte_end":71495,"line_start":371,"line_end":371,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71496,"byte_end":71499,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71500,"byte_end":71514,"line_start":373,"line_end":373,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71515,"byte_end":71522,"line_start":374,"line_end":374,"column_start":1,"column_end":8}},{"value":"/ use image::imageops::colorops::{index_colors, BiLevel, ColorMap};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71523,"byte_end":71592,"line_start":375,"line_end":375,"column_start":1,"column_end":70}},{"value":"/ use image::{ImageBuffer, Luma};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71593,"byte_end":71628,"line_start":376,"line_end":376,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71629,"byte_end":71632,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ let (w, h) = (16, 16);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71633,"byte_end":71659,"line_start":378,"line_end":378,"column_start":1,"column_end":27}},{"value":"/ // Create an image with a smooth horizontal gradient from black (0) to white (255).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71660,"byte_end":71747,"line_start":379,"line_end":379,"column_start":1,"column_end":88}},{"value":"/ let gray = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> { [(255 * x / w) as u8].into() });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71748,"byte_end":71843,"line_start":380,"line_end":380,"column_start":1,"column_end":96}},{"value":"/ // Mapping the gray image through the `BiLevel` filter should map gray pixels less than half","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71844,"byte_end":71940,"line_start":381,"line_end":381,"column_start":1,"column_end":97}},{"value":"/ // intensity (127) to black (0), and anything greater to white (255).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":71941,"byte_end":72014,"line_start":382,"line_end":382,"column_start":1,"column_end":74}},{"value":"/ let cmap = BiLevel;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72015,"byte_end":72038,"line_start":383,"line_end":383,"column_start":1,"column_end":24}},{"value":"/ let palletized = index_colors(&gray, &cmap);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72039,"byte_end":72087,"line_start":384,"line_end":384,"column_start":1,"column_end":49}},{"value":"/ let mapped = ImageBuffer::from_fn(w, h, |x, y| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72088,"byte_end":72140,"line_start":385,"line_end":385,"column_start":1,"column_end":53}},{"value":"/     let p = palletized.get_pixel(x, y);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72141,"byte_end":72184,"line_start":386,"line_end":386,"column_start":1,"column_end":44}},{"value":"/     cmap.lookup(p.0[0] as usize)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72185,"byte_end":72221,"line_start":387,"line_end":387,"column_start":1,"column_end":37}},{"value":"/         .expect(\"indexed color out-of-range\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72222,"byte_end":72271,"line_start":388,"line_end":388,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72272,"byte_end":72279,"line_start":389,"line_end":389,"column_start":1,"column_end":8}},{"value":"/ // Create an black and white image of expected output.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72280,"byte_end":72338,"line_start":390,"line_end":390,"column_start":1,"column_end":59}},{"value":"/ let bw = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72339,"byte_end":72399,"line_start":391,"line_end":391,"column_start":1,"column_end":61}},{"value":"/     if x <= (w / 2) {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72400,"byte_end":72425,"line_start":392,"line_end":392,"column_start":1,"column_end":26}},{"value":"/         [0].into()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72426,"byte_end":72448,"line_start":393,"line_end":393,"column_start":1,"column_end":23}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72449,"byte_end":72465,"line_start":394,"line_end":394,"column_start":1,"column_end":17}},{"value":"/         [255].into()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72466,"byte_end":72490,"line_start":395,"line_end":395,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72491,"byte_end":72500,"line_start":396,"line_end":396,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72501,"byte_end":72508,"line_start":397,"line_end":397,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(mapped, bw);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72509,"byte_end":72536,"line_start":398,"line_end":398,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72537,"byte_end":72544,"line_start":399,"line_end":399,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72674,"byte_end":72682,"line_start":407,"line_end":407,"column_start":8,"column_end":16},"name":"index_of","qualname":"<BiLevel as imageops::colorops::ColorMap>::index_of","value":"fn index_of<'_, '_>(&'_ Self, &'_ Luma<u8>) -> usize","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":533},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72649,"byte_end":72666,"line_start":406,"line_end":406,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72865,"byte_end":72871,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"lookup","qualname":"<BiLevel as imageops::colorops::ColorMap>::lookup","value":"fn lookup<'_>(&'_ Self, usize) -> Option<Self::Color>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72840,"byte_end":72857,"line_start":416,"line_end":416,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73102,"byte_end":73112,"line_start":426,"line_end":426,"column_start":8,"column_end":18},"name":"has_lookup","qualname":"<BiLevel as imageops::colorops::ColorMap>::has_lookup","value":"fn has_lookup<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":535},"docs":" Indicate NeuQuant implements `lookup`.\n","sig":null,"attributes":[{"value":"/ Indicate NeuQuant implements `lookup`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73052,"byte_end":73094,"line_start":425,"line_end":425,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73179,"byte_end":73188,"line_start":431,"line_end":431,"column_start":8,"column_end":17},"name":"map_color","qualname":"<BiLevel as imageops::colorops::ColorMap>::map_color","value":"fn map_color<'_, '_>(&'_ Self, &'_ mut Luma<u8>)","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73154,"byte_end":73171,"line_start":430,"line_end":430,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73449,"byte_end":73457,"line_start":442,"line_end":442,"column_start":8,"column_end":16},"name":"index_of","qualname":"<color_quant::NeuQuant as imageops::colorops::ColorMap>::index_of","value":"fn index_of<'_, '_>(&'_ Self, &'_ Rgba<u8>) -> usize","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":533},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73424,"byte_end":73441,"line_start":441,"line_end":441,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73570,"byte_end":73576,"line_start":447,"line_end":447,"column_start":8,"column_end":14},"name":"lookup","qualname":"<color_quant::NeuQuant as imageops::colorops::ColorMap>::lookup","value":"fn lookup<'_>(&'_ Self, usize) -> Option<Self::Color>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73545,"byte_end":73562,"line_start":446,"line_end":446,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73725,"byte_end":73735,"line_start":452,"line_end":452,"column_start":8,"column_end":18},"name":"has_lookup","qualname":"<color_quant::NeuQuant as imageops::colorops::ColorMap>::has_lookup","value":"fn has_lookup<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":535},"docs":" Indicate NeuQuant implements `lookup`.\n","sig":null,"attributes":[{"value":"/ Indicate NeuQuant implements `lookup`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73675,"byte_end":73717,"line_start":451,"line_end":451,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73802,"byte_end":73811,"line_start":457,"line_end":457,"column_start":8,"column_end":17},"name":"map_color","qualname":"<color_quant::NeuQuant as imageops::colorops::ColorMap>::map_color","value":"fn map_color<'_, '_>(&'_ Self, &'_ mut Rgba<u8>)","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73777,"byte_end":73794,"line_start":456,"line_end":456,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":75000,"byte_end":75006,"line_start":491,"line_end":491,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"fn dither<Pix, Map, '_, '_>(&'_ mut ImageBuffer<Pix, Vec<u8>>, &'_ Map) where\nMap: ColorMap<Color = Pix> + ?Sized, Pix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":74848,"byte_end":74929,"line_start":489,"line_end":489,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":74930,"byte_end":74992,"line_start":490,"line_end":490,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":76560,"byte_end":76572,"line_start":529,"line_end":529,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"fn index_colors<Pix, Map, '_, '_>(&'_ ImageBuffer<Pix, Vec<u8>>, &'_ Map)\n-> ImageBuffer<Luma<u8>, Vec<u8>> where Map: ColorMap<Color = Pix> + ?Sized,\nPix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":76463,"byte_end":76552,"line_start":528,"line_end":528,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6364},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83087,"byte_end":83094,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83062,"byte_end":83082,"line_start":83,"line_end":83,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6366},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83123,"byte_end":83131,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83101,"byte_end":83118,"line_start":86,"line_end":86,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6368},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83159,"byte_end":83169,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83138,"byte_end":83154,"line_start":89,"line_end":89,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6370},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83200,"byte_end":83208,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83176,"byte_end":83195,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6372},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83245,"byte_end":83253,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":6363},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83215,"byte_end":83240,"line_start":95,"line_end":95,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":6363},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83045,"byte_end":83055,"line_start":82,"line_end":82,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"enum FilterType { Nearest, Triangle, CatmullRom, Gaussian, Lanczos3, }","parent":null,"children":[{"krate":0,"index":6364},{"krate":0,"index":6366},{"krate":0,"index":6368},{"krate":0,"index":6370},{"krate":0,"index":6372}],"decl_id":null,"docs":" Available Sampling Filters.","sig":null,"attributes":[{"value":"/ Available Sampling Filters.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":80603,"byte_end":80634,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":80635,"byte_end":80638,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":80639,"byte_end":80654,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":80655,"byte_end":80658,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To test the different sampling filters on a real example, you can find two","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":80659,"byte_end":80737,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ examples called","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":80738,"byte_end":80757,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [`scaledown`](https://github.com/image-rs/image/tree/master/examples/scaledown)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":80758,"byte_end":80841,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/ and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":80842,"byte_end":80849,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ [`scaleup`](https://github.com/image-rs/image/tree/master/examples/scaleup)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":80850,"byte_end":80929,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ in the `examples` directory of the crate source code.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":80930,"byte_end":80987,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":80988,"byte_end":80991,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Here is a 3.58 MiB","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":80992,"byte_end":81014,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ [test image](https://github.com/image-rs/image/blob/master/examples/scaledown/test.jpg)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81015,"byte_end":81106,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/ that has been scaled down to 300x225 px:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81107,"byte_end":81151,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81152,"byte_end":81155,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ <!-- NOTE: To test new test images locally, replace the GitHub path with `../../../docs/` -->","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81156,"byte_end":81253,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ <div style=\"display: flex; flex-wrap: wrap; align-items: flex-start;\">","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81254,"byte_end":81328,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81329,"byte_end":81369,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-near.png\" title=\"Nearest\"><br>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81370,"byte_end":81508,"line_start":33,"line_end":33,"column_start":1,"column_end":139}},{"value":"/     Nearest Neighbor","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81509,"byte_end":81533,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81534,"byte_end":81546,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81547,"byte_end":81587,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-tri.png\" title=\"Triangle\"><br>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81588,"byte_end":81726,"line_start":37,"line_end":37,"column_start":1,"column_end":139}},{"value":"/     Linear: Triangle","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81727,"byte_end":81751,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81752,"byte_end":81764,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81765,"byte_end":81805,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-cmr.png\" title=\"CatmullRom\"><br>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81806,"byte_end":81946,"line_start":41,"line_end":41,"column_start":1,"column_end":141}},{"value":"/     Cubic: Catmull-Rom","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81947,"byte_end":81973,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81974,"byte_end":81986,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":81987,"byte_end":82027,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-gauss.png\" title=\"Gaussian\"><br>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82028,"byte_end":82168,"line_start":45,"line_end":45,"column_start":1,"column_end":141}},{"value":"/     Gaussian","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82169,"byte_end":82185,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82186,"byte_end":82198,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82199,"byte_end":82239,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-lcz2.png\" title=\"Lanczos3\"><br>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82240,"byte_end":82379,"line_start":49,"line_end":49,"column_start":1,"column_end":140}},{"value":"/     Lanczos with window 3","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82380,"byte_end":82409,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82410,"byte_end":82422,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/ </div>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82423,"byte_end":82433,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82434,"byte_end":82437,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Speed","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82438,"byte_end":82450,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82451,"byte_end":82454,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Time required to create each of the examples above, tested on an Intel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82455,"byte_end":82529,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ i7-4770 CPU with Rust 1.37 in release mode:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82530,"byte_end":82577,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82578,"byte_end":82581,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ <table style=\"width: auto;\">","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82582,"byte_end":82614,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82615,"byte_end":82625,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/     <th>Nearest</th>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82626,"byte_end":82650,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     <td>31 ms</td>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82651,"byte_end":82673,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82674,"byte_end":82685,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82686,"byte_end":82696,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"/     <th>Triangle</th>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82697,"byte_end":82722,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/     <td>414 ms</td>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82723,"byte_end":82746,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82747,"byte_end":82758,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82759,"byte_end":82769,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/     <th>CatmullRom</th>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82770,"byte_end":82797,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/     <td>817 ms</td>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82798,"byte_end":82821,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82822,"byte_end":82833,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82834,"byte_end":82844,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     <th>Gaussian</th>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82845,"byte_end":82870,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/     <td>1180 ms</td>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82871,"byte_end":82895,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82896,"byte_end":82907,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82908,"byte_end":82918,"line_start":76,"line_end":76,"column_start":1,"column_end":11}},{"value":"/     <th>Lanczos3</th>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82919,"byte_end":82944,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/     <td>1170 ms</td>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82945,"byte_end":82969,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82970,"byte_end":82981,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ </table>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":82982,"byte_end":82994,"line_start":80,"line_end":80,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":93519,"byte_end":93528,"line_start":424,"line_end":424,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"fn thumbnail<I, P, S, '_>(&'_ I, u32, u32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + Enlargeable + 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specific dimensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":92773,"byte_end":92830,"line_start":412,"line_end":412,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":92831,"byte_end":92834,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ For downscaling, this method uses a fast integer algorithm where each source pixel contributes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":92835,"byte_end":92933,"line_start":414,"line_end":414,"column_start":1,"column_end":99}},{"value":"/ to exactly one target pixel.  May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":92934,"byte_end":93029,"line_start":415,"line_end":415,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":93030,"byte_end":93033,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ In case the current width is smaller than the new width or similar for the height, another","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":93034,"byte_end":93128,"line_start":417,"line_end":417,"column_start":1,"column_end":95}},{"value":"/ strategy is used instead.  For each pixel in the output, a rectangular region of the input is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":93129,"byte_end":93226,"line_start":418,"line_end":418,"column_start":1,"column_end":98}},{"value":"/ determined, just as previously.  But when no input pixel is part of this region, the nearest","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":93227,"byte_end":93323,"line_start":419,"line_end":419,"column_start":1,"column_end":97}},{"value":"/ pixels are interpolated instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":93324,"byte_end":93360,"line_start":420,"line_end":420,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":93361,"byte_end":93364,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ For speed reasons, all interpolation is performed linearly over the colour values.  It will not","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":93365,"byte_end":93464,"line_start":422,"line_end":422,"column_start":1,"column_end":100}},{"value":"/ take the pixel colour spaces into account.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":93465,"byte_end":93511,"line_start":423,"line_end":423,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":101644,"byte_end":101653,"line_start":671,"line_end":671,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"fn filter3x3<I, P, S, '_, '_>(&'_ I, &'_ [f32]) -> ImageBuffer<P, Vec<S>>\nwhere I: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":101521,"byte_end":101572,"line_start":669,"line_end":669,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":101573,"byte_end":101636,"line_start":670,"line_end":670,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":104156,"byte_end":104162,"line_start":753,"line_end":753,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"fn resize<I, '_>(&'_ I, u32, u32, FilterType)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI: GenericImageView, I::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":103983,"byte_end":104041,"line_start":750,"line_end":750,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":104042,"byte_end":104100,"line_start":751,"line_end":751,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":104101,"byte_end":104148,"line_start":752,"line_end":752,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":105651,"byte_end":105655,"line_start":800,"line_end":800,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"fn blur<I, '_>(&'_ I, f32)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI: GenericImageView, I::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":105539,"byte_end":105590,"line_start":798,"line_end":798,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":105591,"byte_end":105643,"line_start":799,"line_end":799,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":106570,"byte_end":106579,"line_start":828,"line_end":828,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"fn unsharpen<I, P, S, '_>(&'_ I, f32, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for minimal brightness change that will be sharpened.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":106282,"byte_end":106335,"line_start":823,"line_end":823,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":106336,"byte_end":106387,"line_start":824,"line_end":824,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for minimal brightness change that will be sharpened.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":106388,"byte_end":106478,"line_start":825,"line_end":825,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":106479,"byte_end":106482,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":106483,"byte_end":106562,"line_start":827,"line_end":827,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32446,"byte_end":32450,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"fn crop<I, '_>(&'_ mut I, u32, u32, u32, u32) -> SubImage<&'_ mut I> where\nI: GenericImageView","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n The coordinates set the position of the top left corner of the crop.\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32326,"byte_end":32365,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ The coordinates set the position of the top left corner of the crop.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32366,"byte_end":32438,"line_start":34,"line_end":34,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32817,"byte_end":32825,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"crop_imm","qualname":"::imageops::crop_imm","value":"fn crop_imm<I, '_>(&'_ I, u32, u32, u32, u32) -> SubImage<&'_ I> where\nI: GenericImageView","parent":null,"children":[],"decl_id":null,"docs":" Return an immutable view into an image\n The coordinates set the position of the top left corner of the crop.\n","sig":null,"attributes":[{"value":"/ Return an immutable view into an image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32694,"byte_end":32736,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ The coordinates set the position of the top left corner of the crop.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32737,"byte_end":32809,"line_start":47,"line_end":47,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35611,"byte_end":35625,"line_start":132,"line_end":132,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"fn overlay_bounds((u32, u32), (u32, u32), u32, u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[{"value":"/ Calculate the region that can be copied from top to bottom.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":33437,"byte_end":33500,"line_start":77,"line_end":77,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":33501,"byte_end":33504,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Given image size of bottom and top image, and a point at which we want to place the top image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":33505,"byte_end":33602,"line_start":79,"line_end":79,"column_start":1,"column_end":98}},{"value":"/ onto the bottom image, how large can we be? Have to wary of the following issues:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":33603,"byte_end":33688,"line_start":80,"line_end":80,"column_start":1,"column_end":86}},{"value":"/ * Top might be larger than bottom","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":33689,"byte_end":33726,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"/ * Overflows in the computation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":33727,"byte_end":33761,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/ * Coordinates could be completely out of bounds","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":33762,"byte_end":33813,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":33814,"byte_end":33817,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The main idea is to make use of inequalities provided by the nature of `saturating_add` and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":33818,"byte_end":33913,"line_start":85,"line_end":85,"column_start":1,"column_end":96}},{"value":"/ `saturating_sub`. These intrinsically validate that all resulting coordinates will be in bounds","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":33914,"byte_end":34013,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ for both images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34014,"byte_end":34034,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34035,"byte_end":34038,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ We want that all these coordinate accesses are safe:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34039,"byte_end":34095,"line_start":89,"line_end":89,"column_start":1,"column_end":57}},{"value":"/ 1. `bottom.get_pixel(x + [0..x_range), y + [0..y_range))`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34096,"byte_end":34157,"line_start":90,"line_end":90,"column_start":1,"column_end":62}},{"value":"/ 2. `top.get_pixel([0..x_range), [0..y_range))`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34158,"byte_end":34208,"line_start":91,"line_end":91,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34209,"byte_end":34212,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Proof that the function provides the necessary bounds for width. Note that all unaugmented math","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34213,"byte_end":34312,"line_start":93,"line_end":93,"column_start":1,"column_end":100}},{"value":"/ operations are to be read in standard arithmetic, not integer arithmetic. Since no direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34313,"byte_end":34406,"line_start":94,"line_end":94,"column_start":1,"column_end":94}},{"value":"/ integer arithmetic occurs in the implementation, this is unambiguous.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34407,"byte_end":34480,"line_start":95,"line_end":95,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34481,"byte_end":34484,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34485,"byte_end":34496,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/ Three short notes/lemmata:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34497,"byte_end":34527,"line_start":98,"line_end":98,"column_start":1,"column_end":31}},{"value":"/ - Iff `(a - b) <= 0` then `a.saturating_sub(b) = 0`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34528,"byte_end":34583,"line_start":99,"line_end":99,"column_start":1,"column_end":56}},{"value":"/ - Iff `(a - b) >= 0` then `a.saturating_sub(b) = a - b`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34584,"byte_end":34643,"line_start":100,"line_end":100,"column_start":1,"column_end":60}},{"value":"/ - If  `a <= c` then `a.saturating_sub(b) <= c.saturating_sub(b)`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34644,"byte_end":34712,"line_start":101,"line_end":101,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34713,"byte_end":34716,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ 1.1 We show that if `bottom_width <= x`, then `x_range = 0` therefore `x + [0..x_range)` is empty.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34717,"byte_end":34819,"line_start":103,"line_end":103,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34820,"byte_end":34823,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34824,"byte_end":34835,"line_start":105,"line_end":105,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34836,"byte_end":34908,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ <= bottom_width.saturating_sub(x)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34909,"byte_end":34946,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34947,"byte_end":34950,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ bottom_width <= x","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34951,"byte_end":34972,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/ <==> bottom_width - x <= 0","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":34973,"byte_end":35003,"line_start":110,"line_end":110,"column_start":1,"column_end":31}},{"value":"/ <==> bottom_width.saturating_sub(x) = 0","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35004,"byte_end":35047,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/  ==> x_range <= 0","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35048,"byte_end":35069,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/  ==> x_range  = 0","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35070,"byte_end":35091,"line_start":113,"line_end":113,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35092,"byte_end":35095,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ 1.2 If `x < bottom_width` then `x + x_range < bottom_width`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35096,"byte_end":35159,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35160,"byte_end":35163,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ x + x_range","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35164,"byte_end":35179,"line_start":117,"line_end":117,"column_start":1,"column_end":16}},{"value":"/ <= x + bottom_width.saturating_sub(x)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35180,"byte_end":35221,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/  = x + (bottom_width - x)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35222,"byte_end":35251,"line_start":119,"line_end":119,"column_start":1,"column_end":30}},{"value":"/  = bottom_width","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35252,"byte_end":35271,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35272,"byte_end":35275,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ 2. We show that `x_range <= top_width`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35276,"byte_end":35318,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35319,"byte_end":35322,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35323,"byte_end":35334,"line_start":124,"line_end":124,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35335,"byte_end":35407,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"/ <= top_width.saturating_add(x).saturating_sub(x)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35408,"byte_end":35460,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"/ <= (top_wdith + x).saturating_sub(x)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35461,"byte_end":35501,"line_start":127,"line_end":127,"column_start":1,"column_end":41}},{"value":"/  = top_width (due to `top_width >= 0` and `x >= 0`)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35502,"byte_end":35557,"line_start":128,"line_end":128,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35558,"byte_end":35565,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35566,"byte_end":35569,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Proof is the same for height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":35570,"byte_end":35603,"line_start":131,"line_end":131,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":38930,"byte_end":38937,"line_start":215,"line_end":215,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"fn overlay<I, J, '_, '_>(&'_ mut I, &'_ J, i64, i64) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":38873,"byte_end":38922,"line_start":214,"line_end":214,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40042,"byte_end":40046,"line_start":250,"line_end":250,"column_start":8,"column_end":12},"name":"tile","qualname":"::imageops::tile","value":"fn tile<I, J, '_, '_>(&'_ mut I, &'_ J) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Tile an image by repeating it multiple times","sig":null,"attributes":[{"value":"/ Tile an image by repeating it multiple times","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":39724,"byte_end":39772,"line_start":238,"line_end":238,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":39773,"byte_end":39776,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":39777,"byte_end":39791,"line_start":240,"line_end":240,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":39792,"byte_end":39805,"line_start":241,"line_end":241,"column_start":1,"column_end":14}},{"value":"/ use image::{RgbaImage};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":39806,"byte_end":39833,"line_start":242,"line_end":242,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":39834,"byte_end":39837,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(1920, 1080);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":39838,"byte_end":39883,"line_start":244,"line_end":244,"column_start":1,"column_end":46}},{"value":"/ let tile = image::open(\"tile.png\").unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":39884,"byte_end":39932,"line_start":245,"line_end":245,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":39933,"byte_end":39936,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ image::imageops::tile(&mut img, &tile);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":39937,"byte_end":39980,"line_start":247,"line_end":247,"column_start":1,"column_end":44}},{"value":"/ img.save(\"tiled_wallpaper.png\").unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":39981,"byte_end":40026,"line_start":248,"line_end":248,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40027,"byte_end":40034,"line_start":249,"line_end":249,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40819,"byte_end":40836,"line_start":276,"line_end":276,"column_start":8,"column_end":25},"name":"vertical_gradient","qualname":"::imageops::vertical_gradient","value":"fn vertical_gradient<S, P, I, '_, '_, '_>(&'_ mut I, &'_ P, &'_ P) where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\nLerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear vertical gradient","sig":null,"attributes":[{"value":"/ Fill the image with a linear vertical gradient","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40367,"byte_end":40417,"line_start":262,"line_end":262,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40418,"byte_end":40421,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40422,"byte_end":40469,"line_start":264,"line_end":264,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40470,"byte_end":40473,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40474,"byte_end":40488,"line_start":266,"line_end":266,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40489,"byte_end":40502,"line_start":267,"line_end":267,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40503,"byte_end":40543,"line_start":268,"line_end":268,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40544,"byte_end":40547,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(100, 100);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40548,"byte_end":40591,"line_start":270,"line_end":270,"column_start":1,"column_end":44}},{"value":"/ let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40592,"byte_end":40642,"line_start":271,"line_end":271,"column_start":1,"column_end":51}},{"value":"/ let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40643,"byte_end":40697,"line_start":272,"line_end":272,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40698,"byte_end":40701,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ image::imageops::vertical_gradient(&mut img, start, end);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40702,"byte_end":40763,"line_start":274,"line_end":274,"column_start":1,"column_end":62}},{"value":"/ img.save(\"vertical_gradient.png\").unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":40764,"byte_end":40811,"line_start":275,"line_end":275,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41838,"byte_end":41857,"line_start":309,"line_end":309,"column_start":8,"column_end":27},"name":"horizontal_gradient","qualname":"::imageops::horizontal_gradient","value":"fn horizontal_gradient<S, P, I, '_, '_, '_>(&'_ mut I, &'_ P, &'_ P) where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\nLerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear horizontal gradient","sig":null,"attributes":[{"value":"/ Fill the image with a linear horizontal gradient","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41380,"byte_end":41432,"line_start":295,"line_end":295,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41433,"byte_end":41436,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41437,"byte_end":41484,"line_start":297,"line_end":297,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41485,"byte_end":41488,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41489,"byte_end":41503,"line_start":299,"line_end":299,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41504,"byte_end":41517,"line_start":300,"line_end":300,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41518,"byte_end":41558,"line_start":301,"line_end":301,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41559,"byte_end":41562,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(100, 100);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41563,"byte_end":41606,"line_start":303,"line_end":303,"column_start":1,"column_end":44}},{"value":"/ let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41607,"byte_end":41657,"line_start":304,"line_end":304,"column_start":1,"column_end":51}},{"value":"/ let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41658,"byte_end":41712,"line_start":305,"line_end":305,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41713,"byte_end":41716,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ image::imageops::horizontal_gradient(&mut img, start, end);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41717,"byte_end":41780,"line_start":307,"line_end":307,"column_start":1,"column_end":64}},{"value":"/ img.save(\"horizontal_gradient.png\").unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":41781,"byte_end":41830,"line_start":308,"line_end":308,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":42471,"byte_end":42478,"line_start":329,"line_end":329,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"fn replace<I, J, '_, '_>(&'_ mut I, &'_ J, i64, i64) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":42398,"byte_end":42463,"line_start":328,"line_end":328,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":833},{"krate":0,"index":916},{"krate":0,"index":6382},{"krate":0,"index":6384},{"krate":0,"index":6386},{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6391},{"krate":0,"index":6392},{"krate":0,"index":6395},{"krate":0,"index":919},{"krate":0,"index":6398},{"krate":0,"index":6403},{"krate":0,"index":6405},{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6410},{"krate":0,"index":6411},{"krate":0,"index":6414},{"krate":0,"index":921},{"krate":0,"index":923}],"decl_id":null,"docs":" Input and output of images.\n","sig":null,"attributes":[{"value":"/ Input and output of images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":111935,"byte_end":111966,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":118884,"byte_end":118888,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"load","qualname":"::io::free_functions::load","value":"fn load<R>(R, ImageFormat) -> ImageResult<DynamicImage> where R: BufRead +\nSeek","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader.","sig":null,"attributes":[{"value":"/ Create a new image from a Reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":118537,"byte_end":118574,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":118575,"byte_end":118578,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Assumes the reader is already buffered. For optimal performance,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":118579,"byte_end":118647,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ consider wrapping the reader with a `BufReader::new()`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":118648,"byte_end":118707,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":118708,"byte_end":118711,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":118712,"byte_end":118758,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":118759,"byte_end":118762,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":118763,"byte_end":118804,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":118805,"byte_end":118831,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":119064,"byte_end":119070,"line_start":41,"line_end":41,"column_start":10,"column_end":16},"name":"Result","qualname":"::io::free_functions::DecoderVisitor::Result","value":"type Result;","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":128722,"byte_end":128734,"line_start":290,"line_end":290,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::io::free_functions::guess_format","value":"fn guess_format<'_>(&'_ [u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":128461,"byte_end":128501,"line_start":285,"line_end":285,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":128502,"byte_end":128505,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":128506,"byte_end":128599,"line_start":287,"line_end":287,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":128600,"byte_end":128642,"line_start":288,"line_end":288,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":128643,"byte_end":128714,"line_start":289,"line_end":289,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131230,"byte_end":131236,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Reader","qualname":"::io::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892}],"decl_id":null,"docs":" A multi-format image reader.","sig":null,"attributes":[{"value":"/ A multi-format image reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129488,"byte_end":129520,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129521,"byte_end":129524,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Wraps an input reader to facilitate automatic detection of an image's format, appropriate","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129525,"byte_end":129618,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ decoding method, and dispatches into the set of supported [`ImageDecoder`] implementations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129619,"byte_end":129714,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129715,"byte_end":129718,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129719,"byte_end":129731,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129732,"byte_end":129735,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Opening a file, deducing the format based on the file path automatically, and trying to decode","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129736,"byte_end":129834,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ the image contained can be performed by constructing the reader and immediately consuming it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129835,"byte_end":129932,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129933,"byte_end":129936,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129937,"byte_end":129950,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # use image::ImageError;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129951,"byte_end":129979,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":129980,"byte_end":130008,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130009,"byte_end":130052,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ let image = Reader::open(\"path/to/image.png\")?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130053,"byte_end":130103,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/     .decode()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130104,"byte_end":130123,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130124,"byte_end":130138,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130139,"byte_end":130146,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130147,"byte_end":130150,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ It is also possible to make a guess based on the content. This is especially handy if the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130151,"byte_end":130244,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ source is some blob in memory and you have constructed the reader in another way. Here is an","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130245,"byte_end":130341,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ example with a `pnm` black-and-white subformat that encodes its pixel matrix with ascii values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130342,"byte_end":130441,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130442,"byte_end":130445,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130446,"byte_end":130453,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # use image::ImageError;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130454,"byte_end":130482,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130483,"byte_end":130511,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130512,"byte_end":130555,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130556,"byte_end":130580,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130581,"byte_end":130608,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130609,"byte_end":130612,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let raw_data = b\"P1 2 2\\n\\","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130613,"byte_end":130643,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/     0 1\\n\\","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130644,"byte_end":130658,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/     1 0\\n\";","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130659,"byte_end":130674,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130675,"byte_end":130678,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::new(Cursor::new(raw_data))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130679,"byte_end":130734,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/     .with_guessed_format()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130735,"byte_end":130765,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/     .expect(\"Cursor io never fails\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130766,"byte_end":130807,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(reader.format(), Some(ImageFormat::Pnm));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130808,"byte_end":130864,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130865,"byte_end":130868,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"pnm\")]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130869,"byte_end":130898,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/ let image = reader.decode()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130899,"byte_end":130932,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130933,"byte_end":130947,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130948,"byte_end":130955,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130956,"byte_end":130959,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ As a final fallback or if only a specific format must be used, the reader always allows manual","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":130960,"byte_end":131058,"line_start":56,"line_end":56,"column_start":1,"column_end":99}},{"value":"/ specification of the supposed image format with [`set_format`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131059,"byte_end":131126,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131127,"byte_end":131130,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`set_format`]: #method.set_format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131131,"byte_end":131169,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ [`ImageDecoder`]: ../trait.ImageDecoder.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131170,"byte_end":131218,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131973,"byte_end":131976,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image reader without a preset format.","sig":null,"attributes":[{"value":"/ Create a new image reader without a preset format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131471,"byte_end":131525,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131530,"byte_end":131533,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Assumes the reader is already buffered. For optimal performance,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131538,"byte_end":131606,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ consider wrapping the reader with a `BufReader::new()`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131611,"byte_end":131670,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131675,"byte_end":131678,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ It is possible to guess the format based on the content of the read object with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131683,"byte_end":131766,"line_start":76,"line_end":76,"column_start":5,"column_end":88}},{"value":"/ [`with_guessed_format`], or to set the format directly with [`set_format`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131771,"byte_end":131850,"line_start":77,"line_end":77,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131855,"byte_end":131858,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131863,"byte_end":131919,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ [`set_format`]: method.set_format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131924,"byte_end":131961,"line_start":80,"line_end":80,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":132355,"byte_end":132366,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Reader<R>>::with_format","value":"fn with_format(R, ImageFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a reader with specified format.","sig":null,"attributes":[{"value":"/ Construct a reader with specified format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":132153,"byte_end":132198,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":132203,"byte_end":132206,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Assumes the reader is already buffered. For optimal performance,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":132211,"byte_end":132279,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ consider wrapping the reader with a `BufReader::new()`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":132284,"byte_end":132343,"line_start":92,"line_end":92,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":132624,"byte_end":132630,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"fn format<'_>(&'_ Self) -> Option<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently determined format.\n","sig":null,"attributes":[{"value":"/ Get the currently determined format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":132572,"byte_end":132612,"line_start":101,"line_end":101,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":132765,"byte_end":132775,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Reader<R>>::set_format","value":"fn set_format<'_>(&'_ mut Self, ImageFormat)","parent":null,"children":[],"decl_id":null,"docs":" Supply the format as which to interpret the read image.\n","sig":null,"attributes":[{"value":"/ Supply the format as which to interpret the read image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":132694,"byte_end":132753,"line_start":106,"line_end":106,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133105,"byte_end":133117,"line_start":115,"line_end":115,"column_start":12,"column_end":24},"name":"clear_format","qualname":"<Reader<R>>::clear_format","value":"fn clear_format<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the current information on the image format.","sig":null,"attributes":[{"value":"/ Remove the current information on the image format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":132857,"byte_end":132912,"line_start":111,"line_end":111,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":132917,"byte_end":132920,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Note that many operations require format information to be present and will return e.g. an","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":132925,"byte_end":133019,"line_start":113,"line_end":113,"column_start":5,"column_end":99}},{"value":"/ `ImageError::Unsupported` when the image format has not been set.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133024,"byte_end":133093,"line_start":114,"line_end":114,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133214,"byte_end":133223,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"no_limits","qualname":"<Reader<R>>::no_limits","value":"fn no_limits<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disable all decoding limits.\n","sig":null,"attributes":[{"value":"/ Disable all decoding limits.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133170,"byte_end":133202,"line_start":119,"line_end":119,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133350,"byte_end":133356,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"limits","qualname":"<Reader<R>>::limits","value":"fn limits<'_>(&'_ mut Self, super::Limits)","parent":null,"children":[],"decl_id":null,"docs":" Set a custom set of decoding limits.\n","sig":null,"attributes":[{"value":"/ Set a custom set of decoding limits.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133298,"byte_end":133338,"line_start":124,"line_end":124,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133468,"byte_end":133478,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the reader.\n","sig":null,"attributes":[{"value":"/ Unwrap the reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133434,"byte_end":133456,"line_start":129,"line_end":129,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133961,"byte_end":133965,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<BufReader<File>>>::open","value":"fn open<P>(P) -> io::Result<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to read, format will be guessed from path.","sig":null,"attributes":[{"value":"/ Open a file to read, format will be guessed from path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133555,"byte_end":133613,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133618,"byte_end":133621,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This will not attempt any io operation on the opened file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133626,"byte_end":133688,"line_start":138,"line_end":138,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133693,"byte_end":133696,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ If you want to inspect the content for a better guess on the format, which does not depend","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133701,"byte_end":133795,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ on file extensions, follow this call with a call to [`with_guessed_format`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133800,"byte_end":133880,"line_start":141,"line_end":141,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133885,"byte_end":133888,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133893,"byte_end":133949,"line_start":143,"line_end":143,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135645,"byte_end":135664,"line_start":189,"line_end":189,"column_start":12,"column_end":31},"name":"with_guessed_format","qualname":"<Reader<R>>::with_guessed_format","value":"fn with_guessed_format(Self) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Make a format guess based on the content, replacing it on success.","sig":null,"attributes":[{"value":"/ Make a format guess based on the content, replacing it on success.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134371,"byte_end":134441,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134446,"byte_end":134449,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok` with the guess if no io error occurs. Additionally, replaces the current","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134454,"byte_end":134543,"line_start":163,"line_end":163,"column_start":5,"column_end":94}},{"value":"/ format if the guess was successful. If the guess was unable to determine a format then","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134548,"byte_end":134638,"line_start":164,"line_end":164,"column_start":5,"column_end":95}},{"value":"/ the current format of the reader is unchanged.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134643,"byte_end":134693,"line_start":165,"line_end":165,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134698,"byte_end":134701,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the underlying reader fails. The format is unchanged. The error is a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134706,"byte_end":134798,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/ `std::io::Error` and not `ImageError` since the only error case is an error when the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134803,"byte_end":134891,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/ underlying reader seeks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134896,"byte_end":134924,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134929,"byte_end":134932,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ When an error occurs, the reader may not have been properly reset and it is potentially","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134937,"byte_end":135028,"line_start":171,"line_end":171,"column_start":5,"column_end":96}},{"value":"/ hazardous to continue with more io.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135033,"byte_end":135072,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135077,"byte_end":135080,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135085,"byte_end":135097,"line_start":174,"line_end":174,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135102,"byte_end":135105,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This supplements the path based type deduction from [`open`](Reader::open) with content based deduction.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135110,"byte_end":135218,"line_start":176,"line_end":176,"column_start":5,"column_end":113}},{"value":"/ This is more common in Linux and UNIX operating systems and also helpful if the path can","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135223,"byte_end":135315,"line_start":177,"line_end":177,"column_start":5,"column_end":97}},{"value":"/ not be directly controlled.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135320,"byte_end":135351,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135356,"byte_end":135359,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135364,"byte_end":135377,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/ # use image::ImageError;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135382,"byte_end":135410,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/ # use image::io::Reader;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135415,"byte_end":135443,"line_start":182,"line_end":182,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135448,"byte_end":135491,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/ let image = Reader::open(\"image.unknown\")?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135496,"byte_end":135542,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/     .with_guessed_format()?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135547,"byte_end":135578,"line_start":185,"line_end":185,"column_start":5,"column_end":36}},{"value":"/     .decode()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135583,"byte_end":135602,"line_start":186,"line_end":186,"column_start":5,"column_end":24}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135607,"byte_end":135621,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":135626,"byte_end":135633,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":136632,"byte_end":136647,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"into_dimensions","qualname":"<Reader<R>>::into_dimensions","value":"fn into_dimensions(Self) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the image dimensions.","sig":null,"attributes":[{"value":"/ Read the image dimensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":136419,"byte_end":136449,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":136454,"byte_end":136457,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":136462,"byte_end":136537,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":136542,"byte_end":136545,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":136550,"byte_end":136620,"line_start":215,"line_end":215,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":137041,"byte_end":137047,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<R>>::decode","value":"fn decode(Self) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Read the image (replaces `load`).","sig":null,"attributes":[{"value":"/ Read the image (replaces `load`).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":136821,"byte_end":136858,"line_start":221,"line_end":221,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":136863,"byte_end":136866,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":136871,"byte_end":136946,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":136951,"byte_end":136954,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":136959,"byte_end":137029,"line_start":225,"line_end":225,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":6382},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112262,"byte_end":112274,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"LimitSupport","qualname":"::io::LimitSupport","value":"LimitSupport {  }","parent":null,"children":[{"krate":0,"index":6383}],"decl_id":null,"docs":" Set of supported strict limits for a decoder.\n","sig":null,"attributes":[{"value":"/ Set of supported strict limits for a decoder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112117,"byte_end":112166,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112212,"byte_end":112250,"line_start":14,"line_end":14,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112344,"byte_end":112351,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"default","qualname":"<LimitSupport as std::default::Default>::default","value":"fn default() -> LimitSupport","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6398},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113817,"byte_end":113823,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"Limits","qualname":"::io::Limits","value":"Limits { max_image_width, max_image_height, max_alloc }","parent":null,"children":[{"krate":0,"index":6399},{"krate":0,"index":6400},{"krate":0,"index":6401},{"krate":0,"index":6402}],"decl_id":null,"docs":" Resource limits for decoding.","sig":null,"attributes":[{"value":"/ Resource limits for decoding.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112447,"byte_end":112480,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112481,"byte_end":112484,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Limits can be either *strict* or *non-strict*. Non-strict limits are best-effort","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112485,"byte_end":112569,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/ limits where the library does not guarantee that limit will not be exceeded. Do note","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112570,"byte_end":112658,"line_start":30,"line_end":30,"column_start":1,"column_end":89}},{"value":"/ that it is still considered a bug if a non-strict limit is exceeded, however as","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112659,"byte_end":112742,"line_start":31,"line_end":31,"column_start":1,"column_end":84}},{"value":"/ some of the underlying decoders do not support not support such limits one cannot","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112743,"byte_end":112828,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"/ rely on these limits being supported. For stric limits the library makes a stronger","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112829,"byte_end":112916,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ guarantee that the limit will not be exceeded. Exceeding a strict limit is considered","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112917,"byte_end":113006,"line_start":34,"line_end":34,"column_start":1,"column_end":90}},{"value":"/ a critical bug. If a decoder cannot guarantee that it will uphold a strict limit it","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113007,"byte_end":113094,"line_start":35,"line_end":35,"column_start":1,"column_end":88}},{"value":"/ *must* fail with `image::error::LimitErrorKind::Unsupported`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113095,"byte_end":113160,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113161,"byte_end":113164,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Currently the only strict limits supported are the `max_image_width` and `max_image_height`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113165,"byte_end":113260,"line_start":38,"line_end":38,"column_start":1,"column_end":96}},{"value":"/ limits, however more will be added in the future. [`LimitSupport`] will default to support","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113261,"byte_end":113355,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ being false and decoders should enable support for the limits they support in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113356,"byte_end":113437,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/ [`ImageDecoder::set_limits`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113438,"byte_end":113471,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113472,"byte_end":113475,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The limit check should only ever fail if a limit will be exceeded or an unsupported strict","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113476,"byte_end":113570,"line_start":43,"line_end":43,"column_start":1,"column_end":95}},{"value":"/ limit is used.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113571,"byte_end":113589,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113590,"byte_end":113593,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`LimitSupport`]: ./struct.LimitSupport.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113594,"byte_end":113642,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ [`ImageDecoder::set_limits`]: ../trait.ImageDecoder.html#method.set_limits","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113643,"byte_end":113721,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113767,"byte_end":113805,"line_start":49,"line_end":49,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6399},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113922,"byte_end":113937,"line_start":52,"line_end":52,"column_start":9,"column_end":24},"name":"max_image_width","qualname":"::io::Limits::max_image_width","value":"std::option::Option<u32>","parent":{"krate":0,"index":6398},"children":[],"decl_id":null,"docs":" The maximum allowed image width. This limit is strict. The default is no limit.\n","sig":null,"attributes":[{"value":"/ The maximum allowed image width. This limit is strict. The default is no limit.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113830,"byte_end":113913,"line_start":51,"line_end":51,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":6400},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114049,"byte_end":114065,"line_start":54,"line_end":54,"column_start":9,"column_end":25},"name":"max_image_height","qualname":"::io::Limits::max_image_height","value":"std::option::Option<u32>","parent":{"krate":0,"index":6398},"children":[],"decl_id":null,"docs":" The maximum allowed image height. This limit is strict. The default is no limit.\n","sig":null,"attributes":[{"value":"/ The maximum allowed image height. This limit is strict. The default is no limit.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":113956,"byte_end":114040,"line_start":53,"line_end":53,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":6401},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114314,"byte_end":114323,"line_start":58,"line_end":58,"column_start":9,"column_end":18},"name":"max_alloc","qualname":"::io::Limits::max_alloc","value":"std::option::Option<u64>","parent":{"krate":0,"index":6398},"children":[],"decl_id":null,"docs":" The maximum allowed sum of allocations allocated by the decoder at any one time excluding\n allocator overhead. This limit is non-strict by default and some decoders may ignore it.\n The default is 512MiB.\n","sig":null,"attributes":[{"value":"/ The maximum allowed sum of allocations allocated by the decoder at any one time excluding","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114084,"byte_end":114177,"line_start":55,"line_end":55,"column_start":5,"column_end":98}},{"value":"/ allocator overhead. This limit is non-strict by default and some decoders may ignore it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114182,"byte_end":114274,"line_start":56,"line_end":56,"column_start":5,"column_end":97}},{"value":"/ The default is 512MiB.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114279,"byte_end":114305,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114399,"byte_end":114406,"line_start":63,"line_end":63,"column_start":8,"column_end":15},"name":"default","qualname":"<Limits as std::default::Default>::default","value":"fn default() -> Limits","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114662,"byte_end":114671,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"no_limits","qualname":"<Limits>::no_limits","value":"fn no_limits() -> Limits","parent":null,"children":[],"decl_id":null,"docs":" Disable all limits.\n","sig":null,"attributes":[{"value":"/ Disable all limits.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114627,"byte_end":114650,"line_start":74,"line_end":74,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114945,"byte_end":114958,"line_start":85,"line_end":85,"column_start":12,"column_end":25},"name":"check_support","qualname":"<Limits>::check_support","value":"fn check_support<'_, '_>(&'_ Self, &'_ LimitSupport) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function checks that all currently set strict limits are supported.\n","sig":null,"attributes":[{"value":"/ This function checks that all currently set strict limits are supported.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114857,"byte_end":114933,"line_start":84,"line_end":84,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":115170,"byte_end":115186,"line_start":91,"line_end":91,"column_start":12,"column_end":28},"name":"check_dimensions","qualname":"<Limits>::check_dimensions","value":"fn check_dimensions<'_>(&'_ Self, u32, u32) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function checks the `max_image_width` and `max_image_height` limits given\n the image width and height.\n","sig":null,"attributes":[{"value":"/ This function checks the `max_image_width` and `max_image_height` limits given","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":115040,"byte_end":115122,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ the image width and height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":115127,"byte_end":115158,"line_start":90,"line_end":90,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":115966,"byte_end":115973,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Limits>::reserve","value":"fn reserve<'_>(&'_ mut Self, u64) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function checks that the current limit allows for reserving the set amount\n of bytes, it then reduces the limit accordingly.\n","sig":null,"attributes":[{"value":"/ This function checks that the current limit allows for reserving the set amount","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":115814,"byte_end":115897,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ of bytes, it then reduces the limit accordingly.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":115902,"byte_end":115954,"line_start":112,"line_end":112,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":116460,"byte_end":116473,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"reserve_usize","qualname":"<Limits>::reserve_usize","value":"fn reserve_usize<'_>(&'_ mut Self, usize) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function acts identically to [`reserve`], but takes a `usize` for convenience.\n","sig":null,"attributes":[{"value":"/ This function acts identically to [`reserve`], but takes a `usize` for convenience.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":116361,"byte_end":116448,"line_start":127,"line_end":127,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":117157,"byte_end":117161,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"free","qualname":"<Limits>::free","value":"fn free<'_>(&'_ mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" This function increases the `max_alloc` limit with amount. Should only be used\n together with [`reserve`].","sig":null,"attributes":[{"value":"/ This function increases the `max_alloc` limit with amount. Should only be used","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":116983,"byte_end":117065,"line_start":143,"line_end":143,"column_start":5,"column_end":87}},{"value":"/ together with [`reserve`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":117070,"byte_end":117100,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":117105,"byte_end":117108,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [`reserve`]: #method.reserve","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":117113,"byte_end":117145,"line_start":146,"line_end":146,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":117423,"byte_end":117433,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"free_usize","qualname":"<Limits>::free_usize","value":"fn free_usize<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" This function acts identically to [`free`], but takes a `usize` for convenience.\n","sig":null,"attributes":[{"value":"/ This function acts identically to [`free`], but takes a `usize` for convenience.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":117327,"byte_end":117411,"line_start":153,"line_end":153,"column_start":5,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":6417},{"krate":0,"index":6422},{"krate":0,"index":6425},{"krate":0,"index":6428},{"krate":0,"index":6435},{"krate":0,"index":6437},{"krate":0,"index":6438},{"krate":0,"index":6440},{"krate":0,"index":6441},{"krate":0,"index":6444},{"krate":0,"index":6445},{"krate":0,"index":6447},{"krate":0,"index":6450},{"krate":0,"index":6454},{"krate":0,"index":6456},{"krate":0,"index":6457},{"krate":0,"index":6459},{"krate":0,"index":6460},{"krate":0,"index":6463},{"krate":0,"index":6464},{"krate":0,"index":6466},{"krate":0,"index":6468},{"krate":0,"index":1000},{"krate":0,"index":1023},{"krate":0,"index":1027},{"krate":0,"index":1069},{"krate":0,"index":6470},{"krate":0,"index":6475},{"krate":0,"index":6479},{"krate":0,"index":6483},{"krate":0,"index":6488},{"krate":0,"index":6492},{"krate":0,"index":6496},{"krate":0,"index":6505},{"krate":0,"index":6507},{"krate":0,"index":6508},{"krate":0,"index":6510},{"krate":0,"index":6511},{"krate":0,"index":6514},{"krate":0,"index":6515},{"krate":0,"index":6517},{"krate":0,"index":6520},{"krate":0,"index":6531},{"krate":0,"index":6533},{"krate":0,"index":6534},{"krate":0,"index":6536},{"krate":0,"index":6537},{"krate":0,"index":6539},{"krate":0,"index":6540},{"krate":0,"index":6542},{"krate":0,"index":1074},{"krate":0,"index":1087},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1106},{"krate":0,"index":1110},{"krate":0,"index":1120},{"krate":0,"index":1130},{"krate":0,"index":1136},{"krate":0,"index":1141},{"krate":0,"index":1143},{"krate":0,"index":1144}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[{"value":"/ Image representations for ffi.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137533,"byte_end":137567,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137568,"byte_end":137571,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137572,"byte_end":137583,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137584,"byte_end":137587,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Imagine you want to offer a very simple ffi interface: The caller provides an image buffer and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137588,"byte_end":137686,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ your program creates a thumbnail from it and dumps that image as `png`. This module is designed","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137687,"byte_end":137786,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ to help you transition from raw memory data to Rust representation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137787,"byte_end":137858,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137859,"byte_end":137862,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137863,"byte_end":137876,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/ use std::ptr;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137877,"byte_end":137894,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/ use std::slice;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137895,"byte_end":137914,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"/ use image::Rgb;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137915,"byte_end":137934,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/ use image::flat::{FlatSamples, SampleLayout};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137935,"byte_end":137984,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ use image::imageops::thumbnail;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":137985,"byte_end":138020,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138021,"byte_end":138024,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ #[no_mangle]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138025,"byte_end":138041,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/ pub extern \"C\" fn store_rgb8_compressed(","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138042,"byte_end":138086,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"/     data: *const u8, len: usize,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138087,"byte_end":138123,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     layout: *const SampleLayout","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138124,"byte_end":138159,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/ )","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138160,"byte_end":138165,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/     -> bool","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138166,"byte_end":138181,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138182,"byte_end":138187,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/     let samples = unsafe { slice::from_raw_parts(data, len) };","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138188,"byte_end":138254,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/     let layout = unsafe { ptr::read(layout) };","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138255,"byte_end":138305,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138306,"byte_end":138309,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     let buffer = FlatSamples {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138310,"byte_end":138344,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/         samples,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138345,"byte_end":138365,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/         layout,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138366,"byte_end":138385,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/         color_hint: None,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138386,"byte_end":138415,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/     };","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138416,"byte_end":138426,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138427,"byte_end":138430,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     let view = match buffer.as_view::<Rgb<u8>>() {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138431,"byte_end":138485,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/         Err(_) => return false, // Invalid layout.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138486,"byte_end":138540,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/         Ok(view) => view,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138541,"byte_end":138570,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/     };","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138571,"byte_end":138581,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138582,"byte_end":138585,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     thumbnail(&view, 64, 64)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138586,"byte_end":138618,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/         .save(\"output.png\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138619,"byte_end":138650,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/         .map(|_| true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138651,"byte_end":138677,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/         .unwrap_or_else(|_| false)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138678,"byte_end":138716,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138717,"byte_end":138722,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138723,"byte_end":138730,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":138731,"byte_end":138734,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":6417},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140745,"byte_end":140756,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":6419},{"krate":0,"index":6420},{"krate":0,"index":6421}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[{"value":"/ A flat buffer over a (multi channel) image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":139162,"byte_end":139209,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":139210,"byte_end":139213,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ In contrast to `ImageBuffer`, this representation of a sample collection is much more lenient","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":139214,"byte_end":139311,"line_start":61,"line_end":61,"column_start":1,"column_end":98}},{"value":"/ in the layout thereof. It also allows grouping by color planes instead of by pixel as long as","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":139312,"byte_end":139409,"line_start":62,"line_end":62,"column_start":1,"column_end":98}},{"value":"/ the strides of each extent are constant. This struct itself has no invariants on the strides","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":139410,"byte_end":139506,"line_start":63,"line_end":63,"column_start":1,"column_end":97}},{"value":"/ but not every possible configuration can be interpreted as a [`GenericImageView`] or","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":139507,"byte_end":139595,"line_start":64,"line_end":64,"column_start":1,"column_end":89}},{"value":"/ [`GenericImage`]. The methods [`as_view`] and [`as_view_mut`] construct the actual implementors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":139596,"byte_end":139695,"line_start":65,"line_end":65,"column_start":1,"column_end":100}},{"value":"/ of these traits and perform necessary checks. To manually perform this and other layout checks","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":139696,"byte_end":139794,"line_start":66,"line_end":66,"column_start":1,"column_end":99}},{"value":"/ use [`is_normal`] or [`has_aliased_samples`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":139795,"byte_end":139844,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":139845,"byte_end":139848,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Instances can be constructed not only by hand. The buffer instances returned by library","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":139849,"byte_end":139940,"line_start":69,"line_end":69,"column_start":1,"column_end":92}},{"value":"/ functions such as [`ImageBuffer::as_flat_samples`] guarantee that the conversion to a generic","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":139941,"byte_end":140038,"line_start":70,"line_end":70,"column_start":1,"column_end":98}},{"value":"/ image or generic view succeeds. A very different constructor is [`with_monocolor`]. It uses a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140039,"byte_end":140136,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/ single pixel as the backing storage for an arbitrarily sized read-only raster by mapping each","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140137,"byte_end":140234,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/ pixel to the same samples by setting some strides to `0`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140235,"byte_end":140296,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140297,"byte_end":140300,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: ../trait.GenericImage.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140301,"byte_end":140349,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/ [`GenericImageView`]: ../trait.GenericImageView.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140350,"byte_end":140406,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ [`ImageBuffer::as_flat_samples`]: ../struct.ImageBuffer.html#method.as_flat_samples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140407,"byte_end":140494,"line_start":77,"line_end":77,"column_start":1,"column_end":88}},{"value":"/ [`is_normal`]: #method.is_normal","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140495,"byte_end":140531,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/ [`has_aliased_samples`]: #method.has_aliased_samples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140532,"byte_end":140588,"line_start":79,"line_end":79,"column_start":1,"column_end":57}},{"value":"/ [`as_view`]: #method.as_view","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140589,"byte_end":140621,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ [`as_view_mut`]: #method.as_view_mut","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140622,"byte_end":140662,"line_start":81,"line_end":81,"column_start":1,"column_end":41}},{"value":"/ [`with_monocolor`]: #method.with_monocolor","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140663,"byte_end":140709,"line_start":82,"line_end":82,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6419},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140834,"byte_end":140841,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":6417},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[{"value":"/ Underlying linear container holding sample values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140771,"byte_end":140825,"line_start":85,"line_end":85,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6420},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140925,"byte_end":140931,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":6417},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[{"value":"/ A `repr(C)` description of the layout of buffer samples.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140856,"byte_end":140916,"line_start":88,"line_end":88,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6421},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141386,"byte_end":141396,"line_start":97,"line_end":97,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":6417},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[{"value":"/ Supplementary color information.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140952,"byte_end":140988,"line_start":91,"line_end":91,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":140993,"byte_end":140996,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ You may keep this as `None` in most cases. This is NOT checked in `View` or other","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141001,"byte_end":141086,"line_start":93,"line_end":93,"column_start":5,"column_end":90}},{"value":"/ converters. It is intended mainly as a way for types that convert to this buffer type to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141091,"byte_end":141183,"line_start":94,"line_end":94,"column_start":5,"column_end":97}},{"value":"/ attach their otherwise static color information. A dynamic image representation could","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141188,"byte_end":141277,"line_start":95,"line_end":95,"column_start":5,"column_end":94}},{"value":"/ however use this to resolve representational ambiguities such as the order of RGB channels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141282,"byte_end":141377,"line_start":96,"line_end":96,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":6428},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141546,"byte_end":141558,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":6429},{"krate":0,"index":6430},{"krate":0,"index":6431},{"krate":0,"index":6432},{"krate":0,"index":6433},{"krate":0,"index":6434}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"/ A ffi compatible description of a sample buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141420,"byte_end":141472,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141473,"byte_end":141483,"line_start":101,"line_end":101,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":6429},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141642,"byte_end":141650,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":6428},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[{"value":"/ The number of channels in the color representation of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141565,"byte_end":141633,"line_start":104,"line_end":104,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":6430},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141736,"byte_end":141750,"line_start":108,"line_end":108,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":6428},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the sample in the next channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141661,"byte_end":141727,"line_start":107,"line_end":107,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":6431},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141812,"byte_end":141817,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":6428},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[{"value":"/ The width of the represented image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141764,"byte_end":141803,"line_start":110,"line_end":110,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6432},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141904,"byte_end":141916,"line_start":114,"line_end":114,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":6428},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in x-direction.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141829,"byte_end":141895,"line_start":113,"line_end":113,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":6433},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141979,"byte_end":141985,"line_start":117,"line_end":117,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":6428},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[{"value":"/ The height of the represented image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141930,"byte_end":141970,"line_start":116,"line_end":116,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6434},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142072,"byte_end":142085,"line_start":120,"line_end":120,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":6428},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in y-direction.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":141997,"byte_end":142063,"line_start":119,"line_end":119,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":143061,"byte_end":143077,"line_start":144,"line_end":144,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"fn row_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a row-major image packed in all directions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142266,"byte_end":142322,"line_start":128,"line_end":128,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142327,"byte_end":142330,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::RowMajorPacked`. It can therefore be converted to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142335,"byte_end":142430,"line_start":130,"line_end":130,"column_start":5,"column_end":100}},{"value":"/ safely to an `ImageBuffer` with a large enough underlying buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142435,"byte_end":142504,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142509,"byte_end":142512,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142517,"byte_end":142524,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142529,"byte_end":142579,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::row_major_packed(3, 640, 480);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142584,"byte_end":142645,"line_start":135,"line_end":135,"column_start":5,"column_end":66}},{"value":"/ assert!(layout.is_normal(NormalForm::RowMajorPacked));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142650,"byte_end":142708,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142713,"byte_end":142720,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142725,"byte_end":142728,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142733,"byte_end":142745,"line_start":139,"line_end":139,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142750,"byte_end":142753,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142758,"byte_end":142853,"line_start":141,"line_end":141,"column_start":5,"column_end":100}},{"value":"/ in the `height` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142858,"byte_end":142949,"line_start":142,"line_end":142,"column_start":5,"column_end":96}},{"value":"/ where it can surely accommodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142954,"byte_end":143049,"line_start":143,"line_end":143,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":144339,"byte_end":144358,"line_start":174,"line_end":174,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"fn column_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a column-major image packed in all directions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":143525,"byte_end":143584,"line_start":158,"line_end":158,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":143589,"byte_end":143592,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::ColumnMajorPacked`. This is not particularly","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":143597,"byte_end":143687,"line_start":160,"line_end":160,"column_start":5,"column_end":95}},{"value":"/ useful for conversion but can be used to describe such a buffer without pitfalls.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":143692,"byte_end":143777,"line_start":161,"line_end":161,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":143782,"byte_end":143785,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":143790,"byte_end":143797,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":143802,"byte_end":143852,"line_start":164,"line_end":164,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::column_major_packed(3, 640, 480);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":143857,"byte_end":143921,"line_start":165,"line_end":165,"column_start":5,"column_end":69}},{"value":"/ assert!(layout.is_normal(NormalForm::ColumnMajorPacked));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":143926,"byte_end":143987,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":143992,"byte_end":143999,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":144004,"byte_end":144007,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":144012,"byte_end":144024,"line_start":169,"line_end":169,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":144029,"byte_end":144032,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":144037,"byte_end":144132,"line_start":171,"line_end":171,"column_start":5,"column_end":100}},{"value":"/ in the `width` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":144137,"byte_end":144227,"line_start":172,"line_end":172,"column_start":5,"column_end":95}},{"value":"/ where it can surely accommodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":144232,"byte_end":144327,"line_start":173,"line_end":173,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":144984,"byte_end":144995,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"fn strides_cwh<'_>(&'_ Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":144809,"byte_end":144868,"line_start":188,"line_end":188,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":144873,"byte_end":144876,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":144881,"byte_end":144952,"line_start":190,"line_end":190,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":144957,"byte_end":144972,"line_start":191,"line_end":191,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145312,"byte_end":145319,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"fn extents<'_>(&'_ Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145110,"byte_end":145161,"line_start":196,"line_end":196,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145166,"byte_end":145169,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145174,"byte_end":145267,"line_start":198,"line_end":198,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145272,"byte_end":145300,"line_start":199,"line_end":199,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145740,"byte_end":145746,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"fn bounds<'_>(&'_ Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145488,"byte_end":145542,"line_start":208,"line_end":208,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145547,"byte_end":145550,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145555,"byte_end":145645,"line_start":210,"line_end":210,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145650,"byte_end":145728,"line_start":211,"line_end":211,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147899,"byte_end":147909,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"fn min_length<'_>(&'_ Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145834,"byte_end":145924,"line_start":216,"line_end":216,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145929,"byte_end":145932,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":145937,"byte_end":146032,"line_start":218,"line_end":218,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146037,"byte_end":146127,"line_start":219,"line_end":219,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146132,"byte_end":146223,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146228,"byte_end":146285,"line_start":221,"line_end":221,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146290,"byte_end":146293,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146298,"byte_end":146315,"line_start":223,"line_end":223,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146320,"byte_end":146323,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146328,"byte_end":146412,"line_start":225,"line_end":225,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146417,"byte_end":146508,"line_start":226,"line_end":226,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146513,"byte_end":146516,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146521,"byte_end":146546,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146551,"byte_end":146554,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146559,"byte_end":146613,"line_start":230,"line_end":230,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146618,"byte_end":146642,"line_start":231,"line_end":231,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146647,"byte_end":146664,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146669,"byte_end":146694,"line_start":233,"line_end":233,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146699,"byte_end":146717,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146722,"byte_end":146725,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146730,"byte_end":146741,"line_start":236,"line_end":236,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146746,"byte_end":146769,"line_start":237,"line_end":237,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146774,"byte_end":146793,"line_start":238,"line_end":238,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146798,"byte_end":146840,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146845,"byte_end":146852,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146857,"byte_end":146860,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146865,"byte_end":146957,"line_start":242,"line_end":242,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":146962,"byte_end":147052,"line_start":243,"line_end":243,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147057,"byte_end":147060,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147065,"byte_end":147093,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147098,"byte_end":147101,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147106,"byte_end":147198,"line_start":247,"line_end":247,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147203,"byte_end":147297,"line_start":248,"line_end":248,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147302,"byte_end":147357,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147362,"byte_end":147365,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147370,"byte_end":147394,"line_start":251,"line_end":251,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147399,"byte_end":147416,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147421,"byte_end":147446,"line_start":253,"line_end":253,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147451,"byte_end":147469,"line_start":254,"line_end":254,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147474,"byte_end":147477,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147482,"byte_end":147493,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147498,"byte_end":147514,"line_start":257,"line_end":257,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147519,"byte_end":147538,"line_start":258,"line_end":258,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147543,"byte_end":147566,"line_start":259,"line_end":259,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147571,"byte_end":147600,"line_start":260,"line_end":260,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147605,"byte_end":147640,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147645,"byte_end":147652,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147657,"byte_end":147660,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147665,"byte_end":147759,"line_start":264,"line_end":264,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147764,"byte_end":147857,"line_start":265,"line_end":265,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":147862,"byte_end":147887,"line_start":266,"line_end":266,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":148242,"byte_end":148246,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"fn fits<'_>(&'_ Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":148176,"byte_end":148230,"line_start":276,"line_end":276,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":149366,"byte_end":149385,"line_start":303,"line_end":303,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"fn has_aliased_samples<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":149016,"byte_end":149065,"line_start":298,"line_end":298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":149070,"byte_end":149073,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":149078,"byte_end":149171,"line_start":300,"line_end":300,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":149176,"byte_end":149270,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":149275,"byte_end":149354,"line_start":302,"line_end":302,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":150630,"byte_end":150639,"line_start":333,"line_end":333,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"fn is_normal<'_>(&'_ Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":150120,"byte_end":150185,"line_start":326,"line_end":326,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":150190,"byte_end":150193,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":150198,"byte_end":150291,"line_start":328,"line_end":328,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":150296,"byte_end":150391,"line_start":329,"line_end":329,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":150396,"byte_end":150488,"line_start":330,"line_end":330,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":150493,"byte_end":150587,"line_start":331,"line_end":331,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":150592,"byte_end":150618,"line_start":332,"line_end":332,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":152340,"byte_end":152349,"line_start":388,"line_end":388,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"fn in_bounds<'_>(&'_ Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":151998,"byte_end":152059,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":152064,"byte_end":152067,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":152072,"byte_end":152161,"line_start":385,"line_end":385,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":152166,"byte_end":152260,"line_start":386,"line_end":386,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this property of course follows.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":152265,"byte_end":152328,"line_start":387,"line_end":387,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":152623,"byte_end":152628,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"fn index<'_>(&'_ Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":152476,"byte_end":152521,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":152526,"byte_end":152529,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":152534,"byte_end":152611,"line_start":394,"line_end":394,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":153223,"byte_end":153244,"line_start":408,"line_end":408,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"fn index_ignoring_bounds<'_>(&'_ Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (channel, x, y).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":152852,"byte_end":152911,"line_start":403,"line_end":403,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":152916,"byte_end":152919,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":152924,"byte_end":153013,"line_start":405,"line_end":405,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":153018,"byte_end":153112,"line_start":406,"line_end":406,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":153117,"byte_end":153211,"line_start":407,"line_end":407,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":154175,"byte_end":154190,"line_start":429,"line_end":429,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"fn in_bounds_index<'_>(&'_ Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":153874,"byte_end":153914,"line_start":424,"line_end":424,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":153919,"byte_end":153922,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":153927,"byte_end":154019,"line_start":426,"line_end":426,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":154024,"byte_end":154119,"line_start":427,"line_end":427,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":154124,"byte_end":154163,"line_start":428,"line_end":428,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":154717,"byte_end":154726,"line_start":439,"line_end":439,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"fn shrink_to<'_>(&'_ mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":154392,"byte_end":154457,"line_start":434,"line_end":434,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":154462,"byte_end":154465,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":154470,"byte_end":154558,"line_start":436,"line_end":436,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":154563,"byte_end":154658,"line_start":437,"line_end":437,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":154663,"byte_end":154705,"line_start":438,"line_end":438,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155401,"byte_end":155412,"line_start":466,"line_end":466,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"fn strides_cwh<'_>(&'_ Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155226,"byte_end":155285,"line_start":462,"line_end":462,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155290,"byte_end":155293,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155298,"byte_end":155369,"line_start":464,"line_end":464,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155374,"byte_end":155389,"line_start":465,"line_end":465,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155694,"byte_end":155701,"line_start":474,"line_end":474,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"fn extents<'_>(&'_ Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155492,"byte_end":155543,"line_start":470,"line_end":470,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155548,"byte_end":155551,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155556,"byte_end":155649,"line_start":472,"line_end":472,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155654,"byte_end":155682,"line_start":473,"line_end":473,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":156029,"byte_end":156035,"line_start":482,"line_end":482,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"fn bounds<'_>(&'_ Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155777,"byte_end":155831,"line_start":478,"line_end":478,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155836,"byte_end":155839,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155844,"byte_end":155934,"line_start":480,"line_end":480,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155939,"byte_end":156017,"line_start":481,"line_end":481,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":156149,"byte_end":156155,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"fn as_ref<T, '_>(&'_ Self) -> FlatSamples<&'_ [T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[{"value":"/ Get a reference based version.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":156103,"byte_end":156137,"line_start":486,"line_end":486,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":156446,"byte_end":156452,"line_start":499,"line_end":499,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"fn as_mut<T, '_>(&'_ mut Self) -> FlatSamples<&'_ mut [T]> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference based version.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":156392,"byte_end":156434,"line_start":498,"line_end":498,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":156748,"byte_end":156754,"line_start":511,"line_end":511,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"fn to_vec<T, '_>(&'_ Self) -> FlatSamples<Vec<T>> where T: Clone,\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[{"value":"/ Copy the data into an owned vector.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":156697,"byte_end":156736,"line_start":510,"line_end":510,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158040,"byte_end":158050,"line_start":544,"line_end":544,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"fn get_sample<T, '_>(&'_ Self, u8, u32, u32) -> Option<&'_ T> where\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a reference to a single sample.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157020,"byte_end":157059,"line_start":523,"line_end":523,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157064,"byte_end":157067,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::Index` but guarantees to properly","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157072,"byte_end":157167,"line_start":525,"line_end":525,"column_start":5,"column_end":100}},{"value":"/ check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157172,"byte_end":157250,"line_start":526,"line_end":526,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157255,"byte_end":157258,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157263,"byte_end":157270,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157275,"byte_end":157303,"line_start":529,"line_end":529,"column_start":5,"column_end":33}},{"value":"/ let flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157308,"byte_end":157367,"line_start":530,"line_end":530,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157372,"byte_end":157375,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ // Get the blue channel at (10, 10).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157380,"byte_end":157420,"line_start":532,"line_end":532,"column_start":5,"column_end":45}},{"value":"/ assert!(flat.get_sample(1, 10, 10).is_some());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157425,"byte_end":157475,"line_start":533,"line_end":533,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157480,"byte_end":157483,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157488,"byte_end":157521,"line_start":535,"line_end":535,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_sample(3, 10, 10).is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157526,"byte_end":157576,"line_start":536,"line_end":536,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157581,"byte_end":157588,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157593,"byte_end":157596,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157601,"byte_end":157691,"line_start":539,"line_end":539,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157696,"byte_end":157777,"line_start":540,"line_end":540,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157782,"byte_end":157877,"line_start":541,"line_end":541,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157882,"byte_end":157969,"line_start":542,"line_end":542,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":157974,"byte_end":158028,"line_start":543,"line_end":543,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159663,"byte_end":159677,"line_start":578,"line_end":578,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"fn get_mut_sample<T, '_>(&'_ mut Self, u8, u32, u32) -> Option<&'_ mut T>\nwhere Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a single sample.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158253,"byte_end":158300,"line_start":552,"line_end":552,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158305,"byte_end":158308,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::IndexMut` but guarantees to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158313,"byte_end":158402,"line_start":554,"line_end":554,"column_start":5,"column_end":94}},{"value":"/ properly check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158407,"byte_end":158494,"line_start":555,"line_end":555,"column_start":5,"column_end":92}},{"value":"/ Contrary to conversion to `ViewMut`, this does not require that samples are packed since it","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158499,"byte_end":158594,"line_start":556,"line_end":556,"column_start":5,"column_end":100}},{"value":"/ does not need to convert samples to a color representation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158599,"byte_end":158662,"line_start":557,"line_end":557,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158667,"byte_end":158670,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158675,"byte_end":158769,"line_start":559,"line_end":559,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158774,"byte_end":158843,"line_start":560,"line_end":560,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158848,"byte_end":158851,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158856,"byte_end":158863,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158868,"byte_end":158896,"line_start":563,"line_end":563,"column_start":5,"column_end":33}},{"value":"/ let mut flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158901,"byte_end":158964,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158969,"byte_end":158972,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ // Assign some new color to the blue channel at (10, 10).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":158977,"byte_end":159038,"line_start":566,"line_end":566,"column_start":5,"column_end":66}},{"value":"/ *flat.get_mut_sample(1, 10, 10).unwrap() = 255;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159043,"byte_end":159094,"line_start":567,"line_end":567,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159099,"byte_end":159102,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159107,"byte_end":159140,"line_start":569,"line_end":569,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_mut_sample(3, 10, 10).is_none());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159145,"byte_end":159199,"line_start":570,"line_end":570,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159204,"byte_end":159211,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159216,"byte_end":159219,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159224,"byte_end":159314,"line_start":573,"line_end":573,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159319,"byte_end":159400,"line_start":574,"line_end":574,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159405,"byte_end":159500,"line_start":575,"line_end":575,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159505,"byte_end":159592,"line_start":576,"line_end":576,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159597,"byte_end":159651,"line_start":577,"line_end":577,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":160345,"byte_end":160352,"line_start":594,"line_end":594,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"fn as_view<P, '_>(&'_ Self) -> Result<View<&'_ [P::Subpixel], P>, Error> where\nP: PixelWithColorType, Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[{"value":"/ View this buffer as an image over some type of pixel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159933,"byte_end":159990,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":159995,"byte_end":159998,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":160003,"byte_end":160093,"line_start":590,"line_end":590,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":160098,"byte_end":160192,"line_start":591,"line_end":591,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":160197,"byte_end":160291,"line_start":592,"line_end":592,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":160296,"byte_end":160333,"line_start":593,"line_end":593,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161956,"byte_end":161980,"line_start":633,"line_end":633,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"fn as_view_with_mut_samples<P, '_>(&'_ mut Self)\n-> Result<View<&'_ mut [P::Subpixel], P>, Error> where P: PixelWithColorType,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[{"value":"/ View this buffer but keep mutability at a sample level.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":160991,"byte_end":161050,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161055,"byte_end":161058,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ This is similar to `as_view` but subtly different from `as_view_mut`. The resulting type","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161063,"byte_end":161155,"line_start":620,"line_end":620,"column_start":5,"column_end":97}},{"value":"/ can be used as a `GenericImage` with the same prior invariants needed as for `as_view`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161160,"byte_end":161251,"line_start":621,"line_end":621,"column_start":5,"column_end":96}},{"value":"/ It can not be used as a mutable `GenericImage` but does not need channels to be packed in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161256,"byte_end":161349,"line_start":622,"line_end":622,"column_start":5,"column_end":98}},{"value":"/ their pixel representation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161354,"byte_end":161385,"line_start":623,"line_end":623,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161390,"byte_end":161393,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161398,"byte_end":161488,"line_start":625,"line_end":625,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161493,"byte_end":161587,"line_start":626,"line_end":626,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161592,"byte_end":161686,"line_start":627,"line_end":627,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161691,"byte_end":161728,"line_start":628,"line_end":628,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161733,"byte_end":161736,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161741,"byte_end":161835,"line_start":630,"line_end":630,"column_start":5,"column_end":99}},{"value":"/ for one sample can in fact modify other samples as well. Sometimes exactly this is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161840,"byte_end":161926,"line_start":631,"line_end":631,"column_start":5,"column_end":91}},{"value":"/ intended.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":161931,"byte_end":161944,"line_start":632,"line_end":632,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":163370,"byte_end":163381,"line_start":668,"line_end":668,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"fn as_view_mut<P, '_>(&'_ mut Self)\n-> Result<ViewMut<&'_ mut [P::Subpixel], P>, Error> where\nP: PixelWithColorType, Buffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[{"value":"/ Interpret this buffer as a mutable image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":162627,"byte_end":162672,"line_start":657,"line_end":657,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":162677,"byte_end":162680,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ To succeed, the pixels in this buffer may not alias each other and the samples of each","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":162685,"byte_end":162775,"line_start":659,"line_end":659,"column_start":5,"column_end":95}},{"value":"/ pixel must be packed (i.e. `channel_stride` is `1`). The number of channels must be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":162780,"byte_end":162867,"line_start":660,"line_end":660,"column_start":5,"column_end":92}},{"value":"/ consistent with the channel count expected by the pixel format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":162872,"byte_end":162939,"line_start":661,"line_end":661,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":162944,"byte_end":162947,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This is similar to an `ImageBuffer` except it is a temporary view that is not normalized as","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":162952,"byte_end":163047,"line_start":663,"line_end":663,"column_start":5,"column_end":100}},{"value":"/ strongly. To get an owning version, consider copying the data into an `ImageBuffer`. This","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":163052,"byte_end":163145,"line_start":664,"line_end":664,"column_start":5,"column_end":98}},{"value":"/ provides many more operations, is possibly faster (if not you may want to open an issue) is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":163150,"byte_end":163245,"line_start":665,"line_end":665,"column_start":5,"column_end":100}},{"value":"/ generally polished. You can also try to convert this buffer inline, see","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":163250,"byte_end":163325,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ `ImageBuffer::from_raw`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":163330,"byte_end":163358,"line_start":667,"line_end":667,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164406,"byte_end":164414,"line_start":700,"line_end":700,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"fn as_slice<T, '_>(&'_ Self) -> &'_ [T] where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164182,"byte_end":164214,"line_start":696,"line_end":696,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164219,"byte_end":164222,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164227,"byte_end":164319,"line_start":698,"line_end":698,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164324,"byte_end":164394,"line_start":699,"line_end":699,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164742,"byte_end":164754,"line_start":711,"line_end":711,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"fn as_mut_slice<T, '_>(&'_ mut Self) -> &'_ mut [T] where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164518,"byte_end":164550,"line_start":707,"line_end":707,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164555,"byte_end":164558,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164563,"byte_end":164655,"line_start":709,"line_end":709,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164660,"byte_end":164730,"line_start":710,"line_end":710,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":165202,"byte_end":165213,"line_start":723,"line_end":723,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"fn image_slice<T, '_>(&'_ Self) -> Option<&'_ [T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164866,"byte_end":164928,"line_start":718,"line_end":718,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164933,"byte_end":164936,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This may fail when the coordinates in this image are either out-of-bounds of the underlying","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":164941,"byte_end":165036,"line_start":720,"line_end":720,"column_start":5,"column_end":100}},{"value":"/ buffer or can not be represented. Note that the slice may have holes that do not correspond","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":165041,"byte_end":165136,"line_start":721,"line_end":721,"column_start":5,"column_end":100}},{"value":"/ to any sample in the image represented by it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":165141,"byte_end":165190,"line_start":722,"line_end":722,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":165648,"byte_end":165663,"line_start":741,"line_end":741,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"fn image_mut_slice<T, '_>(&'_ mut Self) -> Option<&'_ mut [T]> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Mutable portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":165577,"byte_end":165636,"line_start":740,"line_end":740,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":166335,"byte_end":166350,"line_start":763,"line_end":763,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"fn try_into_buffer<P>(Self) -> Result<ImageBuffer<P, Buffer>, (Error, Self)>\nwhere P: PixelWithColorType + 'static, P::Subpixel: 'static,\nBuffer: Deref<Target = [P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[{"value":"/ Move the data into an image buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":166039,"byte_end":166078,"line_start":758,"line_end":758,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":166083,"byte_end":166086,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ This does **not** convert the sample layout. The buffer needs to be in packed row-major form","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":166091,"byte_end":166187,"line_start":760,"line_end":760,"column_start":5,"column_end":101}},{"value":"/ before calling this function. In case of an error, returns the buffer again so that it does","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":166192,"byte_end":166287,"line_start":761,"line_end":761,"column_start":5,"column_end":100}},{"value":"/ not release any allocation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":166292,"byte_end":166323,"line_start":762,"line_end":762,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169270,"byte_end":169280,"line_start":840,"line_end":840,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"fn min_length<'_>(&'_ Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167205,"byte_end":167295,"line_start":789,"line_end":789,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167300,"byte_end":167303,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167308,"byte_end":167403,"line_start":791,"line_end":791,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167408,"byte_end":167498,"line_start":792,"line_end":792,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167503,"byte_end":167594,"line_start":793,"line_end":793,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167599,"byte_end":167656,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167661,"byte_end":167664,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167669,"byte_end":167686,"line_start":796,"line_end":796,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167691,"byte_end":167694,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167699,"byte_end":167783,"line_start":798,"line_end":798,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167788,"byte_end":167879,"line_start":799,"line_end":799,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167884,"byte_end":167887,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167892,"byte_end":167917,"line_start":801,"line_end":801,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167922,"byte_end":167925,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167930,"byte_end":167984,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":167989,"byte_end":168013,"line_start":804,"line_end":804,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168018,"byte_end":168035,"line_start":805,"line_end":805,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168040,"byte_end":168065,"line_start":806,"line_end":806,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168070,"byte_end":168088,"line_start":807,"line_end":807,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168093,"byte_end":168096,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168101,"byte_end":168112,"line_start":809,"line_end":809,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168117,"byte_end":168140,"line_start":810,"line_end":810,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168145,"byte_end":168164,"line_start":811,"line_end":811,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168169,"byte_end":168211,"line_start":812,"line_end":812,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168216,"byte_end":168223,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168228,"byte_end":168231,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168236,"byte_end":168328,"line_start":815,"line_end":815,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168333,"byte_end":168423,"line_start":816,"line_end":816,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168428,"byte_end":168431,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168436,"byte_end":168464,"line_start":818,"line_end":818,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168469,"byte_end":168472,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168477,"byte_end":168569,"line_start":820,"line_end":820,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168574,"byte_end":168668,"line_start":821,"line_end":821,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168673,"byte_end":168728,"line_start":822,"line_end":822,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168733,"byte_end":168736,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168741,"byte_end":168765,"line_start":824,"line_end":824,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168770,"byte_end":168787,"line_start":825,"line_end":825,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168792,"byte_end":168817,"line_start":826,"line_end":826,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168822,"byte_end":168840,"line_start":827,"line_end":827,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168845,"byte_end":168848,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168853,"byte_end":168864,"line_start":829,"line_end":829,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168869,"byte_end":168885,"line_start":830,"line_end":830,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168890,"byte_end":168909,"line_start":831,"line_end":831,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168914,"byte_end":168937,"line_start":832,"line_end":832,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168942,"byte_end":168971,"line_start":833,"line_end":833,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":168976,"byte_end":169011,"line_start":834,"line_end":834,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169016,"byte_end":169023,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169028,"byte_end":169031,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169036,"byte_end":169130,"line_start":837,"line_end":837,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169135,"byte_end":169228,"line_start":838,"line_end":838,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169233,"byte_end":169258,"line_start":839,"line_end":839,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169417,"byte_end":169421,"line_start":845,"line_end":845,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"fn fits<'_>(&'_ Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169351,"byte_end":169405,"line_start":844,"line_end":844,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169842,"byte_end":169861,"line_start":854,"line_end":854,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"fn has_aliased_samples<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169492,"byte_end":169541,"line_start":849,"line_end":849,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169546,"byte_end":169549,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169554,"byte_end":169647,"line_start":851,"line_end":851,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169652,"byte_end":169746,"line_start":852,"line_end":852,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169751,"byte_end":169830,"line_start":853,"line_end":853,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170442,"byte_end":170451,"line_start":865,"line_end":865,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"fn is_normal<'_>(&'_ Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":169932,"byte_end":169997,"line_start":858,"line_end":858,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170002,"byte_end":170005,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170010,"byte_end":170103,"line_start":860,"line_end":860,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170108,"byte_end":170203,"line_start":861,"line_end":861,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170208,"byte_end":170300,"line_start":862,"line_end":862,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170305,"byte_end":170399,"line_start":863,"line_end":863,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170404,"byte_end":170430,"line_start":864,"line_end":864,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170876,"byte_end":170885,"line_start":874,"line_end":874,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"fn in_bounds<'_>(&'_ Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170534,"byte_end":170595,"line_start":869,"line_end":869,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170600,"byte_end":170603,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170608,"byte_end":170697,"line_start":871,"line_end":871,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170702,"byte_end":170796,"line_start":872,"line_end":872,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this property of course follows.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170801,"byte_end":170864,"line_start":873,"line_end":873,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171135,"byte_end":171140,"line_start":881,"line_end":881,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"fn index<'_>(&'_ Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":170988,"byte_end":171033,"line_start":878,"line_end":878,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171038,"byte_end":171041,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171046,"byte_end":171123,"line_start":880,"line_end":880,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171619,"byte_end":171640,"line_start":890,"line_end":890,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"fn index_ignoring_bounds<'_>(&'_ Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (x, y, channel).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171248,"byte_end":171307,"line_start":885,"line_end":885,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171312,"byte_end":171315,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171320,"byte_end":171409,"line_start":887,"line_end":887,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171414,"byte_end":171508,"line_start":888,"line_end":888,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171513,"byte_end":171607,"line_start":889,"line_end":889,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172072,"byte_end":172087,"line_start":899,"line_end":899,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"fn in_bounds_index<'_>(&'_ Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171771,"byte_end":171811,"line_start":894,"line_end":894,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171816,"byte_end":171819,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171824,"byte_end":171916,"line_start":896,"line_end":896,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":171921,"byte_end":172016,"line_start":897,"line_end":897,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172021,"byte_end":172060,"line_start":898,"line_end":898,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172522,"byte_end":172531,"line_start":908,"line_end":908,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"fn shrink_to<'_>(&'_ mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172197,"byte_end":172262,"line_start":903,"line_end":903,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172267,"byte_end":172270,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172275,"byte_end":172363,"line_start":905,"line_end":905,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172368,"byte_end":172463,"line_start":906,"line_end":906,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172468,"byte_end":172510,"line_start":907,"line_end":907,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":173417,"byte_end":173431,"line_start":934,"line_end":934,"column_start":12,"column_end":26},"name":"with_monocolor","qualname":"<FlatSamples<&'buf [Subpixel]>>::with_monocolor","value":"fn with_monocolor<P>(&'buf P, u32, u32) -> Self where P: Pixel<Subpixel =\nSubpixel>, Subpixel: crate::Primitive","parent":null,"children":[],"decl_id":null,"docs":" Create a monocolor image from a single pixel.","sig":null,"attributes":[{"value":"/ Create a monocolor image from a single pixel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172705,"byte_end":172754,"line_start":914,"line_end":914,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172759,"byte_end":172762,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ This can be used as a very cheap source of a `GenericImageView` with an arbitrary number of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172767,"byte_end":172862,"line_start":916,"line_end":916,"column_start":5,"column_end":100}},{"value":"/ pixels of a single color, without any dynamic allocation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172867,"byte_end":172928,"line_start":917,"line_end":917,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172933,"byte_end":172936,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172941,"byte_end":172956,"line_start":919,"line_end":919,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172961,"byte_end":172964,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172969,"byte_end":172976,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # fn paint_something<T>(_: T) {}","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172981,"byte_end":173017,"line_start":922,"line_end":922,"column_start":5,"column_end":41}},{"value":"/ use image::{flat::FlatSamples, GenericImage, RgbImage, Rgb};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":173022,"byte_end":173086,"line_start":923,"line_end":923,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":173091,"byte_end":173094,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ let background = Rgb([20, 20, 20]);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":173099,"byte_end":173138,"line_start":925,"line_end":925,"column_start":5,"column_end":44}},{"value":"/ let bg = FlatSamples::with_monocolor(&background, 200, 200);;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":173143,"byte_end":173208,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":173213,"byte_end":173216,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let mut image = RgbImage::new(200, 200);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":173221,"byte_end":173265,"line_start":928,"line_end":928,"column_start":5,"column_end":49}},{"value":"/ paint_something(&mut image);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":173270,"byte_end":173302,"line_start":929,"line_end":929,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":173307,"byte_end":173310,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ // Reset the canvas","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":173315,"byte_end":173338,"line_start":931,"line_end":931,"column_start":5,"column_end":28}},{"value":"/ image.copy_from(&bg.as_view().unwrap(), 0, 0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":173343,"byte_end":173393,"line_start":932,"line_end":932,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":173398,"byte_end":173405,"line_start":933,"line_end":933,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6470},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174758,"byte_end":174762,"line_start":971,"line_end":971,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":6473},{"krate":0,"index":6474}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[{"value":"/ A flat buffer that can be used as an image view.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174056,"byte_end":174108,"line_start":956,"line_end":956,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174109,"byte_end":174112,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ This is a nearly trivial wrapper around a buffer but at least sanitizes by checking the buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174113,"byte_end":174211,"line_start":958,"line_end":958,"column_start":1,"column_end":99}},{"value":"/ length first and constraining the pixel type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174212,"byte_end":174261,"line_start":959,"line_end":959,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174262,"byte_end":174265,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ Note that this does not eliminate panics as the `AsRef<[T]>` implementation of `Buffer` may be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174266,"byte_end":174364,"line_start":961,"line_end":961,"column_start":1,"column_end":99}},{"value":"/ unreliable, i.e. return different buffers at different times. This of course is a non-issue for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174365,"byte_end":174464,"line_start":962,"line_end":962,"column_start":1,"column_end":100}},{"value":"/ all common collections where the bounds check once must be enough.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174465,"byte_end":174535,"line_start":963,"line_end":963,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174536,"byte_end":174539,"line_start":964,"line_end":964,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174540,"byte_end":174562,"line_start":965,"line_end":965,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174563,"byte_end":174566,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174567,"byte_end":174650,"line_start":967,"line_end":967,"column_start":1,"column_end":84}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174651,"byte_end":174718,"line_start":968,"line_end":968,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174719,"byte_end":174722,"line_start":969,"line_end":969,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":6483},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175609,"byte_end":175616,"line_start":994,"line_end":994,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":6486},{"krate":0,"index":6487}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[{"value":"/ A mutable owning version of a flat buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174887,"byte_end":174933,"line_start":979,"line_end":979,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174934,"byte_end":174937,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ While this wraps a buffer similar to `ImageBuffer`, this is mostly intended as a utility. The","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":174938,"byte_end":175035,"line_start":981,"line_end":981,"column_start":1,"column_end":98}},{"value":"/ library endorsed normalized representation is still `ImageBuffer`. Also, the implementation of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175036,"byte_end":175134,"line_start":982,"line_end":982,"column_start":1,"column_end":99}},{"value":"/ `AsMut<[P::Subpixel]>` must always yield the same buffer. Therefore there is no public way to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175135,"byte_end":175232,"line_start":983,"line_end":983,"column_start":1,"column_end":98}},{"value":"/ construct this with an owning buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175233,"byte_end":175274,"line_start":984,"line_end":984,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175275,"byte_end":175278,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175279,"byte_end":175301,"line_start":986,"line_end":986,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175302,"byte_end":175305,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175306,"byte_end":175389,"line_start":988,"line_end":988,"column_start":1,"column_end":84}},{"value":"/ * There is no aliasing of samples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175390,"byte_end":175427,"line_start":989,"line_end":989,"column_start":1,"column_end":38}},{"value":"/ * The samples are packed, i.e. `self.inner.layout.sample_stride == 1`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175428,"byte_end":175501,"line_start":990,"line_end":990,"column_start":1,"column_end":74}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175502,"byte_end":175569,"line_start":991,"line_end":991,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175570,"byte_end":175573,"line_start":992,"line_end":992,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6497},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176325,"byte_end":176333,"line_start":1013,"line_end":1013,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":6496},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[{"value":"/ The represented image was too large.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176202,"byte_end":176242,"line_start":1010,"line_end":1010,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176247,"byte_end":176250,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ The optional value denotes a possibly accepted maximal bound.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176255,"byte_end":176320,"line_start":1012,"line_end":1012,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6499},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176490,"byte_end":176508,"line_start":1018,"line_end":1018,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":6496},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[{"value":"/ The represented image can not use this representation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176340,"byte_end":176398,"line_start":1015,"line_end":1015,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176403,"byte_end":176406,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ Has an additional value of the normalized form that would be accepted.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176411,"byte_end":176485,"line_start":1017,"line_end":1017,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6501},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176509,"byte_end":176519,"line_start":1018,"line_end":1018,"column_start":24,"column_end":34},"name":"0","qualname":"::flat::Error::NormalFormRequired::0","value":"flat::NormalForm","parent":{"krate":0,"index":6499},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6502},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177117,"byte_end":177127,"line_start":1029,"line_end":1029,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":6496},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[{"value":"/ The color format did not match the channel count.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176527,"byte_end":176580,"line_start":1020,"line_end":1020,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176585,"byte_end":176588,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ In some cases you might be able to fix this by lowering the reported pixel count of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176593,"byte_end":176684,"line_start":1022,"line_end":1022,"column_start":5,"column_end":96}},{"value":"/ buffer without touching the strides.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176689,"byte_end":176729,"line_start":1023,"line_end":1023,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176734,"byte_end":176737,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ In very special circumstances you *may* do the opposite. This is **VERY** dangerous but not","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176742,"byte_end":176837,"line_start":1025,"line_end":1025,"column_start":5,"column_end":100}},{"value":"/ directly memory unsafe although that will likely alias pixels. One scenario is when you","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176842,"byte_end":176933,"line_start":1026,"line_end":1026,"column_start":5,"column_end":96}},{"value":"/ want to construct an `Rgba` image but have only 3 bytes per pixel and for some reason don't","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176938,"byte_end":177033,"line_start":1027,"line_end":1027,"column_start":5,"column_end":100}},{"value":"/ care about the value of the alpha channel even though you need `Rgba`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177038,"byte_end":177112,"line_start":1028,"line_end":1028,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6504},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177128,"byte_end":177137,"line_start":1029,"line_end":1029,"column_start":16,"column_end":25},"name":"0","qualname":"::flat::Error::WrongColor::0","value":"color::ColorType","parent":{"krate":0,"index":6502},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6496},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176190,"byte_end":176195,"line_start":1009,"line_end":1009,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"enum Error {\n    TooLarge,\n    NormalFormRequired(NormalForm),\n    WrongColor(ColorType),\n}","parent":null,"children":[{"krate":0,"index":6497},{"krate":0,"index":6499},{"krate":0,"index":6502}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[{"value":"/ Denotes invalid flat sample buffers when trying to convert to stricter types.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175741,"byte_end":175822,"line_start":1002,"line_end":1002,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175823,"byte_end":175826,"line_start":1003,"line_end":1003,"column_start":1,"column_end":4}},{"value":"/ The biggest use case being `ImageBuffer` which expects closely packed","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175827,"byte_end":175900,"line_start":1004,"line_end":1004,"column_start":1,"column_end":74}},{"value":"/ samples in a row major matrix representation. But this error type may be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175901,"byte_end":175977,"line_start":1005,"line_end":1005,"column_start":1,"column_end":77}},{"value":"/ resused for other import functions. A more versatile user may also try to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":175978,"byte_end":176055,"line_start":1006,"line_end":1006,"column_start":1,"column_end":78}},{"value":"/ correct the underlying representation depending on the error variant.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":176056,"byte_end":176129,"line_start":1007,"line_end":1007,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6521},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177626,"byte_end":177635,"line_start":1042,"line_end":1042,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":6520},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[{"value":"/ No pixel aliases another.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177403,"byte_end":177432,"line_start":1038,"line_end":1038,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177437,"byte_end":177440,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ Unaliased also guarantees that all index calculations in the image bounds using","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177445,"byte_end":177528,"line_start":1040,"line_end":1040,"column_start":5,"column_end":88}},{"value":"/ `dim_index*dim_stride` (such as `x*width_stride + y*height_stride`) do not overflow.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177533,"byte_end":177621,"line_start":1041,"line_end":1041,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6523},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177865,"byte_end":177876,"line_start":1048,"line_end":1048,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":6520},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[{"value":"/ At least pixels are packed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177642,"byte_end":177673,"line_start":1044,"line_end":1044,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177678,"byte_end":177681,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ Images of these types can wrap `[T]`-slices into the standard color types. This is a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177686,"byte_end":177774,"line_start":1046,"line_end":1046,"column_start":5,"column_end":93}},{"value":"/ precondition for `GenericImage` which requires by-reference access to pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177779,"byte_end":177860,"line_start":1047,"line_end":1047,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6525},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178160,"byte_end":178171,"line_start":1055,"line_end":1055,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":6520},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[{"value":"/ All samples are packed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177883,"byte_end":177910,"line_start":1050,"line_end":1050,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177915,"byte_end":177918,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This is orthogonal to `PixelPacked`. It requires that there are no holes in the image but","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177923,"byte_end":178016,"line_start":1052,"line_end":1052,"column_start":5,"column_end":98}},{"value":"/ it is not necessary that the pixel samples themselves are adjacent. An example of this","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178021,"byte_end":178111,"line_start":1053,"line_end":1053,"column_start":5,"column_end":95}},{"value":"/ behaviour is a planar image layout.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178116,"byte_end":178155,"line_start":1054,"line_end":1054,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6527},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178381,"byte_end":178395,"line_start":1061,"line_end":1061,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":6520},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in row-major form and all samples are packed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178178,"byte_end":178243,"line_start":1057,"line_end":1057,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178248,"byte_end":178251,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178256,"byte_end":178349,"line_start":1059,"line_end":1059,"column_start":5,"column_end":98}},{"value":"/ in row-major form.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178354,"byte_end":178376,"line_start":1060,"line_end":1060,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6529},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178611,"byte_end":178628,"line_start":1067,"line_end":1067,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":6520},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in column-major form and all samples are packed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178402,"byte_end":178470,"line_start":1063,"line_end":1063,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178475,"byte_end":178478,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178483,"byte_end":178576,"line_start":1065,"line_end":1065,"column_start":5,"column_end":98}},{"value":"/ in column-major form.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178581,"byte_end":178606,"line_start":1066,"line_end":1066,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":6520},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177386,"byte_end":177396,"line_start":1037,"line_end":1037,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"enum NormalForm {\n    Unaliased,\n    PixelPacked,\n    ImagePacked,\n    RowMajorPacked,\n    ColumnMajorPacked,\n}","parent":null,"children":[{"krate":0,"index":6521},{"krate":0,"index":6523},{"krate":0,"index":6525},{"krate":0,"index":6527},{"krate":0,"index":6529}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[{"value":"/ Different normal forms of buffers.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177143,"byte_end":177181,"line_start":1032,"line_end":1032,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177182,"byte_end":177185,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ A normal form is an unaliased buffer with some additional constraints.  The `ÌmageBuffer` uses","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177186,"byte_end":177285,"line_start":1034,"line_end":1034,"column_start":1,"column_end":99}},{"value":"/ row major form with packed samples.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":177286,"byte_end":177325,"line_start":1035,"line_end":1035,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178837,"byte_end":178847,"line_start":1077,"line_end":1077,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178718,"byte_end":178749,"line_start":1074,"line_end":1074,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178754,"byte_end":178757,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178762,"byte_end":178825,"line_start":1076,"line_end":1076,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179330,"byte_end":179334,"line_start":1087,"line_end":1087,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"fn flat<'_>(&'_ Self) -> &'_ FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the inner sample descriptor.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178909,"byte_end":178960,"line_start":1081,"line_end":1081,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178965,"byte_end":178968,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178973,"byte_end":179062,"line_start":1083,"line_end":1083,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179067,"byte_end":179160,"line_start":1084,"line_end":1084,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179165,"byte_end":179252,"line_start":1085,"line_end":1085,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179257,"byte_end":179318,"line_start":1086,"line_end":1086,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179613,"byte_end":179620,"line_start":1095,"line_end":1095,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"fn samples<'_>(&'_ Self) -> &'_ Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179399,"byte_end":179439,"line_start":1091,"line_end":1091,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179444,"byte_end":179447,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179452,"byte_end":179542,"line_start":1093,"line_end":1093,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179547,"byte_end":179601,"line_start":1094,"line_end":1094,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179939,"byte_end":179949,"line_start":1103,"line_end":1103,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"fn get_sample<'_>(&'_ Self, u8, u32, u32) -> Option<&'_ P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel if it is in-bounds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179680,"byte_end":179742,"line_start":1099,"line_end":1099,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179747,"byte_end":179750,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179755,"byte_end":179845,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":179850,"byte_end":179927,"line_start":1102,"line_end":1102,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":180824,"byte_end":180838,"line_start":1121,"line_end":1121,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"fn get_mut_sample<'_>(&'_ mut Self, u8, u32, u32)\n-> Option<&'_ mut P::Subpixel> where Buffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected subpixel if it is in-bounds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":180282,"byte_end":180352,"line_start":1113,"line_end":1113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":180357,"byte_end":180360,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`.  This","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":180365,"byte_end":180459,"line_start":1115,"line_end":1115,"column_start":5,"column_end":99}},{"value":"/ method will return `None` when the sample is out-of-bounds. All errors that could occur due","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":180464,"byte_end":180559,"line_start":1116,"line_end":1116,"column_start":5,"column_end":100}},{"value":"/ to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":180564,"byte_end":180631,"line_start":1117,"line_end":1117,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":180636,"byte_end":180639,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":180644,"byte_end":180738,"line_start":1119,"line_end":1119,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":180743,"byte_end":180812,"line_start":1120,"line_end":1120,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":181421,"byte_end":181431,"line_start":1137,"line_end":1137,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"fn min_length<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":181239,"byte_end":181329,"line_start":1134,"line_end":1134,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":181334,"byte_end":181337,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":181342,"byte_end":181409,"line_start":1136,"line_end":1136,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":181765,"byte_end":181776,"line_start":1145,"line_end":1145,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"fn image_slice<'_>(&'_ Self) -> &'_ [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":181502,"byte_end":181564,"line_start":1141,"line_end":1141,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":181569,"byte_end":181572,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":181577,"byte_end":181668,"line_start":1143,"line_end":1143,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":181673,"byte_end":181753,"line_start":1144,"line_end":1144,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":182233,"byte_end":182248,"line_start":1154,"line_end":1154,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"fn image_mut_slice<'_>(&'_ mut Self) -> &'_ mut [P::Subpixel] where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the mutable portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":181869,"byte_end":181939,"line_start":1149,"line_end":1149,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":181944,"byte_end":181947,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`. While","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":181952,"byte_end":182046,"line_start":1151,"line_end":1151,"column_start":5,"column_end":99}},{"value":"/ this can not fail–the validity of all coordinates has been validated during the conversion","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":182051,"byte_end":182147,"line_start":1152,"line_end":1152,"column_start":5,"column_end":99}},{"value":"/ from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":182152,"byte_end":182221,"line_start":1153,"line_end":1153,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":182776,"byte_end":182785,"line_start":1167,"line_end":1167,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"fn shrink_to<'_>(&'_ mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":182446,"byte_end":182473,"line_start":1162,"line_end":1162,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":182478,"byte_end":182481,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":182486,"byte_end":182573,"line_start":1164,"line_end":1164,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":182578,"byte_end":182671,"line_start":1165,"line_end":1165,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":182676,"byte_end":182764,"line_start":1166,"line_end":1166,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183789,"byte_end":183800,"line_start":1190,"line_end":1190,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"fn try_upgrade(Self) -> Result<ViewMut<Buffer, P>, (Error, Self)> where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[{"value":"/ Try to convert this into an image with mutable pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":182940,"byte_end":182998,"line_start":1172,"line_end":1172,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183003,"byte_end":183006,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ The resulting image implements `GenericImage` in addition to `GenericImageView`. While this","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183011,"byte_end":183106,"line_start":1174,"line_end":1174,"column_start":5,"column_end":100}},{"value":"/ has mutable samples, it does not enforce that pixel can not alias and that samples are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183111,"byte_end":183201,"line_start":1175,"line_end":1175,"column_start":5,"column_end":95}},{"value":"/ packed enough for a mutable pixel reference. This is slightly cheaper than the chain","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183206,"byte_end":183294,"line_start":1176,"line_end":1176,"column_start":5,"column_end":93}},{"value":"/ `self.into_inner().as_view_mut()` and keeps the `View` alive on failure.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183299,"byte_end":183375,"line_start":1177,"line_end":1177,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183380,"byte_end":183383,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183388,"byte_end":183395,"line_start":1179,"line_end":1179,"column_start":5,"column_end":12}},{"value":"/ # use image::RgbImage;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183400,"byte_end":183426,"line_start":1180,"line_end":1180,"column_start":5,"column_end":31}},{"value":"/ # use image::Rgb;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183431,"byte_end":183452,"line_start":1181,"line_end":1181,"column_start":5,"column_end":26}},{"value":"/ let mut buffer = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183457,"byte_end":183522,"line_start":1182,"line_end":1182,"column_start":5,"column_end":70}},{"value":"/ let view = buffer.as_view_with_mut_samples::<Rgb<u8>>().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183527,"byte_end":183596,"line_start":1183,"line_end":1183,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183601,"byte_end":183604,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ // Inspect some pixels, …","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183609,"byte_end":183640,"line_start":1185,"line_end":1185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183645,"byte_end":183648,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ // Doesn't fail because it was originally an `RgbImage`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183653,"byte_end":183713,"line_start":1187,"line_end":1187,"column_start":5,"column_end":65}},{"value":"/ let view_mut = view.try_upgrade().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183718,"byte_end":183765,"line_start":1188,"line_end":1188,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":183770,"byte_end":183777,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184448,"byte_end":184458,"line_start":1213,"line_end":1213,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184329,"byte_end":184360,"line_start":1210,"line_end":1210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184365,"byte_end":184368,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184373,"byte_end":184436,"line_start":1212,"line_end":1212,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184942,"byte_end":184946,"line_start":1223,"line_end":1223,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"fn flat<'_>(&'_ Self) -> &'_ FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the sample buffer descriptor.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184520,"byte_end":184572,"line_start":1217,"line_end":1217,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184577,"byte_end":184580,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184585,"byte_end":184674,"line_start":1219,"line_end":1219,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184679,"byte_end":184772,"line_start":1220,"line_end":1220,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184777,"byte_end":184864,"line_start":1221,"line_end":1221,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184869,"byte_end":184930,"line_start":1222,"line_end":1222,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185319,"byte_end":185326,"line_start":1232,"line_end":1232,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"fn samples<'_>(&'_ Self) -> &'_ Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185011,"byte_end":185051,"line_start":1227,"line_end":1227,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185056,"byte_end":185059,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185064,"byte_end":185154,"line_start":1229,"line_end":1229,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties. However, its contents can be accessed","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185159,"byte_end":185251,"line_start":1230,"line_end":1230,"column_start":5,"column_end":97}},{"value":"/ mutable through a slice with `image_mut_slice`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185256,"byte_end":185307,"line_start":1231,"line_end":1231,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185568,"byte_end":185578,"line_start":1239,"line_end":1239,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"fn min_length<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185386,"byte_end":185476,"line_start":1236,"line_end":1236,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185481,"byte_end":185484,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185489,"byte_end":185556,"line_start":1238,"line_end":1238,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185889,"byte_end":185899,"line_start":1247,"line_end":1247,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"fn get_sample<'_>(&'_ Self, u8, u32, u32) -> Option<&'_ P::Subpixel> where\nBuffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185649,"byte_end":185692,"line_start":1243,"line_end":1243,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185697,"byte_end":185700,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185705,"byte_end":185795,"line_start":1245,"line_end":1245,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":185800,"byte_end":185877,"line_start":1246,"line_end":1246,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":186530,"byte_end":186544,"line_start":1264,"line_end":1264,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"fn get_mut_sample<'_>(&'_ mut Self, u8, u32, u32)\n-> Option<&'_ mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected sample.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":186284,"byte_end":186333,"line_start":1260,"line_end":1260,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":186338,"byte_end":186341,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":186346,"byte_end":186436,"line_start":1262,"line_end":1262,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":186441,"byte_end":186518,"line_start":1263,"line_end":1263,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":187156,"byte_end":187167,"line_start":1278,"line_end":1278,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"fn image_slice<'_>(&'_ Self) -> &'_ [P::Subpixel] where\nBuffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":186893,"byte_end":186955,"line_start":1274,"line_end":1274,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":186960,"byte_end":186963,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":186968,"byte_end":187059,"line_start":1276,"line_end":1276,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":187064,"byte_end":187144,"line_start":1277,"line_end":1277,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":187383,"byte_end":187398,"line_start":1286,"line_end":1286,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"fn image_mut_slice<'_>(&'_ mut Self) -> &'_ mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Return the mutable buffer that holds sample values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":187316,"byte_end":187371,"line_start":1285,"line_end":1285,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":187866,"byte_end":187875,"line_start":1296,"line_end":1296,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"fn shrink_to<'_>(&'_ mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":187536,"byte_end":187563,"line_start":1291,"line_end":1291,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":187568,"byte_end":187571,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":187576,"byte_end":187663,"line_start":1293,"line_end":1293,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":187668,"byte_end":187761,"line_start":1294,"line_end":1294,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":187766,"byte_end":187854,"line_start":1295,"line_end":1295,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":188982,"byte_end":188987,"line_start":1336,"line_end":1336,"column_start":8,"column_end":13},"name":"index","qualname":"<FlatSamples<Buffer> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, (u8, u32, u32)) -> &'_ Self::Output","parent":{"krate":2,"index":3576},"children":[],"decl_id":{"krate":2,"index":3579},"docs":" Return a reference to a single sample at specified coordinates.","sig":null,"attributes":[{"value":"/ Return a reference to a single sample at specified coordinates.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":188795,"byte_end":188862,"line_start":1331,"line_end":1331,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":188867,"byte_end":188870,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":188875,"byte_end":188887,"line_start":1333,"line_end":1333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":188892,"byte_end":188895,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ When the coordinates are out of bounds or the index calculation fails.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":188900,"byte_end":188974,"line_start":1335,"line_end":1335,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":189593,"byte_end":189602,"line_start":1355,"line_end":1355,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<FlatSamples<Buffer> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, (u8, u32, u32)) -> &'_ mut Self::Output","parent":{"krate":2,"index":3580},"children":[],"decl_id":{"krate":2,"index":3582},"docs":" Return a mutable reference to a single sample at specified coordinates.","sig":null,"attributes":[{"value":"/ Return a mutable reference to a single sample at specified coordinates.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":189398,"byte_end":189473,"line_start":1350,"line_end":1350,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":189478,"byte_end":189481,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":189486,"byte_end":189498,"line_start":1352,"line_end":1352,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":189503,"byte_end":189506,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ When the coordinates are out of bounds or the index calculation fails.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":189511,"byte_end":189585,"line_start":1354,"line_end":1354,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":190052,"byte_end":190062,"line_start":1371,"line_end":1371,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<View<Buffer, P> as image::GenericImageView>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5976},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":190160,"byte_end":190166,"line_start":1375,"line_end":1375,"column_start":8,"column_end":14},"name":"bounds","qualname":"<View<Buffer, P> as image::GenericImageView>::bounds","value":"fn bounds<'_>(&'_ Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5979},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":190275,"byte_end":190284,"line_start":1380,"line_end":1380,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"<View<Buffer, P> as image::GenericImageView>::in_bounds","value":"fn in_bounds<'_>(&'_ Self, u32, u32) -> bool","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5980},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":190395,"byte_end":190404,"line_start":1385,"line_end":1385,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"<View<Buffer, P> as image::GenericImageView>::get_pixel","value":"fn get_pixel<'_>(&'_ Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5981},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":191240,"byte_end":191250,"line_start":1414,"line_end":1414,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<ViewMut<Buffer, P> as image::GenericImageView>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5976},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":191348,"byte_end":191354,"line_start":1418,"line_end":1418,"column_start":8,"column_end":14},"name":"bounds","qualname":"<ViewMut<Buffer, P> as image::GenericImageView>::bounds","value":"fn bounds<'_>(&'_ Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5979},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":191463,"byte_end":191472,"line_start":1423,"line_end":1423,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"<ViewMut<Buffer, P> as image::GenericImageView>::in_bounds","value":"fn in_bounds<'_>(&'_ Self, u32, u32) -> bool","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5980},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":191583,"byte_end":191592,"line_start":1428,"line_end":1428,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"<ViewMut<Buffer, P> as image::GenericImageView>::get_pixel","value":"fn get_pixel<'_>(&'_ Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5981},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":192403,"byte_end":192416,"line_start":1455,"line_end":1455,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"<ViewMut<Buffer, P> as image::GenericImage>::get_pixel_mut","value":"fn get_pixel_mut<'_>(&'_ mut Self, u32, u32) -> &'_ mut Self::Pixel","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5986},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":192892,"byte_end":192901,"line_start":1467,"line_end":1467,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"<ViewMut<Buffer, P> as image::GenericImage>::put_pixel","value":"fn put_pixel<'_>(&'_ mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5987},"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":192864,"byte_end":192884,"line_start":1466,"line_end":1466,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":193033,"byte_end":193044,"line_start":1472,"line_end":1472,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"<ViewMut<Buffer, P> as image::GenericImage>::blend_pixel","value":"fn blend_pixel<'_>(&'_ mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5989},"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":193005,"byte_end":193025,"line_start":1471,"line_end":1471,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":193192,"byte_end":193196,"line_start":1478,"line_end":1478,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageError as std::convert::From>::from","value":"fn from(Error) -> ImageError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":194279,"byte_end":194282,"line_start":1507,"line_end":1507,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":195378,"byte_end":195389,"line_start":1536,"line_end":1536,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<NormalForm as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Self) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2966},"children":[],"decl_id":{"krate":2,"index":2968},"docs":" Compares the logical preconditions.","sig":null,"attributes":[{"value":"/ Compares the logical preconditions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":195251,"byte_end":195290,"line_start":1533,"line_end":1533,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":195295,"byte_end":195298,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ `a < b` if the normal form `a` has less preconditions than `b`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":195303,"byte_end":195370,"line_start":1535,"line_end":1535,"column_start":5,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7676,"byte_end":7682,"line_start":217,"line_end":217,"column_start":9,"column_end":15},"name":"codecs","qualname":"::codecs","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1509},{"krate":0,"index":1599},{"krate":0,"index":1754},{"krate":0,"index":1889},{"krate":0,"index":2067},{"krate":0,"index":2379},{"krate":0,"index":2597},{"krate":0,"index":2928},{"krate":0,"index":3022},{"krate":0,"index":3250},{"krate":0,"index":3793},{"krate":0,"index":4055},{"krate":0,"index":4176}],"decl_id":null,"docs":" Encoding and decoding for various image file formats.","sig":null,"attributes":[{"value":"/ Encoding and decoding for various image file formats.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5515,"byte_end":5572,"line_start":176,"line_end":176,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5573,"byte_end":5576,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # Supported formats","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5577,"byte_end":5600,"line_start":178,"line_end":178,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5601,"byte_end":5604,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ | Format | Decoding | Encoding |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5605,"byte_end":5641,"line_start":180,"line_end":180,"column_start":1,"column_end":37}},{"value":"/ | ------ | -------- | -------- |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5642,"byte_end":5678,"line_start":181,"line_end":181,"column_start":1,"column_end":37}},{"value":"/ | PNG    | All supported color types | Same as decoding |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5679,"byte_end":5740,"line_start":182,"line_end":182,"column_start":1,"column_end":62}},{"value":"/ | JPEG   | Baseline and progressive | Baseline JPEG |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5741,"byte_end":5798,"line_start":183,"line_end":183,"column_start":1,"column_end":58}},{"value":"/ | GIF    | Yes | Yes |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5799,"byte_end":5825,"line_start":184,"line_end":184,"column_start":1,"column_end":27}},{"value":"/ | BMP    | Yes | Rgb8, Rgba8, Gray8, GrayA8 |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5826,"byte_end":5875,"line_start":185,"line_end":185,"column_start":1,"column_end":50}},{"value":"/ | ICO    | Yes | Yes |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5876,"byte_end":5902,"line_start":186,"line_end":186,"column_start":1,"column_end":27}},{"value":"/ | TIFF   | Baseline(no fax support) + LZW + PackBits | Rgb8, Rgba8, Gray8 |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5903,"byte_end":5982,"line_start":187,"line_end":187,"column_start":1,"column_end":80}},{"value":"/ | WebP   | Yes | Rgb8, Rgba8 |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5983,"byte_end":6017,"line_start":188,"line_end":188,"column_start":1,"column_end":35}},{"value":"/ | AVIF   | Only 8-bit | Lossy |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6018,"byte_end":6053,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/ | PNM    | PBM, PGM, PPM, standard PAM | Yes |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6054,"byte_end":6104,"line_start":190,"line_end":190,"column_start":1,"column_end":51}},{"value":"/ | DDS    | DXT1, DXT3, DXT5 | No |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6105,"byte_end":6143,"line_start":191,"line_end":191,"column_start":1,"column_end":39}},{"value":"/ | TGA    | Yes | Rgb8, Rgba8, Bgr8, Bgra8, Gray8, GrayA8 |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6144,"byte_end":6206,"line_start":192,"line_end":192,"column_start":1,"column_end":63}},{"value":"/ | OpenEXR  | Rgb32F, Rgba32F (no dwa compression) | Rgb32F, Rgba32F (no dwa compression) |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6207,"byte_end":6301,"line_start":193,"line_end":193,"column_start":1,"column_end":95}},{"value":"/ | farbfeld | Yes | Yes |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6302,"byte_end":6330,"line_start":194,"line_end":194,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6331,"byte_end":6334,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ ## A note on format specific features","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6335,"byte_end":6376,"line_start":196,"line_end":196,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6377,"byte_end":6380,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ One of the main goals of `image` is stability, in runtime but also for programmers. This","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6381,"byte_end":6473,"line_start":198,"line_end":198,"column_start":1,"column_end":93}},{"value":"/ ensures that performance as well as safety fixes reach a majority of its user base with little","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6474,"byte_end":6572,"line_start":199,"line_end":199,"column_start":1,"column_end":99}},{"value":"/ effort. Re-exporting all details of its dependencies would run counter to this goal as it","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6573,"byte_end":6666,"line_start":200,"line_end":200,"column_start":1,"column_end":94}},{"value":"/ linked _all_ major version bumps between them and `image`. As such, we are wary of exposing too","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6667,"byte_end":6766,"line_start":201,"line_end":201,"column_start":1,"column_end":100}},{"value":"/ many details, or configuration options, that are not shared between different image formats.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6767,"byte_end":6863,"line_start":202,"line_end":202,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6864,"byte_end":6867,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Nevertheless, the advantage of precise control is hard to ignore. We will thus consider","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6868,"byte_end":6959,"line_start":204,"line_end":204,"column_start":1,"column_end":92}},{"value":"/ _wrappers_, not direct re-exports, in either of the following cases:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":6960,"byte_end":7032,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7033,"byte_end":7036,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ 1. A standard specifies that configuration _x_ is required for decoders/encoders and there","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7037,"byte_end":7131,"line_start":207,"line_end":207,"column_start":1,"column_end":95}},{"value":"/    exists an essentially canonical way to control it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7132,"byte_end":7189,"line_start":208,"line_end":208,"column_start":1,"column_end":58}},{"value":"/ 2. At least two different implementations agree on some (sub-)set of features in practice.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7190,"byte_end":7284,"line_start":209,"line_end":209,"column_start":1,"column_end":95}},{"value":"/ 3. A technical argument including measurements of the performance, space benefits, or otherwise","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7285,"byte_end":7384,"line_start":210,"line_end":210,"column_start":1,"column_end":100}},{"value":"/    objectively quantified benefits can be made, and the added interface is unlikely to require","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7385,"byte_end":7483,"line_start":211,"line_end":211,"column_start":1,"column_end":99}},{"value":"/    breaking changes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7484,"byte_end":7508,"line_start":212,"line_end":212,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7509,"byte_end":7512,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Features that fulfill two or more criteria are preferred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7513,"byte_end":7574,"line_start":214,"line_end":214,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7575,"byte_end":7578,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Re-exports of dependencies that reach version `1` will be discussed when it happens.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7579,"byte_end":7667,"line_start":216,"line_end":216,"column_start":1,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::codecs::bmp","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\mod.rs","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1154},{"krate":0,"index":1431}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7775,"byte_end":7798,"line_start":220,"line_end":220,"column_start":5,"column_end":28}},{"value":"/  Decoding and Encoding of BMP Images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\mod.rs","byte_start":201228,"byte_end":201268,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\mod.rs","byte_start":201269,"byte_end":201272,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder and encoder for BMP (Windows Bitmap) images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\mod.rs","byte_start":201273,"byte_end":201331,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\mod.rs","byte_start":201332,"byte_end":201335,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\mod.rs","byte_start":201336,"byte_end":201356,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://msdn.microsoft.com/en-us/library/windows/desktop/dd183375%28v=vs.85%29.aspx>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\mod.rs","byte_start":201357,"byte_end":201449,"line_start":6,"line_end":6,"column_start":1,"column_end":93}},{"value":"/  * <https://en.wikipedia.org/wiki/BMP_file_format>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\mod.rs","byte_start":201450,"byte_end":201504,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\mod.rs","byte_start":201505,"byte_end":201508,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":208632,"byte_end":208636,"line_start":209,"line_end":209,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageError as std::convert::From>::from","value":"fn from(DecoderError) -> ImageError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":219084,"byte_end":219094,"line_start":545,"line_end":545,"column_start":12,"column_end":22},"name":"BmpDecoder","qualname":"::codecs::bmp::decoder::BmpDecoder","value":"BmpDecoder {  }","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1339}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[{"value":"/ A bmp decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":219055,"byte_end":219072,"line_start":544,"line_end":544,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":221682,"byte_end":221685,"line_start":633,"line_end":633,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpDecoder<R>>::new","value":"fn new(R) -> ImageResult<BmpDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":221609,"byte_end":221670,"line_start":632,"line_end":632,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":223187,"byte_end":223204,"line_start":688,"line_end":688,"column_start":12,"column_end":29},"name":"set_indexed_color","qualname":"<BmpDecoder<R>>::set_indexed_color","value":"fn set_indexed_color<'_>(&'_ mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" If true, the palette in BMP does not apply to the image even if it is found.\n In other words, the output image is the indexed color.\n","sig":null,"attributes":[{"value":"/ If true, the palette in BMP does not apply to the image even if it is found.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":223032,"byte_end":223112,"line_start":686,"line_end":686,"column_start":5,"column_end":85}},{"value":"/ In other words, the output image is the indexed color.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":223117,"byte_end":223175,"line_start":687,"line_end":687,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":234445,"byte_end":234472,"line_start":984,"line_end":984,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BmpDecoder<R>>::read_metadata_in_ico_format","value":"fn read_metadata_in_ico_format<'_>(&'_ mut Self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":234391,"byte_end":234414,"line_start":982,"line_end":982,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":237084,"byte_end":237095,"line_start":1060,"line_end":1060,"column_start":12,"column_end":23},"name":"get_palette","qualname":"<BmpDecoder<R>>::get_palette","value":"fn get_palette<'_>(&'_ Self) -> Option<&'_ [[u8; ]]>","parent":null,"children":[],"decl_id":null,"docs":" Get the palette that is embedded in the BMP image, if any.\n","sig":null,"attributes":[{"value":"/ Get the palette that is embedded in the BMP image, if any.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":237010,"byte_end":237072,"line_start":1059,"line_end":1059,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":255325,"byte_end":255334,"line_start":1483,"line_end":1483,"column_start":12,"column_end":21},"name":"BmpReader","qualname":"::codecs::bmp::decoder::BmpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":255268,"byte_end":255313,"line_start":1482,"line_end":1482,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":255411,"byte_end":255415,"line_start":1485,"line_end":1485,"column_start":8,"column_end":12},"name":"read","qualname":"<BmpReader<R> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":255504,"byte_end":255515,"line_start":1488,"line_end":1488,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"<BmpReader<R> as std::io::Read>::read_to_end","value":"fn read_to_end<'_, '_>(&'_ mut Self, &'_ mut Vec<u8>) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4672},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":255874,"byte_end":255884,"line_start":1501,"line_end":1501,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<BmpDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":255970,"byte_end":255980,"line_start":1505,"line_end":1505,"column_start":8,"column_end":18},"name":"color_type","qualname":"<BmpDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":256202,"byte_end":256213,"line_start":1515,"line_end":1515,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<BmpDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":256378,"byte_end":256388,"line_start":1522,"line_end":1522,"column_start":8,"column_end":18},"name":"read_image","qualname":"<BmpDecoder<R> as image::ImageDecoder>::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5950},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":256627,"byte_end":256650,"line_start":1529,"line_end":1529,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"<BmpDecoder<R> as image::ImageDecoderRect>::read_rect_with_progress","value":"fn read_rect_with_progress<F, '_,\n'_>(&'_ mut Self, u32, u32, u32, u32, &'_ mut [u8], F) -> ImageResult<()>\nwhere F: Fn(Progress) -> ()","parent":{"krate":0,"index":5955},"children":[],"decl_id":{"krate":0,"index":5959},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261195,"byte_end":261205,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"BmpEncoder","qualname":"::codecs::bmp::encoder::BmpEncoder","value":"BmpEncoder {  }","parent":null,"children":[{"krate":0,"index":1481}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[{"value":"/ The representation of a BMP encoder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261143,"byte_end":261183,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261364,"byte_end":261367,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpEncoder>::new","value":"fn new(&'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261293,"byte_end":261352,"line_start":20,"line_end":20,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261575,"byte_end":261581,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"encode","qualname":"<BmpEncoder>::encode","value":"fn encode<'_, '_>(&'_ mut Self, &'_ [u8], u32, u32, color::ColorType)\n-> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261436,"byte_end":261469,"line_start":25,"line_end":25,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261474,"byte_end":261526,"line_start":26,"line_end":26,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261531,"byte_end":261563,"line_start":27,"line_end":27,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261956,"byte_end":261975,"line_start":40,"line_end":40,"column_start":12,"column_end":31},"name":"encode_with_palette","qualname":"<BmpEncoder>::encode_with_palette","value":"fn encode_with_palette<'_, '_,\n'_>(&'_ mut Self, &'_ [u8], u32, u32, color::ColorType, Option<&'_ [[u8; ]]>)\n-> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Same as ```encode```, but allow a palette to be passed in.\n The ```palette``` is ignored for color types other than Luma/Luma-with-alpha.\n","sig":null,"attributes":[{"value":"/ Same as ```encode```, but allow a palette to be passed in.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261796,"byte_end":261858,"line_start":38,"line_end":38,"column_start":5,"column_end":67}},{"value":"/ The ```palette``` is ignored for color types other than Luma/Luma-with-alpha.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261863,"byte_end":261944,"line_start":39,"line_end":39,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":269902,"byte_end":269913,"line_start":254,"line_end":254,"column_start":8,"column_end":19},"name":"write_image","qualname":"<BmpEncoder as image::ImageEncoder>::write_image","value":"fn write_image<'_>(Self, &'_ [u8], u32, u32, color::ColorType)\n-> ImageResult<()>","parent":{"krate":0,"index":5964},"children":[],"decl_id":{"krate":0,"index":5965},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dds","qualname":"::codecs::dds","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1517},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1524},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":6718},{"krate":0,"index":6742},{"krate":0,"index":6744},{"krate":0,"index":6745},{"krate":0,"index":6747},{"krate":0,"index":6750},{"krate":0,"index":6751},{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6757},{"krate":0,"index":6759},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":6761},{"krate":0,"index":6771},{"krate":0,"index":6773},{"krate":0,"index":6779},{"krate":0,"index":6781},{"krate":0,"index":6790},{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":1580},{"krate":0,"index":1583},{"krate":0,"index":1586},{"krate":0,"index":1590}],"decl_id":null,"docs":"  Decoding of DDS images","sig":null,"attributes":[{"value":"cfg(feature = \"dds\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7820,"byte_end":7843,"line_start":222,"line_end":222,"column_start":5,"column_end":28}},{"value":"/  Decoding of DDS images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":274263,"byte_end":274290,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":274291,"byte_end":274294,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  DDS (DirectDraw Surface) is a container format for storing DXT (S3TC) compressed images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":274295,"byte_end":274388,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":274389,"byte_end":274392,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":274393,"byte_end":274413,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://docs.microsoft.com/en-us/windows/win32/direct3ddds/dx-graphics-dds-pguide> - Description of the DDS format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":274414,"byte_end":274537,"line_start":6,"line_end":6,"column_start":1,"column_end":124}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":276931,"byte_end":276935,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageError as std::convert::From>::from","value":"fn from(DecoderError) -> ImageError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1583},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":282164,"byte_end":282174,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"DdsDecoder","qualname":"::codecs::dds::DdsDecoder","value":"DdsDecoder {  }","parent":null,"children":[{"krate":0,"index":1585}],"decl_id":null,"docs":" The representation of a DDS decoder\n","sig":null,"attributes":[{"value":"/ The representation of a DDS decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":282113,"byte_end":282152,"line_start":241,"line_end":241,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":282343,"byte_end":282346,"line_start":249,"line_end":249,"column_start":12,"column_end":15},"name":"new","qualname":"<DdsDecoder<R>>::new","value":"fn new(R) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":282274,"byte_end":282331,"line_start":248,"line_end":248,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":286306,"byte_end":286316,"line_start":334,"line_end":334,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<DdsDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":286386,"byte_end":286396,"line_start":338,"line_end":338,"column_start":8,"column_end":18},"name":"color_type","qualname":"<DdsDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":286465,"byte_end":286479,"line_start":342,"line_end":342,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"<DdsDecoder<R> as image::ImageDecoder>::scanline_bytes","value":"fn scanline_bytes<'_>(&'_ Self) -> u64","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5949},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":286546,"byte_end":286557,"line_start":346,"line_end":346,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<DdsDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":286642,"byte_end":286652,"line_start":350,"line_end":350,"column_start":8,"column_end":18},"name":"read_image","qualname":"<DdsDecoder<R> as image::ImageDecoder>::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5950},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1599},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dxt","qualname":"::codecs::dxt","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1610},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1645},{"krate":0,"index":1648},{"krate":0,"index":6792},{"krate":0,"index":6799},{"krate":0,"index":6801},{"krate":0,"index":6802},{"krate":0,"index":6804},{"krate":0,"index":6805},{"krate":0,"index":6807},{"krate":0,"index":6808},{"krate":0,"index":1651},{"krate":0,"index":1655},{"krate":0,"index":1662},{"krate":0,"index":1666},{"krate":0,"index":1675},{"krate":0,"index":1683},{"krate":0,"index":1687},{"krate":0,"index":1691},{"krate":0,"index":1694},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1719},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1738},{"krate":0,"index":1742},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752}],"decl_id":null,"docs":"  Decoding of DXT (S3TC) compression","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7865,"byte_end":7888,"line_start":224,"line_end":224,"column_start":5,"column_end":28}},{"value":"deprecated =\n\"DXT support will be removed or reworked in a future version. Prefer the `squish` crate instead. See https://github.com/image-rs/image/issues/1623\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7893,"byte_end":8056,"line_start":225,"line_end":225,"column_start":5,"column_end":168}},{"value":"/  Decoding of DXT (S3TC) compression","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":287784,"byte_end":287823,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":287824,"byte_end":287827,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  DXT is an image format that supports lossy compression","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":287828,"byte_end":287887,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":287888,"byte_end":287891,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":287892,"byte_end":287912,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_compression_s3tc.txt> - Description of the DXT compression OpenGL extensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":287913,"byte_end":288065,"line_start":6,"line_end":6,"column_start":1,"column_end":153}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288066,"byte_end":288069,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/  Note: this module only implements bare DXT encoding/decoding, it does not parse formats that can contain DXT files like .dds","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288070,"byte_end":288199,"line_start":8,"line_end":8,"column_start":1,"column_end":130}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6793},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288821,"byte_end":288825,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"DXT1","qualname":"::codecs::dxt::DxtVariant::DXT1","value":"DxtVariant::DXT1","parent":{"krate":0,"index":6792},"children":[],"decl_id":null,"docs":" The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n compressed into an 8 byte block of DXT1 data\n","sig":null,"attributes":[{"value":"/ The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288697,"byte_end":288763,"line_start":22,"line_end":22,"column_start":5,"column_end":71}},{"value":"/ compressed into an 8 byte block of DXT1 data","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288768,"byte_end":288816,"line_start":23,"line_end":23,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6795},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288956,"byte_end":288960,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"DXT3","qualname":"::codecs::dxt::DxtVariant::DXT3","value":"DxtVariant::DXT3","parent":{"krate":0,"index":6792},"children":[],"decl_id":null,"docs":" The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT3 data\n","sig":null,"attributes":[{"value":"/ The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288831,"byte_end":288898,"line_start":25,"line_end":25,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT3 data","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288903,"byte_end":288951,"line_start":26,"line_end":26,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6797},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":289091,"byte_end":289095,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"DXT5","qualname":"::codecs::dxt::DxtVariant::DXT5","value":"DxtVariant::DXT5","parent":{"krate":0,"index":6792},"children":[],"decl_id":null,"docs":" The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT5 data\n","sig":null,"attributes":[{"value":"/ The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288966,"byte_end":289033,"line_start":28,"line_end":28,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT5 data","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":289038,"byte_end":289086,"line_start":29,"line_end":29,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6792},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288680,"byte_end":288690,"line_start":21,"line_end":21,"column_start":10,"column_end":20},"name":"DxtVariant","qualname":"::codecs::dxt::DxtVariant","value":"enum DxtVariant { DXT1, DXT3, DXT5, }","parent":null,"children":[{"krate":0,"index":6793},{"krate":0,"index":6795},{"krate":0,"index":6797}],"decl_id":null,"docs":" What version of DXT compression are we using?\n Note that DXT2 and DXT4 are left away as they're\n just DXT3 and DXT5 with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ What version of DXT compression are we using?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288475,"byte_end":288524,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/ Note that DXT2 and DXT4 are left away as they're","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288525,"byte_end":288577,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/ just DXT3 and DXT5 with premultiplied alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":288578,"byte_end":288625,"line_start":19,"line_end":19,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":289716,"byte_end":289726,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"color_type","qualname":"<DxtVariant>::color_type","value":"fn color_type(Self) -> ColorType","parent":null,"children":[],"decl_id":null,"docs":" Returns the color type that is stored in this DXT variant\n","sig":null,"attributes":[{"value":"/ Returns the color type that is stored in this DXT variant","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":289643,"byte_end":289704,"line_start":51,"line_end":51,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":289933,"byte_end":289943,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"DxtDecoder","qualname":"::codecs::dxt::DxtDecoder","value":"DxtDecoder {  }","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661}],"decl_id":null,"docs":" DXT decoder\n","sig":null,"attributes":[{"value":"/ DXT decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":289906,"byte_end":289921,"line_start":60,"line_end":60,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":290523,"byte_end":290526,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<DxtDecoder<R>>::new","value":"fn new(R, u32, u32, DxtVariant) -> Result<DxtDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DXT decoder that decodes from the stream ```r```.\n As DXT is often stored as raw buffers with the width/height\n somewhere else the width and height of the image need\n to be passed in ```width``` and ```height```, as well as the\n DXT variant in ```variant```.\n width and height are required to be powers of 2 and at least 4.\n otherwise an error will be returned\n","sig":null,"attributes":[{"value":"/ Create a new DXT decoder that decodes from the stream ```r```.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":290092,"byte_end":290158,"line_start":70,"line_end":70,"column_start":5,"column_end":71}},{"value":"/ As DXT is often stored as raw buffers with the width/height","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":290163,"byte_end":290226,"line_start":71,"line_end":71,"column_start":5,"column_end":68}},{"value":"/ somewhere else the width and height of the image need","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":290231,"byte_end":290288,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ to be passed in ```width``` and ```height```, as well as the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":290293,"byte_end":290357,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ DXT variant in ```variant```.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":290362,"byte_end":290395,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/ width and height are required to be powers of 2 and at least 4.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":290400,"byte_end":290467,"line_start":75,"line_end":75,"column_start":5,"column_end":72}},{"value":"/ otherwise an error will be returned","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":290472,"byte_end":290511,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":292164,"byte_end":292174,"line_start":123,"line_end":123,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<DxtDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":292268,"byte_end":292278,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"color_type","qualname":"<DxtDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":292349,"byte_end":292363,"line_start":131,"line_end":131,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"<DxtDecoder<R> as image::ImageDecoder>::scanline_bytes","value":"fn scanline_bytes<'_>(&'_ Self) -> u64","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5949},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":292479,"byte_end":292490,"line_start":135,"line_end":135,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<DxtDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":292688,"byte_end":292698,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"read_image","qualname":"<DxtDecoder<R> as image::ImageDecoder>::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5950},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":293039,"byte_end":293062,"line_start":153,"line_end":153,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"<DxtDecoder<R> as image::ImageDecoderRect>::read_rect_with_progress","value":"fn read_rect_with_progress<F, '_,\n'_>(&'_ mut Self, u32, u32, u32, u32, &'_ mut [u8], F) -> ImageResult<()>\nwhere F: Fn(Progress) -> ()","parent":{"krate":0,"index":5955},"children":[],"decl_id":{"krate":0,"index":5959},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1683},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":293948,"byte_end":293957,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"DxtReader","qualname":"::codecs::dxt::DxtReader","value":"DxtReader {  }","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686}],"decl_id":null,"docs":" DXT reader\n","sig":null,"attributes":[{"value":"/ DXT reader","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":293922,"byte_end":293936,"line_start":186,"line_end":186,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294074,"byte_end":294078,"line_start":193,"line_end":193,"column_start":8,"column_end":12},"name":"read","qualname":"<DxtReader<R> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294270,"byte_end":294280,"line_start":200,"line_end":200,"column_start":12,"column_end":22},"name":"DxtEncoder","qualname":"::codecs::dxt::DxtEncoder","value":"DxtEncoder {  }","parent":null,"children":[{"krate":0,"index":1693}],"decl_id":null,"docs":" DXT encoder\n","sig":null,"attributes":[{"value":"/ DXT encoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294243,"byte_end":294258,"line_start":199,"line_end":199,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294411,"byte_end":294414,"line_start":206,"line_end":206,"column_start":12,"column_end":15},"name":"new","qualname":"<DxtEncoder<W>>::new","value":"fn new(W) -> DxtEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294341,"byte_end":294399,"line_start":205,"line_end":205,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294678,"byte_end":294684,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"encode","qualname":"<DxtEncoder<W>>::encode","value":"fn encode<'_>(Self, &'_ [u8], u32, u32, DxtVariant) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image data ```data```\n that has dimensions ```width``` and ```height```\n in ```DxtVariant``` ```variant```\n data is assumed to be in variant.color_type()\n","sig":null,"attributes":[{"value":"/ Encodes the image data ```data```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294476,"byte_end":294513,"line_start":210,"line_end":210,"column_start":5,"column_end":42}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294518,"byte_end":294570,"line_start":211,"line_end":211,"column_start":5,"column_end":57}},{"value":"/ in ```DxtVariant``` ```variant```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294575,"byte_end":294612,"line_start":212,"line_end":212,"column_start":5,"column_end":42}},{"value":"/ data is assumed to be in variant.color_type()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294617,"byte_end":294666,"line_start":213,"line_end":213,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1754},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"farbfeld","qualname":"::codecs::farbfeld","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":1758},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1787},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1810},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1832},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1849},{"krate":0,"index":1852},{"krate":0,"index":1855},{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1869},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":1886}],"decl_id":null,"docs":" Decoding of farbfeld images","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8078,"byte_end":8106,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"/ Decoding of farbfeld images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":318763,"byte_end":318794,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":318795,"byte_end":318798,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ farbfeld is a lossless image format which is easy to parse, pipe and compress.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":318799,"byte_end":318881,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":318882,"byte_end":318885,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ It has the following format:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":318886,"byte_end":318918,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":318919,"byte_end":318922,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ | Bytes  | Description                                             |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":318923,"byte_end":318995,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ |--------|---------------------------------------------------------|","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":318996,"byte_end":319068,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ | 8      | \"farbfeld\" magic value                                  |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":319069,"byte_end":319141,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ | 4      | 32-Bit BE unsigned integer (width)                      |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":319142,"byte_end":319214,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ | 4      | 32-Bit BE unsigned integer (height)                     |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":319215,"byte_end":319287,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ | [2222] | 4⋅16-Bit BE unsigned integers [RGBA] / pixel, row-major |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":319288,"byte_end":319362,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":319363,"byte_end":319366,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The RGB-data should be sRGB for best interoperability and not alpha-premultiplied.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":319367,"byte_end":319453,"line_start":14,"line_end":14,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":319454,"byte_end":319457,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":319458,"byte_end":319477,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"/ * <https://tools.suckless.org/farbfeld/> - the farbfeld specification","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":319478,"byte_end":319551,"line_start":17,"line_end":17,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1825},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":319962,"byte_end":319976,"line_start":32,"line_end":32,"column_start":12,"column_end":26},"name":"FarbfeldReader","qualname":"::codecs::farbfeld::FarbfeldReader","value":"FarbfeldReader {  }","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831}],"decl_id":null,"docs":" farbfeld Reader\n","sig":null,"attributes":[{"value":"/ farbfeld Reader","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":319931,"byte_end":319950,"line_start":31,"line_end":31,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":321930,"byte_end":321934,"line_start":92,"line_end":92,"column_start":8,"column_end":12},"name":"read","qualname":"<FarbfeldReader<R> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":322723,"byte_end":322727,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"seek","qualname":"<FarbfeldReader<R> as std::io::Seek>::seek","value":"fn seek<'_>(&'_ mut Self, SeekFrom) -> io::Result<u64>","parent":{"krate":1,"index":4742},"children":[],"decl_id":{"krate":1,"index":4743},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":325312,"byte_end":325327,"line_start":187,"line_end":187,"column_start":12,"column_end":27},"name":"FarbfeldDecoder","qualname":"::codecs::farbfeld::FarbfeldDecoder","value":"FarbfeldDecoder {  }","parent":null,"children":[{"krate":0,"index":1857}],"decl_id":null,"docs":" farbfeld decoder\n","sig":null,"attributes":[{"value":"/ farbfeld decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":325280,"byte_end":325300,"line_start":186,"line_end":186,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":325486,"byte_end":325489,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldDecoder<R>>::new","value":"fn new(R) -> ImageResult<FarbfeldDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":325412,"byte_end":325474,"line_start":192,"line_end":192,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":325761,"byte_end":325771,"line_start":203,"line_end":203,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<FarbfeldDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":325857,"byte_end":325867,"line_start":207,"line_end":207,"column_start":8,"column_end":18},"name":"color_type","qualname":"<FarbfeldDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":325930,"byte_end":325941,"line_start":211,"line_end":211,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<FarbfeldDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":326017,"byte_end":326031,"line_start":215,"line_end":215,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"<FarbfeldDecoder<R> as image::ImageDecoder>::scanline_bytes","value":"fn scanline_bytes<'_>(&'_ Self) -> u64","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5949},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":326150,"byte_end":326173,"line_start":221,"line_end":221,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"<FarbfeldDecoder<R> as image::ImageDecoderRect>::read_rect_with_progress","value":"fn read_rect_with_progress<F, '_,\n'_>(&'_ mut Self, u32, u32, u32, u32, &'_ mut [u8], F) -> ImageResult<()>\nwhere F: Fn(Progress) -> ()","parent":{"krate":0,"index":5955},"children":[],"decl_id":{"krate":0,"index":5959},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1877},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":326947,"byte_end":326962,"line_start":250,"line_end":250,"column_start":12,"column_end":27},"name":"FarbfeldEncoder","qualname":"::codecs::farbfeld::FarbfeldEncoder","value":"FarbfeldEncoder {  }","parent":null,"children":[{"krate":0,"index":1879}],"decl_id":null,"docs":" farbfeld encoder\n","sig":null,"attributes":[{"value":"/ farbfeld encoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":326915,"byte_end":326935,"line_start":249,"line_end":249,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":327130,"byte_end":327133,"line_start":256,"line_end":256,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldEncoder<W>>::new","value":"fn new(W) -> FarbfeldEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```. The writer should be buffered.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```. The writer should be buffered.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":327028,"byte_end":327118,"line_start":255,"line_end":255,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":327353,"byte_end":327359,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"name":"encode","qualname":"<FarbfeldEncoder<W>>::encode","value":"fn encode<'_>(Self, &'_ [u8], u32, u32) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data``` (native endian)\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data``` (native endian)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":327236,"byte_end":327284,"line_start":260,"line_end":260,"column_start":5,"column_end":53}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":327289,"byte_end":327341,"line_start":261,"line_end":261,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":328078,"byte_end":328089,"line_start":287,"line_end":287,"column_start":8,"column_end":19},"name":"write_image","qualname":"<FarbfeldEncoder<W> as image::ImageEncoder>::write_image","value":"fn write_image<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":5964},"children":[],"decl_id":{"krate":0,"index":5965},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1889},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::codecs::gif","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","parent":null,"children":[{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1922},{"krate":0,"index":1925},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1945},{"krate":0,"index":1948},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":1985},{"krate":0,"index":1989},{"krate":0,"index":1993},{"krate":0,"index":1998},{"krate":0,"index":2002},{"krate":0,"index":2010},{"krate":0,"index":2016},{"krate":0,"index":2019},{"krate":0,"index":2025},{"krate":0,"index":2029},{"krate":0,"index":2036},{"krate":0,"index":6810},{"krate":0,"index":6816},{"krate":0,"index":6818},{"krate":0,"index":6819},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2046},{"krate":0,"index":2062}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8133,"byte_end":8156,"line_start":229,"line_end":229,"column_start":5,"column_end":28}},{"value":"/  Decoding of GIF Images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":331737,"byte_end":331764,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":331765,"byte_end":331768,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  GIF (Graphics Interchange Format) is an image format that supports lossless compression.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":331769,"byte_end":331862,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":331863,"byte_end":331866,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":331867,"byte_end":331887,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <http://www.w3.org/Graphics/GIF/spec-gif89a.txt> - The GIF Specification","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":331888,"byte_end":331967,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":331968,"byte_end":331971,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":331972,"byte_end":331986,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":331987,"byte_end":332005,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/ use image::codecs::gif::{GifDecoder, GifEncoder};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332006,"byte_end":332059,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"/ use image::{ImageDecoder, AnimationDecoder};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332060,"byte_end":332108,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332109,"byte_end":332131,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332132,"byte_end":332172,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ // Decode a gif into frames","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332173,"byte_end":332204,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/ let file_in = File::open(\"foo.gif\")?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332205,"byte_end":332246,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let mut decoder = GifDecoder::new(file_in).unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332247,"byte_end":332303,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ let frames = decoder.into_frames();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332304,"byte_end":332343,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ let frames = frames.collect_frames().expect(\"error decoding gif\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332344,"byte_end":332414,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332415,"byte_end":332418,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // Encode frames into a gif and save to a file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332419,"byte_end":332469,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ let mut file_out = File::open(\"out.gif\")?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332470,"byte_end":332516,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ let mut encoder = GifEncoder::new(file_out);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332517,"byte_end":332565,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ encoder.encode_frames(frames.into_iter());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332566,"byte_end":332612,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332613,"byte_end":332625,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332626,"byte_end":332633,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332634,"byte_end":332641,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"allow(clippy :: while_let_loop)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":332642,"byte_end":332675,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1985},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":333293,"byte_end":333303,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"GifDecoder","qualname":"::codecs::gif::GifDecoder","value":"GifDecoder {  }","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1988}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"/ GIF decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":333266,"byte_end":333281,"line_start":50,"line_end":50,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":333471,"byte_end":333474,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<GifDecoder<R>>::new","value":"fn new(R) -> ImageResult<GifDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam `r`\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes the input steam `r`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":333401,"byte_end":333459,"line_start":57,"line_end":57,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":333876,"byte_end":333887,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"with_limits","qualname":"<GifDecoder<R>>::with_limits","value":"fn with_limits(R, Limits) -> ImageResult<GifDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam `r`, using limits `limits`\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes the input steam `r`, using limits `limits`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":333783,"byte_end":333864,"line_start":68,"line_end":68,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":334248,"byte_end":334257,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"GifReader","qualname":"::codecs::gif::GifReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":334191,"byte_end":334236,"line_start":80,"line_end":80,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":334334,"byte_end":334338,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"read","qualname":"<GifReader<R> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":334427,"byte_end":334438,"line_start":86,"line_end":86,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"<GifReader<R> as std::io::Read>::read_to_end","value":"fn read_to_end<'_, '_>(&'_ mut Self, &'_ mut Vec<u8>) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4672},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":334790,"byte_end":334800,"line_start":99,"line_end":99,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<GifDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":334947,"byte_end":334957,"line_start":106,"line_end":106,"column_start":8,"column_end":18},"name":"color_type","qualname":"<GifDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":335019,"byte_end":335030,"line_start":110,"line_end":110,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<GifDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":335195,"byte_end":335205,"line_start":117,"line_end":117,"column_start":8,"column_end":18},"name":"read_image","qualname":"<GifDecoder<R> as image::ImageDecoder>::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5950},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":344815,"byte_end":344826,"line_start":364,"line_end":364,"column_start":8,"column_end":19},"name":"into_frames","qualname":"<GifDecoder<R> as image::AnimationDecoder>::into_frames","value":"fn into_frames(Self) -> animation::Frames","parent":{"krate":0,"index":5961},"children":[],"decl_id":{"krate":0,"index":5963},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6811},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":345711,"byte_end":345717,"line_start":396,"line_end":396,"column_start":5,"column_end":11},"name":"Finite","qualname":"::codecs::gif::Repeat::Finite","value":"Repeat::Finite(u16)","parent":{"krate":0,"index":6810},"children":[],"decl_id":null,"docs":" Finite number of repetitions\n","sig":null,"attributes":[{"value":"/ Finite number of repetitions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":345674,"byte_end":345706,"line_start":395,"line_end":395,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6813},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":345718,"byte_end":345721,"line_start":396,"line_end":396,"column_start":12,"column_end":15},"name":"0","qualname":"::codecs::gif::Repeat::Finite::0","value":"u16","parent":{"krate":0,"index":6811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6814},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":345748,"byte_end":345756,"line_start":398,"line_end":398,"column_start":5,"column_end":13},"name":"Infinite","qualname":"::codecs::gif::Repeat::Infinite","value":"Repeat::Infinite","parent":{"krate":0,"index":6810},"children":[],"decl_id":null,"docs":" Looping GIF\n","sig":null,"attributes":[{"value":"/ Looping GIF","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":345728,"byte_end":345743,"line_start":397,"line_end":397,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":6810},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":345661,"byte_end":345667,"line_start":394,"line_end":394,"column_start":10,"column_end":16},"name":"Repeat","qualname":"::codecs::gif::Repeat","value":"enum Repeat { Finite(u16), Infinite, }","parent":null,"children":[{"krate":0,"index":6811},{"krate":0,"index":6814}],"decl_id":null,"docs":" Number of repetitions for a GIF animation\n","sig":null,"attributes":[{"value":"/ Number of repetitions for a GIF animation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":345576,"byte_end":345621,"line_start":392,"line_end":392,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2040},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":346010,"byte_end":346020,"line_start":411,"line_end":411,"column_start":12,"column_end":22},"name":"GifEncoder","qualname":"::codecs::gif::GifEncoder","value":"GifEncoder {  }","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":345982,"byte_end":345998,"line_start":410,"line_end":410,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":346217,"byte_end":346220,"line_start":420,"line_end":420,"column_start":12,"column_end":15},"name":"new","qualname":"<GifEncoder<W>>::new","value":"fn new(W) -> GifEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[{"value":"/ Creates a new GIF encoder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":346175,"byte_end":346205,"line_start":419,"line_end":419,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":346512,"byte_end":346526,"line_start":427,"line_end":427,"column_start":12,"column_end":26},"name":"new_with_speed","qualname":"<GifEncoder<W>>::new_with_speed","value":"fn new_with_speed(W, i32) -> GifEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new GIF encoder, and has the speed parameter `speed`. See\n [`Frame::from_rgba_speed`](https://docs.rs/gif/latest/gif/struct.Frame.html#method.from_rgba_speed)\n for more information.\n","sig":null,"attributes":[{"value":"/ Create a new GIF encoder, and has the speed parameter `speed`. See","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":346292,"byte_end":346362,"line_start":424,"line_end":424,"column_start":5,"column_end":75}},{"value":"/ [`Frame::from_rgba_speed`](https://docs.rs/gif/latest/gif/struct.Frame.html#method.from_rgba_speed)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":346367,"byte_end":346470,"line_start":425,"line_end":425,"column_start":5,"column_end":108}},{"value":"/ for more information.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":346475,"byte_end":346500,"line_start":426,"line_end":426,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":346885,"byte_end":346895,"line_start":441,"line_end":441,"column_start":12,"column_end":22},"name":"set_repeat","qualname":"<GifEncoder<W>>::set_repeat","value":"fn set_repeat<'_>(&'_ mut Self, Repeat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the repeat behaviour of the encoded GIF\n","sig":null,"attributes":[{"value":"/ Set the repeat behaviour of the encoded GIF","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":346826,"byte_end":346873,"line_start":440,"line_end":440,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":347236,"byte_end":347242,"line_start":452,"line_end":452,"column_start":12,"column_end":18},"name":"encode","qualname":"<GifEncoder<W>>::encode","value":"fn encode<'_, '_>(&'_ mut Self, &'_ [u8], u32, u32, ColorType)\n-> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode a single image.\n","sig":null,"attributes":[{"value":"/ Encode a single image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":347198,"byte_end":347224,"line_start":451,"line_end":451,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":348000,"byte_end":348012,"line_start":475,"line_end":475,"column_start":12,"column_end":24},"name":"encode_frame","qualname":"<GifEncoder<W>>::encode_frame","value":"fn encode_frame<'_>(&'_ mut Self, animation::Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode one frame of animation.\n","sig":null,"attributes":[{"value":"/ Encode one frame of animation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":347954,"byte_end":347988,"line_start":474,"line_end":474,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":348298,"byte_end":348311,"line_start":482,"line_end":482,"column_start":12,"column_end":25},"name":"encode_frames","qualname":"<GifEncoder<W>>::encode_frames","value":"fn encode_frames<F, '_>(&'_ mut Self, F) -> ImageResult<()> where\nF: IntoIterator<Item = animation::Frame>","parent":null,"children":[],"decl_id":null,"docs":" Encodes Frames.\n Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.\n","sig":null,"attributes":[{"value":"/ Encodes Frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":348168,"byte_end":348187,"line_start":480,"line_end":480,"column_start":5,"column_end":24}},{"value":"/ Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":348192,"byte_end":348286,"line_start":481,"line_end":481,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":348790,"byte_end":348807,"line_start":495,"line_end":495,"column_start":12,"column_end":29},"name":"try_encode_frames","qualname":"<GifEncoder<W>>::try_encode_frames","value":"fn try_encode_frames<F, '_>(&'_ mut Self, F) -> ImageResult<()> where\nF: IntoIterator<Item = ImageResult<animation::Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Try to encode a collection of `ImageResult<animation::Frame>` objects.\n Use this function to encode an `animation::Frames` like iterator.\n Whenever an `Err` item is encountered, that value is returned without further actions.\n","sig":null,"attributes":[{"value":"/ Try to encode a collection of `ImageResult<animation::Frame>` objects.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":348535,"byte_end":348609,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/ Use this function to encode an `animation::Frames` like iterator.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":348614,"byte_end":348683,"line_start":493,"line_end":493,"column_start":5,"column_end":74}},{"value":"/ Whenever an `Err` item is encountered, that value is returned without further actions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":348688,"byte_end":348778,"line_start":494,"line_end":494,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::codecs::hdr","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2306},{"krate":0,"index":2377},{"krate":0,"index":2378}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8178,"byte_end":8201,"line_start":231,"line_end":231,"column_start":5,"column_end":28}},{"value":"/  Decoding of Radiance HDR Images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","byte_start":353167,"byte_end":353203,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","byte_start":353204,"byte_end":353207,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder for Radiance HDR images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","byte_start":353208,"byte_end":353246,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","byte_start":353247,"byte_end":353250,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","byte_start":353251,"byte_end":353271,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","byte_start":353272,"byte_end":353275,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/  * <http://radsite.lbl.gov/radiance/refer/filefmts.pdf>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","byte_start":353276,"byte_end":353335,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/  * <http://www.graphics.cornell.edu/~bjw/rgbe/rgbe.c>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","byte_start":353336,"byte_end":353393,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\mod.rs","byte_start":353394,"byte_end":353397,"line_start":9,"line_end":9,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":356955,"byte_end":356959,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageError as std::convert::From>::from","value":"fn from(DecoderError) -> ImageError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6894},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":358085,"byte_end":358095,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"HdrAdapter","qualname":"::codecs::hdr::decoder::HdrAdapter","value":"HdrAdapter {  }","parent":null,"children":[{"krate":0,"index":6896},{"krate":0,"index":6897}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[{"value":"/ Adapter to conform to ```ImageDecoder``` trait","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":358006,"byte_end":358056,"line_start":127,"line_end":127,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":358265,"byte_end":358268,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrAdapter<R>>::new","value":"fn new(R) -> ImageResult<HdrAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[{"value":"/ Creates adapter","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":358234,"byte_end":358253,"line_start":136,"line_end":136,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":358541,"byte_end":358554,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HdrAdapter<R>>::new_nonstrict","value":"fn new_nonstrict(R) -> ImageResult<HdrAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[{"value":"/ Allows reading old Radiance HDR images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":358487,"byte_end":358529,"line_start":146,"line_end":146,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":359534,"byte_end":359543,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"HdrReader","qualname":"::codecs::hdr::decoder::HdrReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":359477,"byte_end":359522,"line_start":175,"line_end":175,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":359620,"byte_end":359624,"line_start":178,"line_end":178,"column_start":8,"column_end":12},"name":"read","qualname":"<HdrReader<R> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":359713,"byte_end":359724,"line_start":181,"line_end":181,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"<HdrReader<R> as std::io::Read>::read_to_end","value":"fn read_to_end<'_, '_>(&'_ mut Self, &'_ mut Vec<u8>) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4672},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":360079,"byte_end":360089,"line_start":194,"line_end":194,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<HdrAdapter<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":360171,"byte_end":360181,"line_start":198,"line_end":198,"column_start":8,"column_end":18},"name":"color_type","qualname":"<HdrAdapter<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":360242,"byte_end":360253,"line_start":202,"line_end":202,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<HdrAdapter<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":360418,"byte_end":360428,"line_start":209,"line_end":209,"column_start":8,"column_end":18},"name":"read_image","qualname":"<HdrAdapter<R> as image::ImageDecoder>::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5950},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":360600,"byte_end":360623,"line_start":215,"line_end":215,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"<HdrAdapter<R> as image::ImageDecoderRect>::read_rect_with_progress","value":"fn read_rect_with_progress<F, '_,\n'_>(&'_ mut Self, u32, u32, u32, u32, &'_ mut [u8], F) -> ImageResult<()>\nwhere F: Fn(Progress) -> ()","parent":{"krate":0,"index":5955},"children":[],"decl_id":{"krate":0,"index":5959},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361117,"byte_end":361126,"line_start":239,"line_end":239,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::codecs::hdr::decoder::SIGNATURE","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[{"value":"/ Radiance HDR file signature","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361075,"byte_end":361106,"line_start":238,"line_end":238,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6901},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361244,"byte_end":361254,"line_start":244,"line_end":244,"column_start":12,"column_end":22},"name":"HdrDecoder","qualname":"::codecs::hdr::decoder::HdrDecoder","value":"HdrDecoder {  }","parent":null,"children":[{"krate":0,"index":6903},{"krate":0,"index":6904},{"krate":0,"index":6905},{"krate":0,"index":6906}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[{"value":"/ An Radiance HDR decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361188,"byte_end":361215,"line_start":242,"line_end":242,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6910},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361479,"byte_end":361489,"line_start":254,"line_end":254,"column_start":12,"column_end":22},"name":"Rgbe8Pixel","qualname":"::codecs::hdr::decoder::Rgbe8Pixel","value":"Rgbe8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":6911},{"krate":0,"index":6913}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"/ Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361329,"byte_end":361402,"line_start":251,"line_end":251,"column_start":1,"column_end":74}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361403,"byte_end":361413,"line_start":252,"line_end":252,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":6911},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361525,"byte_end":361526,"line_start":256,"line_end":256,"column_start":9,"column_end":10},"name":"c","qualname":"::codecs::hdr::decoder::Rgbe8Pixel::c","value":"[u8; 3]","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[{"value":"/ Color components","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361496,"byte_end":361516,"line_start":255,"line_end":255,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":6913},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361562,"byte_end":361563,"line_start":258,"line_end":258,"column_start":9,"column_end":10},"name":"e","qualname":"::codecs::hdr::decoder::Rgbe8Pixel::e","value":"u8","parent":{"krate":0,"index":6910},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[{"value":"/ Exponent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361541,"byte_end":361553,"line_start":257,"line_end":257,"column_start":5,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361624,"byte_end":361629,"line_start":262,"line_end":262,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::codecs::hdr::decoder::rgbe8","value":"fn rgbe8(u8, u8, u8, u8) -> Rgbe8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```Rgbe8Pixel``` from components\n","sig":null,"attributes":[{"value":"/ Creates ```Rgbe8Pixel``` from components","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361572,"byte_end":361616,"line_start":261,"line_end":261,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361818,"byte_end":361824,"line_start":269,"line_end":269,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<Rgbe8Pixel>::to_hdr","value":"fn to_hdr(Self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgbe8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"/ Converts ```Rgbe8Pixel``` into ```Rgb<f32>``` linearly","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361734,"byte_end":361792,"line_start":267,"line_end":267,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361797,"byte_end":361806,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362584,"byte_end":362590,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<Rgbe8Pixel>::to_ldr","value":"fn to_ldr<T>(Self) -> Rgb<T> where T: Primitive + Zero","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgbe8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"/ Converts ```Rgbe8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362319,"byte_end":362393,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362398,"byte_end":362401,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362406,"byte_end":362455,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362460,"byte_end":362463,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362468,"byte_end":362479,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362484,"byte_end":362487,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Panics when ```T::max_value()``` cannot be represented as f32.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362492,"byte_end":362558,"line_start":289,"line_end":289,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362563,"byte_end":362572,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362976,"byte_end":362994,"line_start":304,"line_end":304,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<Rgbe8Pixel>::to_ldr_scale_gamma","value":"fn to_ldr_scale_gamma<T>(Self, f32, f32) -> Rgb<T> where T: Primitive + Zero","parent":null,"children":[],"decl_id":null,"docs":" Converts Rgbe8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"/ Converts Rgbe8Pixel into Rgb<T> using provided scale and gamma","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362683,"byte_end":362749,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362754,"byte_end":362757,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362762,"byte_end":362811,"line_start":297,"line_end":297,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362816,"byte_end":362819,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362824,"byte_end":362835,"line_start":299,"line_end":299,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362840,"byte_end":362843,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Panics when T::max_value() cannot be represented as f32.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362848,"byte_end":362908,"line_start":301,"line_end":301,"column_start":5,"column_end":65}},{"value":"/ Panics when scale or gamma is NaN","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362913,"byte_end":362950,"line_start":302,"line_end":302,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":362955,"byte_end":362964,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364202,"byte_end":364205,"line_start":335,"line_end":335,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrDecoder<R>>::new","value":"fn new(R) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HdrDecoder\n strict mode is enabled\n","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```r```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364053,"byte_end":364108,"line_start":332,"line_end":332,"column_start":5,"column_end":60}},{"value":"/ if the header is valid, creates HdrDecoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364113,"byte_end":364159,"line_start":333,"line_end":333,"column_start":5,"column_end":51}},{"value":"/ strict mode is enabled","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364164,"byte_end":364190,"line_start":334,"line_end":334,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364613,"byte_end":364628,"line_start":346,"line_end":346,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HdrDecoder<R>>::with_strictness","value":"fn with_strictness(R, bool) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HdrDecoder```.","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```reader```,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364310,"byte_end":364371,"line_start":339,"line_end":339,"column_start":5,"column_end":66}},{"value":"/ if the header is valid, creates ```HdrDecoder```.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364376,"byte_end":364429,"line_start":340,"line_end":340,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364434,"byte_end":364437,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ strict enables strict mode","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364442,"byte_end":364472,"line_start":342,"line_end":342,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364477,"byte_end":364480,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Warning! Reading wrong file in non-strict mode","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364485,"byte_end":364535,"line_start":344,"line_end":344,"column_start":5,"column_end":55}},{"value":"/   could consume file size worth of memory in the process.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364540,"byte_end":364601,"line_start":345,"line_end":345,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":367717,"byte_end":367725,"line_start":427,"line_end":427,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HdrDecoder<R>>::metadata","value":"fn metadata<'_>(&'_ Self) -> HdrMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HdrMetadata``` for details.\n","sig":null,"attributes":[{"value":"/ Returns file metadata. Refer to ```HdrMetadata``` for details.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":367639,"byte_end":367705,"line_start":426,"line_end":426,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":367856,"byte_end":367873,"line_start":432,"line_end":432,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HdrDecoder<R>>::read_image_native","value":"fn read_image_native(Self) -> ImageResult<Vec<Rgbe8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of RGBE8 pixels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":367787,"byte_end":367844,"line_start":431,"line_end":431,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":368506,"byte_end":368526,"line_start":447,"line_end":447,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HdrDecoder<R>>::read_image_transform","value":"fn read_image_transform<T, F, '_>(Self, F, &'_ mut [T]) -> ImageResult<()>\nwhere T: Send, F: Send + Sync + Fn(Rgbe8Pixel) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of transformed pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of transformed pixels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":368431,"byte_end":368494,"line_start":446,"line_end":446,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":369665,"byte_end":369679,"line_start":483,"line_end":483,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HdrDecoder<R>>::read_image_ldr","value":"fn read_image_ldr(Self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<u8> pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":369562,"byte_end":369622,"line_start":481,"line_end":481,"column_start":5,"column_end":65}},{"value":"/ scale = 1, gamma = 2.2","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":369627,"byte_end":369653,"line_start":482,"line_end":482,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":369983,"byte_end":369997,"line_start":491,"line_end":491,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HdrDecoder<R>>::read_image_hdr","value":"fn read_image_hdr(Self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<f32> pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":369902,"byte_end":369963,"line_start":489,"line_end":489,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":369968,"byte_end":369971,"line_start":490,"line_end":490,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":370369,"byte_end":370378,"line_start":502,"line_end":502,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<HdrDecoder<R> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8410},"children":[],"decl_id":{"krate":2,"index":8413},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":370805,"byte_end":370828,"line_start":516,"line_end":516,"column_start":12,"column_end":35},"name":"HdrImageDecoderIterator","qualname":"::codecs::hdr::decoder::HdrImageDecoderIterator","value":"HdrImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[{"value":"/ Scanline buffered pixel by pixel iterator","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":370748,"byte_end":370793,"line_start":515,"line_end":515,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":371551,"byte_end":371555,"line_start":542,"line_end":542,"column_start":8,"column_end":12},"name":"next","qualname":"<HdrImageDecoderIterator<R> as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":373005,"byte_end":373014,"line_start":582,"line_end":582,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<HdrImageDecoderIterator<R> as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8614},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6930},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378352,"byte_end":378363,"line_start":734,"line_end":734,"column_start":12,"column_end":23},"name":"HdrMetadata","qualname":"::codecs::hdr::decoder::HdrMetadata","value":"HdrMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":6931},{"krate":0,"index":6932},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6935},{"krate":0,"index":6936},{"krate":0,"index":6937}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[{"value":"/ Metadata for Radiance HDR image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378281,"byte_end":378316,"line_start":732,"line_end":732,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6931},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378501,"byte_end":378506,"line_start":737,"line_end":737,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::hdr::decoder::HdrMetadata::width","value":"u32","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[{"value":"/ Width of decoded image. It could be either scanline length,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378370,"byte_end":378433,"line_start":735,"line_end":735,"column_start":5,"column_end":68}},{"value":"/ or scanline count, depending on image orientation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378438,"byte_end":378492,"line_start":736,"line_end":736,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6932},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378585,"byte_end":378591,"line_start":739,"line_end":739,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::hdr::decoder::HdrMetadata::height","value":"u32","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[{"value":"/ Height of decoded image. It depends on orientation too.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378517,"byte_end":378576,"line_start":738,"line_end":738,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":6933},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378866,"byte_end":378877,"line_start":743,"line_end":743,"column_start":9,"column_end":20},"name":"orientation","qualname":"::codecs::hdr::decoder::HdrMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[{"value":"/ Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378602,"byte_end":378702,"line_start":740,"line_end":740,"column_start":5,"column_end":105}},{"value":"/ First pair tells how resulting pixel coordinates change along a scanline.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378707,"byte_end":378784,"line_start":741,"line_end":741,"column_start":5,"column_end":82}},{"value":"/ Second pair tells how they change from one scanline to the next.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378789,"byte_end":378857,"line_start":742,"line_end":742,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":6934},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379102,"byte_end":379110,"line_start":748,"line_end":748,"column_start":9,"column_end":17},"name":"exposure","qualname":"::codecs::hdr::decoder::HdrMetadata::exposure","value":"std::option::Option<f32>","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in\n watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by exposure to get to get physical radiance in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378905,"byte_end":378975,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ watts/steradian/m<sup>2</sup>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":378980,"byte_end":379013,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379018,"byte_end":379021,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379026,"byte_end":379093,"line_start":747,"line_end":747,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":6935},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379354,"byte_end":379370,"line_start":753,"line_end":753,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::codecs::hdr::decoder::HdrMetadata::color_correction","value":"std::option::Option<(f32, f32, f32)>","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance\n in watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379129,"byte_end":379224,"line_start":749,"line_end":749,"column_start":5,"column_end":100}},{"value":"/ in watts/steradian/m<sup>2</sup>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379229,"byte_end":379265,"line_start":750,"line_end":750,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379270,"byte_end":379273,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379278,"byte_end":379345,"line_start":752,"line_end":752,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":6936},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379449,"byte_end":379467,"line_start":755,"line_end":755,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::codecs::hdr::decoder::HdrMetadata::pixel_aspect_ratio","value":"std::option::Option<f32>","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[{"value":"/ Pixel height divided by pixel width","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379401,"byte_end":379440,"line_start":754,"line_end":754,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6937},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379696,"byte_end":379713,"line_start":759,"line_end":759,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::codecs::hdr::decoder::HdrMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":6930},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[{"value":"/ All lines contained in image header are put here. Ordering of lines is preserved.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379486,"byte_end":379571,"line_start":756,"line_end":756,"column_start":5,"column_end":90}},{"value":"/ Lines in the form \"key=value\" are represented as (\"key\", \"value\").","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379576,"byte_end":379646,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"/ All other lines are (\"\", \"line\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379651,"byte_end":379687,"line_start":758,"line_end":758,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2291},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":389335,"byte_end":389348,"line_start":1006,"line_end":1006,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::codecs::hdr::decoder::read_raw_file","value":"fn read_raw_file<P>(P) -> ::std::io::Result<Vec<Rgb<f32>>> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[{"value":"/ Helper function for reading raw 3-channel f32 images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":389271,"byte_end":389327,"line_start":1005,"line_end":1005,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2333},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":390521,"byte_end":390531,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"HdrEncoder","qualname":"::codecs::hdr::encoder::HdrEncoder","value":"HdrEncoder {  }","parent":null,"children":[{"krate":0,"index":2335}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[{"value":"/ Radiance HDR encoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":390485,"byte_end":390509,"line_start":7,"line_end":7,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":390623,"byte_end":390626,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrEncoder<W>>::new","value":"fn new(W) -> HdrEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[{"value":"/ Creates encoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":390592,"byte_end":390611,"line_start":13,"line_end":13,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":390789,"byte_end":390795,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"encode","qualname":"<HdrEncoder<W>>::encode","value":"fn encode<'_>(Self, &'_ [Rgb<f32>], usize, usize) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":390688,"byte_end":390720,"line_start":18,"line_end":18,"column_start":5,"column_end":37}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":390725,"byte_end":390777,"line_start":19,"line_end":19,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":2375},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":398286,"byte_end":398294,"line_start":230,"line_end":230,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::codecs::hdr::encoder::to_rgbe8","value":"fn to_rgbe8(Rgb<f32>) -> Rgbe8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```Rgbe8Pixel```\n","sig":null,"attributes":[{"value":"/ Converts ```Rgb<f32>``` into ```Rgbe8Pixel```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":398229,"byte_end":398278,"line_start":229,"line_end":229,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":2379},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::codecs::ico","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\mod.rs","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":2528}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8223,"byte_end":8246,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/  Decoding and Encoding of ICO files","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\mod.rs","byte_start":405693,"byte_end":405732,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\mod.rs","byte_start":405733,"byte_end":405736,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder and encoder for ICO (Windows Icon) image container files.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\mod.rs","byte_start":405737,"byte_end":405809,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\mod.rs","byte_start":405810,"byte_end":405813,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\mod.rs","byte_start":405814,"byte_end":405834,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://msdn.microsoft.com/en-us/library/ms997538.aspx>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\mod.rs","byte_start":405835,"byte_end":405898,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/  * <https://en.wikipedia.org/wiki/ICO_%28file_format%29>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\mod.rs","byte_start":405899,"byte_end":405959,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":409221,"byte_end":409225,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageError as std::convert::From>::from","value":"fn from(DecoderError) -> ImageError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":410122,"byte_end":410132,"line_start":111,"line_end":111,"column_start":12,"column_end":22},"name":"IcoDecoder","qualname":"::codecs::ico::decoder::IcoDecoder","value":"IcoDecoder {  }","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":2482}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[{"value":"/ An ico decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":410092,"byte_end":410110,"line_start":110,"line_end":110,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":411272,"byte_end":411275,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"new","qualname":"<IcoDecoder<R>>::new","value":"fn new(R) -> ImageResult<IcoDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":411199,"byte_end":411260,"line_start":147,"line_end":147,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":414789,"byte_end":414798,"line_start":265,"line_end":265,"column_start":12,"column_end":21},"name":"IcoReader","qualname":"::codecs::ico::decoder::IcoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":414732,"byte_end":414777,"line_start":264,"line_end":264,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":414875,"byte_end":414879,"line_start":267,"line_end":267,"column_start":8,"column_end":12},"name":"read","qualname":"<IcoReader<R> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":414968,"byte_end":414979,"line_start":270,"line_end":270,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"<IcoReader<R> as std::io::Read>::read_to_end","value":"fn read_to_end<'_, '_>(&'_ mut Self, &'_ mut Vec<u8>) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4672},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":415338,"byte_end":415348,"line_start":283,"line_end":283,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<IcoDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":415539,"byte_end":415549,"line_start":290,"line_end":290,"column_start":8,"column_end":18},"name":"color_type","qualname":"<IcoDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":415739,"byte_end":415750,"line_start":297,"line_end":297,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<IcoDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":415915,"byte_end":415925,"line_start":304,"line_end":304,"column_start":8,"column_end":18},"name":"read_image","qualname":"<IcoDecoder<R> as image::ImageDecoder>::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5950},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":426192,"byte_end":426202,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"IcoEncoder","qualname":"::codecs::ico::encoder::IcoEncoder","value":"IcoEncoder {  }","parent":null,"children":[{"krate":0,"index":2573}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[{"value":"/ ICO encoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":426165,"byte_end":426180,"line_start":18,"line_end":18,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":426262,"byte_end":426270,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"IcoFrame","qualname":"::codecs::ico::encoder::IcoFrame","value":"IcoFrame {  }","parent":null,"children":[{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579}],"decl_id":null,"docs":" An ICO image entry\n","sig":null,"attributes":[{"value":"/ An ICO image entry","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":426228,"byte_end":426250,"line_start":23,"line_end":23,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":426655,"byte_end":426667,"line_start":38,"line_end":38,"column_start":12,"column_end":24},"name":"with_encoded","qualname":"<IcoFrame>::with_encoded","value":"fn with_encoded<impl Into<Cow<'a, [u8]>>>(impl Into<Cow<'a, [u8]>>, u32, u32,\nColorType) -> ImageResult<Self> where impl Into<Cow<'a, [u8]>>: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `IcoFrame` using a pre-encoded PNG or BMP","sig":null,"attributes":[{"value":"/ Construct a new `IcoFrame` using a pre-encoded PNG or BMP","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":426502,"byte_end":426563,"line_start":35,"line_end":35,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":426568,"byte_end":426571,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The `width` and `height` must be between 1 and 256 (inclusive).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":426576,"byte_end":426643,"line_start":37,"line_end":37,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":427837,"byte_end":427843,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"as_png","qualname":"<IcoFrame>::as_png","value":"fn as_png<'_>(&'_ [u8], u32, u32, ColorType) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `IcoFrame` by encoding `buf` as a PNG","sig":null,"attributes":[{"value":"/ Construct a new `IcoFrame` by encoding `buf` as a PNG","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":427689,"byte_end":427746,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":427751,"byte_end":427754,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The `width` and `height` must be between 1 and 256 (inclusive)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":427759,"byte_end":427825,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":428278,"byte_end":428281,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<IcoEncoder<W>>::new","value":"fn new(W) -> IcoEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":428207,"byte_end":428266,"line_start":85,"line_end":85,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":428751,"byte_end":428757,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"encode","qualname":"<IcoEncoder<W>>::encode","value":"fn encode<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.","sig":null,"attributes":[{"value":"/ Encodes the image ```image``` that has dimensions ```width``` and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":428343,"byte_end":428412,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ ```height``` and ```ColorType``` ```c```.  The dimensions of the image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":428417,"byte_end":428491,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ must be between 1 and 256 (inclusive) or an error will be returned.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":428496,"byte_end":428567,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":428572,"byte_end":428575,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Expects data to be big endian.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":428580,"byte_end":428614,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"deprecated =\n\"Use `IcoEncoder::write_image` instead. Beware that `write_image` has a different endianness convention\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":428619,"byte_end":428739,"line_start":95,"line_end":95,"column_start":5,"column_end":125}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":429338,"byte_end":429351,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"encode_images","qualname":"<IcoEncoder<W>>::encode_images","value":"fn encode_images<'_, '_>(Self, &'_ [IcoFrame]) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Takes some [`IcoFrame`]s and encodes them into an ICO.","sig":null,"attributes":[{"value":"/ Takes some [`IcoFrame`]s and encodes them into an ICO.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":429127,"byte_end":429185,"line_start":105,"line_end":105,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":429190,"byte_end":429193,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ `images` is a list of images, usually ordered by dimension, which","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":429198,"byte_end":429267,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/ must be between 1 and 65535 (inclusive) in length.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":429272,"byte_end":429326,"line_start":108,"line_end":108,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":430788,"byte_end":430799,"line_start":148,"line_end":148,"column_start":8,"column_end":19},"name":"write_image","qualname":"<IcoEncoder<W> as image::ImageEncoder>::write_image","value":"fn write_image<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":5964},"children":[],"decl_id":{"krate":0,"index":5965},"docs":" Write an ICO image with the specified width, height, and color type.","sig":null,"attributes":[{"value":"/ Write an ICO image with the specified width, height, and color type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":430471,"byte_end":430543,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":430548,"byte_end":430551,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ For color types with 16-bit per channel or larger, the contents of `buf` should be in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":430556,"byte_end":430645,"line_start":144,"line_end":144,"column_start":5,"column_end":94}},{"value":"/ native endian.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":430650,"byte_end":430668,"line_start":145,"line_end":145,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":430673,"byte_end":430676,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ WARNING: In image 0.23.14 and earlier this method erroneously expected buf to be in big endian.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":430681,"byte_end":430780,"line_start":147,"line_end":147,"column_start":5,"column_end":104}}]},{"kind":"Mod","id":{"krate":0,"index":2597},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::codecs::jpeg","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2690},{"krate":0,"index":2899},{"krate":0,"index":2910}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8268,"byte_end":8292,"line_start":235,"line_end":235,"column_start":5,"column_end":29}},{"value":"/ Decoding and Encoding of JPEG Images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":432067,"byte_end":432107,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":432108,"byte_end":432111,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":432112,"byte_end":432207,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ This module implements the Baseline JPEG standard.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":432208,"byte_end":432262,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":432263,"byte_end":432266,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":432267,"byte_end":432286,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/Graphics/JPEG/itu-t81.pdf> - The JPEG specification","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":432287,"byte_end":432363,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\mod.rs","byte_start":432364,"byte_end":432367,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2657},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":432850,"byte_end":432861,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"JpegDecoder","qualname":"::codecs::jpeg::decoder::JpegDecoder","value":"JpegDecoder {  }","parent":null,"children":[{"krate":0,"index":2659},{"krate":0,"index":2660}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":432822,"byte_end":432838,"line_start":12,"line_end":12,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":433040,"byte_end":433043,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegDecoder<R>>::new","value":"fn new(R) -> ImageResult<JpegDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":432967,"byte_end":433028,"line_start":19,"line_end":19,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2665},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":434238,"byte_end":434243,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"scale","qualname":"<JpegDecoder<R>>::scale","value":"fn scale<'_>(&'_ mut Self, u16, u16) -> ImageResult<(u16, u16)>","parent":null,"children":[],"decl_id":null,"docs":" Configure the decoder to scale the image during decoding.","sig":null,"attributes":[{"value":"/ Configure the decoder to scale the image during decoding.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":433624,"byte_end":433685,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":433690,"byte_end":433693,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This efficiently scales the image by the smallest supported","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":433698,"byte_end":433761,"line_start":38,"line_end":38,"column_start":5,"column_end":68}},{"value":"/ scale factor that produces an image larger than or equal to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":433766,"byte_end":433829,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/ the requested size in at least one axis. The currently","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":433834,"byte_end":433892,"line_start":40,"line_end":40,"column_start":5,"column_end":63}},{"value":"/ implemented scale factors are 1/8, 1/4, 1/2 and 1.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":433897,"byte_end":433951,"line_start":41,"line_end":41,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":433956,"byte_end":433959,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ To generate a thumbnail of an exact size, pass the desired","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":433964,"byte_end":434026,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/ size and then scale to the final size using a traditional","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":434031,"byte_end":434092,"line_start":44,"line_end":44,"column_start":5,"column_end":66}},{"value":"/ resampling algorithm.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":434097,"byte_end":434122,"line_start":45,"line_end":45,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":434127,"byte_end":434130,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The size of the image to be loaded, with the scale factor","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":434135,"byte_end":434196,"line_start":47,"line_end":47,"column_start":5,"column_end":66}},{"value":"/ applied, is returned.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":434201,"byte_end":434226,"line_start":48,"line_end":48,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":434675,"byte_end":434685,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"JpegReader","qualname":"::codecs::jpeg::decoder::JpegReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":434618,"byte_end":434663,"line_start":66,"line_end":66,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":434763,"byte_end":434767,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"read","qualname":"<JpegReader<R> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":434856,"byte_end":434867,"line_start":72,"line_end":72,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"<JpegReader<R> as std::io::Read>::read_to_end","value":"fn read_to_end<'_, '_>(&'_ mut Self, &'_ mut Vec<u8>) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4672},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":435221,"byte_end":435231,"line_start":85,"line_end":85,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<JpegDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":435378,"byte_end":435388,"line_start":92,"line_end":92,"column_start":8,"column_end":18},"name":"color_type","qualname":"<JpegDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":435482,"byte_end":435493,"line_start":96,"line_end":96,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<JpegDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":435843,"byte_end":435853,"line_start":106,"line_end":106,"column_start":8,"column_end":18},"name":"read_image","qualname":"<JpegDecoder<R> as image::ImageDecoder>::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5950},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7051},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479282,"byte_end":479298,"line_start":290,"line_end":290,"column_start":5,"column_end":21},"name":"PixelAspectRatio","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::PixelAspectRatio","value":"PixelDensityUnit::PixelAspectRatio","parent":{"krate":0,"index":7050},"children":[],"decl_id":null,"docs":" Represents the absence of a unit, the values indicate only a\n [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n","sig":null,"attributes":[{"value":"/ Represents the absence of a unit, the values indicate only a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479134,"byte_end":479198,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/ [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479203,"byte_end":479277,"line_start":289,"line_end":289,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7053},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479339,"byte_end":479345,"line_start":293,"line_end":293,"column_start":5,"column_end":11},"name":"Inches","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Inches","value":"PixelDensityUnit::Inches","parent":{"krate":0,"index":7050},"children":[],"decl_id":null,"docs":" Pixels per inch (2.54 cm)\n","sig":null,"attributes":[{"value":"/ Pixels per inch (2.54 cm)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479305,"byte_end":479334,"line_start":292,"line_end":292,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7055},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479382,"byte_end":479393,"line_start":296,"line_end":296,"column_start":5,"column_end":16},"name":"Centimeters","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Centimeters","value":"PixelDensityUnit::Centimeters","parent":{"krate":0,"index":7050},"children":[],"decl_id":null,"docs":" Pixels per centimeter\n","sig":null,"attributes":[{"value":"/ Pixels per centimeter","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479352,"byte_end":479377,"line_start":295,"line_end":295,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":7050},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479111,"byte_end":479127,"line_start":287,"line_end":287,"column_start":10,"column_end":26},"name":"PixelDensityUnit","qualname":"::codecs::jpeg::encoder::PixelDensityUnit","value":"enum PixelDensityUnit { PixelAspectRatio, Inches, Centimeters, }","parent":null,"children":[{"krate":0,"index":7051},{"krate":0,"index":7053},{"krate":0,"index":7055}],"decl_id":null,"docs":" Represents a unit in which the density of an image is measured\n","sig":null,"attributes":[{"value":"/ Represents a unit in which the density of an image is measured","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":478990,"byte_end":479056,"line_start":285,"line_end":285,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7068},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479738,"byte_end":479750,"line_start":309,"line_end":309,"column_start":12,"column_end":24},"name":"PixelDensity","qualname":"::codecs::jpeg::encoder::PixelDensity","value":"PixelDensity { density, unit }","parent":null,"children":[{"krate":0,"index":7069},{"krate":0,"index":7070}],"decl_id":null,"docs":" Represents the pixel density of an image","sig":null,"attributes":[{"value":"/ Represents the pixel density of an image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479398,"byte_end":479442,"line_start":299,"line_end":299,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479443,"byte_end":479446,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ For example, a 300 DPI image is represented by:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479447,"byte_end":479498,"line_start":301,"line_end":301,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479499,"byte_end":479502,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479503,"byte_end":479514,"line_start":303,"line_end":303,"column_start":1,"column_end":12}},{"value":"/ use image::codecs::jpeg::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479515,"byte_end":479546,"line_start":304,"line_end":304,"column_start":1,"column_end":32}},{"value":"/ let hdpi = PixelDensity::dpi(300);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479547,"byte_end":479585,"line_start":305,"line_end":305,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(hdpi, PixelDensity {density: (300,300), unit: PixelDensityUnit::Inches})","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479586,"byte_end":479673,"line_start":306,"line_end":306,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479674,"byte_end":479681,"line_start":307,"line_end":307,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":7069},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479813,"byte_end":479820,"line_start":311,"line_end":311,"column_start":9,"column_end":16},"name":"density","qualname":"::codecs::jpeg::encoder::PixelDensity::density","value":"(u16, u16)","parent":{"krate":0,"index":7068},"children":[],"decl_id":null,"docs":" A couple of values for (Xdensity, Ydensity)\n","sig":null,"attributes":[{"value":"/ A couple of values for (Xdensity, Ydensity)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479757,"byte_end":479804,"line_start":310,"line_end":310,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7070},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479892,"byte_end":479896,"line_start":313,"line_end":313,"column_start":9,"column_end":13},"name":"unit","qualname":"::codecs::jpeg::encoder::PixelDensity::unit","value":"codecs::jpeg::encoder::PixelDensityUnit","parent":{"krate":0,"index":7068},"children":[],"decl_id":null,"docs":" The unit in which the density is measured\n","sig":null,"attributes":[{"value":"/ The unit in which the density is measured","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479838,"byte_end":479883,"line_start":312,"line_end":312,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480102,"byte_end":480105,"line_start":320,"line_end":320,"column_start":12,"column_end":15},"name":"dpi","qualname":"<PixelDensity>::dpi","value":"fn dpi(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the most common pixel density type:\n the horizontal and the vertical density are equal,\n and measured in pixels per inch.\n","sig":null,"attributes":[{"value":"/ Creates the most common pixel density type:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479943,"byte_end":479990,"line_start":317,"line_end":317,"column_start":5,"column_end":52}},{"value":"/ the horizontal and the vertical density are equal,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479995,"byte_end":480049,"line_start":318,"line_end":318,"column_start":5,"column_end":59}},{"value":"/ and measured in pixels per inch.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480054,"byte_end":480090,"line_start":319,"line_end":319,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480359,"byte_end":480366,"line_start":330,"line_end":330,"column_start":8,"column_end":15},"name":"default","qualname":"<PixelDensity as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":" Returns a pixel density with a pixel aspect ratio of 1\n","sig":null,"attributes":[{"value":"/ Returns a pixel density with a pixel aspect ratio of 1","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480293,"byte_end":480351,"line_start":329,"line_end":329,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480556,"byte_end":480567,"line_start":339,"line_end":339,"column_start":12,"column_end":23},"name":"JpegEncoder","qualname":"::codecs::jpeg::encoder::JpegEncoder","value":"JpegEncoder {  }","parent":null,"children":[{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2841}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480504,"byte_end":480544,"line_start":338,"line_end":338,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2844},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":481007,"byte_end":481010,"line_start":355,"line_end":355,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegEncoder<W>>::new","value":"fn new(W) -> JpegEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480937,"byte_end":480995,"line_start":354,"line_end":354,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":481298,"byte_end":481314,"line_start":362,"line_end":362,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JpegEncoder<W>>::new_with_quality","value":"fn new_with_quality(W, u8) -> JpegEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":481093,"byte_end":481160,"line_start":359,"line_end":359,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":481165,"byte_end":481236,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":481241,"byte_end":481286,"line_start":361,"line_end":361,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2848},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":483498,"byte_end":483515,"line_start":430,"line_end":430,"column_start":12,"column_end":29},"name":"set_pixel_density","qualname":"<JpegEncoder<W>>::set_pixel_density","value":"fn set_pixel_density<'_>(&'_ mut Self, PixelDensity)","parent":null,"children":[],"decl_id":null,"docs":" Set the pixel density of the images the encoder will encode.\n If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,\n and no DPI information will be stored in the image.\n","sig":null,"attributes":[{"value":"/ Set the pixel density of the images the encoder will encode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":483266,"byte_end":483330,"line_start":427,"line_end":427,"column_start":5,"column_end":69}},{"value":"/ If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":483335,"byte_end":483426,"line_start":428,"line_end":428,"column_start":5,"column_end":96}},{"value":"/ and no DPI information will be stored in the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":483431,"byte_end":483486,"line_start":429,"line_end":429,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":483847,"byte_end":483853,"line_start":439,"line_end":439,"column_start":12,"column_end":18},"name":"encode","qualname":"<JpegEncoder<W>>::encode","value":"fn encode<'_, '_>(&'_ mut Self, &'_ [u8], u32, u32, ColorType)\n-> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image stored in the raw byte buffer ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image stored in the raw byte buffer ```image```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":483613,"byte_end":483676,"line_start":434,"line_end":434,"column_start":5,"column_end":68}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":483681,"byte_end":483733,"line_start":435,"line_end":435,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":483738,"byte_end":483769,"line_start":436,"line_end":436,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":483774,"byte_end":483777,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":483782,"byte_end":483835,"line_start":438,"line_end":438,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":485684,"byte_end":485696,"line_start":485,"line_end":485,"column_start":12,"column_end":24},"name":"encode_image","qualname":"<JpegEncoder<W>>::encode_image","value":"fn encode_image<I, '_, '_>(&'_ mut Self, &'_ I) -> ImageResult<()> where\nI: GenericImageView, I::Pixel: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Encodes the given image.","sig":null,"attributes":[{"value":"/ Encodes the given image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":485156,"byte_end":485184,"line_start":476,"line_end":476,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":485189,"byte_end":485192,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ As a special feature this does not require the whole image to be present in memory at the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":485197,"byte_end":485290,"line_start":478,"line_end":478,"column_start":5,"column_end":98}},{"value":"/ same time such that it may be computed on the fly, which is why this method exists on this","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":485295,"byte_end":485389,"line_start":479,"line_end":479,"column_start":5,"column_end":99}},{"value":"/ encoder but not on others. Instead the encoder will iterate over 8-by-8 blocks of pixels at","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":485394,"byte_end":485489,"line_start":480,"line_end":480,"column_start":5,"column_end":100}},{"value":"/ a time, inspecting each pixel exactly once. You can rely on this behaviour when calling","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":485494,"byte_end":485585,"line_start":481,"line_end":481,"column_start":5,"column_end":96}},{"value":"/ this method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":485590,"byte_end":485606,"line_start":482,"line_end":482,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":485611,"byte_end":485614,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":485619,"byte_end":485672,"line_start":484,"line_end":484,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":491530,"byte_end":491541,"line_start":657,"line_end":657,"column_start":8,"column_end":19},"name":"write_image","qualname":"<JpegEncoder<W> as image::ImageEncoder>::write_image","value":"fn write_image<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":5964},"children":[],"decl_id":{"krate":0,"index":5965},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2928},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"openexr","qualname":"::codecs::openexr","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","parent":null,"children":[{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2947},{"krate":0,"index":2950},{"krate":0,"index":2953},{"krate":0,"index":2956},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2965},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2975},{"krate":0,"index":2978},{"krate":0,"index":2981},{"krate":0,"index":7083},{"krate":0,"index":7089},{"krate":0,"index":2984},{"krate":0,"index":2992},{"krate":0,"index":3008},{"krate":0,"index":7092},{"krate":0,"index":7096},{"krate":0,"index":3015},{"krate":0,"index":3018},{"krate":0,"index":3021}],"decl_id":null,"docs":" Decoding of OpenEXR (.exr) Images","sig":null,"attributes":[{"value":"cfg(feature = \"exr\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8315,"byte_end":8338,"line_start":237,"line_end":237,"column_start":5,"column_end":28}},{"value":"/ Decoding of OpenEXR (.exr) Images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":512738,"byte_end":512775,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":512776,"byte_end":512779,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ OpenEXR is an image format that is widely used, especially in VFX,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":512780,"byte_end":512850,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ because it supports lossless and lossy compression for float data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":512851,"byte_end":512921,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":512922,"byte_end":512925,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This decoder only supports RGB and RGBA images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":512926,"byte_end":512977,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/ If an image does not contain alpha information,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":512978,"byte_end":513029,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/ it is defaulted to `1.0` (no transparency).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513030,"byte_end":513077,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513078,"byte_end":513081,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513082,"byte_end":513101,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/ * <https://www.openexr.com/documentation.html> - The OpenEXR reference.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513102,"byte_end":513177,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513178,"byte_end":513181,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513182,"byte_end":513185,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Current limitations (July 2021):","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513186,"byte_end":513222,"line_start":14,"line_end":14,"column_start":1,"column_end":37}},{"value":"/     - only pixel type `Rgba32F` and `Rgba16F` are supported","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513223,"byte_end":513286,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/     - only non-deep rgb/rgba files supported, no conversion from/to YCbCr or similar","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513287,"byte_end":513375,"line_start":16,"line_end":16,"column_start":1,"column_end":89}},{"value":"/     - only the first non-deep rgb layer is used","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513376,"byte_end":513427,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/     - only the largest mip map level is used","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513428,"byte_end":513476,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/     - pixels outside display window are lost","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513477,"byte_end":513525,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/     - meta data is lost","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513526,"byte_end":513553,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/     - dwaa/dwab compressed images not supported yet by the exr library","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513554,"byte_end":513628,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/     - (chroma) subsampling not supported yet by the exr library","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":513629,"byte_end":513696,"line_start":22,"line_end":22,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7083},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":514119,"byte_end":514133,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"OpenExrDecoder","qualname":"::codecs::openexr::OpenExrDecoder","value":"OpenExrDecoder {  }","parent":null,"children":[{"krate":0,"index":7085},{"krate":0,"index":7086},{"krate":0,"index":7087},{"krate":0,"index":7088}],"decl_id":null,"docs":" An OpenEXR decoder. Immediately reads the meta data from the file.\n","sig":null,"attributes":[{"value":"/ An OpenEXR decoder. Immediately reads the meta data from the file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":514020,"byte_end":514090,"line_start":34,"line_end":34,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":514957,"byte_end":514960,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenExrDecoder<R>>::new","value":"fn new(R) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a decoder. Consumes the first few bytes of the source to extract image dimensions.\n Assumes the reader is buffered. In most cases,\n you should wrap your reader in a `BufReader` for best performance.\n Loads an alpha channel if the file has alpha samples.\n Use `with_alpha_preference` if you want to load or not load alpha unconditionally.\n","sig":null,"attributes":[{"value":"/ Create a decoder. Consumes the first few bytes of the source to extract image dimensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":514569,"byte_end":514662,"line_start":51,"line_end":51,"column_start":5,"column_end":98}},{"value":"/ Assumes the reader is buffered. In most cases,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":514667,"byte_end":514717,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/ you should wrap your reader in a `BufReader` for best performance.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":514722,"byte_end":514792,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ Loads an alpha channel if the file has alpha samples.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":514797,"byte_end":514854,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/ Use `with_alpha_preference` if you want to load or not load alpha unconditionally.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":514859,"byte_end":514945,"line_start":55,"line_end":55,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2987},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":515534,"byte_end":515555,"line_start":66,"line_end":66,"column_start":12,"column_end":33},"name":"with_alpha_preference","qualname":"<OpenExrDecoder<R>>::with_alpha_preference","value":"fn with_alpha_preference(R, Option<bool>) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a decoder. Consumes the first few bytes of the source to extract image dimensions.\n Assumes the reader is buffered. In most cases,\n you should wrap your reader in a `BufReader` for best performance.\n If alpha preference is specified, an alpha channel will\n always be present or always be not present in the returned image.\n If alpha preference is none, the alpha channel will only be returned if it is found in the file.\n","sig":null,"attributes":[{"value":"/ Create a decoder. Consumes the first few bytes of the source to extract image dimensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":515056,"byte_end":515149,"line_start":60,"line_end":60,"column_start":5,"column_end":98}},{"value":"/ Assumes the reader is buffered. In most cases,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":515154,"byte_end":515204,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/ you should wrap your reader in a `BufReader` for best performance.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":515209,"byte_end":515279,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ If alpha preference is specified, an alpha channel will","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":515284,"byte_end":515343,"line_start":63,"line_end":63,"column_start":5,"column_end":64}},{"value":"/ always be present or always be not present in the returned image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":515348,"byte_end":515417,"line_start":64,"line_end":64,"column_start":5,"column_end":74}},{"value":"/ If alpha preference is none, the alpha channel will only be returned if it is found in the file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":515422,"byte_end":515522,"line_start":65,"line_end":65,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":517280,"byte_end":517290,"line_start":112,"line_end":112,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<OpenExrDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":517517,"byte_end":517527,"line_start":121,"line_end":121,"column_start":8,"column_end":18},"name":"color_type","qualname":"<OpenExrDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":517768,"byte_end":517787,"line_start":130,"line_end":130,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"<OpenExrDecoder<R> as image::ImageDecoder>::original_color_type","value":"fn original_color_type<'_>(&'_ Self) -> ExtendedColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5946},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":518106,"byte_end":518117,"line_start":140,"line_end":140,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<OpenExrDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":" Use `read_image` instead if possible,\n as this method creates a whole new buffer just to contain the entire image.\n","sig":null,"attributes":[{"value":"/ Use `read_image` instead if possible,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":517973,"byte_end":518014,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ as this method creates a whole new buffer just to contain the entire image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":518019,"byte_end":518098,"line_start":139,"line_end":139,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":518216,"byte_end":518230,"line_start":144,"line_end":144,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"<OpenExrDecoder<R> as image::ImageDecoder>::scanline_bytes","value":"fn scanline_bytes<'_>(&'_ Self) -> u64","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5949},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":518660,"byte_end":518684,"line_start":153,"line_end":153,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"<OpenExrDecoder<R> as image::ImageDecoder>::read_image_with_progress","value":"fn read_image_with_progress<F, '_>(Self, &'_ mut [u8], F) -> ImageResult<()>\nwhere F: Fn(Progress) -> ()","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5952},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7092},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":526723,"byte_end":526737,"line_start":342,"line_end":342,"column_start":12,"column_end":26},"name":"OpenExrEncoder","qualname":"::codecs::openexr::OpenExrEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thin wrapper that implements `ImageEncoder` for OpenEXR images. Will behave like `image::codecs::openexr::write_buffer`.\n","sig":null,"attributes":[{"value":"/ A thin wrapper that implements `ImageEncoder` for OpenEXR images. Will behave like `image::codecs::openexr::write_buffer`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":526568,"byte_end":526694,"line_start":340,"line_end":340,"column_start":1,"column_end":127}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":526996,"byte_end":526999,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenExrEncoder<W>>::new","value":"fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `ImageEncoder`. Does not write anything yet. Writing later will behave like `image::codecs::openexr::write_buffer`.\n","sig":null,"attributes":[{"value":"/ Create an `ImageEncoder`. Does not write anything yet. Writing later will behave like `image::codecs::openexr::write_buffer`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":526778,"byte_end":526907,"line_start":345,"line_end":345,"column_start":5,"column_end":134}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":527355,"byte_end":527366,"line_start":361,"line_end":361,"column_start":8,"column_end":19},"name":"write_image","qualname":"<OpenExrEncoder<W> as image::ImageEncoder>::write_image","value":"fn write_image<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":5964},"children":[],"decl_id":{"krate":0,"index":5965},"docs":" Writes the complete image.","sig":null,"attributes":[{"value":"/ Writes the complete image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":527125,"byte_end":527155,"line_start":356,"line_end":356,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":527160,"byte_end":527163,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Returns an Error if it has an invalid length.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":527168,"byte_end":527217,"line_start":358,"line_end":358,"column_start":5,"column_end":54}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":527222,"byte_end":527272,"line_start":359,"line_end":359,"column_start":5,"column_end":55}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":527277,"byte_end":527347,"line_start":360,"line_end":360,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":3022},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::codecs::png","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","parent":null,"children":[{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3033},{"krate":0,"index":3036},{"krate":0,"index":3039},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3046},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3053},{"krate":0,"index":3056},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3063},{"krate":0,"index":3066},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3073},{"krate":0,"index":3076},{"krate":0,"index":3079},{"krate":0,"index":3082},{"krate":0,"index":3085},{"krate":0,"index":3088},{"krate":0,"index":3091},{"krate":0,"index":3094},{"krate":0,"index":3097},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3104},{"krate":0,"index":3107},{"krate":0,"index":3110},{"krate":0,"index":3113},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3120},{"krate":0,"index":3123},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3138},{"krate":0,"index":3141},{"krate":0,"index":3143},{"krate":0,"index":3148},{"krate":0,"index":3151},{"krate":0,"index":3155},{"krate":0,"index":3159},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3186},{"krate":0,"index":3194},{"krate":0,"index":3200},{"krate":0,"index":3212},{"krate":0,"index":7099},{"krate":0,"index":7110},{"krate":0,"index":7112},{"krate":0,"index":7113},{"krate":0,"index":7115},{"krate":0,"index":7116},{"krate":0,"index":7118},{"krate":0,"index":7119},{"krate":0,"index":7121},{"krate":0,"index":7134},{"krate":0,"index":7136},{"krate":0,"index":7137},{"krate":0,"index":7139},{"krate":0,"index":7140},{"krate":0,"index":7142},{"krate":0,"index":7143},{"krate":0,"index":7145},{"krate":0,"index":7149},{"krate":0,"index":7151},{"krate":0,"index":7152},{"krate":0,"index":7154},{"krate":0,"index":7155},{"krate":0,"index":7157},{"krate":0,"index":7158},{"krate":0,"index":3217},{"krate":0,"index":3225},{"krate":0,"index":3240},{"krate":0,"index":3243},{"krate":0,"index":3245},{"krate":0,"index":3247},{"krate":0,"index":3249}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8364,"byte_end":8387,"line_start":239,"line_end":239,"column_start":5,"column_end":28}},{"value":"/ Decoding and Encoding of PNG Images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":536397,"byte_end":536436,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":536437,"byte_end":536440,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ PNG (Portable Network Graphics) is an image format that supports lossless compression.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":536441,"byte_end":536531,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":536532,"byte_end":536535,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":536536,"byte_end":536555,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/TR/PNG/> - The PNG Specification","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":536556,"byte_end":536613,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":536614,"byte_end":536617,"line_start":7,"line_end":7,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3143},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":537634,"byte_end":537643,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"PngReader","qualname":"::codecs::png::PngReader","value":"PngReader {  }","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147}],"decl_id":null,"docs":" Png Reader","sig":null,"attributes":[{"value":"/ Png Reader","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":537444,"byte_end":537458,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":537459,"byte_end":537462,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reader will try to read the png one row at a time,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":537463,"byte_end":537522,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ however for interlaced png files this is not possible and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":537523,"byte_end":537584,"line_start":33,"line_end":33,"column_start":1,"column_end":62}},{"value":"/ these are therefore read at once.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":537585,"byte_end":537622,"line_start":34,"line_end":34,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":538562,"byte_end":538566,"line_start":68,"line_end":68,"column_start":8,"column_end":12},"name":"read","qualname":"<PngReader<R> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3154},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":539319,"byte_end":539330,"line_start":92,"line_end":92,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"<PngReader<R> as std::io::Read>::read_to_end","value":"fn read_to_end<'_, '_>(&'_ mut Self, &'_ mut Vec<u8>) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4672},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":539848,"byte_end":539858,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"PngDecoder","qualname":"::codecs::png::PngDecoder","value":"PngDecoder {  }","parent":null,"children":[{"krate":0,"index":3157},{"krate":0,"index":3158}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[{"value":"/ PNG decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":539821,"byte_end":539836,"line_start":112,"line_end":112,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":540036,"byte_end":540039,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<PngDecoder<R>>::new","value":"fn new(R) -> ImageResult<PngDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":539962,"byte_end":540024,"line_start":119,"line_end":119,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3162},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":540234,"byte_end":540245,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"with_limits","qualname":"<PngDecoder<R>>::with_limits","value":"fn with_limits(R, Limits) -> ImageResult<PngDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r``` with the given limits.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r``` with the given limits.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":540137,"byte_end":540222,"line_start":124,"line_end":124,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544450,"byte_end":544454,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"apng","qualname":"<PngDecoder<R>>::apng","value":"fn apng(Self) -> ApngDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into an iterator over the animation frames.","sig":null,"attributes":[{"value":"/ Turn this into an iterator over the animation frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":543803,"byte_end":543860,"line_start":197,"line_end":197,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":543865,"byte_end":543868,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Reading the complete animation requires more memory than reading the data from the IDAT","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":543873,"byte_end":543964,"line_start":199,"line_end":199,"column_start":5,"column_end":96}},{"value":"/ frame–multiple frame buffers need to be reserved at the same time. We further do not","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":543969,"byte_end":544059,"line_start":200,"line_end":200,"column_start":5,"column_end":93}},{"value":"/ support compositing 16-bit colors. In any case this would be lossy as the interface of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544064,"byte_end":544154,"line_start":201,"line_end":201,"column_start":5,"column_end":95}},{"value":"/ animation decoders does not support 16-bit colors.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544159,"byte_end":544213,"line_start":202,"line_end":202,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544218,"byte_end":544221,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If something is not supported or a limit is violated then the decoding step that requires","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544226,"byte_end":544319,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ them will fail and an error will be returned instead of the frame. No further frames will","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544324,"byte_end":544417,"line_start":205,"line_end":205,"column_start":5,"column_end":98}},{"value":"/ be returned.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544422,"byte_end":544438,"line_start":206,"line_end":206,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544877,"byte_end":544884,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"name":"is_apng","qualname":"<PngDecoder<R>>::is_apng","value":"fn is_apng<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the image contains an animation.","sig":null,"attributes":[{"value":"/ Returns if the image contains an animation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544523,"byte_end":544570,"line_start":211,"line_end":211,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544575,"byte_end":544578,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Note that the file itself decides if the default image is considered to be part of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544583,"byte_end":544673,"line_start":213,"line_end":213,"column_start":5,"column_end":95}},{"value":"/ animation. When it is not the common interpretation is to use it as a thumbnail.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544678,"byte_end":544762,"line_start":214,"line_end":214,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544767,"byte_end":544770,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a non-animated image is converted into an `ApngDecoder` then its iterator is empty.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":544775,"byte_end":544865,"line_start":216,"line_end":216,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":545280,"byte_end":545290,"line_start":232,"line_end":232,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<PngDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":545362,"byte_end":545372,"line_start":236,"line_end":236,"column_start":8,"column_end":18},"name":"color_type","qualname":"<PngDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":545433,"byte_end":545444,"line_start":240,"line_end":240,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<PngDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":545532,"byte_end":545542,"line_start":244,"line_end":244,"column_start":8,"column_end":18},"name":"read_image","qualname":"<PngDecoder<R> as image::ImageDecoder>::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5950},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":546430,"byte_end":546444,"line_start":266,"line_end":266,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"<PngDecoder<R> as image::ImageDecoder>::scanline_bytes","value":"fn scanline_bytes<'_>(&'_ Self) -> u64","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5949},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3186},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":546853,"byte_end":546864,"line_start":279,"line_end":279,"column_start":12,"column_end":23},"name":"ApngDecoder","qualname":"::codecs::png::ApngDecoder","value":"ApngDecoder {  }","parent":null,"children":[{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193}],"decl_id":null,"docs":" An [`AnimationDecoder`] adapter of [`PngDecoder`].","sig":null,"attributes":[{"value":"/ An [`AnimationDecoder`] adapter of [`PngDecoder`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":546567,"byte_end":546621,"line_start":272,"line_end":272,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":546622,"byte_end":546625,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ See [`PngDecoder::apng`] for more information.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":546626,"byte_end":546676,"line_start":274,"line_end":274,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":546677,"byte_end":546680,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ [`AnimationDecoder`]: ../trait.AnimationDecoder.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":546681,"byte_end":546737,"line_start":276,"line_end":276,"column_start":1,"column_end":57}},{"value":"/ [`PngDecoder`]: struct.PngDecoder.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":546738,"byte_end":546780,"line_start":277,"line_end":277,"column_start":1,"column_end":43}},{"value":"/ [`PngDecoder::apng`]: struct.PngDecoder.html#method.apng","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":546781,"byte_end":546841,"line_start":278,"line_end":278,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":553001,"byte_end":553012,"line_start":441,"line_end":441,"column_start":8,"column_end":19},"name":"into_frames","qualname":"<ApngDecoder<R> as image::AnimationDecoder>::into_frames","value":"fn into_frames(Self) -> Frames","parent":{"krate":0,"index":5961},"children":[],"decl_id":{"krate":0,"index":5963},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3212},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554180,"byte_end":554190,"line_start":473,"line_end":473,"column_start":12,"column_end":22},"name":"PngEncoder","qualname":"::codecs::png::PngEncoder","value":"PngEncoder {  }","parent":null,"children":[{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[{"value":"/ PNG encoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554153,"byte_end":554168,"line_start":472,"line_end":472,"column_start":1,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7100},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554473,"byte_end":554480,"line_start":484,"line_end":484,"column_start":5,"column_end":12},"name":"Default","qualname":"::codecs::png::CompressionType::Default","value":"CompressionType::Default","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":" Default compression level\n","sig":null,"attributes":[{"value":"/ Default compression level","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554439,"byte_end":554468,"line_start":483,"line_end":483,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7102},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554520,"byte_end":554524,"line_start":486,"line_end":486,"column_start":5,"column_end":9},"name":"Fast","qualname":"::codecs::png::CompressionType::Fast","value":"CompressionType::Fast","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":" Fast, minimal compression\n","sig":null,"attributes":[{"value":"/ Fast, minimal compression","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554486,"byte_end":554515,"line_start":485,"line_end":485,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7104},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554561,"byte_end":554565,"line_start":488,"line_end":488,"column_start":5,"column_end":9},"name":"Best","qualname":"::codecs::png::CompressionType::Best","value":"CompressionType::Best","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":" High compression level\n","sig":null,"attributes":[{"value":"/ High compression level","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554530,"byte_end":554556,"line_start":487,"line_end":487,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7106},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554698,"byte_end":554705,"line_start":491,"line_end":491,"column_start":5,"column_end":12},"name":"Huffman","qualname":"::codecs::png::CompressionType::Huffman","value":"CompressionType::Huffman","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":" Huffman coding compression\n","sig":null,"attributes":[{"value":"/ Huffman coding compression","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554571,"byte_end":554601,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"deprecated(note =\n\"use one of the other compression levels instead, such as 'Fast'\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554606,"byte_end":554693,"line_start":490,"line_end":490,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7108},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554843,"byte_end":554846,"line_start":494,"line_end":494,"column_start":5,"column_end":8},"name":"Rle","qualname":"::codecs::png::CompressionType::Rle","value":"CompressionType::Rle","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":" Run-length encoding compression\n","sig":null,"attributes":[{"value":"/ Run-length encoding compression","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554711,"byte_end":554746,"line_start":492,"line_end":492,"column_start":5,"column_end":40}},{"value":"deprecated(note =\n\"use one of the other compression levels instead, such as 'Fast'\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554751,"byte_end":554838,"line_start":493,"line_end":493,"column_start":5,"column_end":92}}]},{"kind":"Enum","id":{"krate":0,"index":7099},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554417,"byte_end":554432,"line_start":482,"line_end":482,"column_start":10,"column_end":25},"name":"CompressionType","qualname":"::codecs::png::CompressionType","value":"enum CompressionType { Default, Fast, Best, Huffman, Rle, }","parent":null,"children":[{"krate":0,"index":7100},{"krate":0,"index":7102},{"krate":0,"index":7104},{"krate":0,"index":7106},{"krate":0,"index":7108}],"decl_id":null,"docs":" Compression level of a PNG encoder. The default setting is `Fast`.\n","sig":null,"attributes":[{"value":"/ Compression level of a PNG encoder. The default setting is `Fast`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554274,"byte_end":554344,"line_start":479,"line_end":479,"column_start":1,"column_end":71}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554390,"byte_end":554407,"line_start":481,"line_end":481,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7122},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555160,"byte_end":555168,"line_start":505,"line_end":505,"column_start":5,"column_end":13},"name":"NoFilter","qualname":"::codecs::png::FilterType::NoFilter","value":"FilterType::NoFilter","parent":{"krate":0,"index":7121},"children":[],"decl_id":null,"docs":" No processing done, best used for low bit depth grayscale or data with a\n low color count\n","sig":null,"attributes":[{"value":"/ No processing done, best used for low bit depth grayscale or data with a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555055,"byte_end":555131,"line_start":503,"line_end":503,"column_start":5,"column_end":81}},{"value":"/ low color count","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555136,"byte_end":555155,"line_start":504,"line_end":504,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7124},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555235,"byte_end":555238,"line_start":507,"line_end":507,"column_start":5,"column_end":8},"name":"Sub","qualname":"::codecs::png::FilterType::Sub","value":"FilterType::Sub","parent":{"krate":0,"index":7121},"children":[],"decl_id":null,"docs":" Filters based on previous pixel in the same scanline\n","sig":null,"attributes":[{"value":"/ Filters based on previous pixel in the same scanline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555174,"byte_end":555230,"line_start":506,"line_end":506,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7126},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555288,"byte_end":555290,"line_start":509,"line_end":509,"column_start":5,"column_end":7},"name":"Up","qualname":"::codecs::png::FilterType::Up","value":"FilterType::Up","parent":{"krate":0,"index":7121},"children":[],"decl_id":null,"docs":" Filters based on the scanline above\n","sig":null,"attributes":[{"value":"/ Filters based on the scanline above","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555244,"byte_end":555283,"line_start":508,"line_end":508,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7128},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555367,"byte_end":555370,"line_start":511,"line_end":511,"column_start":5,"column_end":8},"name":"Avg","qualname":"::codecs::png::FilterType::Avg","value":"FilterType::Avg","parent":{"krate":0,"index":7121},"children":[],"decl_id":null,"docs":" Filters based on the average of left and right neighbor pixels\n","sig":null,"attributes":[{"value":"/ Filters based on the average of left and right neighbor pixels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555296,"byte_end":555362,"line_start":510,"line_end":510,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7130},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555457,"byte_end":555462,"line_start":513,"line_end":513,"column_start":5,"column_end":10},"name":"Paeth","qualname":"::codecs::png::FilterType::Paeth","value":"FilterType::Paeth","parent":{"krate":0,"index":7121},"children":[],"decl_id":null,"docs":" Algorithm that takes into account the left, upper left, and above pixels\n","sig":null,"attributes":[{"value":"/ Algorithm that takes into account the left, upper left, and above pixels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555376,"byte_end":555452,"line_start":512,"line_end":512,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7132},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555602,"byte_end":555610,"line_start":516,"line_end":516,"column_start":5,"column_end":13},"name":"Adaptive","qualname":"::codecs::png::FilterType::Adaptive","value":"FilterType::Adaptive","parent":{"krate":0,"index":7121},"children":[],"decl_id":null,"docs":" Uses a heuristic to select one of the preceding filters for each\n scanline rather than one filter for the entire image\n","sig":null,"attributes":[{"value":"/ Uses a heuristic to select one of the preceding filters for each","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555468,"byte_end":555536,"line_start":514,"line_end":514,"column_start":5,"column_end":73}},{"value":"/ scanline rather than one filter for the entire image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555541,"byte_end":555597,"line_start":515,"line_end":515,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":7121},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555038,"byte_end":555048,"line_start":502,"line_end":502,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::codecs::png::FilterType","value":"enum FilterType { NoFilter, Sub, Up, Avg, Paeth, Adaptive, }","parent":null,"children":[{"krate":0,"index":7122},{"krate":0,"index":7124},{"krate":0,"index":7126},{"krate":0,"index":7128},{"krate":0,"index":7130},{"krate":0,"index":7132}],"decl_id":null,"docs":" Filter algorithms used to process image data to improve compression.","sig":null,"attributes":[{"value":"/ Filter algorithms used to process image data to improve compression.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554851,"byte_end":554923,"line_start":497,"line_end":497,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554924,"byte_end":554927,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ The default filter is `Adaptive`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":554928,"byte_end":554965,"line_start":499,"line_end":499,"column_start":1,"column_end":38}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555011,"byte_end":555028,"line_start":501,"line_end":501,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555840,"byte_end":555843,"line_start":527,"line_end":527,"column_start":12,"column_end":15},"name":"new","qualname":"<PngEncoder<W>>::new","value":"fn new(W) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555770,"byte_end":555828,"line_start":526,"line_end":526,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556844,"byte_end":556860,"line_start":547,"line_end":547,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<PngEncoder<W>>::new_with_quality","value":"fn new_with_quality(W, CompressionType, FilterType) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w` with `CompressionType` `compression` and\n `FilterType` `filter`.","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w` with `CompressionType` `compression` and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556022,"byte_end":556117,"line_start":535,"line_end":535,"column_start":5,"column_end":100}},{"value":"/ `FilterType` `filter`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556122,"byte_end":556148,"line_start":536,"line_end":536,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556153,"byte_end":556156,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ It is best to view the options as a _hint_ to the implementation on the smallest or fastest","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556161,"byte_end":556256,"line_start":538,"line_end":538,"column_start":5,"column_end":100}},{"value":"/ option for encoding a particular image. That is, using options that map directly to a PNG","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556261,"byte_end":556354,"line_start":539,"line_end":539,"column_start":5,"column_end":98}},{"value":"/ image parameter will use this parameter where possible. But variants that have no direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556359,"byte_end":556451,"line_start":540,"line_end":540,"column_start":5,"column_end":97}},{"value":"/ mapping may be interpreted differently in minor versions. The exact output is expressly","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556456,"byte_end":556547,"line_start":541,"line_end":541,"column_start":5,"column_end":96}},{"value":"/ __not__ part the SemVer stability guarantee.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556552,"byte_end":556600,"line_start":542,"line_end":542,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556605,"byte_end":556608,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ Note that it is not optimal to use a single filter type, so an adaptive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556613,"byte_end":556688,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ filter type is selected as the default. The filter which best minimizes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556693,"byte_end":556768,"line_start":545,"line_end":545,"column_start":5,"column_end":80}},{"value":"/ file size may change with the type of compression used.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":556773,"byte_end":556832,"line_start":546,"line_end":546,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":557340,"byte_end":557346,"line_start":563,"line_end":563,"column_start":12,"column_end":18},"name":"encode","qualname":"<PngEncoder<W>>::encode","value":"fn encode<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.","sig":null,"attributes":[{"value":"/ Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":557069,"byte_end":557159,"line_start":559,"line_end":559,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":557164,"byte_end":557167,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ Expects data in big endian.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":557172,"byte_end":557203,"line_start":561,"line_end":561,"column_start":5,"column_end":36}},{"value":"deprecated =\n\"Use `PngEncoder::write_image` instead. Beware that `write_image` has a different endianness convention\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":557208,"byte_end":557328,"line_start":562,"line_end":562,"column_start":5,"column_end":125}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":560415,"byte_end":560426,"line_start":630,"line_end":630,"column_start":8,"column_end":19},"name":"write_image","qualname":"<PngEncoder<W> as image::ImageEncoder>::write_image","value":"fn write_image<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":5964},"children":[],"decl_id":{"krate":0,"index":5965},"docs":" Write a PNG image with the specified width, height, and color type.","sig":null,"attributes":[{"value":"/ Write a PNG image with the specified width, height, and color type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":560109,"byte_end":560180,"line_start":625,"line_end":625,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":560185,"byte_end":560188,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ For color types with 16-bit per channel or larger, the contents of `buf` should be in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":560193,"byte_end":560282,"line_start":627,"line_end":627,"column_start":5,"column_end":94}},{"value":"/ native endian. PngEncoder will automatically convert to big endian as required by the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":560287,"byte_end":560376,"line_start":628,"line_end":628,"column_start":5,"column_end":94}},{"value":"/ underlying PNG format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":560381,"byte_end":560407,"line_start":629,"line_end":629,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3244},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":562821,"byte_end":562828,"line_start":691,"line_end":691,"column_start":8,"column_end":15},"name":"default","qualname":"<CompressionType as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3246},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":562917,"byte_end":562924,"line_start":697,"line_end":697,"column_start":8,"column_end":15},"name":"default","qualname":"<FilterType as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3250},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pnm","qualname":"::codecs::pnm","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","parent":null,"children":[{"krate":0,"index":3251},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3267},{"krate":0,"index":3270},{"krate":0,"index":3273},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3283},{"krate":0,"index":3286},{"krate":0,"index":3289},{"krate":0,"index":3311},{"krate":0,"index":3552},{"krate":0,"index":3738}],"decl_id":null,"docs":" Decoding of netpbm image formats (pbm, pgm, ppm and pam).","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8409,"byte_end":8432,"line_start":241,"line_end":241,"column_start":5,"column_end":28}},{"value":"/ Decoding of netpbm image formats (pbm, pgm, ppm and pam).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":564985,"byte_end":565046,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565047,"byte_end":565050,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The formats pbm, pgm and ppm are fully supported. The pam decoder recognizes the tuple types","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565051,"byte_end":565147,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ `BLACKANDWHITE`, `GRAYSCALE` and `RGB` and explicitly recognizes but rejects their `_ALPHA`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565148,"byte_end":565243,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ variants for now as alpha color types are unsupported.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\mod.rs","byte_start":565244,"byte_end":565302,"line_start":5,"line_end":5,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":580871,"byte_end":580875,"line_start":164,"line_end":164,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageError as std::convert::From>::from","value":"fn from(DecoderError) -> ImageError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3456},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":583051,"byte_end":583061,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"PnmDecoder","qualname":"::codecs::pnm::decoder::PnmDecoder","value":"PnmDecoder {  }","parent":null,"children":[{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460}],"decl_id":null,"docs":" PNM decoder\n","sig":null,"attributes":[{"value":"/ PNM decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":583024,"byte_end":583039,"line_start":249,"line_end":249,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":583243,"byte_end":583246,"line_start":258,"line_end":258,"column_start":12,"column_end":15},"name":"new","qualname":"<PnmDecoder<R>>::new","value":"fn new(R) -> ImageResult<PnmDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```read```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```read```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":583167,"byte_end":583231,"line_start":257,"line_end":257,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":585115,"byte_end":585125,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PnmDecoder<R>>::into_inner","value":"fn into_inner(Self) -> (R, PnmHeader)","parent":null,"children":[],"decl_id":null,"docs":" Extract the reader and header after an image has been read.\n","sig":null,"attributes":[{"value":"/ Extract the reader and header after an image has been read.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":585040,"byte_end":585103,"line_start":299,"line_end":299,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":594795,"byte_end":594804,"line_start":572,"line_end":572,"column_start":12,"column_end":21},"name":"PnmReader","qualname":"::codecs::pnm::decoder::PnmReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":594738,"byte_end":594783,"line_start":571,"line_end":571,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":594881,"byte_end":594885,"line_start":574,"line_end":574,"column_start":8,"column_end":12},"name":"read","qualname":"<PnmReader<R> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":594974,"byte_end":594985,"line_start":577,"line_end":577,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"<PnmReader<R> as std::io::Read>::read_to_end","value":"fn read_to_end<'_, '_>(&'_ mut Self, &'_ mut Vec<u8>) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4672},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":595337,"byte_end":595347,"line_start":590,"line_end":590,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<PnmDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":595437,"byte_end":595447,"line_start":594,"line_end":594,"column_start":8,"column_end":18},"name":"color_type","qualname":"<PnmDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":595814,"byte_end":595833,"line_start":605,"line_end":605,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"<PnmDecoder<R> as image::ImageDecoder>::original_color_type","value":"fn original_color_type<'_>(&'_ Self) -> ExtendedColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5946},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":596256,"byte_end":596267,"line_start":616,"line_end":616,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<PnmDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":596432,"byte_end":596442,"line_start":623,"line_end":623,"column_start":8,"column_end":18},"name":"read_image","qualname":"<PnmDecoder<R> as image::ImageDecoder>::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5950},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":598598,"byte_end":598605,"line_start":673,"line_end":673,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PnmDecoder<R>>::subtype","value":"fn subtype<'_>(&'_ Self) -> PnmSubtype","parent":null,"children":[],"decl_id":null,"docs":" Get the pnm subtype, depending on the magic constant contained in the header\n","sig":null,"attributes":[{"value":"/ Get the pnm subtype, depending on the magic constant contained in the header","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":598506,"byte_end":598586,"line_start":672,"line_end":672,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7292},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":621278,"byte_end":621280,"line_start":27,"line_end":27,"column_start":5,"column_end":7},"name":"U8","qualname":"::codecs::pnm::encoder::FlatSamples::U8","value":"FlatSamples::U8(&'a [u8])","parent":{"krate":0,"index":7290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7294},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":621281,"byte_end":621289,"line_start":27,"line_end":27,"column_start":8,"column_end":16},"name":"0","qualname":"::codecs::pnm::encoder::FlatSamples::U8::0","value":"&'a [u8]","parent":{"krate":0,"index":7292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7295},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":621296,"byte_end":621299,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"U16","qualname":"::codecs::pnm::encoder::FlatSamples::U16","value":"FlatSamples::U16(&'a [u16])","parent":{"krate":0,"index":7290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7297},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":621300,"byte_end":621309,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"name":"0","qualname":"::codecs::pnm::encoder::FlatSamples::U16::0","value":"&'a [u16]","parent":{"krate":0,"index":7295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7290},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":621256,"byte_end":621267,"line_start":26,"line_end":26,"column_start":10,"column_end":21},"name":"FlatSamples","qualname":"::codecs::pnm::encoder::FlatSamples","value":"enum FlatSamples<'a> { U8(&'a [u8]), U16(&'a [u16]), }","parent":null,"children":[{"krate":0,"index":7292},{"krate":0,"index":7295}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3643},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":621380,"byte_end":621390,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"PnmEncoder","qualname":"::codecs::pnm::encoder::PnmEncoder","value":"PnmEncoder {  }","parent":null,"children":[{"krate":0,"index":3645},{"krate":0,"index":3646}],"decl_id":null,"docs":" Encodes images to any of the `pnm` image formats.\n","sig":null,"attributes":[{"value":"/ Encodes images to any of the `pnm` image formats.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":621315,"byte_end":621368,"line_start":31,"line_end":31,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3681},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":622780,"byte_end":622783,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<PnmEncoder<W>>::new","value":"fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new PnmEncoder from the `writer`.","sig":null,"attributes":[{"value":"/ Create new PnmEncoder from the `writer`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":622478,"byte_end":622522,"line_start":82,"line_end":82,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":622527,"byte_end":622530,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The encoded images will have some `pnm` format. If more control over the image type is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":622535,"byte_end":622625,"line_start":84,"line_end":84,"column_start":5,"column_end":95}},{"value":"/ required, use either one of `with_subtype` or `with_header`. For more information on the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":622630,"byte_end":622722,"line_start":85,"line_end":85,"column_start":5,"column_end":97}},{"value":"/ behaviour, see `with_dynamic_header`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":622727,"byte_end":622768,"line_start":86,"line_end":86,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3682},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623333,"byte_end":623345,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"with_subtype","qualname":"<PnmEncoder<W>>::with_subtype","value":"fn with_subtype(Self, PnmSubtype) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encode a specific pnm subtype image.","sig":null,"attributes":[{"value":"/ Encode a specific pnm subtype image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":622912,"byte_end":622952,"line_start":94,"line_end":94,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":622957,"byte_end":622960,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The magic number and encoding type will be chosen as provided while the rest of the header","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":622965,"byte_end":623059,"line_start":96,"line_end":96,"column_start":5,"column_end":99}},{"value":"/ data will be generated dynamically. Trying to encode incompatible images (e.g. encoding an","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623064,"byte_end":623158,"line_start":97,"line_end":97,"column_start":5,"column_end":99}},{"value":"/ RGB image as Graymap) will result in an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623163,"byte_end":623213,"line_start":98,"line_end":98,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623218,"byte_end":623221,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_header` and `with_dynamic_header`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623226,"byte_end":623321,"line_start":100,"line_end":100,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3683},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624051,"byte_end":624062,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"with_header","qualname":"<PnmEncoder<W>>::with_header","value":"fn with_header(Self, PnmHeader) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enforce the use of a chosen header.","sig":null,"attributes":[{"value":"/ Enforce the use of a chosen header.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623512,"byte_end":623551,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623556,"byte_end":623559,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ While this option gives the most control over the actual written data, the encoding process","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623564,"byte_end":623659,"line_start":110,"line_end":110,"column_start":5,"column_end":100}},{"value":"/ will error in case the header data and image parameters do not agree. It is the users","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623664,"byte_end":623753,"line_start":111,"line_end":111,"column_start":5,"column_end":94}},{"value":"/ obligation to ensure that the width and height are set accordingly, for example.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623758,"byte_end":623842,"line_start":112,"line_end":112,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623847,"byte_end":623850,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Choose this option if you want a lossless decoding/encoding round trip.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623855,"byte_end":623930,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623935,"byte_end":623938,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_dynamic_header`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":623943,"byte_end":624039,"line_start":116,"line_end":116,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":3684},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624633,"byte_end":624652,"line_start":131,"line_end":131,"column_start":12,"column_end":31},"name":"with_dynamic_header","qualname":"<PnmEncoder<W>>::with_dynamic_header","value":"fn with_dynamic_header(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the header dynamically for each image.","sig":null,"attributes":[{"value":"/ Create the header dynamically for each image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624225,"byte_end":624274,"line_start":124,"line_end":124,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624279,"byte_end":624282,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This is the default option upon creation of the encoder. With this, most images should be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624287,"byte_end":624380,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ encodable but the specific format chosen is out of the users control. The pnm subtype is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624385,"byte_end":624477,"line_start":127,"line_end":127,"column_start":5,"column_end":97}},{"value":"/ chosen arbitrarily by the library.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624482,"byte_end":624520,"line_start":128,"line_end":128,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624525,"byte_end":624528,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_header`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624533,"byte_end":624621,"line_start":130,"line_end":130,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3685},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":625028,"byte_end":625034,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"encode","qualname":"<PnmEncoder<W>>::encode","value":"fn encode<'s, S, '_>(&'_ mut Self, S, u32, u32, ColorType) -> ImageResult<()>\nwhere S: Into<FlatSamples>","parent":null,"children":[],"decl_id":null,"docs":" Encode an image whose samples are represented as `u8`.","sig":null,"attributes":[{"value":"/ Encode an image whose samples are represented as `u8`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624789,"byte_end":624847,"line_start":138,"line_end":138,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624852,"byte_end":624855,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Some `pnm` subtypes are incompatible with some color options, a chosen header most","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624860,"byte_end":624946,"line_start":140,"line_end":140,"column_start":5,"column_end":91}},{"value":"/ certainly with any deviation from the original decoded image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":624951,"byte_end":625016,"line_start":141,"line_end":141,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":630379,"byte_end":630390,"line_start":292,"line_end":292,"column_start":8,"column_end":19},"name":"write_image","qualname":"<PnmEncoder<W> as image::ImageEncoder>::write_image","value":"fn write_image<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":5964},"children":[],"decl_id":{"krate":0,"index":5965},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":642068,"byte_end":642072,"line_start":623,"line_end":623,"column_start":8,"column_end":12},"name":"from","qualname":"<FlatSamples as std::convert::From>::from","value":"fn from(&'a [u8]) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":642198,"byte_end":642202,"line_start":629,"line_end":629,"column_start":8,"column_end":12},"name":"from","qualname":"<FlatSamples as std::convert::From>::from","value":"fn from(&'a [u16]) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7304},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644009,"byte_end":644015,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Binary","qualname":"::codecs::pnm::header::SampleEncoding::Binary","value":"SampleEncoding::Binary","parent":{"krate":0,"index":7303},"children":[],"decl_id":null,"docs":" Samples are unsigned binary integers in big endian\n","sig":null,"attributes":[{"value":"/ Samples are unsigned binary integers in big endian","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":643950,"byte_end":644004,"line_start":6,"line_end":6,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7306},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644099,"byte_end":644104,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::codecs::pnm::header::SampleEncoding::Ascii","value":"SampleEncoding::Ascii","parent":{"krate":0,"index":7303},"children":[],"decl_id":null,"docs":" Samples are encoded as decimal ascii strings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Samples are encoded as decimal ascii strings separated by whitespace","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644022,"byte_end":644094,"line_start":9,"line_end":9,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":7303},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":643929,"byte_end":643943,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"SampleEncoding","qualname":"::codecs::pnm::header::SampleEncoding","value":"enum SampleEncoding { Binary, Ascii, }","parent":null,"children":[{"krate":0,"index":7304},{"krate":0,"index":7306}],"decl_id":null,"docs":" The kind of encoding used to store sample values\n","sig":null,"attributes":[{"value":"/ The kind of encoding used to store sample values","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":643822,"byte_end":643874,"line_start":3,"line_end":3,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7320},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644257,"byte_end":644263,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Bitmap","qualname":"::codecs::pnm::header::PnmSubtype::Bitmap","value":"PnmSubtype::Bitmap(SampleEncoding)","parent":{"krate":0,"index":7319},"children":[],"decl_id":null,"docs":" Magic numbers P1 and P4\n","sig":null,"attributes":[{"value":"/ Magic numbers P1 and P4","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644225,"byte_end":644252,"line_start":16,"line_end":16,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7322},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644264,"byte_end":644278,"line_start":17,"line_end":17,"column_start":12,"column_end":26},"name":"0","qualname":"::codecs::pnm::header::PnmSubtype::Bitmap::0","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":7320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7323},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644318,"byte_end":644325,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Graymap","qualname":"::codecs::pnm::header::PnmSubtype::Graymap","value":"PnmSubtype::Graymap(SampleEncoding)","parent":{"krate":0,"index":7319},"children":[],"decl_id":null,"docs":" Magic numbers P2 and P5\n","sig":null,"attributes":[{"value":"/ Magic numbers P2 and P5","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644286,"byte_end":644313,"line_start":19,"line_end":19,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7325},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644326,"byte_end":644340,"line_start":20,"line_end":20,"column_start":13,"column_end":27},"name":"0","qualname":"::codecs::pnm::header::PnmSubtype::Graymap::0","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":7323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7326},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644380,"byte_end":644386,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Pixmap","qualname":"::codecs::pnm::header::PnmSubtype::Pixmap","value":"PnmSubtype::Pixmap(SampleEncoding)","parent":{"krate":0,"index":7319},"children":[],"decl_id":null,"docs":" Magic numbers P3 and P6\n","sig":null,"attributes":[{"value":"/ Magic numbers P3 and P6","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644348,"byte_end":644375,"line_start":22,"line_end":22,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7328},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644387,"byte_end":644401,"line_start":23,"line_end":23,"column_start":12,"column_end":26},"name":"0","qualname":"::codecs::pnm::header::PnmSubtype::Pixmap::0","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":7326},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7329},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644433,"byte_end":644445,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"ArbitraryMap","qualname":"::codecs::pnm::header::PnmSubtype::ArbitraryMap","value":"PnmSubtype::ArbitraryMap","parent":{"krate":0,"index":7319},"children":[],"decl_id":null,"docs":" Magic number P7\n","sig":null,"attributes":[{"value":"/ Magic number P7","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644409,"byte_end":644428,"line_start":25,"line_end":25,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":7319},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644208,"byte_end":644218,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"PnmSubtype","qualname":"::codecs::pnm::header::PnmSubtype","value":"enum PnmSubtype {\n    Bitmap(SampleEncoding),\n    Graymap(SampleEncoding),\n    Pixmap(SampleEncoding),\n    ArbitraryMap,\n}","parent":null,"children":[{"krate":0,"index":7320},{"krate":0,"index":7323},{"krate":0,"index":7326},{"krate":0,"index":7329}],"decl_id":null,"docs":" Denotes the category of the magic number\n","sig":null,"attributes":[{"value":"/ Denotes the category of the magic number","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644109,"byte_end":644153,"line_start":13,"line_end":13,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3746},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644837,"byte_end":644846,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"PnmHeader","qualname":"::codecs::pnm::header::PnmHeader","value":"PnmHeader {  }","parent":null,"children":[{"krate":0,"index":3747},{"krate":0,"index":3748}],"decl_id":null,"docs":" Stores the complete header data of a file.","sig":null,"attributes":[{"value":"/ Stores the complete header data of a file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644450,"byte_end":644496,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644497,"byte_end":644500,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Internally, provides mechanisms for lossless reencoding. After reading a file with the decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644501,"byte_end":644599,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ it is possible to recover the header and construct an encoder. Using the encoder on the just","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644600,"byte_end":644696,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ loaded image should result in a byte copy of the original file (for single image pnms without","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644697,"byte_end":644794,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ additional trailing data).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":644795,"byte_end":644825,"line_start":34,"line_end":34,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7343},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645175,"byte_end":645187,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"BitmapHeader","qualname":"::codecs::pnm::header::BitmapHeader","value":"BitmapHeader { encoding, height, width }","parent":null,"children":[{"krate":0,"index":7344},{"krate":0,"index":7345},{"krate":0,"index":7346}],"decl_id":null,"docs":" Header produced by a `pbm` file (\"Portable Bit Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pbm` file (\"Portable Bit Map\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645077,"byte_end":645133,"line_start":47,"line_end":47,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":7344},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645235,"byte_end":645243,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"encoding","qualname":"::codecs::pnm::header::BitmapHeader::encoding","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":7343},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645194,"byte_end":645226,"line_start":50,"line_end":50,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7345},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645303,"byte_end":645309,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::BitmapHeader::height","value":"u32","parent":{"krate":0,"index":7343},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645266,"byte_end":645294,"line_start":53,"line_end":53,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7346},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645357,"byte_end":645362,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::BitmapHeader::width","value":"u32","parent":{"krate":0,"index":7343},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645321,"byte_end":645348,"line_start":56,"line_end":56,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7352},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645471,"byte_end":645484,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"GraymapHeader","qualname":"::codecs::pnm::header::GraymapHeader","value":"GraymapHeader { encoding, height, width, maxwhite }","parent":null,"children":[{"krate":0,"index":7353},{"krate":0,"index":7354},{"krate":0,"index":7355},{"krate":0,"index":7356}],"decl_id":null,"docs":" Header produced by a `pgm` file (\"Portable Gray Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pgm` file (\"Portable Gray Map\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645372,"byte_end":645429,"line_start":60,"line_end":60,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":7353},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645532,"byte_end":645540,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"encoding","qualname":"::codecs::pnm::header::GraymapHeader::encoding","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":7352},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645491,"byte_end":645523,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7354},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645600,"byte_end":645606,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::GraymapHeader::height","value":"u32","parent":{"krate":0,"index":7352},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645563,"byte_end":645591,"line_start":66,"line_end":66,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7355},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645654,"byte_end":645659,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::GraymapHeader::width","value":"u32","parent":{"krate":0,"index":7352},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645618,"byte_end":645645,"line_start":69,"line_end":69,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7356},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645721,"byte_end":645729,"line_start":73,"line_end":73,"column_start":9,"column_end":17},"name":"maxwhite","qualname":"::codecs::pnm::header::GraymapHeader::maxwhite","value":"u32","parent":{"krate":0,"index":7352},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645671,"byte_end":645712,"line_start":72,"line_end":72,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":7362},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645839,"byte_end":645851,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"PixmapHeader","qualname":"::codecs::pnm::header::PixmapHeader","value":"PixmapHeader { encoding, height, width, maxval }","parent":null,"children":[{"krate":0,"index":7363},{"krate":0,"index":7364},{"krate":0,"index":7365},{"krate":0,"index":7366}],"decl_id":null,"docs":" Header produced by a `ppm` file (\"Portable Pixel Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `ppm` file (\"Portable Pixel Map\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645739,"byte_end":645797,"line_start":76,"line_end":76,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":7363},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645899,"byte_end":645907,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"encoding","qualname":"::codecs::pnm::header::PixmapHeader::encoding","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":7362},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645858,"byte_end":645890,"line_start":79,"line_end":79,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7364},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645967,"byte_end":645973,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::PixmapHeader::height","value":"u32","parent":{"krate":0,"index":7362},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645930,"byte_end":645958,"line_start":82,"line_end":82,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7365},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646021,"byte_end":646026,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::PixmapHeader::width","value":"u32","parent":{"krate":0,"index":7362},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":645985,"byte_end":646012,"line_start":85,"line_end":85,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7366},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646088,"byte_end":646094,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"maxval","qualname":"::codecs::pnm::header::PixmapHeader::maxval","value":"u32","parent":{"krate":0,"index":7362},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646038,"byte_end":646079,"line_start":88,"line_end":88,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":7372},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646202,"byte_end":646217,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"ArbitraryHeader","qualname":"::codecs::pnm::header::ArbitraryHeader","value":"ArbitraryHeader { height, width, depth, maxval, tupltype }","parent":null,"children":[{"krate":0,"index":7373},{"krate":0,"index":7374},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7377}],"decl_id":null,"docs":" Header produced by a `pam` file (\"Portable Arbitrary Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pam` file (\"Portable Arbitrary Map\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646104,"byte_end":646166,"line_start":92,"line_end":92,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":7373},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646261,"byte_end":646267,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::ArbitraryHeader::height","value":"u32","parent":{"krate":0,"index":7372},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646224,"byte_end":646252,"line_start":95,"line_end":95,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7374},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646315,"byte_end":646320,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::ArbitraryHeader::width","value":"u32","parent":{"krate":0,"index":7372},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646279,"byte_end":646306,"line_start":98,"line_end":98,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7375},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646369,"byte_end":646374,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"name":"depth","qualname":"::codecs::pnm::header::ArbitraryHeader::depth","value":"u32","parent":{"krate":0,"index":7372},"children":[],"decl_id":null,"docs":" Number of color channels\n","sig":null,"attributes":[{"value":"/ Number of color channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646332,"byte_end":646360,"line_start":101,"line_end":101,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7376},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646436,"byte_end":646442,"line_start":105,"line_end":105,"column_start":9,"column_end":15},"name":"maxval","qualname":"::codecs::pnm::header::ArbitraryHeader::maxval","value":"u32","parent":{"krate":0,"index":7372},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646386,"byte_end":646427,"line_start":104,"line_end":104,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":7377},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646503,"byte_end":646511,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"name":"tupltype","qualname":"::codecs::pnm::header::ArbitraryHeader::tupltype","value":"std::option::Option<codecs::pnm::header::ArbitraryTuplType>","parent":{"krate":0,"index":7372},"children":[],"decl_id":null,"docs":" Color interpretation of image pixels\n","sig":null,"attributes":[{"value":"/ Color interpretation of image pixels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646454,"byte_end":646494,"line_start":107,"line_end":107,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7383},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646714,"byte_end":646727,"line_start":115,"line_end":115,"column_start":5,"column_end":18},"name":"BlackAndWhite","qualname":"::codecs::pnm::header::ArbitraryTuplType::BlackAndWhite","value":"ArbitraryTuplType::BlackAndWhite","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1)\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646665,"byte_end":646709,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7385},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646810,"byte_end":646828,"line_start":118,"line_end":118,"column_start":5,"column_end":23},"name":"BlackAndWhiteAlpha","qualname":"::codecs::pnm::header::ArbitraryTuplType::BlackAndWhiteAlpha","value":"ArbitraryTuplType::BlackAndWhiteAlpha","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1) and a second alpha channel\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1) and a second alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646734,"byte_end":646805,"line_start":117,"line_end":117,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7387},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646880,"byte_end":646889,"line_start":121,"line_end":121,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::codecs::pnm::header::ArbitraryTuplType::Grayscale","value":"ArbitraryTuplType::Grayscale","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" Pixels represent the amount of white\n","sig":null,"attributes":[{"value":"/ Pixels represent the amount of white","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646835,"byte_end":646875,"line_start":120,"line_end":120,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7389},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646947,"byte_end":646961,"line_start":124,"line_end":124,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::codecs::pnm::header::ArbitraryTuplType::GrayscaleAlpha","value":"ArbitraryTuplType::GrayscaleAlpha","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" Grayscale with an additional alpha channel\n","sig":null,"attributes":[{"value":"/ Grayscale with an additional alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646896,"byte_end":646942,"line_start":123,"line_end":123,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7391},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":647009,"byte_end":647012,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"RGB","qualname":"::codecs::pnm::header::ArbitraryTuplType::RGB","value":"ArbitraryTuplType::RGB","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" Three channels: Red, Green, Blue\n","sig":null,"attributes":[{"value":"/ Three channels: Red, Green, Blue","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646968,"byte_end":647004,"line_start":126,"line_end":126,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7393},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":647066,"byte_end":647074,"line_start":130,"line_end":130,"column_start":5,"column_end":13},"name":"RGBAlpha","qualname":"::codecs::pnm::header::ArbitraryTuplType::RGBAlpha","value":"ArbitraryTuplType::RGBAlpha","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" Four channels: Red, Green, Blue, Alpha\n","sig":null,"attributes":[{"value":"/ Four channels: Red, Green, Blue, Alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":647019,"byte_end":647061,"line_start":129,"line_end":129,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7395},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":647131,"byte_end":647137,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Custom","qualname":"::codecs::pnm::header::ArbitraryTuplType::Custom","value":"ArbitraryTuplType::Custom(String)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" An image format which is not standardized\n","sig":null,"attributes":[{"value":"/ An image format which is not standardized","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":647081,"byte_end":647126,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7397},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":647138,"byte_end":647144,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"0","qualname":"::codecs::pnm::header::ArbitraryTuplType::Custom::0","value":"std::string::String","parent":{"krate":0,"index":7395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7382},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646641,"byte_end":646658,"line_start":113,"line_end":113,"column_start":10,"column_end":27},"name":"ArbitraryTuplType","qualname":"::codecs::pnm::header::ArbitraryTuplType","value":"enum ArbitraryTuplType {\n    BlackAndWhite,\n    BlackAndWhiteAlpha,\n    Grayscale,\n    GrayscaleAlpha,\n    RGB,\n    RGBAlpha,\n    Custom(String),\n}","parent":null,"children":[{"krate":0,"index":7383},{"krate":0,"index":7385},{"krate":0,"index":7387},{"krate":0,"index":7389},{"krate":0,"index":7391},{"krate":0,"index":7393},{"krate":0,"index":7395}],"decl_id":null,"docs":" Standardized tuple type specifiers in the header of a `pam`.\n","sig":null,"attributes":[{"value":"/ Standardized tuple type specifiers in the header of a `pam`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":646543,"byte_end":646607,"line_start":111,"line_end":111,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3765},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":647787,"byte_end":647801,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"magic_constant","qualname":"<PnmSubtype>::magic_constant","value":"fn magic_constant(Self) -> &'static [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Get the two magic constant bytes corresponding to this format subtype.\n","sig":null,"attributes":[{"value":"/ Get the two magic constant bytes corresponding to this format subtype.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":647701,"byte_end":647775,"line_start":151,"line_end":151,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":648380,"byte_end":648395,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"sample_encoding","qualname":"<PnmSubtype>::sample_encoding","value":"fn sample_encoding(Self) -> SampleEncoding","parent":null,"children":[],"decl_id":null,"docs":" Whether samples are stored as binary or as decimal ascii\n","sig":null,"attributes":[{"value":"/ Whether samples are stored as binary or as decimal ascii","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":648308,"byte_end":648368,"line_start":164,"line_end":164,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3769},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":648758,"byte_end":648765,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PnmHeader>::subtype","value":"fn subtype<'_>(&'_ Self) -> PnmSubtype","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the format subtype from which the header was created.\n","sig":null,"attributes":[{"value":"/ Retrieve the format subtype from which the header was created.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":648680,"byte_end":648746,"line_start":176,"line_end":176,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3770},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":649280,"byte_end":649285,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"width","qualname":"<PnmHeader>::width","value":"fn width<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The width of the image this header is for.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":649222,"byte_end":649268,"line_start":186,"line_end":186,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3771},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":649703,"byte_end":649709,"line_start":197,"line_end":197,"column_start":12,"column_end":18},"name":"height","qualname":"<PnmHeader>::height","value":"fn height<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The height of the image this header is for.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":649644,"byte_end":649691,"line_start":196,"line_end":196,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3772},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":650167,"byte_end":650181,"line_start":207,"line_end":207,"column_start":12,"column_end":26},"name":"maximal_sample","qualname":"<PnmHeader>::maximal_sample","value":"fn maximal_sample<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The biggest value a sample can have. In other words, the colour resolution.\n","sig":null,"attributes":[{"value":"/ The biggest value a sample can have. In other words, the colour resolution.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":650076,"byte_end":650155,"line_start":206,"line_end":206,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":650599,"byte_end":650608,"line_start":217,"line_end":217,"column_start":12,"column_end":21},"name":"as_bitmap","qualname":"<PnmHeader>::as_bitmap","value":"fn as_bitmap<'_>(&'_ Self) -> Option<&'_ BitmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying bitmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying bitmap header if any","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":650539,"byte_end":650587,"line_start":216,"line_end":216,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":650839,"byte_end":650849,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"as_graymap","qualname":"<PnmHeader>::as_graymap","value":"fn as_graymap<'_>(&'_ Self) -> Option<&'_ GraymapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying graymap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying graymap header if any","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":650778,"byte_end":650827,"line_start":224,"line_end":224,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3775},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":651083,"byte_end":651092,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"as_pixmap","qualname":"<PnmHeader>::as_pixmap","value":"fn as_pixmap<'_>(&'_ Self) -> Option<&'_ PixmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying pixmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying pixmap header if any","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":651023,"byte_end":651071,"line_start":232,"line_end":232,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":651325,"byte_end":651337,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"as_arbitrary","qualname":"<PnmHeader>::as_arbitrary","value":"fn as_arbitrary<'_>(&'_ Self) -> Option<&'_ ArbitraryHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying arbitrary header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying arbitrary header if any","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":651262,"byte_end":651313,"line_start":240,"line_end":240,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":651577,"byte_end":651582,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"write","qualname":"<PnmHeader>::write","value":"fn write<'_, '_>(&'_ Self, &'_ mut dyn io::Write) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the header back into a binary stream\n","sig":null,"attributes":[{"value":"/ Write the header back into a binary stream","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":651519,"byte_end":651565,"line_start":248,"line_end":248,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":654059,"byte_end":654063,"line_start":321,"line_end":321,"column_start":8,"column_end":12},"name":"from","qualname":"<PnmHeader as std::convert::From>::from","value":"fn from(BitmapHeader) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":654261,"byte_end":654265,"line_start":330,"line_end":330,"column_start":8,"column_end":12},"name":"from","qualname":"<PnmHeader as std::convert::From>::from","value":"fn from(GraymapHeader) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":654464,"byte_end":654468,"line_start":339,"line_end":339,"column_start":8,"column_end":12},"name":"from","qualname":"<PnmHeader as std::convert::From>::from","value":"fn from(PixmapHeader) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3792},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":654668,"byte_end":654672,"line_start":348,"line_end":348,"column_start":8,"column_end":12},"name":"from","qualname":"<PnmHeader as std::convert::From>::from","value":"fn from(ArbitraryHeader) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::codecs::tga","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\mod.rs","parent":null,"children":[{"krate":0,"index":3794},{"krate":0,"index":3797},{"krate":0,"index":3800},{"krate":0,"index":3929},{"krate":0,"index":3982}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8454,"byte_end":8477,"line_start":243,"line_end":243,"column_start":5,"column_end":28}},{"value":"/ Decoding of TGA Images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\mod.rs","byte_start":654828,"byte_end":654854,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\mod.rs","byte_start":654855,"byte_end":654858,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\mod.rs","byte_start":654859,"byte_end":654878,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"/ <http://googlesites.inequation.org/tgautilities>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\mod.rs","byte_start":654879,"byte_end":654931,"line_start":4,"line_end":4,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3878},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":656518,"byte_end":656528,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"TgaDecoder","qualname":"::codecs::tga::decoder::TgaDecoder","value":"TgaDecoder {  }","parent":null,"children":[{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[{"value":"/ The representation of a TGA decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":656467,"byte_end":656506,"line_start":49,"line_end":49,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3894},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":657006,"byte_end":657009,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaDecoder<R>>::new","value":"fn new(R) -> ImageResult<TgaDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":656937,"byte_end":656994,"line_start":71,"line_end":71,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3914},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":669591,"byte_end":669601,"line_start":417,"line_end":417,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<TgaDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3915},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":669687,"byte_end":669697,"line_start":421,"line_end":421,"column_start":8,"column_end":18},"name":"color_type","qualname":"<TgaDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3916},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":669758,"byte_end":669777,"line_start":425,"line_end":425,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"<TgaDecoder<R> as image::ImageDecoder>::original_color_type","value":"fn original_color_type<'_>(&'_ Self) -> ExtendedColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5946},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3918},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":669912,"byte_end":669926,"line_start":430,"line_end":430,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"<TgaDecoder<R> as image::ImageDecoder>::scanline_bytes","value":"fn scanline_bytes<'_>(&'_ Self) -> u64","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5949},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3919},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":670154,"byte_end":670165,"line_start":436,"line_end":436,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<TgaDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3920},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":670363,"byte_end":670373,"line_start":443,"line_end":443,"column_start":8,"column_end":18},"name":"read_image","qualname":"<TgaDecoder<R> as image::ImageDecoder>::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5950},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3921},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":672354,"byte_end":672363,"line_start":493,"line_end":493,"column_start":12,"column_end":21},"name":"TGAReader","qualname":"::codecs::tga::decoder::TGAReader","value":"TGAReader {  }","parent":null,"children":[{"krate":0,"index":3923},{"krate":0,"index":3924}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3927},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":672480,"byte_end":672484,"line_start":498,"line_end":498,"column_start":8,"column_end":12},"name":"read","qualname":"<TGAReader<R> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3968},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673511,"byte_end":673515,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageError as std::convert::From>::from","value":"fn from(EncoderError) -> ImageError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3970},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673702,"byte_end":673712,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"TgaEncoder","qualname":"::codecs::tga::encoder::TgaEncoder","value":"TgaEncoder {  }","parent":null,"children":[{"krate":0,"index":3972}],"decl_id":null,"docs":" TGA encoder.\n","sig":null,"attributes":[{"value":"/ TGA encoder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673674,"byte_end":673690,"line_start":34,"line_end":34,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673849,"byte_end":673852,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaEncoder<W>>::new","value":"fn new(W) -> TgaEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673778,"byte_end":673837,"line_start":40,"line_end":40,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3976},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":674182,"byte_end":674188,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"encode","qualname":"<TgaEncoder<W>>::encode","value":"fn encode<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```buf``` that has dimensions ```width```\n and ```height``` and ```ColorType``` ```color_type```.","sig":null,"attributes":[{"value":"/ Encodes the image ```buf``` that has dimensions ```width```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673922,"byte_end":673985,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/ and ```height``` and ```ColorType``` ```color_type```.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673990,"byte_end":674048,"line_start":46,"line_end":46,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":674053,"byte_end":674056,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The dimensions of the image must be between 0 and 65535 (inclusive) or","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":674061,"byte_end":674135,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ an error will be returned.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":674140,"byte_end":674170,"line_start":49,"line_end":49,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3981},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":675315,"byte_end":675326,"line_start":89,"line_end":89,"column_start":8,"column_end":19},"name":"write_image","qualname":"<TgaEncoder<W> as image::ImageEncoder>::write_image","value":"fn write_image<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":5964},"children":[],"decl_id":{"krate":0,"index":5965},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4055},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::codecs::tiff","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","parent":null,"children":[{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4060},{"krate":0,"index":4061},{"krate":0,"index":4064},{"krate":0,"index":4067},{"krate":0,"index":4070},{"krate":0,"index":4073},{"krate":0,"index":4076},{"krate":0,"index":4077},{"krate":0,"index":4079},{"krate":0,"index":4082},{"krate":0,"index":4083},{"krate":0,"index":4086},{"krate":0,"index":4089},{"krate":0,"index":4090},{"krate":0,"index":4093},{"krate":0,"index":4096},{"krate":0,"index":4099},{"krate":0,"index":4102},{"krate":0,"index":4105},{"krate":0,"index":4108},{"krate":0,"index":4111},{"krate":0,"index":4114},{"krate":0,"index":4117},{"krate":0,"index":4120},{"krate":0,"index":4121},{"krate":0,"index":4124},{"krate":0,"index":4127},{"krate":0,"index":4130},{"krate":0,"index":4133},{"krate":0,"index":4138},{"krate":0,"index":4141},{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4146},{"krate":0,"index":4151},{"krate":0,"index":4155},{"krate":0,"index":4164},{"krate":0,"index":4167},{"krate":0,"index":4169},{"krate":0,"index":4173}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8499,"byte_end":8523,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ Decoding and Encoding of TIFF Images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":684878,"byte_end":684918,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":684919,"byte_end":684922,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ TIFF (Tagged Image File Format) is a versatile image format that supports","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":684923,"byte_end":685000,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ lossless and lossy compression.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":685001,"byte_end":685036,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":685037,"byte_end":685040,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":685041,"byte_end":685060,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * <http://partners.adobe.com/public/developer/tiff/index.html> - The TIFF specification","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":685061,"byte_end":685152,"line_start":7,"line_end":7,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":4133},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":685654,"byte_end":685665,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"TiffDecoder","qualname":"::codecs::tiff::TiffDecoder","value":"TiffDecoder {  }","parent":null,"children":[{"krate":0,"index":4135},{"krate":0,"index":4136},{"krate":0,"index":4137}],"decl_id":null,"docs":" Decoder for TIFF images.\n","sig":null,"attributes":[{"value":"/ Decoder for TIFF images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":685614,"byte_end":685642,"line_start":24,"line_end":24,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4140},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":685990,"byte_end":685993,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffDecoder<R>>::new","value":"fn new(R) -> Result<TiffDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TiffDecoder.\n","sig":null,"attributes":[{"value":"/ Create a new TiffDecoder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":685949,"byte_end":685978,"line_start":40,"line_end":40,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4146},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":690556,"byte_end":690566,"line_start":152,"line_end":152,"column_start":12,"column_end":22},"name":"TiffReader","qualname":"::codecs::tiff::TiffReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":690499,"byte_end":690544,"line_start":151,"line_end":151,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4153},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":690644,"byte_end":690648,"line_start":154,"line_end":154,"column_start":8,"column_end":12},"name":"read","qualname":"<TiffReader<R> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4154},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":690737,"byte_end":690748,"line_start":157,"line_end":157,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"<TiffReader<R> as std::io::Read>::read_to_end","value":"fn read_to_end<'_, '_>(&'_ mut Self, &'_ mut Vec<u8>) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4672},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4159},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":691109,"byte_end":691119,"line_start":170,"line_end":170,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<TiffDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4160},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":691181,"byte_end":691191,"line_start":174,"line_end":174,"column_start":8,"column_end":18},"name":"color_type","qualname":"<TiffDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4161},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":691252,"byte_end":691262,"line_start":178,"line_end":178,"column_start":8,"column_end":18},"name":"set_limits","qualname":"<TiffDecoder<R> as image::ImageDecoder>::set_limits","value":"fn set_limits<'_>(&'_ mut Self, crate::io::Limits) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5954},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4162},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":692146,"byte_end":692157,"line_start":198,"line_end":198,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<TiffDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4163},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":693207,"byte_end":693217,"line_start":220,"line_end":220,"column_start":8,"column_end":18},"name":"read_image","qualname":"<TiffDecoder<R> as image::ImageDecoder>::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5950},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4164},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":694848,"byte_end":694859,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"TiffEncoder","qualname":"::codecs::tiff::TiffEncoder","value":"TiffEncoder {  }","parent":null,"children":[{"krate":0,"index":4166}],"decl_id":null,"docs":" Encoder for tiff images\n","sig":null,"attributes":[{"value":"/ Encoder for tiff images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":694809,"byte_end":694836,"line_start":263,"line_end":263,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4171},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":695585,"byte_end":695588,"line_start":284,"line_end":284,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffEncoder<W>>::new","value":"fn new(W) -> TiffEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w`\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":695519,"byte_end":695573,"line_start":283,"line_end":283,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4172},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":695820,"byte_end":695826,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"encode","qualname":"<TiffEncoder<W>>::encode","value":"fn encode<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","sig":null,"attributes":[{"value":"/ Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":695652,"byte_end":695743,"line_start":288,"line_end":288,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":695748,"byte_end":695751,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ 16-bit types assume the buffer is native endian.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":695756,"byte_end":695808,"line_start":290,"line_end":290,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4175},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":697487,"byte_end":697498,"line_start":335,"line_end":335,"column_start":8,"column_end":19},"name":"write_image","qualname":"<TiffEncoder<W> as image::ImageEncoder>::write_image","value":"fn write_image<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":5964},"children":[],"decl_id":{"krate":0,"index":5965},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4176},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::codecs::webp","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\mod.rs","parent":null,"children":[{"krate":0,"index":4177},{"krate":0,"index":4180},{"krate":0,"index":4329},{"krate":0,"index":4476},{"krate":0,"index":4500},{"krate":0,"index":4516},{"krate":0,"index":4616},{"krate":0,"index":4652},{"krate":0,"index":4658}],"decl_id":null,"docs":" Decoding and Encoding of WebP Images\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"webp\", feature = \"webp-encoder\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8546,"byte_end":8601,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/ Decoding and Encoding of WebP Images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\mod.rs","byte_start":697694,"byte_end":697734,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4274},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":700266,"byte_end":700270,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageError as std::convert::From>::from","value":"fn from(DecoderError) -> ImageError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4291},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":702039,"byte_end":702050,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"WebPDecoder","qualname":"::codecs::webp::decoder::WebPDecoder","value":"WebPDecoder {  }","parent":null,"children":[{"krate":0,"index":4293},{"krate":0,"index":4294}],"decl_id":null,"docs":" WebP Image format decoder. Currently only supports lossy RGB images or lossless RGBA images.\n","sig":null,"attributes":[{"value":"/ WebP Image format decoder. Currently only supports lossy RGB images or lossless RGBA images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":701931,"byte_end":702027,"line_start":123,"line_end":123,"column_start":1,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4297},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":702244,"byte_end":702247,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<WebPDecoder<R>>::new","value":"fn new(R) -> ImageResult<WebPDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebPDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[{"value":"/ Create a new WebPDecoder from the Reader ```r```.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":702126,"byte_end":702179,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/ This function takes ownership of the Reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":702184,"byte_end":702232,"line_start":131,"line_end":131,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":4308},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":705881,"byte_end":705891,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"WebpReader","qualname":"::codecs::webp::decoder::WebpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":705824,"byte_end":705869,"line_start":254,"line_end":254,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4315},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":705969,"byte_end":705973,"line_start":257,"line_end":257,"column_start":8,"column_end":12},"name":"read","qualname":"<WebpReader<R> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4316},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":706062,"byte_end":706073,"line_start":260,"line_end":260,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"<WebpReader<R> as std::io::Read>::read_to_end","value":"fn read_to_end<'_, '_>(&'_ mut Self, &'_ mut Vec<u8>) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4672},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":706427,"byte_end":706437,"line_start":273,"line_end":273,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<WebPDecoder<R> as image::ImageDecoder>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4322},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":706881,"byte_end":706891,"line_start":286,"line_end":286,"column_start":8,"column_end":18},"name":"color_type","qualname":"<WebPDecoder<R> as image::ImageDecoder>::color_type","value":"fn color_type<'_>(&'_ Self) -> color::ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4323},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":707163,"byte_end":707174,"line_start":294,"line_end":294,"column_start":8,"column_end":19},"name":"into_reader","qualname":"<WebPDecoder<R> as image::ImageDecoder>::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":708018,"byte_end":708028,"line_start":314,"line_end":314,"column_start":8,"column_end":18},"name":"read_image","qualname":"<WebPDecoder<R> as image::ImageDecoder>::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":{"krate":0,"index":5950},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4328},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":708592,"byte_end":708603,"line_start":333,"line_end":333,"column_start":8,"column_end":19},"name":"into_frames","qualname":"<WebPDecoder<R> as image::AnimationDecoder>::into_frames","value":"fn into_frames(Self) -> Frames","parent":{"krate":0,"index":5961},"children":[],"decl_id":{"krate":0,"index":5963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4424},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":711393,"byte_end":711397,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageError as std::convert::From>::from","value":"fn from(DecoderError) -> ImageError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4583},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":748073,"byte_end":748077,"line_start":106,"line_end":106,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageError as std::convert::From>::from","value":"fn from(DecoderError) -> ImageError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4658},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::codecs::webp::vp8","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","parent":null,"children":[{"krate":0,"index":4659},{"krate":0,"index":4660},{"krate":0,"index":4663},{"krate":0,"index":4666},{"krate":0,"index":4669},{"krate":0,"index":4670},{"krate":0,"index":4672},{"krate":0,"index":4675},{"krate":0,"index":4676},{"krate":0,"index":4679},{"krate":0,"index":4682},{"krate":0,"index":4685},{"krate":0,"index":4688},{"krate":0,"index":4691},{"krate":0,"index":4692},{"krate":0,"index":4695},{"krate":0,"index":4698},{"krate":0,"index":4701},{"krate":0,"index":4704},{"krate":0,"index":4707},{"krate":0,"index":4710},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4718},{"krate":0,"index":4719},{"krate":0,"index":4720},{"krate":0,"index":4721},{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4725},{"krate":0,"index":4726},{"krate":0,"index":4727},{"krate":0,"index":4728},{"krate":0,"index":4729},{"krate":0,"index":7714},{"krate":0,"index":7730},{"krate":0,"index":7732},{"krate":0,"index":7733},{"krate":0,"index":7735},{"krate":0,"index":7736},{"krate":0,"index":7738},{"krate":0,"index":7739},{"krate":0,"index":7741},{"krate":0,"index":7754},{"krate":0,"index":7756},{"krate":0,"index":7757},{"krate":0,"index":7759},{"krate":0,"index":7760},{"krate":0,"index":7762},{"krate":0,"index":7763},{"krate":0,"index":7765},{"krate":0,"index":7796},{"krate":0,"index":7798},{"krate":0,"index":7799},{"krate":0,"index":7801},{"krate":0,"index":7802},{"krate":0,"index":7804},{"krate":0,"index":7805},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4733},{"krate":0,"index":4735},{"krate":0,"index":4737},{"krate":0,"index":4739},{"krate":0,"index":4743},{"krate":0,"index":4745},{"krate":0,"index":4747},{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4762},{"krate":0,"index":4763},{"krate":0,"index":4764},{"krate":0,"index":4765},{"krate":0,"index":4766},{"krate":0,"index":4768},{"krate":0,"index":4771},{"krate":0,"index":4773},{"krate":0,"index":7807},{"krate":0,"index":7809},{"krate":0,"index":4775},{"krate":0,"index":7811},{"krate":0,"index":7830},{"krate":0,"index":7832},{"krate":0,"index":7835},{"krate":0,"index":4777},{"krate":0,"index":4779},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4788},{"krate":0,"index":7836},{"krate":0,"index":7845},{"krate":0,"index":7847},{"krate":0,"index":7851},{"krate":0,"index":7852},{"krate":0,"index":7865},{"krate":0,"index":7867},{"krate":0,"index":7869},{"krate":0,"index":4796},{"krate":0,"index":7871},{"krate":0,"index":7881},{"krate":0,"index":7883},{"krate":0,"index":7884},{"krate":0,"index":4803},{"krate":0,"index":4831},{"krate":0,"index":4864},{"krate":0,"index":4867},{"krate":0,"index":4869},{"krate":0,"index":4871},{"krate":0,"index":4873},{"krate":0,"index":4875},{"krate":0,"index":4877},{"krate":0,"index":4879},{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4884},{"krate":0,"index":4886},{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4891},{"krate":0,"index":4892},{"krate":0,"index":4893},{"krate":0,"index":4894},{"krate":0,"index":4895},{"krate":0,"index":4896},{"krate":0,"index":4897},{"krate":0,"index":4898},{"krate":0,"index":4899},{"krate":0,"index":4900},{"krate":0,"index":4901},{"krate":0,"index":4902},{"krate":0,"index":4903},{"krate":0,"index":4904}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\mod.rs","byte_start":698216,"byte_end":698240,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/ An implementation of the VP8 Video Codec","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790058,"byte_end":790102,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790103,"byte_end":790106,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a partial implementation of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790107,"byte_end":790163,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"/ VP8 video format as defined in RFC-6386.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790164,"byte_end":790208,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790209,"byte_end":790212,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It decodes Keyframes only.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790213,"byte_end":790243,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/ VP8 is the underpinning of the WebP image format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790244,"byte_end":790296,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790297,"byte_end":790300,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790301,"byte_end":790320,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/ * [rfc-6386](http://tools.ietf.org/html/rfc6386) - The VP8 Data Format and Decoding Guide","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790321,"byte_end":790414,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"/ * [VP8.pdf](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37073.pdf) - An overview of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790415,"byte_end":790537,"line_start":11,"line_end":11,"column_start":1,"column_end":123}},{"value":"/ of the VP8 format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790538,"byte_end":790559,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":790560,"byte_end":790563,"line_start":13,"line_end":13,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":4780},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":817721,"byte_end":817725,"line_start":718,"line_end":718,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageError as std::convert::From>::from","value":"fn from(DecoderError) -> ImageError","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7852},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":820945,"byte_end":820950,"line_start":849,"line_end":849,"column_start":12,"column_end":17},"name":"Frame","qualname":"::codecs::webp::vp8::Frame","value":"Frame { width, height, ybuf, ubuf, vbuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":7853},{"krate":0,"index":7854},{"krate":0,"index":7855},{"krate":0,"index":7856},{"krate":0,"index":7857},{"krate":0,"index":7858},{"krate":0,"index":7859},{"krate":0,"index":7860},{"krate":0,"index":7861},{"krate":0,"index":7862},{"krate":0,"index":7863},{"krate":0,"index":7864}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[{"value":"/ A Representation of the last decoded video frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":820848,"byte_end":820900,"line_start":847,"line_end":847,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7853},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":820997,"byte_end":821002,"line_start":851,"line_end":851,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":7852},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[{"value":"/ The width of the luma plane","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":820957,"byte_end":820988,"line_start":850,"line_end":850,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7854},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821055,"byte_end":821061,"line_start":854,"line_end":854,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":7852},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[{"value":"/ The height of the luma plane","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821014,"byte_end":821046,"line_start":853,"line_end":853,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7855},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821113,"byte_end":821117,"line_start":857,"line_end":857,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::codecs::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":7852},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[{"value":"/ The luma plane of the frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821073,"byte_end":821104,"line_start":856,"line_end":856,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7856},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821173,"byte_end":821177,"line_start":860,"line_end":860,"column_start":9,"column_end":13},"name":"ubuf","qualname":"::codecs::webp::vp8::Frame::ubuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":7852},"children":[],"decl_id":null,"docs":" The blue plane of the frame\n","sig":null,"attributes":[{"value":"/ The blue plane of the frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821133,"byte_end":821164,"line_start":859,"line_end":859,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7857},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821232,"byte_end":821236,"line_start":863,"line_end":863,"column_start":9,"column_end":13},"name":"vbuf","qualname":"::codecs::webp::vp8::Frame::vbuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":7852},"children":[],"decl_id":null,"docs":" The red plane of the frame\n","sig":null,"attributes":[{"value":"/ The red plane of the frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821193,"byte_end":821223,"line_start":862,"line_end":862,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7858},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821307,"byte_end":821315,"line_start":866,"line_end":866,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::codecs::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":7852},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is a keyframe","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821252,"byte_end":821298,"line_start":865,"line_end":865,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":7860},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821411,"byte_end":821422,"line_start":871,"line_end":871,"column_start":9,"column_end":20},"name":"for_display","qualname":"::codecs::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":7852},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is intended for display","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821346,"byte_end":821402,"line_start":870,"line_end":870,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":7861},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821553,"byte_end":821563,"line_start":876,"line_end":876,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::codecs::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":7852},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[{"value":"/ The pixel type of the frame as defined by Section 9.2","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821454,"byte_end":821511,"line_start":874,"line_end":874,"column_start":5,"column_end":62}},{"value":"/ of the VP8 Specification","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821516,"byte_end":821544,"line_start":875,"line_end":875,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4802},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":823900,"byte_end":823912,"line_start":948,"line_end":948,"column_start":12,"column_end":24},"name":"get_buf_size","qualname":"<Frame>::get_buf_size","value":"fn get_buf_size<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the buffer size\n","sig":null,"attributes":[{"value":"/ Gets the buffer size","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":823864,"byte_end":823888,"line_start":947,"line_end":947,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4803},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":824245,"byte_end":824255,"line_start":973,"line_end":973,"column_start":12,"column_end":22},"name":"Vp8Decoder","qualname":"::codecs::webp::vp8::Vp8Decoder","value":"Vp8Decoder {  }","parent":null,"children":[{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4807},{"krate":0,"index":4808},{"krate":0,"index":4809},{"krate":0,"index":4810},{"krate":0,"index":4811},{"krate":0,"index":4812},{"krate":0,"index":4813},{"krate":0,"index":4815},{"krate":0,"index":4817},{"krate":0,"index":4819},{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4824},{"krate":0,"index":4825},{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4830}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[{"value":"/ VP8 Decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":824187,"byte_end":824202,"line_start":970,"line_end":970,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":824203,"byte_end":824206,"line_start":971,"line_end":971,"column_start":1,"column_end":4}},{"value":"/ Only decodes keyframes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":824207,"byte_end":824233,"line_start":972,"line_end":972,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4833},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":825005,"byte_end":825008,"line_start":1012,"line_end":1012,"column_start":12,"column_end":15},"name":"new","qualname":"<Vp8Decoder<R>>::new","value":"fn new(R) -> Vp8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[{"value":"/ Create a new decoder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":824901,"byte_end":824926,"line_start":1010,"line_end":1010,"column_start":5,"column_end":30}},{"value":"/ The reader must present a raw vp8 bitstream to the decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":824931,"byte_end":824993,"line_start":1011,"line_end":1011,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4862},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":861277,"byte_end":861289,"line_start":2059,"line_end":2059,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<Vp8Decoder<R>>::decode_frame","value":"fn decode_frame<'_>(&'_ mut Self) -> ImageResult<&'_ Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame\n","sig":null,"attributes":[{"value":"/ Decodes the current frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":861236,"byte_end":861265,"line_start":2058,"line_end":2058,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4921},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":887508,"byte_end":887514,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":4923}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[{"value":"/ An implementation dependent iterator, reading the frames as requested","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":887423,"byte_end":887496,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4926},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":887695,"byte_end":887698,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"fn new(Box<dyn Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new `Frames` from an implementation specific iterator.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":887615,"byte_end":887683,"line_start":15,"line_end":15,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4927},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888090,"byte_end":888104,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"fn collect_frames(Self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.","sig":null,"attributes":[{"value":"/ Steps through the iterator from the current frame until the end and pushes each frame into","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":887809,"byte_end":887903,"line_start":20,"line_end":20,"column_start":5,"column_end":99}},{"value":"/ a `Vec`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":887908,"byte_end":887920,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/ If en error is encountered that error is returned instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":887925,"byte_end":887987,"line_start":22,"line_end":22,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":887992,"byte_end":887995,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Note: This is equivalent to `Frames::collect::<ImageResult<Vec<Frame>>>()`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888000,"byte_end":888078,"line_start":24,"line_end":24,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4931},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888250,"byte_end":888254,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"next","qualname":"<Frames as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<ImageResult<Frame>>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7886},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888393,"byte_end":888398,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":7887},{"krate":0,"index":7888},{"krate":0,"index":7889},{"krate":0,"index":7890}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888336,"byte_end":888364,"line_start":37,"line_end":37,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7893},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888680,"byte_end":888685,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Delay","qualname":"::animation::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":7894}],"decl_id":null,"docs":" The delay of a frame relative to the previous one.\n","sig":null,"attributes":[{"value":"/ The delay of a frame relative to the previous one.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888557,"byte_end":888611,"line_start":49,"line_end":49,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4933},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888788,"byte_end":888791,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"fn new(RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new frame without any delay.\n","sig":null,"attributes":[{"value":"/ Constructs a new frame without any delay.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888731,"byte_end":888776,"line_start":56,"line_end":56,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4934},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889020,"byte_end":889030,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"fn from_parts(RgbaImage, u32, u32, Delay) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new frame\n","sig":null,"attributes":[{"value":"/ Constructs a new frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888982,"byte_end":889008,"line_start":66,"line_end":66,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4935},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889242,"byte_end":889247,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"fn delay<'_>(&'_ Self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889207,"byte_end":889230,"line_start":76,"line_end":76,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4936},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889336,"byte_end":889342,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"fn buffer<'_>(&'_ Self) -> &'_ RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889296,"byte_end":889324,"line_start":81,"line_end":81,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4937},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889444,"byte_end":889454,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"buffer_mut","qualname":"<Frame>::buffer_mut","value":"fn buffer_mut<'_>(&'_ mut Self) -> &'_ mut RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable image buffer\n","sig":null,"attributes":[{"value":"/ Returns a mutable image buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889398,"byte_end":889432,"line_start":86,"line_end":86,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4938},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889562,"byte_end":889573,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"fn into_buffer(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889522,"byte_end":889550,"line_start":91,"line_end":91,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4939},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889662,"byte_end":889666,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"fn left<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889626,"byte_end":889650,"line_start":96,"line_end":96,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4940},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889748,"byte_end":889751,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"fn top<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889712,"byte_end":889736,"line_start":101,"line_end":101,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4942},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890016,"byte_end":890035,"line_start":116,"line_end":116,"column_start":12,"column_end":31},"name":"from_numer_denom_ms","qualname":"<Delay>::from_numer_denom_ms","value":"fn from_numer_denom_ms(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a delay from a ratio of milliseconds.","sig":null,"attributes":[{"value":"/ Create a delay from a ratio of milliseconds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889811,"byte_end":889859,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889864,"byte_end":889867,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889872,"byte_end":889886,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889891,"byte_end":889894,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889899,"byte_end":889906,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use image::Delay;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889911,"byte_end":889932,"line_start":113,"line_end":113,"column_start":5,"column_end":26}},{"value":"/ let delay_10ms = Delay::from_numer_denom_ms(10, 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889937,"byte_end":889992,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889997,"byte_end":890004,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4943},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890699,"byte_end":890723,"line_start":136,"line_end":136,"column_start":12,"column_end":36},"name":"from_saturating_duration","qualname":"<Delay>::from_saturating_duration","value":"fn from_saturating_duration(Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from a duration, clamped between 0 and an implemented defined maximum.","sig":null,"attributes":[{"value":"/ Convert from a duration, clamped between 0 and an implemented defined maximum.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890176,"byte_end":890258,"line_start":122,"line_end":122,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890263,"byte_end":890266,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The maximum is *at least* `i32::MAX` milliseconds. It should be noted that the accuracy of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890271,"byte_end":890365,"line_start":124,"line_end":124,"column_start":5,"column_end":99}},{"value":"/ the result may be relative and very large delays have a coarse resolution.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890370,"byte_end":890448,"line_start":125,"line_end":125,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890453,"byte_end":890456,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890461,"byte_end":890475,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890480,"byte_end":890483,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890488,"byte_end":890495,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890500,"byte_end":890528,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ use image::Delay;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890533,"byte_end":890554,"line_start":131,"line_end":131,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890559,"byte_end":890562,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let duration = Duration::from_millis(20);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890567,"byte_end":890612,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/ let delay = Delay::from_saturating_duration(duration);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890617,"byte_end":890675,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":890680,"byte_end":890687,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4945},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":891903,"byte_end":891917,"line_start":165,"line_end":165,"column_start":12,"column_end":26},"name":"numer_denom_ms","qualname":"<Delay>::numer_denom_ms","value":"fn numer_denom_ms(Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The numerator and denominator of the delay in milliseconds.","sig":null,"attributes":[{"value":"/ The numerator and denominator of the delay in milliseconds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":891677,"byte_end":891740,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":891745,"byte_end":891748,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This is guaranteed to be an exact conversion if the `Delay` was previously created with the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":891753,"byte_end":891848,"line_start":163,"line_end":163,"column_start":5,"column_end":100}},{"value":"/ `from_numer_denom_ms` constructor.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":891853,"byte_end":891891,"line_start":164,"line_end":164,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4957},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":896011,"byte_end":896015,"line_start":271,"line_end":271,"column_start":8,"column_end":12},"name":"from","qualname":"<Duration as std::convert::From>::from","value":"fn from(Delay) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5059},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":899394,"byte_end":899400,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer_::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":5062}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":899354,"byte_end":899382,"line_start":18,"line_end":18,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5067},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":899627,"byte_end":899631,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"next","qualname":"<Pixels as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<&'a P>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":899602,"byte_end":899619,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5069},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":899762,"byte_end":899771,"line_start":38,"line_end":38,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Pixels as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8614},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":899737,"byte_end":899754,"line_start":37,"line_end":37,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5073},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":899967,"byte_end":899970,"line_start":48,"line_end":48,"column_start":8,"column_end":11},"name":"len","qualname":"<Pixels as std::iter::ExactSizeIterator>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":{"krate":2,"index":8479},"children":[],"decl_id":{"krate":2,"index":8480},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5077},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900144,"byte_end":900153,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Pixels as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<&'a P>","parent":{"krate":2,"index":8454},"children":[],"decl_id":{"krate":2,"index":8455},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900119,"byte_end":900136,"line_start":57,"line_end":57,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5081},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900310,"byte_end":900315,"line_start":64,"line_end":64,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pixels as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2887},"children":[],"decl_id":{"krate":2,"index":2888},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5084},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900498,"byte_end":900501,"line_start":75,"line_end":75,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Pixels as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5085},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900705,"byte_end":900714,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer_::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":5088}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900657,"byte_end":900693,"line_start":82,"line_end":82,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5093},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900951,"byte_end":900955,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"next","qualname":"<PixelsMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<&'a mut P>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900926,"byte_end":900943,"line_start":96,"line_end":96,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5095},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901094,"byte_end":901103,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<PixelsMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8614},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901069,"byte_end":901086,"line_start":101,"line_end":101,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5099},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901302,"byte_end":901305,"line_start":112,"line_end":112,"column_start":8,"column_end":11},"name":"len","qualname":"<PixelsMut as std::iter::ExactSizeIterator>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":{"krate":2,"index":8479},"children":[],"decl_id":{"krate":2,"index":8480},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5103},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901482,"byte_end":901491,"line_start":122,"line_end":122,"column_start":8,"column_end":17},"name":"next_back","qualname":"<PixelsMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<&'a mut P>","parent":{"krate":2,"index":8454},"children":[],"decl_id":{"krate":2,"index":8455},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901457,"byte_end":901474,"line_start":121,"line_end":121,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5107},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901725,"byte_end":901728,"line_start":133,"line_end":133,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PixelsMut as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5108},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":902093,"byte_end":902097,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"Rows","qualname":"::buffer_::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":5111}],"decl_id":null,"docs":" Iterate over rows of an image","sig":null,"attributes":[{"value":"/ Iterate over rows of an image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901887,"byte_end":901920,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901921,"byte_end":901924,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows`]. See its document for details.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901925,"byte_end":902011,"line_start":142,"line_end":142,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":902012,"byte_end":902015,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows`]: ../struct.ImageBuffer.html#method.rows","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":902016,"byte_end":902081,"line_start":144,"line_end":144,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5120},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903250,"byte_end":903254,"line_start":181,"line_end":181,"column_start":8,"column_end":12},"name":"next","qualname":"<Rows as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Pixels>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903225,"byte_end":903242,"line_start":180,"line_end":180,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5121},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903543,"byte_end":903552,"line_start":190,"line_end":190,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Rows as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8614},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903518,"byte_end":903535,"line_start":189,"line_end":189,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5125},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903746,"byte_end":903749,"line_start":200,"line_end":200,"column_start":8,"column_end":11},"name":"len","qualname":"<Rows as std::iter::ExactSizeIterator>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":{"krate":2,"index":8479},"children":[],"decl_id":{"krate":2,"index":8480},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5129},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903921,"byte_end":903930,"line_start":210,"line_end":210,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Rows as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Pixels>","parent":{"krate":2,"index":8454},"children":[],"decl_id":{"krate":2,"index":8455},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903896,"byte_end":903913,"line_start":209,"line_end":209,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5132},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904243,"byte_end":904248,"line_start":220,"line_end":220,"column_start":8,"column_end":13},"name":"clone","qualname":"<Rows as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2887},"children":[],"decl_id":{"krate":2,"index":2888},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5135},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904427,"byte_end":904430,"line_start":231,"line_end":231,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Rows as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5136},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904810,"byte_end":904817,"line_start":243,"line_end":243,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::buffer_::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":5139}],"decl_id":null,"docs":" Iterate over mutable rows of an image","sig":null,"attributes":[{"value":"/ Iterate over mutable rows of an image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904584,"byte_end":904625,"line_start":238,"line_end":238,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904626,"byte_end":904629,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows_mut`]. See its document for details.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904630,"byte_end":904720,"line_start":240,"line_end":240,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904721,"byte_end":904724,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows_mut`]: ../struct.ImageBuffer.html#method.rows_mut","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904725,"byte_end":904798,"line_start":242,"line_end":242,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5148},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":906004,"byte_end":906008,"line_start":279,"line_end":279,"column_start":8,"column_end":12},"name":"next","qualname":"<RowsMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<PixelsMut>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":905979,"byte_end":905996,"line_start":278,"line_end":278,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5149},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":906307,"byte_end":906316,"line_start":288,"line_end":288,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<RowsMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8614},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":906282,"byte_end":906299,"line_start":287,"line_end":287,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5153},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":906513,"byte_end":906516,"line_start":298,"line_end":298,"column_start":8,"column_end":11},"name":"len","qualname":"<RowsMut as std::iter::ExactSizeIterator>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":{"krate":2,"index":8479},"children":[],"decl_id":{"krate":2,"index":8480},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5157},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":906691,"byte_end":906700,"line_start":308,"line_end":308,"column_start":8,"column_end":17},"name":"next_back","qualname":"<RowsMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<PixelsMut>","parent":{"krate":2,"index":8454},"children":[],"decl_id":{"krate":2,"index":8455},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":906666,"byte_end":906683,"line_start":307,"line_end":307,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5160},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":907066,"byte_end":907069,"line_start":321,"line_end":321,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RowsMut as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5161},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":907275,"byte_end":907290,"line_start":329,"line_end":329,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer_::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":5164},{"krate":0,"index":5165},{"krate":0,"index":5166},{"krate":0,"index":5167}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":907226,"byte_end":907263,"line_start":328,"line_end":328,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5172},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":907574,"byte_end":907578,"line_start":346,"line_end":346,"column_start":8,"column_end":12},"name":"next","qualname":"<EnumeratePixels as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<(u32, u32, &'a P)>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":907549,"byte_end":907566,"line_start":345,"line_end":345,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5174},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":907856,"byte_end":907865,"line_start":357,"line_end":357,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<EnumeratePixels as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8614},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":907831,"byte_end":907848,"line_start":356,"line_end":356,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5178},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908070,"byte_end":908073,"line_start":367,"line_end":367,"column_start":8,"column_end":11},"name":"len","qualname":"<EnumeratePixels as std::iter::ExactSizeIterator>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":{"krate":2,"index":8479},"children":[],"decl_id":{"krate":2,"index":8480},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5181},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908184,"byte_end":908189,"line_start":373,"line_end":373,"column_start":8,"column_end":13},"name":"clone","qualname":"<EnumeratePixels as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2887},"children":[],"decl_id":{"krate":2,"index":2888},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5184},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908410,"byte_end":908413,"line_start":385,"line_end":385,"column_start":8,"column_end":11},"name":"fmt","qualname":"<EnumeratePixels as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5185},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908732,"byte_end":908745,"line_start":396,"line_end":396,"column_start":12,"column_end":25},"name":"EnumerateRows","qualname":"::buffer_::EnumerateRows","value":"EnumerateRows {  }","parent":null,"children":[{"krate":0,"index":5188},{"krate":0,"index":5189},{"krate":0,"index":5190}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908685,"byte_end":908720,"line_start":395,"line_end":395,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5195},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":909023,"byte_end":909027,"line_start":412,"line_end":412,"column_start":8,"column_end":12},"name":"next","qualname":"<EnumerateRows as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<(u32, EnumeratePixels)>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908998,"byte_end":909015,"line_start":411,"line_end":411,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5197},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":909428,"byte_end":909437,"line_start":429,"line_end":429,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<EnumerateRows as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8614},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":909403,"byte_end":909420,"line_start":428,"line_end":428,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5201},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":909640,"byte_end":909643,"line_start":439,"line_end":439,"column_start":8,"column_end":11},"name":"len","qualname":"<EnumerateRows as std::iter::ExactSizeIterator>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":{"krate":2,"index":8479},"children":[],"decl_id":{"krate":2,"index":8480},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5204},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":909750,"byte_end":909755,"line_start":445,"line_end":445,"column_start":8,"column_end":13},"name":"clone","qualname":"<EnumerateRows as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2887},"children":[],"decl_id":{"krate":2,"index":2888},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5207},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":909968,"byte_end":909971,"line_start":457,"line_end":457,"column_start":8,"column_end":11},"name":"fmt","qualname":"<EnumerateRows as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5208},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":910253,"byte_end":910271,"line_start":467,"line_end":467,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer_::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":5211},{"krate":0,"index":5212},{"krate":0,"index":5213},{"krate":0,"index":5214}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":910204,"byte_end":910241,"line_start":466,"line_end":466,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5219},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":910565,"byte_end":910569,"line_start":484,"line_end":484,"column_start":8,"column_end":12},"name":"next","qualname":"<EnumeratePixelsMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<(u32, u32, &'a mut P)>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":910540,"byte_end":910557,"line_start":483,"line_end":483,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5221},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":910851,"byte_end":910860,"line_start":495,"line_end":495,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<EnumeratePixelsMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8614},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":910826,"byte_end":910843,"line_start":494,"line_end":494,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5225},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":911068,"byte_end":911071,"line_start":505,"line_end":505,"column_start":8,"column_end":11},"name":"len","qualname":"<EnumeratePixelsMut as std::iter::ExactSizeIterator>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":{"krate":2,"index":8479},"children":[],"decl_id":{"krate":2,"index":8480},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5228},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":911225,"byte_end":911228,"line_start":514,"line_end":514,"column_start":8,"column_end":11},"name":"fmt","qualname":"<EnumeratePixelsMut as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5229},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":911550,"byte_end":911566,"line_start":525,"line_end":525,"column_start":12,"column_end":28},"name":"EnumerateRowsMut","qualname":"::buffer_::EnumerateRowsMut","value":"EnumerateRowsMut {  }","parent":null,"children":[{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5234}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":911503,"byte_end":911538,"line_start":524,"line_end":524,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5239},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":911853,"byte_end":911857,"line_start":541,"line_end":541,"column_start":8,"column_end":12},"name":"next","qualname":"<EnumerateRowsMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<(u32, EnumeratePixelsMut)>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":911828,"byte_end":911845,"line_start":540,"line_end":540,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5241},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":912264,"byte_end":912273,"line_start":558,"line_end":558,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<EnumerateRowsMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8614},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":912239,"byte_end":912256,"line_start":557,"line_end":557,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5245},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":912479,"byte_end":912482,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"len","qualname":"<EnumerateRowsMut as std::iter::ExactSizeIterator>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":{"krate":2,"index":8479},"children":[],"decl_id":{"krate":2,"index":8480},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5248},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":912632,"byte_end":912635,"line_start":577,"line_end":577,"column_start":8,"column_end":11},"name":"fmt","qualname":"<EnumerateRowsMut as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7909},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915256,"byte_end":915267,"line_start":655,"line_end":655,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer_::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":7912},{"krate":0,"index":7913},{"krate":0,"index":7914},{"krate":0,"index":7915}],"decl_id":null,"docs":" Generic image buffer","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":912871,"byte_end":912895,"line_start":586,"line_end":586,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":912896,"byte_end":912899,"line_start":587,"line_end":587,"column_start":1,"column_end":4}},{"value":"/ This is an image parameterised by its Pixel types, represented by a width and height and a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":912900,"byte_end":912994,"line_start":588,"line_end":588,"column_start":1,"column_end":95}},{"value":"/ container of channel data. It provides direct access to its pixels and implements the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":912995,"byte_end":913084,"line_start":589,"line_end":589,"column_start":1,"column_end":90}},{"value":"/ [`GenericImageView`] and [`GenericImage`] traits. In many ways, this is the standard buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913085,"byte_end":913180,"line_start":590,"line_end":590,"column_start":1,"column_end":96}},{"value":"/ implementing those traits. Using this concrete type instead of a generic type parameter has","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913181,"byte_end":913276,"line_start":591,"line_end":591,"column_start":1,"column_end":96}},{"value":"/ been shown to improve performance.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913277,"byte_end":913315,"line_start":592,"line_end":592,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913316,"byte_end":913319,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ The crate defines a few type aliases with regularly used pixel types for your convenience, such","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913320,"byte_end":913419,"line_start":594,"line_end":594,"column_start":1,"column_end":100}},{"value":"/ as [`RgbImage`], [`GrayImage`] etc.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913420,"byte_end":913459,"line_start":595,"line_end":595,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913460,"byte_end":913463,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913464,"byte_end":913509,"line_start":597,"line_end":597,"column_start":1,"column_end":46}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913510,"byte_end":913563,"line_start":598,"line_end":598,"column_start":1,"column_end":54}},{"value":"/ [`RgbImage`]: type.RgbImage.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913564,"byte_end":913600,"line_start":599,"line_end":599,"column_start":1,"column_end":37}},{"value":"/ [`GrayImage`]: type.GrayImage.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913601,"byte_end":913639,"line_start":600,"line_end":600,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913640,"byte_end":913643,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ To convert between images of different Pixel types use [`DynamicImage`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913644,"byte_end":913720,"line_start":602,"line_end":602,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913721,"byte_end":913724,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ You can retrieve a complete description of the buffer's layout and contents through","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913725,"byte_end":913812,"line_start":604,"line_end":604,"column_start":1,"column_end":88}},{"value":"/ [`as_flat_samples`] and [`as_flat_samples_mut`]. This can be handy to also use the contents in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913813,"byte_end":913911,"line_start":605,"line_end":605,"column_start":1,"column_end":99}},{"value":"/ a foreign language, map it as a GPU host buffer or other similar tasks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913912,"byte_end":913987,"line_start":606,"line_end":606,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913988,"byte_end":913991,"line_start":607,"line_end":607,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":913992,"byte_end":914036,"line_start":608,"line_end":608,"column_start":1,"column_end":45}},{"value":"/ [`as_flat_samples`]: #method.as_flat_samples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914037,"byte_end":914085,"line_start":609,"line_end":609,"column_start":1,"column_end":49}},{"value":"/ [`as_flat_samples_mut`]: #method.as_flat_samples_mut","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914086,"byte_end":914142,"line_start":610,"line_end":610,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914143,"byte_end":914146,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914147,"byte_end":914162,"line_start":612,"line_end":612,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914163,"byte_end":914166,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/ Create a simple canvas and paint a small cross.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914167,"byte_end":914218,"line_start":614,"line_end":614,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914219,"byte_end":914222,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914223,"byte_end":914230,"line_start":616,"line_end":616,"column_start":1,"column_end":8}},{"value":"/ use image::{RgbImage, Rgb};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914231,"byte_end":914262,"line_start":617,"line_end":617,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914263,"byte_end":914266,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbImage::new(32, 32);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914267,"byte_end":914307,"line_start":619,"line_end":619,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914308,"byte_end":914311,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ for x in 15..=17 {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914312,"byte_end":914334,"line_start":621,"line_end":621,"column_start":1,"column_end":23}},{"value":"/     for y in 8..24 {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914335,"byte_end":914359,"line_start":622,"line_end":622,"column_start":1,"column_end":25}},{"value":"/         img.put_pixel(x, y, Rgb([255, 0, 0]));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914360,"byte_end":914410,"line_start":623,"line_end":623,"column_start":1,"column_end":51}},{"value":"/         img.put_pixel(y, x, Rgb([255, 0, 0]));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914411,"byte_end":914461,"line_start":624,"line_end":624,"column_start":1,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914462,"byte_end":914471,"line_start":625,"line_end":625,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914472,"byte_end":914477,"line_start":626,"line_end":626,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914478,"byte_end":914485,"line_start":627,"line_end":627,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914486,"byte_end":914489,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ Overlays an image on top of a larger background raster.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914490,"byte_end":914549,"line_start":629,"line_end":629,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914550,"byte_end":914553,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914554,"byte_end":914567,"line_start":631,"line_end":631,"column_start":1,"column_end":14}},{"value":"/ use image::{GenericImage, GenericImageView, ImageBuffer, open};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914568,"byte_end":914635,"line_start":632,"line_end":632,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914636,"byte_end":914639,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ let on_top = open(\"path/to/some.png\").unwrap().into_rgb8();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914640,"byte_end":914703,"line_start":634,"line_end":634,"column_start":1,"column_end":64}},{"value":"/ let mut img = ImageBuffer::from_fn(512, 512, |x, y| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914704,"byte_end":914761,"line_start":635,"line_end":635,"column_start":1,"column_end":58}},{"value":"/     if (x + y) % 2 == 0 {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914762,"byte_end":914791,"line_start":636,"line_end":636,"column_start":1,"column_end":30}},{"value":"/         image::Rgb([0, 0, 0])","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914792,"byte_end":914825,"line_start":637,"line_end":637,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914826,"byte_end":914842,"line_start":638,"line_end":638,"column_start":1,"column_end":17}},{"value":"/         image::Rgb([255, 255, 255])","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914843,"byte_end":914882,"line_start":639,"line_end":639,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914883,"byte_end":914892,"line_start":640,"line_end":640,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914893,"byte_end":914900,"line_start":641,"line_end":641,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914901,"byte_end":914904,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ image::imageops::overlay(&mut img, &on_top, 128, 128);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914905,"byte_end":914963,"line_start":643,"line_end":643,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914964,"byte_end":914971,"line_start":644,"line_end":644,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914972,"byte_end":914975,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ Convert an RgbaImage to a GrayImage.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":914976,"byte_end":915016,"line_start":646,"line_end":646,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915017,"byte_end":915020,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915021,"byte_end":915034,"line_start":648,"line_end":648,"column_start":1,"column_end":14}},{"value":"/ use image::{open, DynamicImage};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915035,"byte_end":915071,"line_start":649,"line_end":649,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915072,"byte_end":915075,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ let rgba = open(\"path/to/some.png\").unwrap().into_rgba8();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915076,"byte_end":915138,"line_start":651,"line_end":651,"column_start":1,"column_end":63}},{"value":"/ let gray = DynamicImage::ImageRgba8(rgba).into_luma8();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915139,"byte_end":915198,"line_start":652,"line_end":652,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915199,"byte_end":915206,"line_start":653,"line_end":653,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5252},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915839,"byte_end":915847,"line_start":673,"line_end":673,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"fn from_raw(u32, u32, Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Constructs a buffer from a generic container","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915553,"byte_end":915601,"line_start":668,"line_end":668,"column_start":5,"column_end":53}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915606,"byte_end":915642,"line_start":669,"line_end":669,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915647,"byte_end":915650,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the container is not big enough (including when the image dimensions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915655,"byte_end":915745,"line_start":671,"line_end":671,"column_start":5,"column_end":95}},{"value":"/ necessitate an allocation of more bytes than supported by the container).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915750,"byte_end":915827,"line_start":672,"line_end":672,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":5253},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":916253,"byte_end":916261,"line_start":687,"line_end":687,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"fn into_raw(Self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":916204,"byte_end":916241,"line_start":686,"line_end":686,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5254},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":916361,"byte_end":916367,"line_start":692,"line_end":692,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<ImageBuffer<P, Container>>::as_raw","value":"fn as_raw<'_>(&'_ Self) -> &'_ Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":916312,"byte_end":916349,"line_start":691,"line_end":691,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5255},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":916472,"byte_end":916482,"line_start":697,"line_end":697,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":916421,"byte_end":916460,"line_start":696,"line_end":696,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5256},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":916591,"byte_end":916596,"line_start":702,"line_end":702,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"fn width<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":916551,"byte_end":916579,"line_start":701,"line_end":701,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5257},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":916684,"byte_end":916690,"line_start":707,"line_end":707,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"fn height<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":916643,"byte_end":916672,"line_start":706,"line_end":706,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5259},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917086,"byte_end":917092,"line_start":719,"line_end":719,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"fn pixels<'_>(&'_ Self) -> Pixels","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n The iteration order is x = 0 to width then y = 0 to height\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":916953,"byte_end":917007,"line_start":717,"line_end":717,"column_start":5,"column_end":59}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917012,"byte_end":917074,"line_start":718,"line_end":718,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917626,"byte_end":917630,"line_start":732,"line_end":732,"column_start":12,"column_end":16},"name":"rows","qualname":"<ImageBuffer<P, Container>>::rows","value":"fn rows<'_>(&'_ Self) -> Rows","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the rows of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917279,"byte_end":917331,"line_start":727,"line_end":727,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917336,"byte_end":917339,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917344,"byte_end":917435,"line_start":729,"line_end":729,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917440,"byte_end":917533,"line_start":730,"line_end":730,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917538,"byte_end":917614,"line_start":731,"line_end":731,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":5261},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917981,"byte_end":917997,"line_start":741,"line_end":741,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"fn enumerate_pixels<'_>(&'_ Self) -> EnumeratePixels","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n The iteration order is x = 0 to width then y = 0 to height\n Starting from the top left.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917724,"byte_end":917768,"line_start":736,"line_end":736,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917773,"byte_end":917826,"line_start":737,"line_end":737,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917831,"byte_end":917866,"line_start":738,"line_end":738,"column_start":5,"column_end":40}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917871,"byte_end":917933,"line_start":739,"line_end":739,"column_start":5,"column_end":67}},{"value":"/ Starting from the top left.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":917938,"byte_end":917969,"line_start":740,"line_end":740,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5262},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":918329,"byte_end":918343,"line_start":753,"line_end":753,"column_start":12,"column_end":26},"name":"enumerate_rows","qualname":"<ImageBuffer<P, Container>>::enumerate_rows","value":"fn enumerate_rows<'_>(&'_ Self) -> EnumerateRows","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":918178,"byte_end":918220,"line_start":750,"line_end":750,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":918225,"byte_end":918277,"line_start":751,"line_end":751,"column_start":5,"column_end":57}},{"value":"/ along with a reference to them.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":918282,"byte_end":918317,"line_start":752,"line_end":752,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5263},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":918678,"byte_end":918687,"line_start":767,"line_end":767,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"fn get_pixel<'_>(&'_ Self, u32, u32) -> &'_ P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":918498,"byte_end":918552,"line_start":761,"line_end":761,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":918557,"byte_end":918560,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":918565,"byte_end":918577,"line_start":763,"line_end":763,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":918582,"byte_end":918585,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":918590,"byte_end":918652,"line_start":765,"line_end":765,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":918657,"byte_end":918666,"line_start":766,"line_end":766,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5264},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":919178,"byte_end":919195,"line_start":780,"line_end":780,"column_start":12,"column_end":29},"name":"get_pixel_checked","qualname":"<ImageBuffer<P, Container>>::get_pixel_checked","value":"fn get_pixel_checked<'_>(&'_ Self, u32, u32) -> Option<&'_ P>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)` or returns `None` if\n the index is out of the bounds `(width, height)`.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)` or returns `None` if","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":919033,"byte_end":919108,"line_start":778,"line_end":778,"column_start":5,"column_end":80}},{"value":"/ the index is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":919113,"byte_end":919166,"line_start":779,"line_end":779,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5273},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":921116,"byte_end":921129,"line_start":829,"line_end":829,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"fn sample_layout<'_>(&'_ Self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[{"value":"/ Get the format of the buffer when viewed as a matrix of samples.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":921036,"byte_end":921104,"line_start":828,"line_end":828,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5274},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":921742,"byte_end":921759,"line_start":840,"line_end":840,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"fn into_flat_samples(Self) -> FlatSamples<Container> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[{"value":"/ Return the raw sample buffer with its stride an dimension information.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":921332,"byte_end":921406,"line_start":834,"line_end":834,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":921411,"byte_end":921414,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The returned buffer is guaranteed to be well formed in all cases. It is laid out by","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":921419,"byte_end":921506,"line_start":836,"line_end":836,"column_start":5,"column_end":92}},{"value":"/ colors, width then height, meaning `channel_stride <= width_stride <= height_stride`. All","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":921511,"byte_end":921604,"line_start":837,"line_end":837,"column_start":5,"column_end":98}},{"value":"/ strides are in numbers of elements but those are mostly `u8` in which case the strides are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":921609,"byte_end":921703,"line_start":838,"line_end":838,"column_start":5,"column_end":99}},{"value":"/ also byte strides.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":921708,"byte_end":921730,"line_start":839,"line_end":839,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5275},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":922319,"byte_end":922334,"line_start":856,"line_end":856,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"fn as_flat_samples<'_>(&'_ Self) -> FlatSamples<&'_ [P::Subpixel]> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":922177,"byte_end":922220,"line_start":853,"line_end":853,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":922225,"byte_end":922228,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":922233,"byte_end":922307,"line_start":855,"line_end":855,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":5276},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":922844,"byte_end":922863,"line_start":871,"line_end":871,"column_start":12,"column_end":31},"name":"as_flat_samples_mut","qualname":"<ImageBuffer<P, Container>>::as_flat_samples_mut","value":"fn as_flat_samples_mut<'_>(&'_ mut Self) -> FlatSamples<&'_ mut [P::Subpixel]>\nwhere Container: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a mutable view on the raw sample buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":922694,"byte_end":922745,"line_start":868,"line_end":868,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":922750,"byte_end":922753,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":922758,"byte_end":922832,"line_start":870,"line_end":870,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":5281},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":923651,"byte_end":923661,"line_start":896,"line_end":896,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"fn pixels_mut<'_>(&'_ mut Self) -> PixelsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":923577,"byte_end":923639,"line_start":895,"line_end":895,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5282},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":924221,"byte_end":924229,"line_start":909,"line_end":909,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ImageBuffer<P, Container>>::rows_mut","value":"fn rows_mut<'_>(&'_ mut Self) -> RowsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable rows of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":923866,"byte_end":923926,"line_start":904,"line_end":904,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":923931,"byte_end":923934,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":923939,"byte_end":924030,"line_start":906,"line_end":906,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":924035,"byte_end":924128,"line_start":907,"line_end":907,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":924133,"byte_end":924209,"line_start":908,"line_end":908,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":5283},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":924499,"byte_end":924519,"line_start":916,"line_end":916,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"fn enumerate_pixels_mut<'_>(&'_ mut Self) -> EnumeratePixelsMut","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":924337,"byte_end":924381,"line_start":913,"line_end":913,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":924386,"byte_end":924439,"line_start":914,"line_end":914,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":924444,"byte_end":924487,"line_start":915,"line_end":915,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5284},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":924893,"byte_end":924911,"line_start":929,"line_end":929,"column_start":12,"column_end":30},"name":"enumerate_rows_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_rows_mut","value":"fn enumerate_rows_mut<'_>(&'_ mut Self) -> EnumerateRowsMut","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":924734,"byte_end":924776,"line_start":926,"line_end":926,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":924781,"byte_end":924833,"line_start":927,"line_end":927,"column_start":5,"column_end":57}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":924838,"byte_end":924881,"line_start":928,"line_end":928,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5285},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":925288,"byte_end":925301,"line_start":944,"line_end":944,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"fn get_pixel_mut<'_>(&'_ mut Self, u32, u32) -> &'_ mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":925100,"byte_end":925162,"line_start":938,"line_end":938,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":925167,"byte_end":925170,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":925175,"byte_end":925187,"line_start":940,"line_end":940,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":925192,"byte_end":925195,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":925200,"byte_end":925262,"line_start":942,"line_end":942,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":925267,"byte_end":925276,"line_start":943,"line_end":943,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5286},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":925816,"byte_end":925837,"line_start":957,"line_end":957,"column_start":12,"column_end":33},"name":"get_pixel_mut_checked","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut_checked","value":"fn get_pixel_mut_checked<'_>(&'_ mut Self, u32, u32) -> Option<&'_ mut P>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)` or returns\n `None` if the index is out of the bounds `(width, height)`.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)` or returns","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":925663,"byte_end":925736,"line_start":955,"line_end":955,"column_start":5,"column_end":78}},{"value":"/ `None` if the index is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":925741,"byte_end":925804,"line_start":956,"line_end":956,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5288},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":926474,"byte_end":926483,"line_start":977,"line_end":977,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"fn put_pixel<'_>(&'_ mut Self, u32, u32, P)","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":926325,"byte_end":926362,"line_start":972,"line_end":972,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":926367,"byte_end":926370,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":926375,"byte_end":926387,"line_start":974,"line_end":974,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":926392,"byte_end":926395,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":926400,"byte_end":926462,"line_start":976,"line_end":976,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5292},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":926861,"byte_end":926865,"line_start":991,"line_end":991,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"fn save<Q, '_>(&'_ Self, Q) -> ImageResult<()> where Q: AsRef<Path>,\nP: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":926727,"byte_end":926780,"line_start":988,"line_end":988,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":926785,"byte_end":926788,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":926793,"byte_end":926849,"line_start":990,"line_end":990,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5297},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":927541,"byte_end":927557,"line_start":1017,"line_end":1017,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<ImageBuffer<P, Container>>::save_with_format","value":"fn save_with_format<Q, '_>(&'_ Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>, P: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":927334,"byte_end":927389,"line_start":1012,"line_end":1012,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":927394,"byte_end":927419,"line_start":1013,"line_end":1013,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":927424,"byte_end":927427,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":927432,"byte_end":927504,"line_start":1015,"line_end":1015,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":927509,"byte_end":927529,"line_start":1016,"line_end":1016,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":5302},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":928435,"byte_end":928443,"line_start":1047,"line_end":1047,"column_start":12,"column_end":20},"name":"write_to","qualname":"<ImageBuffer<P, Container>>::write_to","value":"fn write_to<W, F, '_, '_>(&'_ Self, &'_ mut W, F) -> ImageResult<()> where\nW: std::io::Write + std::io::Seek, F: Into<ImageOutputFormat>,\nP: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Writes the buffer to a writer in the specified format.","sig":null,"attributes":[{"value":"/ Writes the buffer to a writer in the specified format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":928127,"byte_end":928185,"line_start":1040,"line_end":1040,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":928190,"byte_end":928193,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":928198,"byte_end":928248,"line_start":1042,"line_end":1042,"column_start":5,"column_end":55}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":928253,"byte_end":928323,"line_start":1043,"line_end":1043,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":928328,"byte_end":928331,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ See [`ImageOutputFormat`](enum.ImageOutputFormat.html) for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":928336,"byte_end":928398,"line_start":1045,"line_end":1045,"column_start":5,"column_end":67}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":928403,"byte_end":928423,"line_start":1046,"line_end":1046,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":5308},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":929028,"byte_end":929035,"line_start":1070,"line_end":1070,"column_start":8,"column_end":15},"name":"default","qualname":"<ImageBuffer<P, Container> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5313},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":929364,"byte_end":929369,"line_start":1087,"line_end":1087,"column_start":8,"column_end":13},"name":"deref","qualname":"<ImageBuffer<P, Container> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ <Self as Deref>::Target","parent":{"krate":2,"index":3491},"children":[],"decl_id":{"krate":2,"index":3493},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5317},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":929580,"byte_end":929589,"line_start":1097,"line_end":1097,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<ImageBuffer<P, Container> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut <Self as Deref>::Target","parent":{"krate":2,"index":3504},"children":[],"decl_id":{"krate":2,"index":3505},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5322},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":929832,"byte_end":929837,"line_start":1109,"line_end":1109,"column_start":8,"column_end":13},"name":"index","qualname":"<ImageBuffer<P, Container> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, (u32, u32)) -> &'_ P","parent":{"krate":2,"index":3576},"children":[],"decl_id":{"krate":2,"index":3579},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5326},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":930067,"byte_end":930076,"line_start":1119,"line_end":1119,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<ImageBuffer<P, Container> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, (u32, u32)) -> &'_ mut P","parent":{"krate":2,"index":3580},"children":[],"decl_id":{"krate":2,"index":3582},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5330},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":930300,"byte_end":930305,"line_start":1129,"line_end":1129,"column_start":8,"column_end":13},"name":"clone","qualname":"<ImageBuffer<P, Container> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> ImageBuffer<P, Container>","parent":{"krate":2,"index":2887},"children":[],"decl_id":{"krate":2,"index":2888},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5335},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":930691,"byte_end":930701,"line_start":1146,"line_end":1146,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<ImageBuffer<P, Container> as image::GenericImageView>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5976},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5336},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":930765,"byte_end":930771,"line_start":1150,"line_end":1150,"column_start":8,"column_end":14},"name":"bounds","qualname":"<ImageBuffer<P, Container> as image::GenericImageView>::bounds","value":"fn bounds<'_>(&'_ Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5979},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5337},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":930859,"byte_end":930868,"line_start":1154,"line_end":1154,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"<ImageBuffer<P, Container> as image::GenericImageView>::get_pixel","value":"fn get_pixel<'_>(&'_ Self, u32, u32) -> P","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5981},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5338},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":931043,"byte_end":931059,"line_start":1160,"line_end":1160,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"<ImageBuffer<P, Container> as image::GenericImageView>::unsafe_get_pixel","value":"unsafe fn unsafe_get_pixel<'_>(&'_ Self, u32, u32) -> P","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5982},"docs":" Returns the pixel located at (x, y), ignoring bounds checking.\n","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y), ignoring bounds checking.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":930940,"byte_end":931006,"line_start":1158,"line_end":1158,"column_start":5,"column_end":71}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":931011,"byte_end":931028,"line_start":1159,"line_end":1159,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5342},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":931373,"byte_end":931386,"line_start":1171,"line_end":1171,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container> as image::GenericImage>::get_pixel_mut","value":"fn get_pixel_mut<'_>(&'_ mut Self, u32, u32) -> &'_ mut P","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5986},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5343},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":931473,"byte_end":931482,"line_start":1175,"line_end":1175,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"<ImageBuffer<P, Container> as image::GenericImage>::put_pixel","value":"fn put_pixel<'_>(&'_ mut Self, u32, u32, P)","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5987},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5344},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":931674,"byte_end":931690,"line_start":1181,"line_end":1181,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"<ImageBuffer<P, Container> as image::GenericImage>::unsafe_put_pixel","value":"unsafe fn unsafe_put_pixel<'_>(&'_ mut Self, u32, u32, P)","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5988},"docs":" Puts a pixel at location (x, y), ignoring bounds checking.\n","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y), ignoring bounds checking.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":931575,"byte_end":931637,"line_start":1179,"line_end":1179,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":931642,"byte_end":931659,"line_start":1180,"line_end":1180,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5345},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":932071,"byte_end":932082,"line_start":1190,"line_end":1190,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"<ImageBuffer<P, Container> as image::GenericImage>::blend_pixel","value":"fn blend_pixel<'_>(&'_ mut Self, u32, u32, P)","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5989},"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":931902,"byte_end":931972,"line_start":1187,"line_end":1187,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":931977,"byte_end":931980,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This method will be removed. Blend the pixel directly instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":931985,"byte_end":932063,"line_start":1189,"line_end":1189,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5346},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":932175,"byte_end":932186,"line_start":1194,"line_end":1194,"column_start":8,"column_end":19},"name":"copy_within","qualname":"<ImageBuffer<P, Container> as image::GenericImage>::copy_within","value":"fn copy_within<'_>(&'_ mut Self, Rect, u32, u32) -> bool","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5992},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5349},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":934164,"byte_end":934167,"line_start":1244,"line_end":1244,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"fn new(u32, u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":933974,"byte_end":934035,"line_start":1239,"line_end":1239,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":934040,"byte_end":934043,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":934048,"byte_end":934060,"line_start":1241,"line_end":1241,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":934065,"byte_end":934068,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":934073,"byte_end":934152,"line_start":1243,"line_end":1243,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":5350},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":934705,"byte_end":934715,"line_start":1260,"line_end":1260,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"fn from_pixel(u32, u32, P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":934525,"byte_end":934576,"line_start":1255,"line_end":1255,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":934581,"byte_end":934584,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":934589,"byte_end":934601,"line_start":1257,"line_end":1257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":934606,"byte_end":934609,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":934614,"byte_end":934693,"line_start":1259,"line_end":1259,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":5351},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935230,"byte_end":935237,"line_start":1275,"line_end":1275,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"fn from_fn<F>(u32, u32, F) -> ImageBuffer<P, Vec<P::Subpixel>> where\nF: FnMut(u32, u32) -> P","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":934936,"byte_end":935018,"line_start":1268,"line_end":1268,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935023,"byte_end":935026,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935031,"byte_end":935101,"line_start":1270,"line_end":1270,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935106,"byte_end":935109,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935114,"byte_end":935126,"line_start":1272,"line_end":1272,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935131,"byte_end":935134,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935139,"byte_end":935218,"line_start":1274,"line_end":1274,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":5353},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935648,"byte_end":935656,"line_start":1288,"line_end":1288,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"fn from_vec(u32, u32, Vec<P::Subpixel>)\n-> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935528,"byte_end":935582,"line_start":1286,"line_end":1286,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935587,"byte_end":935636,"line_start":1287,"line_end":1287,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5354},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935943,"byte_end":935951,"line_start":1298,"line_end":1298,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"fn into_vec(Self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935843,"byte_end":935904,"line_start":1296,"line_end":1296,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":935909,"byte_end":935931,"line_start":1297,"line_end":1297,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":5355},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936079,"byte_end":936092,"line_start":1304,"line_end":1304,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer_::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":5357}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936013,"byte_end":936068,"line_start":1303,"line_end":1303,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5357},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936279,"byte_end":936286,"line_start":1309,"line_end":1309,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer_::ConvertBuffer::convert","value":"fn convert<'_>(&'_ Self) -> T","parent":{"krate":0,"index":5355},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936102,"byte_end":936143,"line_start":1305,"line_end":1305,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936148,"byte_end":936151,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ A generic implementation is provided to convert any image buffer to a image buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936156,"byte_end":936242,"line_start":1307,"line_end":1307,"column_start":5,"column_end":91}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936247,"byte_end":936271,"line_start":1308,"line_end":1308,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5359},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936554,"byte_end":936568,"line_start":1317,"line_end":1317,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"fn expand_palette<'_>(Self, &'_ [(u8, u8, u8)], Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936364,"byte_end":936424,"line_start":1314,"line_end":1314,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936429,"byte_end":936497,"line_start":1315,"line_end":1315,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936502,"byte_end":936542,"line_start":1316,"line_end":1316,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5367},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938259,"byte_end":938266,"line_start":1369,"line_end":1369,"column_start":8,"column_end":15},"name":"convert","qualname":"<ImageBuffer<FromType, Container> as buffer_::ConvertBuffer>::convert","value":"fn convert<'_>(&'_ Self) -> ImageBuffer<ToType, Vec<ToType::Subpixel>>","parent":{"krate":0,"index":5355},"children":[],"decl_id":{"krate":0,"index":5357},"docs":" # Examples\n Convert RGB image to gray image.\n ```no_run\n use image::buffer::ConvertBuffer;\n use image::GrayImage;","sig":null,"attributes":[{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":937866,"byte_end":937880,"line_start":1356,"line_end":1356,"column_start":5,"column_end":19}},{"value":"/ Convert RGB image to gray image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":937885,"byte_end":937921,"line_start":1357,"line_end":1357,"column_start":5,"column_end":41}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":937926,"byte_end":937939,"line_start":1358,"line_end":1358,"column_start":5,"column_end":18}},{"value":"/ use image::buffer::ConvertBuffer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":937944,"byte_end":937981,"line_start":1359,"line_end":1359,"column_start":5,"column_end":42}},{"value":"/ use image::GrayImage;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":937986,"byte_end":938011,"line_start":1360,"line_end":1360,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938016,"byte_end":938019,"line_start":1361,"line_end":1361,"column_start":5,"column_end":8}},{"value":"/ let image_path = \"examples/fractal.png\";","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938024,"byte_end":938068,"line_start":1362,"line_end":1362,"column_start":5,"column_end":49}},{"value":"/ let image = image::open(&image_path)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938073,"byte_end":938113,"line_start":1363,"line_end":1363,"column_start":5,"column_end":45}},{"value":"/     .expect(\"Open file failed\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938118,"byte_end":938153,"line_start":1364,"line_end":1364,"column_start":5,"column_end":40}},{"value":"/     .to_rgba8();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938158,"byte_end":938178,"line_start":1365,"line_end":1365,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938183,"byte_end":938186,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ let gray_image: GrayImage = image.convert();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938191,"byte_end":938239,"line_start":1367,"line_end":1367,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938244,"byte_end":938251,"line_start":1368,"line_end":1368,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":5368},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938618,"byte_end":938626,"line_start":1380,"line_end":1380,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer_::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938579,"byte_end":938608,"line_start":1379,"line_end":1379,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":5369},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938715,"byte_end":938724,"line_start":1382,"line_end":1382,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer_::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938660,"byte_end":938705,"line_start":1381,"line_end":1381,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":5370},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938804,"byte_end":938813,"line_start":1384,"line_end":1384,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer_::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938759,"byte_end":938794,"line_start":1383,"line_end":1383,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":5371},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938909,"byte_end":938923,"line_start":1386,"line_end":1386,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer_::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":938848,"byte_end":938899,"line_start":1385,"line_end":1385,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":5376},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":939535,"byte_end":939546,"line_start":1398,"line_end":1398,"column_start":10,"column_end":21},"name":"Rgb32FImage","qualname":"::buffer_::Rgb32FImage","value":"ImageBuffer<Rgb<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" An image buffer for 32-bit float RGB pixels,\n where the backing container is a flattened vector of floats.\n","sig":null,"attributes":[{"value":"/ An image buffer for 32-bit float RGB pixels,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":939412,"byte_end":939460,"line_start":1396,"line_end":1396,"column_start":1,"column_end":49}},{"value":"/ where the backing container is a flattened vector of floats.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":939461,"byte_end":939525,"line_start":1397,"line_end":1397,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":5377},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":939707,"byte_end":939719,"line_start":1402,"line_end":1402,"column_start":10,"column_end":22},"name":"Rgba32FImage","qualname":"::buffer_::Rgba32FImage","value":"ImageBuffer<Rgba<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" An image buffer for 32-bit float RGBA pixels,\n where the backing container is a flattened vector of floats.\n","sig":null,"attributes":[{"value":"/ An image buffer for 32-bit float RGBA pixels,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":939583,"byte_end":939632,"line_start":1400,"line_end":1400,"column_start":1,"column_end":50}},{"value":"/ where the backing container is a flattened vector of floats.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":939633,"byte_end":939697,"line_start":1401,"line_end":1401,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7941},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951107,"byte_end":951109,"line_start":12,"line_end":12,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ColorType::L8","value":"ColorType::L8","parent":{"krate":0,"index":7940},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951074,"byte_end":951102,"line_start":11,"line_end":11,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7943},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951170,"byte_end":951173,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ColorType::La8","value":"ColorType::La8","parent":{"krate":0,"index":7940},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951115,"byte_end":951165,"line_start":13,"line_end":13,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7945},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951228,"byte_end":951232,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ColorType::Rgb8","value":"ColorType::Rgb8","parent":{"krate":0,"index":7940},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951179,"byte_end":951223,"line_start":15,"line_end":15,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7947},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951287,"byte_end":951292,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ColorType::Rgba8","value":"ColorType::Rgba8","parent":{"krate":0,"index":7940},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951238,"byte_end":951282,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7949},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951333,"byte_end":951336,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ColorType::L16","value":"ColorType::L16","parent":{"krate":0,"index":7940},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951299,"byte_end":951328,"line_start":20,"line_end":20,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7951},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951398,"byte_end":951402,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ColorType::La16","value":"ColorType::La16","parent":{"krate":0,"index":7940},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951342,"byte_end":951393,"line_start":22,"line_end":22,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7953},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951436,"byte_end":951441,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ColorType::Rgb16","value":"ColorType::Rgb16","parent":{"krate":0,"index":7940},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951408,"byte_end":951431,"line_start":24,"line_end":24,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7955},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951476,"byte_end":951482,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ColorType::Rgba16","value":"ColorType::Rgba16","parent":{"krate":0,"index":7940},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGBA","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951447,"byte_end":951471,"line_start":26,"line_end":26,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7957},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951523,"byte_end":951529,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Rgb32F","qualname":"::color::ColorType::Rgb32F","value":"ColorType::Rgb32F","parent":{"krate":0,"index":7940},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGB","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951489,"byte_end":951518,"line_start":29,"line_end":29,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7959},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951570,"byte_end":951577,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"Rgba32F","qualname":"::color::ColorType::Rgba32F","value":"ColorType::Rgba32F","parent":{"krate":0,"index":7940},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGBA","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951535,"byte_end":951565,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":7940},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951058,"byte_end":951067,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"enum ColorType {\n    L8,\n    La8,\n    Rgb8,\n    Rgba8,\n    L16,\n    La16,\n    Rgb16,\n    Rgba16,\n    Rgb32F,\n    Rgba32F,\n}","parent":null,"children":[{"krate":0,"index":7941},{"krate":0,"index":7943},{"krate":0,"index":7945},{"krate":0,"index":7947},{"krate":0,"index":7949},{"krate":0,"index":7951},{"krate":0,"index":7953},{"krate":0,"index":7955},{"krate":0,"index":7957},{"krate":0,"index":7959}],"decl_id":null,"docs":" An enumeration over supported color types and bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and bit depths","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":950919,"byte_end":950979,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951031,"byte_end":951048,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5407},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951690,"byte_end":951705,"line_start":37,"line_end":37,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ColorType>::bytes_per_pixel","value":"fn bytes_per_pixel(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in a pixel of `ColorType` ```c```\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in a pixel of `ColorType` ```c```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951603,"byte_end":951678,"line_start":36,"line_end":36,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":5408},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":952136,"byte_end":952145,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"has_alpha","qualname":"<ColorType>::has_alpha","value":"fn has_alpha(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if there is an alpha channel.\n","sig":null,"attributes":[{"value":"/ Returns if there is an alpha channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":952083,"byte_end":952124,"line_start":50,"line_end":50,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":5410},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":952423,"byte_end":952432,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"has_color","qualname":"<ColorType>::has_color","value":"fn has_color(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if the color scheme is grayscale, true otherwise.\n","sig":null,"attributes":[{"value":"/ Returns false if the color scheme is grayscale, true otherwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":952344,"byte_end":952411,"line_start":59,"line_end":59,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5412},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":952765,"byte_end":952779,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<ColorType>::bits_per_pixel","value":"fn bits_per_pixel(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be\n a multiple of 8).\n","sig":null,"attributes":[{"value":"/ Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":952631,"byte_end":952727,"line_start":68,"line_end":68,"column_start":5,"column_end":101}},{"value":"/ a multiple of 8).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":952732,"byte_end":952753,"line_start":69,"line_end":69,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5413},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":952942,"byte_end":952955,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ColorType>::channel_count","value":"fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of color channels that make up this pixel\n","sig":null,"attributes":[{"value":"/ Returns the number of color channels that make up this pixel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":952866,"byte_end":952930,"line_start":74,"line_end":74,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7976},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953631,"byte_end":953633,"line_start":93,"line_end":93,"column_start":5,"column_end":7},"name":"A8","qualname":"::color::ExtendedColorType::A8","value":"ExtendedColorType::A8","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 8-bit alpha\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953602,"byte_end":953626,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7978},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953672,"byte_end":953674,"line_start":95,"line_end":95,"column_start":5,"column_end":7},"name":"L1","qualname":"::color::ExtendedColorType::L1","value":"ExtendedColorType::L1","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953639,"byte_end":953667,"line_start":94,"line_end":94,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7980},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953735,"byte_end":953738,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"La1","qualname":"::color::ExtendedColorType::La1","value":"ExtendedColorType::La1","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953680,"byte_end":953730,"line_start":96,"line_end":96,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7982},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953793,"byte_end":953797,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Rgb1","qualname":"::color::ExtendedColorType::Rgb1","value":"ExtendedColorType::Rgb1","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel contains 1-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 1-bit R, G and B channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953744,"byte_end":953788,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7984},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953852,"byte_end":953857,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Rgba1","qualname":"::color::ExtendedColorType::Rgba1","value":"ExtendedColorType::Rgba1","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 1-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953803,"byte_end":953847,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7986},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953896,"byte_end":953898,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"L2","qualname":"::color::ExtendedColorType::L2","value":"ExtendedColorType::L2","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953863,"byte_end":953891,"line_start":102,"line_end":102,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7988},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953959,"byte_end":953962,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"La2","qualname":"::color::ExtendedColorType::La2","value":"ExtendedColorType::La2","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953904,"byte_end":953954,"line_start":104,"line_end":104,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7990},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954017,"byte_end":954021,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"Rgb2","qualname":"::color::ExtendedColorType::Rgb2","value":"ExtendedColorType::Rgb2","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel contains 2-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 2-bit R, G and B channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953968,"byte_end":954012,"line_start":106,"line_end":106,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7992},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954076,"byte_end":954081,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Rgba2","qualname":"::color::ExtendedColorType::Rgba2","value":"ExtendedColorType::Rgba2","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 2-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954027,"byte_end":954071,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7994},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954120,"byte_end":954122,"line_start":111,"line_end":111,"column_start":5,"column_end":7},"name":"L4","qualname":"::color::ExtendedColorType::L4","value":"ExtendedColorType::L4","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954087,"byte_end":954115,"line_start":110,"line_end":110,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7996},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954183,"byte_end":954186,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"La4","qualname":"::color::ExtendedColorType::La4","value":"ExtendedColorType::La4","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954128,"byte_end":954178,"line_start":112,"line_end":112,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7998},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954241,"byte_end":954245,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"Rgb4","qualname":"::color::ExtendedColorType::Rgb4","value":"ExtendedColorType::Rgb4","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel contains 4-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 4-bit R, G and B channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954192,"byte_end":954236,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8000},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954300,"byte_end":954305,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Rgba4","qualname":"::color::ExtendedColorType::Rgba4","value":"ExtendedColorType::Rgba4","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 4-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954251,"byte_end":954295,"line_start":116,"line_end":116,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8002},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954344,"byte_end":954346,"line_start":119,"line_end":119,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ExtendedColorType::L8","value":"ExtendedColorType::L8","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954311,"byte_end":954339,"line_start":118,"line_end":118,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8004},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954407,"byte_end":954410,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ExtendedColorType::La8","value":"ExtendedColorType::La8","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954352,"byte_end":954402,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8006},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954465,"byte_end":954469,"line_start":123,"line_end":123,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ExtendedColorType::Rgb8","value":"ExtendedColorType::Rgb8","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954416,"byte_end":954460,"line_start":122,"line_end":122,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8008},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954524,"byte_end":954529,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ExtendedColorType::Rgba8","value":"ExtendedColorType::Rgba8","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954475,"byte_end":954519,"line_start":124,"line_end":124,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8010},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954569,"byte_end":954572,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ExtendedColorType::L16","value":"ExtendedColorType::L16","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954535,"byte_end":954564,"line_start":126,"line_end":126,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8012},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954634,"byte_end":954638,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ExtendedColorType::La16","value":"ExtendedColorType::La16","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954578,"byte_end":954629,"line_start":128,"line_end":128,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8014},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954694,"byte_end":954699,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ExtendedColorType::Rgb16","value":"ExtendedColorType::Rgb16","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel contains 16-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 16-bit R, G and B channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954644,"byte_end":954689,"line_start":130,"line_end":130,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8016},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954755,"byte_end":954761,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ExtendedColorType::Rgba16","value":"ExtendedColorType::Rgba16","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954705,"byte_end":954750,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8018},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954816,"byte_end":954820,"line_start":135,"line_end":135,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ExtendedColorType::Bgr8","value":"ExtendedColorType::Bgr8","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit B, G and R channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954767,"byte_end":954811,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8020},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954875,"byte_end":954880,"line_start":137,"line_end":137,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ExtendedColorType::Bgra8","value":"ExtendedColorType::Bgra8","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit BGR with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954826,"byte_end":954870,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8022},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954944,"byte_end":954950,"line_start":141,"line_end":141,"column_start":5,"column_end":11},"name":"Rgb32F","qualname":"::color::ExtendedColorType::Rgb32F","value":"ExtendedColorType::Rgb32F","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGB","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954910,"byte_end":954939,"line_start":140,"line_end":140,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8024},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954991,"byte_end":954998,"line_start":143,"line_end":143,"column_start":5,"column_end":12},"name":"Rgba32F","qualname":"::color::ExtendedColorType::Rgba32F","value":"ExtendedColorType::Rgba32F","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGBA","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":954956,"byte_end":954986,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8026},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":955227,"byte_end":955234,"line_start":148,"line_end":148,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::color::ExtendedColorType::Unknown","value":"ExtendedColorType::Unknown(u8)","parent":{"krate":0,"index":7975},"children":[],"decl_id":null,"docs":" Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n which are associated with an external palette. In that case, the pixel value is an index\n into the palette.\n","sig":null,"attributes":[{"value":"/ Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":955005,"byte_end":955099,"line_start":145,"line_end":145,"column_start":5,"column_end":99}},{"value":"/ which are associated with an external palette. In that case, the pixel value is an index","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":955104,"byte_end":955196,"line_start":146,"line_end":146,"column_start":5,"column_end":97}},{"value":"/ into the palette.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":955201,"byte_end":955222,"line_start":147,"line_end":147,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":8028},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":955235,"byte_end":955237,"line_start":148,"line_end":148,"column_start":13,"column_end":15},"name":"0","qualname":"::color::ExtendedColorType::Unknown::0","value":"u8","parent":{"krate":0,"index":8026},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7975},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953578,"byte_end":953595,"line_start":91,"line_end":91,"column_start":10,"column_end":27},"name":"ExtendedColorType","qualname":"::color::ExtendedColorType","value":"enum ExtendedColorType {\n    A8,\n    L1,\n    La1,\n    Rgb1,\n    Rgba1,\n    L2,\n    La2,\n    Rgb2,\n    Rgba2,\n    L4,\n    La4,\n    Rgb4,\n    Rgba4,\n    L8,\n    La8,\n    Rgb8,\n    Rgba8,\n    L16,\n    La16,\n    Rgb16,\n    Rgba16,\n    Bgr8,\n    Bgra8,\n    Rgb32F,\n    Rgba32F,\n    Unknown(u8),\n}","parent":null,"children":[{"krate":0,"index":7976},{"krate":0,"index":7978},{"krate":0,"index":7980},{"krate":0,"index":7982},{"krate":0,"index":7984},{"krate":0,"index":7986},{"krate":0,"index":7988},{"krate":0,"index":7990},{"krate":0,"index":7992},{"krate":0,"index":7994},{"krate":0,"index":7996},{"krate":0,"index":7998},{"krate":0,"index":8000},{"krate":0,"index":8002},{"krate":0,"index":8004},{"krate":0,"index":8006},{"krate":0,"index":8008},{"krate":0,"index":8010},{"krate":0,"index":8012},{"krate":0,"index":8014},{"krate":0,"index":8016},{"krate":0,"index":8018},{"krate":0,"index":8020},{"krate":0,"index":8022},{"krate":0,"index":8024},{"krate":0,"index":8026}],"decl_id":null,"docs":" An enumeration of color types encountered in image formats.","sig":null,"attributes":[{"value":"/ An enumeration of color types encountered in image formats.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953053,"byte_end":953116,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953117,"byte_end":953120,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This is not exhaustive over all existing image formats but should be granular enough to allow","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953121,"byte_end":953218,"line_start":83,"line_end":83,"column_start":1,"column_end":98}},{"value":"/ round tripping of decoding and encoding as much as possible. The variants will be extended as","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953219,"byte_end":953316,"line_start":84,"line_end":84,"column_start":1,"column_end":98}},{"value":"/ necessary to enable this.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953317,"byte_end":953346,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953347,"byte_end":953350,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Another purpose is to advise users of a rough estimate of the accuracy and effort of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953351,"byte_end":953443,"line_start":87,"line_end":87,"column_start":1,"column_end":93}},{"value":"/ decoding from and encoding to such an image format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953444,"byte_end":953499,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":953551,"byte_end":953568,"line_start":90,"line_end":90,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5415},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":955486,"byte_end":955499,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ExtendedColorType>::channel_count","value":"fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels for colors of this type.","sig":null,"attributes":[{"value":"/ Get the number of channels for colors of this type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":955272,"byte_end":955327,"line_start":152,"line_end":152,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":955332,"byte_end":955335,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Note that the `Unknown` variant returns a value of `1` since pixels can only be treated as","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":955340,"byte_end":955434,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ an opaque datum by the library.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":955439,"byte_end":955474,"line_start":155,"line_end":155,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5417},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":956613,"byte_end":956617,"line_start":188,"line_end":188,"column_start":8,"column_end":12},"name":"from","qualname":"<ExtendedColorType as std::convert::From>::from","value":"fn from(ColorType) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8232},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":961493,"byte_end":961496,"line_start":363,"line_end":363,"column_start":16,"column_end":19},"name":"Rgb","qualname":"::color::Rgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" RGB colors.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":957550,"byte_end":957560,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":957561,"byte_end":957583,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8261},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":961584,"byte_end":961588,"line_start":365,"line_end":365,"column_start":16,"column_end":20},"name":"Luma","qualname":"::color::Luma","value":"","parent":null,"children":[],"decl_id":null,"docs":" Grayscale colors.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":957550,"byte_end":957560,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":957561,"byte_end":957583,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8290},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":961671,"byte_end":961675,"line_start":367,"line_end":367,"column_start":16,"column_end":20},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":" RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":957550,"byte_end":957560,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":957561,"byte_end":957583,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8319},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":961779,"byte_end":961784,"line_start":369,"line_end":369,"column_start":16,"column_end":21},"name":"LumaA","qualname":"::color::LumaA","value":"","parent":null,"children":[],"decl_id":null,"docs":" Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":957550,"byte_end":957560,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":957561,"byte_end":957583,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":5419},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":961939,"byte_end":961952,"line_start":373,"line_end":373,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::color::FromPrimitive","value":"FromPrimitive<Component>","parent":null,"children":[{"krate":0,"index":5421}],"decl_id":null,"docs":" Convert from one pixel component type to another. For example, convert from `u8` to `f32` pixel values.\n","sig":null,"attributes":[{"value":"/ Convert from one pixel component type to another. For example, convert from `u8` to `f32` pixel values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":961821,"byte_end":961928,"line_start":372,"line_end":372,"column_start":1,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":5421},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":962034,"byte_end":962048,"line_start":375,"line_end":375,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"::color::FromPrimitive::from_primitive","value":"fn from_primitive(Component) -> Self","parent":{"krate":0,"index":5419},"children":[],"decl_id":null,"docs":" Converts from any pixel component type to this type.\n","sig":null,"attributes":[{"value":"/ Converts from any pixel component type to this type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":961970,"byte_end":962026,"line_start":374,"line_end":374,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5424},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":962134,"byte_end":962148,"line_start":379,"line_end":379,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"<T as color::FromPrimitive>::from_primitive","value":"fn from_primitive(T) -> Self","parent":{"krate":0,"index":5419},"children":[],"decl_id":{"krate":0,"index":5421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5426},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":962413,"byte_end":962427,"line_start":389,"line_end":389,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"<u8 as color::FromPrimitive>::from_primitive","value":"fn from_primitive(f32) -> Self","parent":{"krate":0,"index":5419},"children":[],"decl_id":{"krate":0,"index":5421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5428},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":962608,"byte_end":962622,"line_start":396,"line_end":396,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"<u16 as color::FromPrimitive>::from_primitive","value":"fn from_primitive(f32) -> Self","parent":{"krate":0,"index":5419},"children":[],"decl_id":{"krate":0,"index":5421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5430},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":962817,"byte_end":962831,"line_start":405,"line_end":405,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"<u8 as color::FromPrimitive>::from_primitive","value":"fn from_primitive(u16) -> Self","parent":{"krate":0,"index":5419},"children":[],"decl_id":{"krate":0,"index":5421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5434},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":963384,"byte_end":963398,"line_start":420,"line_end":420,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"<f32 as color::FromPrimitive>::from_primitive","value":"fn from_primitive(u16) -> Self","parent":{"krate":0,"index":5419},"children":[],"decl_id":{"krate":0,"index":5421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5436},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":963536,"byte_end":963550,"line_start":428,"line_end":428,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"<f32 as color::FromPrimitive>::from_primitive","value":"fn from_primitive(u8) -> Self","parent":{"krate":0,"index":5419},"children":[],"decl_id":{"krate":0,"index":5421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5438},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":963673,"byte_end":963687,"line_start":434,"line_end":434,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"<u16 as color::FromPrimitive>::from_primitive","value":"fn from_primitive(u8) -> Self","parent":{"krate":0,"index":5419},"children":[],"decl_id":{"krate":0,"index":5421},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5439},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":963870,"byte_end":963879,"line_start":441,"line_end":441,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":5441}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":963798,"byte_end":963859,"line_start":440,"line_end":440,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5441},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":963969,"byte_end":963979,"line_start":443,"line_end":443,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Other)","parent":{"krate":0,"index":5439},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":963893,"byte_end":963961,"line_start":442,"line_end":442,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5457},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":965438,"byte_end":965448,"line_start":485,"line_end":485,"column_start":8,"column_end":18},"name":"from_color","qualname":"<Luma<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Luma<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5461},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":965716,"byte_end":965726,"line_start":496,"line_end":496,"column_start":8,"column_end":18},"name":"from_color","qualname":"<Luma<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ LumaA<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5465},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":965956,"byte_end":965966,"line_start":505,"line_end":505,"column_start":8,"column_end":18},"name":"from_color","qualname":"<Luma<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Rgb<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5469},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":966254,"byte_end":966264,"line_start":516,"line_end":516,"column_start":8,"column_end":18},"name":"from_color","qualname":"<Luma<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Rgba<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5473},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":966586,"byte_end":966596,"line_start":530,"line_end":530,"column_start":8,"column_end":18},"name":"from_color","qualname":"<LumaA<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ LumaA<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5477},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":966924,"byte_end":966934,"line_start":542,"line_end":542,"column_start":8,"column_end":18},"name":"from_color","qualname":"<LumaA<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Rgb<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5481},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":967269,"byte_end":967279,"line_start":554,"line_end":554,"column_start":8,"column_end":18},"name":"from_color","qualname":"<LumaA<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Rgba<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5485},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":967609,"byte_end":967619,"line_start":566,"line_end":566,"column_start":8,"column_end":18},"name":"from_color","qualname":"<LumaA<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Luma<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5489},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":967932,"byte_end":967942,"line_start":579,"line_end":579,"column_start":8,"column_end":18},"name":"from_color","qualname":"<Rgba<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Rgba<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5493},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":968330,"byte_end":968340,"line_start":593,"line_end":593,"column_start":8,"column_end":18},"name":"from_color","qualname":"<Rgba<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Rgb<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5497},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":968719,"byte_end":968729,"line_start":607,"line_end":607,"column_start":8,"column_end":18},"name":"from_color","qualname":"<Rgba<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ LumaA<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5501},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":969117,"byte_end":969127,"line_start":621,"line_end":621,"column_start":8,"column_end":18},"name":"from_color","qualname":"<Rgba<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Luma<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5505},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":969523,"byte_end":969533,"line_start":637,"line_end":637,"column_start":8,"column_end":18},"name":"from_color","qualname":"<Rgb<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Rgb<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5509},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":969874,"byte_end":969884,"line_start":650,"line_end":650,"column_start":8,"column_end":18},"name":"from_color","qualname":"<Rgb<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Rgba<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5513},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":970223,"byte_end":970233,"line_start":663,"line_end":663,"column_start":8,"column_end":18},"name":"from_color","qualname":"<Rgb<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ LumaA<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5517},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":970565,"byte_end":970575,"line_start":676,"line_end":676,"column_start":8,"column_end":18},"name":"from_color","qualname":"<Rgb<T> as color::FromColor>::from_color","value":"fn from_color<'_, '_>(&'_ mut Self, &'_ Luma<S>)","parent":{"krate":0,"index":5439},"children":[],"decl_id":{"krate":0,"index":5441},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8349},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981629,"byte_end":981639,"line_start":59,"line_end":59,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":8348},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981582,"byte_end":981624,"line_start":58,"line_end":58,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":8351},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981640,"byte_end":981649,"line_start":59,"line_end":59,"column_start":16,"column_end":25},"name":"0","qualname":"::dynimage::DynamicImage::ImageLuma8::0","value":"buffer_::ImageBuffer<color::Luma<u8>, std::vec::Vec<u8>>","parent":{"krate":0,"index":8349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8352},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981715,"byte_end":981726,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":8348},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981657,"byte_end":981710,"line_start":61,"line_end":61,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":8354},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981727,"byte_end":981741,"line_start":62,"line_end":62,"column_start":17,"column_end":31},"name":"0","qualname":"::dynimage::DynamicImage::ImageLumaA8::0","value":"buffer_::ImageBuffer<color::LumaA<u8>, std::vec::Vec<u8>>","parent":{"krate":0,"index":8352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8355},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981795,"byte_end":981804,"line_start":65,"line_end":65,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":8348},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981749,"byte_end":981790,"line_start":64,"line_end":64,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":8357},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981805,"byte_end":981813,"line_start":65,"line_end":65,"column_start":15,"column_end":23},"name":"0","qualname":"::dynimage::DynamicImage::ImageRgb8::0","value":"buffer_::ImageBuffer<color::Rgb<u8>, std::vec::Vec<u8>>","parent":{"krate":0,"index":8355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8358},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981878,"byte_end":981888,"line_start":68,"line_end":68,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":8348},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981821,"byte_end":981873,"line_start":67,"line_end":67,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":8360},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981889,"byte_end":981898,"line_start":68,"line_end":68,"column_start":16,"column_end":25},"name":"0","qualname":"::dynimage::DynamicImage::ImageRgba8::0","value":"buffer_::ImageBuffer<color::Rgba<u8>, std::vec::Vec<u8>>","parent":{"krate":0,"index":8358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8361},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981954,"byte_end":981965,"line_start":71,"line_end":71,"column_start":5,"column_end":16},"name":"ImageLuma16","qualname":"::dynimage::DynamicImage::ImageLuma16","value":"DynamicImage::ImageLuma16(Gray16Image)","parent":{"krate":0,"index":8348},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981906,"byte_end":981949,"line_start":70,"line_end":70,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":8363},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981966,"byte_end":981977,"line_start":71,"line_end":71,"column_start":17,"column_end":28},"name":"0","qualname":"::dynimage::DynamicImage::ImageLuma16::0","value":"buffer_::ImageBuffer<color::Luma<u16>, std::vec::Vec<u16>>","parent":{"krate":0,"index":8361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8364},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982044,"byte_end":982056,"line_start":74,"line_end":74,"column_start":5,"column_end":17},"name":"ImageLumaA16","qualname":"::dynimage::DynamicImage::ImageLumaA16","value":"DynamicImage::ImageLumaA16(GrayAlpha16Image)","parent":{"krate":0,"index":8348},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma with alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981985,"byte_end":982039,"line_start":73,"line_end":73,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":8366},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982057,"byte_end":982073,"line_start":74,"line_end":74,"column_start":18,"column_end":34},"name":"0","qualname":"::dynimage::DynamicImage::ImageLumaA16::0","value":"buffer_::ImageBuffer<color::LumaA<u16>, std::vec::Vec<u16>>","parent":{"krate":0,"index":8364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8367},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982128,"byte_end":982138,"line_start":77,"line_end":77,"column_start":5,"column_end":15},"name":"ImageRgb16","qualname":"::dynimage::DynamicImage::ImageRgb16","value":"DynamicImage::ImageRgb16(Rgb16Image)","parent":{"krate":0,"index":8348},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982081,"byte_end":982123,"line_start":76,"line_end":76,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":8369},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982139,"byte_end":982149,"line_start":77,"line_end":77,"column_start":16,"column_end":26},"name":"0","qualname":"::dynimage::DynamicImage::ImageRgb16::0","value":"buffer_::ImageBuffer<color::Rgb<u16>, std::vec::Vec<u16>>","parent":{"krate":0,"index":8367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8370},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982215,"byte_end":982226,"line_start":80,"line_end":80,"column_start":5,"column_end":16},"name":"ImageRgba16","qualname":"::dynimage::DynamicImage::ImageRgba16","value":"DynamicImage::ImageRgba16(Rgba16Image)","parent":{"krate":0,"index":8348},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb with alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982157,"byte_end":982210,"line_start":79,"line_end":79,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":8372},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982227,"byte_end":982238,"line_start":80,"line_end":80,"column_start":17,"column_end":28},"name":"0","qualname":"::dynimage::DynamicImage::ImageRgba16::0","value":"buffer_::ImageBuffer<color::Rgba<u16>, std::vec::Vec<u16>>","parent":{"krate":0,"index":8370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8373},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982299,"byte_end":982310,"line_start":83,"line_end":83,"column_start":5,"column_end":16},"name":"ImageRgb32F","qualname":"::dynimage::DynamicImage::ImageRgb32F","value":"DynamicImage::ImageRgb32F(Rgb32FImage)","parent":{"krate":0,"index":8348},"children":[],"decl_id":null,"docs":" Each pixel in this image is 32-bit float Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 32-bit float Rgb","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982246,"byte_end":982294,"line_start":82,"line_end":82,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":8375},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982311,"byte_end":982322,"line_start":83,"line_end":83,"column_start":17,"column_end":28},"name":"0","qualname":"::dynimage::DynamicImage::ImageRgb32F::0","value":"buffer_::ImageBuffer<color::Rgb<f32>, std::vec::Vec<f32>>","parent":{"krate":0,"index":8373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8376},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982394,"byte_end":982406,"line_start":86,"line_end":86,"column_start":5,"column_end":17},"name":"ImageRgba32F","qualname":"::dynimage::DynamicImage::ImageRgba32F","value":"DynamicImage::ImageRgba32F(Rgba32FImage)","parent":{"krate":0,"index":8348},"children":[],"decl_id":null,"docs":" Each pixel in this image is 32-bit float Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 32-bit float Rgb with alpha","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982330,"byte_end":982389,"line_start":85,"line_end":85,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":8378},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":982407,"byte_end":982419,"line_start":86,"line_end":86,"column_start":18,"column_end":30},"name":"0","qualname":"::dynimage::DynamicImage::ImageRgba32F::0","value":"buffer_::ImageBuffer<color::Rgba<f32>, std::vec::Vec<f32>>","parent":{"krate":0,"index":8376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8348},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981563,"byte_end":981575,"line_start":57,"line_end":57,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"enum DynamicImage {\n    ImageLuma8(GrayImage),\n    ImageLumaA8(GrayAlphaImage),\n    ImageRgb8(RgbImage),\n    ImageRgba8(RgbaImage),\n    ImageLuma16(Gray16Image),\n    ImageLumaA16(GrayAlpha16Image),\n    ImageRgb16(Rgb16Image),\n    ImageRgba16(Rgba16Image),\n    ImageRgb32F(Rgb32FImage),\n    ImageRgba32F(Rgba32FImage),\n}","parent":null,"children":[{"krate":0,"index":8349},{"krate":0,"index":8352},{"krate":0,"index":8355},{"krate":0,"index":8358},{"krate":0,"index":8361},{"krate":0,"index":8364},{"krate":0,"index":8367},{"krate":0,"index":8370},{"krate":0,"index":8373},{"krate":0,"index":8376}],"decl_id":null,"docs":" A Dynamic Image","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980548,"byte_end":980567,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980568,"byte_end":980571,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This represents a _matrix_ of _pixels_ which are _convertible_ from and to an _RGBA_","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980572,"byte_end":980660,"line_start":34,"line_end":34,"column_start":1,"column_end":89}},{"value":"/ representation. More variants that adhere to these principles may get added in the future, in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980661,"byte_end":980758,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ particular to cover other combinations typically used.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980759,"byte_end":980817,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980818,"byte_end":980821,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980822,"byte_end":980833,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980834,"byte_end":980837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This type can act as a converter between specific `ImageBuffer` instances.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980838,"byte_end":980916,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980917,"byte_end":980920,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980921,"byte_end":980928,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use image::{DynamicImage, GrayImage, RgbImage};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980929,"byte_end":980980,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980981,"byte_end":980984,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let rgb: RgbImage = RgbImage::new(10, 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":980985,"byte_end":981031,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ let luma: GrayImage = DynamicImage::ImageRgb8(rgb).into_luma8();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981032,"byte_end":981100,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981101,"byte_end":981108,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981109,"byte_end":981112,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Design","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981113,"byte_end":981125,"line_start":49,"line_end":49,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981126,"byte_end":981129,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ There is no goal to provide an all-encompassing type with all possible memory layouts. This","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981130,"byte_end":981225,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ would hardly be feasible as a simple enum, due to the sheer number of combinations of channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981226,"byte_end":981323,"line_start":52,"line_end":52,"column_start":1,"column_end":98}},{"value":"/ kinds, channel order, and bit depth. Rather, this type provides an opinionated selection with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981324,"byte_end":981421,"line_start":53,"line_end":53,"column_start":1,"column_end":98}},{"value":"/ normalized channel order which can store common pixel values without loss.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981422,"byte_end":981500,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":981536,"byte_end":981553,"line_start":56,"line_end":56,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5686},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":984041,"byte_end":984050,"line_start":124,"line_end":124,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"fn new_luma8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of gray pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of gray pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":983967,"byte_end":984029,"line_start":123,"line_end":123,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5687},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":984253,"byte_end":984264,"line_start":130,"line_end":130,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"fn new_luma_a8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of gray\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of gray","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":984153,"byte_end":984207,"line_start":128,"line_end":128,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":984212,"byte_end":984241,"line_start":129,"line_end":129,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5688},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":984441,"byte_end":984449,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"fn new_rgb8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":984368,"byte_end":984429,"line_start":134,"line_end":134,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5689},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":984625,"byte_end":984634,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"fn new_rgba8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":984551,"byte_end":984613,"line_start":139,"line_end":139,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5690},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":984811,"byte_end":984821,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"new_luma16","qualname":"<DynamicImage>::new_luma16","value":"fn new_luma16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of gray pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of gray pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":984737,"byte_end":984799,"line_start":144,"line_end":144,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5691},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":985025,"byte_end":985037,"line_start":151,"line_end":151,"column_start":12,"column_end":24},"name":"new_luma_a16","qualname":"<DynamicImage>::new_luma_a16","value":"fn new_luma_a16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of gray\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of gray","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":984925,"byte_end":984979,"line_start":149,"line_end":149,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":984984,"byte_end":985013,"line_start":150,"line_end":150,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5692},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":985215,"byte_end":985224,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"new_rgb16","qualname":"<DynamicImage>::new_rgb16","value":"fn new_rgb16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":985142,"byte_end":985203,"line_start":155,"line_end":155,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5693},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":985401,"byte_end":985411,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"new_rgba16","qualname":"<DynamicImage>::new_rgba16","value":"fn new_rgba16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":985327,"byte_end":985389,"line_start":160,"line_end":160,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5694},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":985588,"byte_end":985598,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"new_rgb32f","qualname":"<DynamicImage>::new_rgb32f","value":"fn new_rgb32f(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":985515,"byte_end":985576,"line_start":165,"line_end":165,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5695},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":985776,"byte_end":985787,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"new_rgba32f","qualname":"<DynamicImage>::new_rgba32f","value":"fn new_rgba32f(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":985702,"byte_end":985764,"line_start":170,"line_end":170,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5696},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":985954,"byte_end":985966,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"from_decoder","qualname":"<DynamicImage>::from_decoder","value":"fn from_decoder<'a, impl ImageDecoder<'a>>(impl ImageDecoder<'a>)\n-> ImageResult<Self> where impl ImageDecoder<'a>: ImageDecoder","parent":null,"children":[],"decl_id":null,"docs":" Decodes an encoded image into a dynamic image.\n","sig":null,"attributes":[{"value":"/ Decodes an encoded image into a dynamic image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":985892,"byte_end":985942,"line_start":175,"line_end":175,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5699},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986132,"byte_end":986139,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"to_rgb8","qualname":"<DynamicImage>::to_rgb8","value":"fn to_rgb8<'_>(&'_ Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986071,"byte_end":986120,"line_start":180,"line_end":180,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5700},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986282,"byte_end":986290,"line_start":186,"line_end":186,"column_start":12,"column_end":20},"name":"to_rgb16","qualname":"<DynamicImage>::to_rgb16","value":"fn to_rgb16<'_>(&'_ Self) -> Rgb16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986221,"byte_end":986270,"line_start":185,"line_end":185,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5701},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986435,"byte_end":986444,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"to_rgb32f","qualname":"<DynamicImage>::to_rgb32f","value":"fn to_rgb32f<'_>(&'_ Self) -> Rgb32FImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986374,"byte_end":986423,"line_start":190,"line_end":190,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5702},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986591,"byte_end":986599,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"to_rgba8","qualname":"<DynamicImage>::to_rgba8","value":"fn to_rgba8<'_>(&'_ Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986529,"byte_end":986579,"line_start":195,"line_end":195,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5703},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986744,"byte_end":986753,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"to_rgba16","qualname":"<DynamicImage>::to_rgba16","value":"fn to_rgba16<'_>(&'_ Self) -> Rgba16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986682,"byte_end":986732,"line_start":200,"line_end":200,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5704},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986900,"byte_end":986910,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"to_rgba32f","qualname":"<DynamicImage>::to_rgba32f","value":"fn to_rgba32f<'_>(&'_ Self) -> Rgba32FImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986838,"byte_end":986888,"line_start":205,"line_end":205,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5705},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":987057,"byte_end":987065,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"to_luma8","qualname":"<DynamicImage>::to_luma8","value":"fn to_luma8<'_>(&'_ Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":986996,"byte_end":987045,"line_start":210,"line_end":210,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5706},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":987209,"byte_end":987218,"line_start":216,"line_end":216,"column_start":12,"column_end":21},"name":"to_luma16","qualname":"<DynamicImage>::to_luma16","value":"fn to_luma16<'_>(&'_ Self) -> Gray16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":987148,"byte_end":987197,"line_start":215,"line_end":215,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5707},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":987364,"byte_end":987374,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"to_luma32f","qualname":"<DynamicImage>::to_luma32f","value":"fn to_luma32f<'_>(&'_ Self) -> ImageBuffer<Luma<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":987303,"byte_end":987352,"line_start":220,"line_end":220,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5708},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":987542,"byte_end":987556,"line_start":226,"line_end":226,"column_start":12,"column_end":26},"name":"to_luma_alpha8","qualname":"<DynamicImage>::to_luma_alpha8","value":"fn to_luma_alpha8<'_>(&'_ Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":987480,"byte_end":987530,"line_start":225,"line_end":225,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5709},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":987706,"byte_end":987721,"line_start":231,"line_end":231,"column_start":12,"column_end":27},"name":"to_luma_alpha16","qualname":"<DynamicImage>::to_luma_alpha16","value":"fn to_luma_alpha16<'_>(&'_ Self) -> GrayAlpha16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":987644,"byte_end":987694,"line_start":230,"line_end":230,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5710},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":987873,"byte_end":987889,"line_start":236,"line_end":236,"column_start":12,"column_end":28},"name":"to_luma_alpha32f","qualname":"<DynamicImage>::to_luma_alpha32f","value":"fn to_luma_alpha32f<'_>(&'_ Self) -> ImageBuffer<LumaA<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":987811,"byte_end":987861,"line_start":235,"line_end":235,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5711},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988175,"byte_end":988184,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"into_rgb8","qualname":"<DynamicImage>::into_rgb8","value":"fn into_rgb8(Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":987996,"byte_end":988042,"line_start":240,"line_end":240,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988047,"byte_end":988050,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988055,"byte_end":988125,"line_start":242,"line_end":242,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988130,"byte_end":988163,"line_start":243,"line_end":243,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5712},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988501,"byte_end":988511,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"into_rgb16","qualname":"<DynamicImage>::into_rgb16","value":"fn into_rgb16(Self) -> Rgb16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988322,"byte_end":988368,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988373,"byte_end":988376,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988381,"byte_end":988451,"line_start":253,"line_end":253,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988456,"byte_end":988489,"line_start":254,"line_end":254,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5713},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988832,"byte_end":988843,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"into_rgb32f","qualname":"<DynamicImage>::into_rgb32f","value":"fn into_rgb32f(Self) -> Rgb32FImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988653,"byte_end":988699,"line_start":262,"line_end":262,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988704,"byte_end":988707,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988712,"byte_end":988782,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988787,"byte_end":988820,"line_start":265,"line_end":265,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5714},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989168,"byte_end":989178,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"into_rgba8","qualname":"<DynamicImage>::into_rgba8","value":"fn into_rgba8(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":988988,"byte_end":989035,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989040,"byte_end":989043,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989048,"byte_end":989118,"line_start":275,"line_end":275,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989123,"byte_end":989156,"line_start":276,"line_end":276,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5715},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989499,"byte_end":989510,"line_start":288,"line_end":288,"column_start":12,"column_end":23},"name":"into_rgba16","qualname":"<DynamicImage>::into_rgba16","value":"fn into_rgba16(Self) -> Rgba16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989319,"byte_end":989366,"line_start":284,"line_end":284,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989371,"byte_end":989374,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989379,"byte_end":989449,"line_start":286,"line_end":286,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989454,"byte_end":989487,"line_start":287,"line_end":287,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5716},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989835,"byte_end":989847,"line_start":299,"line_end":299,"column_start":12,"column_end":24},"name":"into_rgba32f","qualname":"<DynamicImage>::into_rgba32f","value":"fn into_rgba32f(Self) -> Rgba32FImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989655,"byte_end":989702,"line_start":295,"line_end":295,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989707,"byte_end":989710,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989715,"byte_end":989785,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989790,"byte_end":989823,"line_start":298,"line_end":298,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5717},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990175,"byte_end":990185,"line_start":310,"line_end":310,"column_start":12,"column_end":22},"name":"into_luma8","qualname":"<DynamicImage>::into_luma8","value":"fn into_luma8(Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":989995,"byte_end":990042,"line_start":306,"line_end":306,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990047,"byte_end":990050,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990055,"byte_end":990125,"line_start":308,"line_end":308,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990130,"byte_end":990163,"line_start":309,"line_end":309,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5718},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990506,"byte_end":990517,"line_start":321,"line_end":321,"column_start":12,"column_end":23},"name":"into_luma16","qualname":"<DynamicImage>::into_luma16","value":"fn into_luma16(Self) -> Gray16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990326,"byte_end":990373,"line_start":317,"line_end":317,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990378,"byte_end":990381,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990386,"byte_end":990456,"line_start":319,"line_end":319,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990461,"byte_end":990494,"line_start":320,"line_end":320,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5719},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990843,"byte_end":990859,"line_start":332,"line_end":332,"column_start":12,"column_end":28},"name":"into_luma_alpha8","qualname":"<DynamicImage>::into_luma_alpha8","value":"fn into_luma_alpha8(Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990662,"byte_end":990710,"line_start":328,"line_end":328,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990715,"byte_end":990718,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990723,"byte_end":990793,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":990798,"byte_end":990831,"line_start":331,"line_end":331,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5720},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":991193,"byte_end":991210,"line_start":343,"line_end":343,"column_start":12,"column_end":29},"name":"into_luma_alpha16","qualname":"<DynamicImage>::into_luma_alpha16","value":"fn into_luma_alpha16(Self) -> GrayAlpha16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":991012,"byte_end":991060,"line_start":339,"line_end":339,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":991065,"byte_end":991068,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":991073,"byte_end":991143,"line_start":341,"line_end":341,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":991148,"byte_end":991181,"line_start":342,"line_end":342,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5721},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":991597,"byte_end":991601,"line_start":354,"line_end":354,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"fn crop<'_>(&'_ mut Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":991367,"byte_end":991438,"line_start":350,"line_end":350,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":991443,"byte_end":991446,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Note: this method does *not* modify the object,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":991451,"byte_end":991502,"line_start":352,"line_end":352,"column_start":5,"column_end":56}},{"value":"/ and its signature will be replaced with `crop_imm()`'s in the 0.24 release","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":991507,"byte_end":991585,"line_start":353,"line_end":353,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5722},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":991858,"byte_end":991866,"line_start":359,"line_end":359,"column_start":12,"column_end":20},"name":"crop_imm","qualname":"<DynamicImage>::crop_imm","value":"fn crop_imm<'_>(&'_ Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":991775,"byte_end":991846,"line_start":358,"line_end":358,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5723},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":992091,"byte_end":992098,"line_start":364,"line_end":364,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"fn as_rgb8<'_>(&'_ Self) -> Option<&'_ RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":992036,"byte_end":992079,"line_start":363,"line_end":363,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5724},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":992313,"byte_end":992324,"line_start":372,"line_end":372,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"fn as_mut_rgb8<'_>(&'_ mut Self) -> Option<&'_ mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":992250,"byte_end":992301,"line_start":371,"line_end":371,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5725},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":992544,"byte_end":992552,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"fn as_rgba8<'_>(&'_ Self) -> Option<&'_ RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":992488,"byte_end":992532,"line_start":379,"line_end":379,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5726},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":992770,"byte_end":992782,"line_start":388,"line_end":388,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"fn as_mut_rgba8<'_>(&'_ mut Self) -> Option<&'_ mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":992706,"byte_end":992758,"line_start":387,"line_end":387,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5727},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":993009,"byte_end":993017,"line_start":396,"line_end":396,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"fn as_luma8<'_>(&'_ Self) -> Option<&'_ GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":992948,"byte_end":992997,"line_start":395,"line_end":395,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5728},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":993240,"byte_end":993252,"line_start":404,"line_end":404,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"fn as_mut_luma8<'_>(&'_ mut Self) -> Option<&'_ mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":993171,"byte_end":993228,"line_start":403,"line_end":403,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5729},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":993501,"byte_end":993515,"line_start":412,"line_end":412,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"fn as_luma_alpha8<'_>(&'_ Self) -> Option<&'_ GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":993418,"byte_end":993489,"line_start":411,"line_end":411,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5730},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":993766,"byte_end":993784,"line_start":420,"line_end":420,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"fn as_mut_luma_alpha8<'_>(&'_ mut Self) -> Option<&'_ mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":993675,"byte_end":993754,"line_start":419,"line_end":419,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":5731},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":994012,"byte_end":994020,"line_start":428,"line_end":428,"column_start":12,"column_end":20},"name":"as_rgb16","qualname":"<DynamicImage>::as_rgb16","value":"fn as_rgb16<'_>(&'_ Self) -> Option<&'_ Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGB image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":993956,"byte_end":994000,"line_start":427,"line_end":427,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5732},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":994239,"byte_end":994251,"line_start":436,"line_end":436,"column_start":12,"column_end":24},"name":"as_mut_rgb16","qualname":"<DynamicImage>::as_mut_rgb16","value":"fn as_mut_rgb16<'_>(&'_ mut Self) -> Option<&'_ mut Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGB image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":994175,"byte_end":994227,"line_start":435,"line_end":435,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5733},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":994475,"byte_end":994484,"line_start":444,"line_end":444,"column_start":12,"column_end":21},"name":"as_rgba16","qualname":"<DynamicImage>::as_rgba16","value":"fn as_rgba16<'_>(&'_ Self) -> Option<&'_ Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGBA image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":994418,"byte_end":994463,"line_start":443,"line_end":443,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5734},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":994706,"byte_end":994719,"line_start":452,"line_end":452,"column_start":12,"column_end":25},"name":"as_mut_rgba16","qualname":"<DynamicImage>::as_mut_rgba16","value":"fn as_mut_rgba16<'_>(&'_ mut Self) -> Option<&'_ mut Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGBA image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":994641,"byte_end":994694,"line_start":451,"line_end":451,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5735},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":994944,"byte_end":994953,"line_start":460,"line_end":460,"column_start":12,"column_end":21},"name":"as_rgb32f","qualname":"<DynamicImage>::as_rgb32f","value":"fn as_rgb32f<'_>(&'_ Self) -> Option<&'_ Rgb32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 32bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 32bit RGB image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":994888,"byte_end":994932,"line_start":459,"line_end":459,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5736},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":995174,"byte_end":995187,"line_start":468,"line_end":468,"column_start":12,"column_end":25},"name":"as_mut_rgb32f","qualname":"<DynamicImage>::as_mut_rgb32f","value":"fn as_mut_rgb32f<'_>(&'_ mut Self) -> Option<&'_ mut Rgb32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 32bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 32bit RGB image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":995110,"byte_end":995162,"line_start":467,"line_end":467,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5737},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":995413,"byte_end":995423,"line_start":476,"line_end":476,"column_start":12,"column_end":22},"name":"as_rgba32f","qualname":"<DynamicImage>::as_rgba32f","value":"fn as_rgba32f<'_>(&'_ Self) -> Option<&'_ Rgba32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 32bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 32bit RGBA image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":995356,"byte_end":995401,"line_start":475,"line_end":475,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5738},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":995647,"byte_end":995661,"line_start":484,"line_end":484,"column_start":12,"column_end":26},"name":"as_mut_rgba32f","qualname":"<DynamicImage>::as_mut_rgba32f","value":"fn as_mut_rgba32f<'_>(&'_ mut Self) -> Option<&'_ mut Rgba32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGBA image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":995582,"byte_end":995635,"line_start":483,"line_end":483,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5739},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":995894,"byte_end":995903,"line_start":492,"line_end":492,"column_start":12,"column_end":21},"name":"as_luma16","qualname":"<DynamicImage>::as_luma16","value":"fn as_luma16<'_>(&'_ Self) -> Option<&'_ Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":995832,"byte_end":995882,"line_start":491,"line_end":491,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5740},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":996130,"byte_end":996143,"line_start":500,"line_end":500,"column_start":12,"column_end":25},"name":"as_mut_luma16","qualname":"<DynamicImage>::as_mut_luma16","value":"fn as_mut_luma16<'_>(&'_ mut Self) -> Option<&'_ mut Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":996060,"byte_end":996118,"line_start":499,"line_end":499,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5741},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":996396,"byte_end":996411,"line_start":508,"line_end":508,"column_start":12,"column_end":27},"name":"as_luma_alpha16","qualname":"<DynamicImage>::as_luma_alpha16","value":"fn as_luma_alpha16<'_>(&'_ Self) -> Option<&'_ GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":996312,"byte_end":996384,"line_start":507,"line_end":507,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5742},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":996666,"byte_end":996685,"line_start":516,"line_end":516,"column_start":12,"column_end":31},"name":"as_mut_luma_alpha16","qualname":"<DynamicImage>::as_mut_luma_alpha16","value":"fn as_mut_luma_alpha16<'_>(&'_ mut Self) -> Option<&'_ mut GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":996574,"byte_end":996654,"line_start":515,"line_end":515,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5743},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":996944,"byte_end":996962,"line_start":524,"line_end":524,"column_start":12,"column_end":30},"name":"as_flat_samples_u8","qualname":"<DynamicImage>::as_flat_samples_u8","value":"fn as_flat_samples_u8<'_>(&'_ Self) -> Option<FlatSamples<&'_ [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 8 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 8 bit per channel images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":996860,"byte_end":996932,"line_start":523,"line_end":523,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5744},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":997449,"byte_end":997468,"line_start":535,"line_end":535,"column_start":12,"column_end":31},"name":"as_flat_samples_u16","qualname":"<DynamicImage>::as_flat_samples_u16","value":"fn as_flat_samples_u16<'_>(&'_ Self) -> Option<FlatSamples<&'_ [u16]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 16 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 16 bit per channel images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":997364,"byte_end":997437,"line_start":534,"line_end":534,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":5745},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":997959,"byte_end":997978,"line_start":546,"line_end":546,"column_start":12,"column_end":31},"name":"as_flat_samples_f32","qualname":"<DynamicImage>::as_flat_samples_f32","value":"fn as_flat_samples_f32<'_>(&'_ Self) -> Option<FlatSamples<&'_ [f32]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 32bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 32bit per channel images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":997875,"byte_end":997947,"line_start":545,"line_end":545,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5746},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":998309,"byte_end":998317,"line_start":555,"line_end":555,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<DynamicImage>::as_bytes","value":"fn as_bytes<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a native endian byte slice.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a native endian byte slice.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":998236,"byte_end":998297,"line_start":554,"line_end":554,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5748},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":999030,"byte_end":999040,"line_start":573,"line_end":573,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<DynamicImage>::into_bytes","value":"fn into_bytes(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector. If the `ImageBuffer`\n container is `Vec<u8>`, this operation is free. Otherwise, a copy\n is returned.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector. If the `ImageBuffer`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":998854,"byte_end":998923,"line_start":570,"line_end":570,"column_start":5,"column_end":74}},{"value":"/ container is `Vec<u8>`, this operation is free. Otherwise, a copy","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":998928,"byte_end":998997,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":999002,"byte_end":999018,"line_start":572,"line_end":572,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":5749},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1000162,"byte_end":1000170,"line_start":596,"line_end":596,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<DynamicImage>::to_bytes","value":"fn to_bytes<'_>(&'_ Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return a copy of this image's pixels as a byte vector.\n Deprecated, because it does nothing but hide an expensive clone operation.\n","sig":null,"attributes":[{"value":"/ Return a copy of this image's pixels as a byte vector.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":999877,"byte_end":999935,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/ Deprecated, because it does nothing but hide an expensive clone operation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":999940,"byte_end":1000018,"line_start":591,"line_end":591,"column_start":5,"column_end":83}},{"value":"deprecated(since = \"0.24.0\", note =\n\"use `image.into_bytes()` or `image.as_bytes().to_vec()` instead\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1000023,"byte_end":1000150,"line_start":592,"line_end":595,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":5750},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1000282,"byte_end":1000287,"line_start":601,"line_end":601,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"fn color<'_>(&'_ Self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1000235,"byte_end":1000270,"line_start":600,"line_end":600,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5751},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1001099,"byte_end":1001104,"line_start":617,"line_end":617,"column_start":12,"column_end":17},"name":"width","qualname":"<DynamicImage>::width","value":"fn width<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of the underlying image\n","sig":null,"attributes":[{"value":"/ Returns the width of the underlying image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1001042,"byte_end":1001087,"line_start":616,"line_end":616,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5752},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1001241,"byte_end":1001247,"line_start":622,"line_end":622,"column_start":12,"column_end":18},"name":"height","qualname":"<DynamicImage>::height","value":"fn height<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of the underlying image\n","sig":null,"attributes":[{"value":"/ Returns the height of the underlying image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1001183,"byte_end":1001229,"line_start":621,"line_end":621,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5753},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1001519,"byte_end":1001528,"line_start":629,"line_end":629,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"fn grayscale<'_>(&'_ Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n Returns `Luma` images in most cases. However, for `f32` images,\n this will return a grayscale `Rgb/Rgba` image instead.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1001327,"byte_end":1001372,"line_start":626,"line_end":626,"column_start":5,"column_end":50}},{"value":"/ Returns `Luma` images in most cases. However, for `f32` images,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1001377,"byte_end":1001444,"line_start":627,"line_end":627,"column_start":5,"column_end":72}},{"value":"/ this will return a grayscale `Rgb/Rgba` image instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1001449,"byte_end":1001507,"line_start":628,"line_end":628,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5754},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1002881,"byte_end":1002887,"line_start":658,"line_end":658,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"fn invert<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1002795,"byte_end":1002831,"line_start":656,"line_end":656,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1002836,"byte_end":1002869,"line_start":657,"line_end":657,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5755},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1003242,"byte_end":1003248,"line_start":666,"line_end":666,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"fn resize<'_>(&'_ Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by `nwidth` and `nheight`.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1002973,"byte_end":1003032,"line_start":662,"line_end":662,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1003037,"byte_end":1003100,"line_start":663,"line_end":663,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1003105,"byte_end":1003167,"line_start":664,"line_end":664,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by `nwidth` and `nheight`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1003172,"byte_end":1003230,"line_start":665,"line_end":665,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5756},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1003799,"byte_end":1003811,"line_start":679,"line_end":679,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"fn resize_exact<'_>(&'_ Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n `nwidth` and `nheight` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1003605,"byte_end":1003664,"line_start":676,"line_end":676,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1003669,"byte_end":1003725,"line_start":677,"line_end":677,"column_start":5,"column_end":61}},{"value":"/ `nwidth` and `nheight` are the new image's dimensions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1003730,"byte_end":1003787,"line_start":678,"line_end":678,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5757},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004494,"byte_end":1004503,"line_start":696,"line_end":696,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"fn thumbnail<'_>(&'_ Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by `nwidth` and `nheight`.","sig":null,"attributes":[{"value":"/ Scale this image down to fit within a specific size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004027,"byte_end":1004083,"line_start":688,"line_end":688,"column_start":5,"column_end":61}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004088,"byte_end":1004151,"line_start":689,"line_end":689,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004156,"byte_end":1004218,"line_start":690,"line_end":690,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by `nwidth` and `nheight`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004223,"byte_end":1004281,"line_start":691,"line_end":691,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004286,"byte_end":1004289,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004294,"byte_end":1004357,"line_start":693,"line_end":693,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004362,"byte_end":1004412,"line_start":694,"line_end":694,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004417,"byte_end":1004482,"line_start":695,"line_end":695,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5758},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1005103,"byte_end":1005118,"line_start":708,"line_end":708,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"fn thumbnail_exact<'_>(&'_ Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n `nwidth` and `nheight` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[{"value":"/ Scale this image down to a specific size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004729,"byte_end":1004774,"line_start":702,"line_end":702,"column_start":5,"column_end":50}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004779,"byte_end":1004835,"line_start":703,"line_end":703,"column_start":5,"column_end":61}},{"value":"/ `nwidth` and `nheight` are the new image's dimensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004840,"byte_end":1004898,"line_start":704,"line_end":704,"column_start":5,"column_end":63}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004903,"byte_end":1004966,"line_start":705,"line_end":705,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1004971,"byte_end":1005021,"line_start":706,"line_end":706,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1005026,"byte_end":1005091,"line_start":707,"line_end":707,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5759},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1005630,"byte_end":1005644,"line_start":718,"line_end":718,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"fn resize_to_fill<'_>(&'_ Self, u32, u32, imageops::FilterType)\n-> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by `nwidth` and `nheight`, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1005260,"byte_end":1005319,"line_start":712,"line_end":712,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1005324,"byte_end":1005387,"line_start":713,"line_end":713,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1005392,"byte_end":1005454,"line_start":714,"line_end":714,"column_start":5,"column_end":67}},{"value":"/ within the larger (relative to aspect ratio) of the bounds","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1005459,"byte_end":1005521,"line_start":715,"line_end":715,"column_start":5,"column_end":67}},{"value":"/ specified by `nwidth` and `nheight`, then cropped to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1005526,"byte_end":1005582,"line_start":716,"line_end":716,"column_start":5,"column_end":61}},{"value":"/ fit within the other bound.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1005587,"byte_end":1005618,"line_start":717,"line_end":717,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5760},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1006460,"byte_end":1006464,"line_start":741,"line_end":741,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"fn blur<'_>(&'_ Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n `sigma` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1006352,"byte_end":1006395,"line_start":739,"line_end":739,"column_start":5,"column_end":48}},{"value":"/ `sigma` is a measure of how much to blur by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1006400,"byte_end":1006448,"line_start":740,"line_end":740,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5761},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1006834,"byte_end":1006843,"line_start":750,"line_end":750,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"fn unsharpen<'_>(&'_ Self, f32, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n `sigma` is the amount to blur the image by.\n `threshold` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1006576,"byte_end":1006621,"line_start":745,"line_end":745,"column_start":5,"column_end":50}},{"value":"/ `sigma` is the amount to blur the image by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1006626,"byte_end":1006673,"line_start":746,"line_end":746,"column_start":5,"column_end":52}},{"value":"/ `threshold` is a control of how much to sharpen.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1006678,"byte_end":1006730,"line_start":747,"line_end":747,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1006735,"byte_end":1006738,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1006743,"byte_end":1006822,"line_start":749,"line_end":749,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":5762},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1007052,"byte_end":1007061,"line_start":755,"line_end":755,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"fn filter3x3<'_, '_>(&'_ Self, &'_ [f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1006987,"byte_end":1007040,"line_start":754,"line_end":754,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5763},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1007467,"byte_end":1007482,"line_start":766,"line_end":766,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"fn adjust_contrast<'_>(&'_ Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n `contrast` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1007268,"byte_end":1007306,"line_start":763,"line_end":763,"column_start":5,"column_end":43}},{"value":"/ `contrast` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1007311,"byte_end":1007366,"line_start":764,"line_end":764,"column_start":5,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1007371,"byte_end":1007455,"line_start":765,"line_end":765,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":5764},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1007778,"byte_end":1007786,"line_start":773,"line_end":773,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"fn brighten<'_>(&'_ Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n `value` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1007590,"byte_end":1007628,"line_start":770,"line_end":770,"column_start":5,"column_end":43}},{"value":"/ `value` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1007633,"byte_end":1007685,"line_start":771,"line_end":771,"column_start":5,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1007690,"byte_end":1007766,"line_start":772,"line_end":772,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":5765},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1008134,"byte_end":1008143,"line_start":781,"line_end":781,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"fn huerotate<'_>(&'_ Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1007902,"byte_end":1007936,"line_start":777,"line_end":777,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1007941,"byte_end":1007992,"line_start":778,"line_end":778,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1007997,"byte_end":1008066,"line_start":779,"line_end":779,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1008071,"byte_end":1008122,"line_start":780,"line_end":780,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5766},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1008302,"byte_end":1008307,"line_start":786,"line_end":786,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"fn flipv<'_>(&'_ Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1008260,"byte_end":1008290,"line_start":785,"line_end":785,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5767},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1008453,"byte_end":1008458,"line_start":791,"line_end":791,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"fn fliph<'_>(&'_ Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1008409,"byte_end":1008441,"line_start":790,"line_end":790,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5768},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1008617,"byte_end":1008625,"line_start":796,"line_end":796,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"fn rotate90<'_>(&'_ Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1008562,"byte_end":1008605,"line_start":795,"line_end":795,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5769},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1008778,"byte_end":1008787,"line_start":801,"line_end":801,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"fn rotate180<'_>(&'_ Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1008722,"byte_end":1008766,"line_start":800,"line_end":800,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5770},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1008941,"byte_end":1008950,"line_start":806,"line_end":806,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"fn rotate270<'_>(&'_ Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1008885,"byte_end":1008929,"line_start":805,"line_end":805,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5771},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1009244,"byte_end":1009252,"line_start":814,"line_end":814,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"fn write_to<W, F, '_, '_>(&'_ Self, &'_ mut W, F) -> ImageResult<()> where\nW: Write + Seek, F: Into<ImageOutputFormat>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```.","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1009048,"byte_end":1009094,"line_start":810,"line_end":810,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1009099,"byte_end":1009102,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1009107,"byte_end":1009157,"line_start":812,"line_end":812,"column_start":5,"column_end":55}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1009162,"byte_end":1009232,"line_start":813,"line_end":813,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5774},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1010883,"byte_end":1010887,"line_start":862,"line_end":862,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"fn save<Q, '_>(&'_ Self, Q) -> ImageResult<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1010749,"byte_end":1010802,"line_start":859,"line_end":859,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1010807,"byte_end":1010810,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1010815,"byte_end":1010871,"line_start":861,"line_end":861,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5776},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011234,"byte_end":1011250,"line_start":874,"line_end":874,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<DynamicImage>::save_with_format","value":"fn save_with_format<Q, '_>(&'_ Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011027,"byte_end":1011082,"line_start":869,"line_end":869,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011087,"byte_end":1011112,"line_start":870,"line_end":870,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011117,"byte_end":1011120,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011125,"byte_end":1011197,"line_start":872,"line_end":872,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011202,"byte_end":1011222,"line_start":873,"line_end":873,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":5779},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011476,"byte_end":1011480,"line_start":883,"line_end":883,"column_start":8,"column_end":12},"name":"from","qualname":"<DynamicImage as std::convert::From>::from","value":"fn from(GrayImage) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5781},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011610,"byte_end":1011614,"line_start":889,"line_end":889,"column_start":8,"column_end":12},"name":"from","qualname":"<DynamicImage as std::convert::From>::from","value":"fn from(GrayAlphaImage) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5783},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011744,"byte_end":1011748,"line_start":895,"line_end":895,"column_start":8,"column_end":12},"name":"from","qualname":"<DynamicImage as std::convert::From>::from","value":"fn from(RgbImage) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5785},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011871,"byte_end":1011875,"line_start":901,"line_end":901,"column_start":8,"column_end":12},"name":"from","qualname":"<DynamicImage as std::convert::From>::from","value":"fn from(RgbaImage) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5787},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012002,"byte_end":1012006,"line_start":907,"line_end":907,"column_start":8,"column_end":12},"name":"from","qualname":"<DynamicImage as std::convert::From>::from","value":"fn from(Gray16Image) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5789},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012141,"byte_end":1012145,"line_start":913,"line_end":913,"column_start":8,"column_end":12},"name":"from","qualname":"<DynamicImage as std::convert::From>::from","value":"fn from(GrayAlpha16Image) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5791},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012280,"byte_end":1012284,"line_start":919,"line_end":919,"column_start":8,"column_end":12},"name":"from","qualname":"<DynamicImage as std::convert::From>::from","value":"fn from(Rgb16Image) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5793},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012412,"byte_end":1012416,"line_start":925,"line_end":925,"column_start":8,"column_end":12},"name":"from","qualname":"<DynamicImage as std::convert::From>::from","value":"fn from(Rgba16Image) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5795},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012546,"byte_end":1012550,"line_start":931,"line_end":931,"column_start":8,"column_end":12},"name":"from","qualname":"<DynamicImage as std::convert::From>::from","value":"fn from(Rgb32FImage) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5797},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012681,"byte_end":1012685,"line_start":937,"line_end":937,"column_start":8,"column_end":12},"name":"from","qualname":"<DynamicImage as std::convert::From>::from","value":"fn from(Rgba32FImage) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5799},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012838,"byte_end":1012842,"line_start":943,"line_end":943,"column_start":8,"column_end":12},"name":"from","qualname":"<DynamicImage as std::convert::From>::from","value":"fn from(ImageBuffer<Luma<f32>, Vec<f32>>) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5801},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1013025,"byte_end":1013029,"line_start":949,"line_end":949,"column_start":8,"column_end":12},"name":"from","qualname":"<DynamicImage as std::convert::From>::from","value":"fn from(ImageBuffer<LumaA<f32>, Vec<f32>>) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5804},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1013314,"byte_end":1013324,"line_start":958,"line_end":958,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<DynamicImage as image::GenericImageView>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5976},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5805},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1013414,"byte_end":1013420,"line_start":962,"line_end":962,"column_start":8,"column_end":14},"name":"bounds","qualname":"<DynamicImage as image::GenericImageView>::bounds","value":"fn bounds<'_>(&'_ Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5979},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5806},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1013516,"byte_end":1013525,"line_start":966,"line_end":966,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"<DynamicImage as image::GenericImageView>::get_pixel","value":"fn get_pixel<'_>(&'_ Self, u32, u32) -> color::Rgba<u8>","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5981},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5808},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1013722,"byte_end":1013731,"line_start":973,"line_end":973,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"<DynamicImage as image::GenericImage>::put_pixel","value":"fn put_pixel<'_>(&'_ mut Self, u32, u32, color::Rgba<u8>)","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5987},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5809},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1014796,"byte_end":1014807,"line_start":990,"line_end":990,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"<DynamicImage as image::GenericImage>::blend_pixel","value":"fn blend_pixel<'_>(&'_ mut Self, u32, u32, color::Rgba<u8>)","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5989},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5810},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1016007,"byte_end":1016020,"line_start":1012,"line_end":1012,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"<DynamicImage as image::GenericImage>::get_pixel_mut","value":"fn get_pixel_mut<'_>(&'_ mut Self, u32, u32) -> &'_ mut color::Rgba<u8>","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5986},"docs":" Do not use is function: It is unimplemented!\n","sig":null,"attributes":[{"value":"/ Do not use is function: It is unimplemented!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1015951,"byte_end":1015999,"line_start":1011,"line_end":1011,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5812},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1016147,"byte_end":1016154,"line_start":1018,"line_end":1018,"column_start":8,"column_end":15},"name":"default","qualname":"<DynamicImage as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5816},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019126,"byte_end":1019130,"line_start":1106,"line_end":1106,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"fn open<P>(P) -> ImageResult<DynamicImage> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1018824,"byte_end":1018873,"line_start":1099,"line_end":1099,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1018874,"byte_end":1018942,"line_start":1100,"line_end":1100,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1018943,"byte_end":1018946,"line_start":1101,"line_end":1101,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1018947,"byte_end":1019043,"line_start":1102,"line_end":1102,"column_start":1,"column_end":97}},{"value":"/ content before its path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019044,"byte_end":1019072,"line_start":1103,"line_end":1103,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019073,"byte_end":1019076,"line_start":1104,"line_end":1104,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019077,"byte_end":1019118,"line_start":1105,"line_end":1105,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":5818},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019709,"byte_end":1019725,"line_start":1121,"line_end":1121,"column_start":8,"column_end":24},"name":"image_dimensions","qualname":"::dynimage::image_dimensions","value":"fn image_dimensions<P>(P) -> ImageResult<(u32, u32)> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Read a tuple containing the (width, height) of the image located at the specified path.\n This is faster than fully loading the image and then getting its dimensions.","sig":null,"attributes":[{"value":"/ Read a tuple containing the (width, height) of the image located at the specified path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019320,"byte_end":1019411,"line_start":1114,"line_end":1114,"column_start":1,"column_end":92}},{"value":"/ This is faster than fully loading the image and then getting its dimensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019412,"byte_end":1019492,"line_start":1115,"line_end":1115,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019493,"byte_end":1019496,"line_start":1116,"line_end":1116,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019497,"byte_end":1019593,"line_start":1117,"line_end":1117,"column_start":1,"column_end":97}},{"value":"/ content before its path or manually supplying the format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019594,"byte_end":1019655,"line_start":1118,"line_end":1118,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019656,"byte_end":1019659,"line_start":1119,"line_end":1119,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019660,"byte_end":1019701,"line_start":1120,"line_end":1120,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":5820},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020308,"byte_end":1020319,"line_start":1136,"line_end":1136,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"fn save_buffer<P, '_>(P, &'_ [u8], u32, u32, color::ColorType)\n-> ImageResult<()> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019925,"byte_end":1019987,"line_start":1129,"line_end":1129,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019988,"byte_end":1019991,"line_start":1130,"line_end":1130,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1019992,"byte_end":1020078,"line_start":1131,"line_end":1131,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020079,"byte_end":1020140,"line_start":1132,"line_end":1132,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020141,"byte_end":1020144,"line_start":1133,"line_end":1133,"column_start":1,"column_end":4}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020145,"byte_end":1020236,"line_start":1134,"line_end":1134,"column_start":1,"column_end":92}},{"value":"/ jpeg, png, ico, pnm, bmp, exr and tiff files are supported.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020237,"byte_end":1020300,"line_start":1135,"line_end":1135,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":5822},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020978,"byte_end":1021001,"line_start":1158,"line_end":1158,"column_start":8,"column_end":31},"name":"save_buffer_with_format","qualname":"::dynimage::save_buffer_with_format","value":"fn save_buffer_with_format<P,\n'_>(P, &'_ [u8], u32, u32, color::ColorType, ImageFormat) -> ImageResult<()>\nwhere P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified\n in the specified format.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020625,"byte_end":1020686,"line_start":1150,"line_end":1150,"column_start":1,"column_end":62}},{"value":"/ in the specified format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020687,"byte_end":1020715,"line_start":1151,"line_end":1151,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020716,"byte_end":1020719,"line_start":1152,"line_end":1152,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020720,"byte_end":1020782,"line_start":1153,"line_end":1153,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020783,"byte_end":1020815,"line_start":1154,"line_end":1154,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted files if the buffer contains","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020816,"byte_end":1020876,"line_start":1155,"line_end":1155,"column_start":1,"column_end":61}},{"value":"/ malformed data. Currently only jpeg, png, ico, bmp, exr and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020877,"byte_end":1020940,"line_start":1156,"line_end":1156,"column_start":1,"column_end":64}},{"value":"/ tiff files are supported.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1020941,"byte_end":1020970,"line_start":1157,"line_end":1157,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":5824},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021795,"byte_end":1021819,"line_start":1185,"line_end":1185,"column_start":8,"column_end":32},"name":"write_buffer_with_format","qualname":"::dynimage::write_buffer_with_format","value":"fn write_buffer_with_format<W, F, '_,\n'_>(&'_ mut W, &'_ [u8], u32, u32, color::ColorType, F) -> ImageResult<()>\nwhere W: Write + Seek, F: Into<ImageOutputFormat>","parent":null,"children":[],"decl_id":null,"docs":" Writes the supplied buffer to a writer in the specified format.","sig":null,"attributes":[{"value":"/ Writes the supplied buffer to a writer in the specified format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021320,"byte_end":1021387,"line_start":1173,"line_end":1173,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021388,"byte_end":1021391,"line_start":1174,"line_end":1174,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021392,"byte_end":1021454,"line_start":1175,"line_end":1175,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021455,"byte_end":1021487,"line_start":1176,"line_end":1176,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted writers if the buffer contains","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021488,"byte_end":1021550,"line_start":1177,"line_end":1177,"column_start":1,"column_end":63}},{"value":"/ malformed data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021551,"byte_end":1021570,"line_start":1178,"line_end":1178,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021571,"byte_end":1021574,"line_start":1179,"line_end":1179,"column_start":1,"column_end":4}},{"value":"/ See [`ImageOutputFormat`](../enum.ImageOutputFormat.html) for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021575,"byte_end":1021640,"line_start":1180,"line_end":1180,"column_start":1,"column_end":66}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021641,"byte_end":1021661,"line_start":1181,"line_end":1181,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021662,"byte_end":1021665,"line_start":1182,"line_end":1182,"column_start":1,"column_end":4}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021666,"byte_end":1021716,"line_start":1183,"line_end":1183,"column_start":1,"column_end":51}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1021717,"byte_end":1021787,"line_start":1184,"line_end":1184,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":5827},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022422,"byte_end":1022438,"line_start":1209,"line_end":1209,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"fn load_from_memory<'_>(&'_ [u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022178,"byte_end":1022218,"line_start":1201,"line_end":1201,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022219,"byte_end":1022222,"line_start":1202,"line_end":1202,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022223,"byte_end":1022274,"line_start":1203,"line_end":1203,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022275,"byte_end":1022317,"line_start":1204,"line_end":1204,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022318,"byte_end":1022321,"line_start":1205,"line_end":1205,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022322,"byte_end":1022368,"line_start":1206,"line_end":1206,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022369,"byte_end":1022372,"line_start":1207,"line_end":1207,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022373,"byte_end":1022414,"line_start":1208,"line_end":1208,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":5828},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022920,"byte_end":1022948,"line_start":1224,"line_end":1224,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"fn load_from_memory_with_format<'_>(&'_ [u8], ImageFormat)\n-> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022593,"byte_end":1022633,"line_start":1214,"line_end":1214,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022634,"byte_end":1022637,"line_start":1215,"line_end":1215,"column_start":1,"column_end":4}},{"value":"/ This is just a simple wrapper that constructs an `std::io::Cursor` around the buffer and then","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022638,"byte_end":1022735,"line_start":1216,"line_end":1216,"column_start":1,"column_end":98}},{"value":"/ calls `load` with that reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022736,"byte_end":1022770,"line_start":1217,"line_end":1217,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022771,"byte_end":1022774,"line_start":1218,"line_end":1218,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022775,"byte_end":1022821,"line_start":1219,"line_end":1219,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022822,"byte_end":1022825,"line_start":1220,"line_end":1220,"column_start":1,"column_end":4}},{"value":"/ [`load`]: fn.load.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022826,"byte_end":1022852,"line_start":1221,"line_end":1221,"column_start":1,"column_end":27}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022853,"byte_end":1022894,"line_start":1222,"line_end":1222,"column_start":1,"column_end":42}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1022895,"byte_end":1022912,"line_start":1223,"line_end":1223,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8403},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027709,"byte_end":1027712,"line_start":30,"line_end":30,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027678,"byte_end":1027704,"line_start":29,"line_end":29,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8405},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027751,"byte_end":1027755,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageFormat::Jpeg","value":"ImageFormat::Jpeg","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027719,"byte_end":1027746,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8407},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027793,"byte_end":1027796,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageFormat::Gif","value":"ImageFormat::Gif","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027762,"byte_end":1027788,"line_start":35,"line_end":35,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8409},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027835,"byte_end":1027839,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"WebP","qualname":"::image::ImageFormat::WebP","value":"ImageFormat::WebP","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027803,"byte_end":1027830,"line_start":38,"line_end":38,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8411},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027885,"byte_end":1027888,"line_start":42,"line_end":42,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageFormat::Pnm","value":"ImageFormat::Pnm","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[{"value":"/ An Image in general PNM Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027846,"byte_end":1027880,"line_start":41,"line_end":41,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8413},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027927,"byte_end":1027931,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageFormat::Tiff","value":"ImageFormat::Tiff","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027895,"byte_end":1027922,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8415},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027969,"byte_end":1027972,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageFormat::Tga","value":"ImageFormat::Tga","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027938,"byte_end":1027964,"line_start":47,"line_end":47,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8417},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028010,"byte_end":1028013,"line_start":51,"line_end":51,"column_start":5,"column_end":8},"name":"Dds","qualname":"::image::ImageFormat::Dds","value":"ImageFormat::Dds","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in DDS Format\n","sig":null,"attributes":[{"value":"/ An Image in DDS Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027979,"byte_end":1028005,"line_start":50,"line_end":50,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8419},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028051,"byte_end":1028054,"line_start":54,"line_end":54,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageFormat::Bmp","value":"ImageFormat::Bmp","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028020,"byte_end":1028046,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8421},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028092,"byte_end":1028095,"line_start":57,"line_end":57,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageFormat::Ico","value":"ImageFormat::Ico","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028061,"byte_end":1028087,"line_start":56,"line_end":56,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8423},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028142,"byte_end":1028145,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"name":"Hdr","qualname":"::image::ImageFormat::Hdr","value":"ImageFormat::Hdr","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028102,"byte_end":1028137,"line_start":59,"line_end":59,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8425},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028187,"byte_end":1028194,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"OpenExr","qualname":"::image::ImageFormat::OpenExr","value":"ImageFormat::OpenExr","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in OpenEXR Format\n","sig":null,"attributes":[{"value":"/ An Image in OpenEXR Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028152,"byte_end":1028182,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8427},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028237,"byte_end":1028245,"line_start":66,"line_end":66,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageFormat::Farbfeld","value":"ImageFormat::Farbfeld","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"/ An Image in farbfeld Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028201,"byte_end":1028232,"line_start":65,"line_end":65,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8429},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028285,"byte_end":1028289,"line_start":69,"line_end":69,"column_start":5,"column_end":9},"name":"Avif","qualname":"::image::ImageFormat::Avif","value":"ImageFormat::Avif","parent":{"krate":0,"index":8402},"children":[],"decl_id":null,"docs":" An Image in AVIF format.\n","sig":null,"attributes":[{"value":"/ An Image in AVIF format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028252,"byte_end":1028280,"line_start":68,"line_end":68,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":8402},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027660,"byte_end":1027671,"line_start":28,"line_end":28,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"enum ImageFormat {\n    Png,\n    Jpeg,\n    Gif,\n    WebP,\n    Pnm,\n    Tiff,\n    Tga,\n    Dds,\n    Bmp,\n    Ico,\n    Hdr,\n    OpenExr,\n    Farbfeld,\n    Avif,\n}","parent":null,"children":[{"krate":0,"index":8403},{"krate":0,"index":8405},{"krate":0,"index":8407},{"krate":0,"index":8409},{"krate":0,"index":8411},{"krate":0,"index":8413},{"krate":0,"index":8415},{"krate":0,"index":8417},{"krate":0,"index":8419},{"krate":0,"index":8421},{"krate":0,"index":8423},{"krate":0,"index":8425},{"krate":0,"index":8427},{"krate":0,"index":8429}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027479,"byte_end":1027525,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027526,"byte_end":1027581,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1027633,"byte_end":1027650,"line_start":27,"line_end":27,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5900},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028616,"byte_end":1028630,"line_start":84,"line_end":84,"column_start":12,"column_end":26},"name":"from_extension","qualname":"<ImageFormat>::from_extension","value":"fn from_extension<S>(S) -> Option<Self> where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by a path's file extension.","sig":null,"attributes":[{"value":"/ Return the image format specified by a path's file extension.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028317,"byte_end":1028382,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028387,"byte_end":1028390,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028395,"byte_end":1028408,"line_start":75,"line_end":75,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028413,"byte_end":1028416,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028421,"byte_end":1028428,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028433,"byte_end":1028460,"line_start":78,"line_end":78,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028465,"byte_end":1028468,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_extension(\"jpg\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028473,"byte_end":1028525,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(format, Some(ImageFormat::Jpeg));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028530,"byte_end":1028578,"line_start":81,"line_end":81,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028583,"byte_end":1028590,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028595,"byte_end":1028604,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5903},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030033,"byte_end":1030042,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ImageFormat>::from_path","value":"fn from_path<P>(P) -> ImageResult<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by the path's file extension.","sig":null,"attributes":[{"value":"/ Return the image format specified by the path's file extension.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1029672,"byte_end":1029739,"line_start":114,"line_end":114,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1029744,"byte_end":1029747,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1029752,"byte_end":1029765,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1029770,"byte_end":1029773,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1029778,"byte_end":1029785,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1029790,"byte_end":1029817,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1029822,"byte_end":1029825,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_path(\"images/ferris.png\")?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1029830,"byte_end":1029892,"line_start":121,"line_end":121,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(format, ImageFormat::Png);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1029897,"byte_end":1029938,"line_start":122,"line_end":122,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1029943,"byte_end":1029946,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), image::error::ImageError>(())","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1029951,"byte_end":1029995,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030000,"byte_end":1030007,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030012,"byte_end":1030021,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5907},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1031014,"byte_end":1031028,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"from_mime_type","qualname":"<ImageFormat>::from_mime_type","value":"fn from_mime_type<M>(M) -> Option<Self> where M: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by a MIME type.","sig":null,"attributes":[{"value":"/ Return the image format specified by a MIME type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030733,"byte_end":1030786,"line_start":148,"line_end":148,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030791,"byte_end":1030794,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030799,"byte_end":1030812,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030817,"byte_end":1030820,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030825,"byte_end":1030832,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030837,"byte_end":1030864,"line_start":153,"line_end":153,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030869,"byte_end":1030872,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_mime_type(\"image/png\").unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030877,"byte_end":1030944,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(format, ImageFormat::Png);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030949,"byte_end":1030990,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1030995,"byte_end":1031002,"line_start":157,"line_end":157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5909},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1032113,"byte_end":1032121,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"can_read","qualname":"<ImageFormat>::can_read","value":"fn can_read<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the ImageFormat can be decoded by the lib.\n","sig":null,"attributes":[{"value":"/ Return if the ImageFormat can be decoded by the lib.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1032031,"byte_end":1032087,"line_start":183,"line_end":183,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1032092,"byte_end":1032101,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5910},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1032905,"byte_end":1032914,"line_start":207,"line_end":207,"column_start":12,"column_end":21},"name":"can_write","qualname":"<ImageFormat>::can_write","value":"fn can_write<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the ImageFormat can be encoded by the lib.\n","sig":null,"attributes":[{"value":"/ Return if the ImageFormat can be encoded by the lib.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1032823,"byte_end":1032879,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1032884,"byte_end":1032893,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5911},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1034231,"byte_end":1034245,"line_start":236,"line_end":236,"column_start":12,"column_end":26},"name":"extensions_str","qualname":"<ImageFormat>::extensions_str","value":"fn extensions_str(Self) -> &'static [&'static str]","parent":null,"children":[],"decl_id":null,"docs":" Return a list of applicable extensions for this format.","sig":null,"attributes":[{"value":"/ Return a list of applicable extensions for this format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1033641,"byte_end":1033700,"line_start":227,"line_end":227,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1033705,"byte_end":1033708,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ All currently recognized image formats specify at least on extension but for future","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1033713,"byte_end":1033800,"line_start":229,"line_end":229,"column_start":5,"column_end":92}},{"value":"/ compatibility you should not rely on this fact. The list may be empty if the format has no","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1033805,"byte_end":1033899,"line_start":230,"line_end":230,"column_start":5,"column_end":99}},{"value":"/ recognized file representation, for example in case it is used as a purely transient memory","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1033904,"byte_end":1033999,"line_start":231,"line_end":231,"column_start":5,"column_end":100}},{"value":"/ format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1034004,"byte_end":1034015,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1034020,"byte_end":1034023,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The method name `extensions` remains reserved for introducing another method in the future","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1034028,"byte_end":1034122,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ that yields a slice of `OsStr` which is blocked by several features of const evaluation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1034127,"byte_end":1034219,"line_start":235,"line_end":235,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8446},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035257,"byte_end":1035260,"line_start":263,"line_end":263,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageOutputFormat::Png","value":"ImageOutputFormat::Png","parent":{"krate":0,"index":8445},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035198,"byte_end":1035221,"line_start":261,"line_end":261,"column_start":5,"column_end":28}},{"value":"/ An Image in PNG Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035226,"byte_end":1035252,"line_start":262,"line_end":262,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8448},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035351,"byte_end":1035355,"line_start":267,"line_end":267,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageOutputFormat::Jpeg","value":"ImageOutputFormat::Jpeg(u8)","parent":{"krate":0,"index":8445},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035267,"byte_end":1035291,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/ An Image in JPEG Format with specified quality","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035296,"byte_end":1035346,"line_start":266,"line_end":266,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":8450},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035356,"byte_end":1035358,"line_start":267,"line_end":267,"column_start":10,"column_end":12},"name":"0","qualname":"::image::ImageOutputFormat::Jpeg::0","value":"u8","parent":{"krate":0,"index":8448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8451},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035437,"byte_end":1035440,"line_start":271,"line_end":271,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageOutputFormat::Pnm","value":"ImageOutputFormat::Pnm(PnmSubtype)","parent":{"krate":0,"index":8445},"children":[],"decl_id":null,"docs":" An Image in one of the PNM Formats\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035366,"byte_end":1035389,"line_start":269,"line_end":269,"column_start":5,"column_end":28}},{"value":"/ An Image in one of the PNM Formats","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035394,"byte_end":1035432,"line_start":270,"line_end":270,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":8453},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035441,"byte_end":1035451,"line_start":271,"line_end":271,"column_start":9,"column_end":19},"name":"0","qualname":"::image::ImageOutputFormat::Pnm::0","value":"codecs::pnm::header::PnmSubtype","parent":{"krate":0,"index":8451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8454},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035518,"byte_end":1035521,"line_start":275,"line_end":275,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageOutputFormat::Gif","value":"ImageOutputFormat::Gif","parent":{"krate":0,"index":8445},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035459,"byte_end":1035482,"line_start":273,"line_end":273,"column_start":5,"column_end":28}},{"value":"/ An Image in GIF Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035487,"byte_end":1035513,"line_start":274,"line_end":274,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8456},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035587,"byte_end":1035590,"line_start":279,"line_end":279,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageOutputFormat::Ico","value":"ImageOutputFormat::Ico","parent":{"krate":0,"index":8445},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035528,"byte_end":1035551,"line_start":277,"line_end":277,"column_start":5,"column_end":28}},{"value":"/ An Image in ICO Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035556,"byte_end":1035582,"line_start":278,"line_end":278,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8458},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035656,"byte_end":1035659,"line_start":283,"line_end":283,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageOutputFormat::Bmp","value":"ImageOutputFormat::Bmp","parent":{"krate":0,"index":8445},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035597,"byte_end":1035620,"line_start":281,"line_end":281,"column_start":5,"column_end":28}},{"value":"/ An Image in BMP Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035625,"byte_end":1035651,"line_start":282,"line_end":282,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8460},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035735,"byte_end":1035743,"line_start":287,"line_end":287,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageOutputFormat::Farbfeld","value":"ImageOutputFormat::Farbfeld","parent":{"krate":0,"index":8445},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035666,"byte_end":1035694,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/ An Image in farbfeld Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035699,"byte_end":1035730,"line_start":286,"line_end":286,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8462},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035809,"byte_end":1035812,"line_start":291,"line_end":291,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageOutputFormat::Tga","value":"ImageOutputFormat::Tga","parent":{"krate":0,"index":8445},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035750,"byte_end":1035773,"line_start":289,"line_end":289,"column_start":5,"column_end":28}},{"value":"/ An Image in TGA Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035778,"byte_end":1035804,"line_start":290,"line_end":290,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8464},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035882,"byte_end":1035889,"line_start":295,"line_end":295,"column_start":5,"column_end":12},"name":"OpenExr","qualname":"::image::ImageOutputFormat::OpenExr","value":"ImageOutputFormat::OpenExr","parent":{"krate":0,"index":8445},"children":[],"decl_id":null,"docs":" An Image in OpenEXR Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"exr\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035819,"byte_end":1035842,"line_start":293,"line_end":293,"column_start":5,"column_end":28}},{"value":"/ An Image in OpenEXR Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035847,"byte_end":1035877,"line_start":294,"line_end":294,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8466},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035957,"byte_end":1035961,"line_start":299,"line_end":299,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageOutputFormat::Tiff","value":"ImageOutputFormat::Tiff","parent":{"krate":0,"index":8445},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035896,"byte_end":1035920,"line_start":297,"line_end":297,"column_start":5,"column_end":29}},{"value":"/ An Image in TIFF Format","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035925,"byte_end":1035952,"line_start":298,"line_end":298,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8468},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1036374,"byte_end":1036385,"line_start":312,"line_end":312,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":8445},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[{"value":"/ A value for signalling an error: An unsupported format was requested","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1036129,"byte_end":1036201,"line_start":309,"line_end":309,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":8470},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1036386,"byte_end":1036392,"line_start":312,"line_end":312,"column_start":17,"column_end":23},"name":"0","qualname":"::image::ImageOutputFormat::Unsupported::0","value":"std::string::String","parent":{"krate":0,"index":8468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8445},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035174,"byte_end":1035191,"line_start":260,"line_end":260,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"enum ImageOutputFormat {\n    Png,\n    Jpeg(u8),\n    Pnm(PnmSubtype),\n    Gif,\n    Ico,\n    Bmp,\n    Farbfeld,\n    Tga,\n    OpenExr,\n    Tiff,\n    Unsupported(String),\n}","parent":null,"children":[{"krate":0,"index":8446},{"krate":0,"index":8448},{"krate":0,"index":8451},{"krate":0,"index":8454},{"krate":0,"index":8456},{"krate":0,"index":8458},{"krate":0,"index":8460},{"krate":0,"index":8462},{"krate":0,"index":8464},{"krate":0,"index":8466},{"krate":0,"index":8468}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats for encoding.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035048,"byte_end":1035107,"line_start":257,"line_end":257,"column_start":1,"column_end":60}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1035147,"byte_end":1035164,"line_start":259,"line_end":259,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5913},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1036452,"byte_end":1036456,"line_start":316,"line_end":316,"column_start":8,"column_end":12},"name":"from","qualname":"<ImageOutputFormat as std::convert::From>::from","value":"fn from(ImageFormat) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8482},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047340,"byte_end":1047348,"line_start":601,"line_end":601,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":8483},{"krate":0,"index":8484}],"decl_id":null,"docs":" Represents the progress of an image operation.","sig":null,"attributes":[{"value":"/ Represents the progress of an image operation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1046936,"byte_end":1046986,"line_start":595,"line_end":595,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1046987,"byte_end":1046990,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ Note that this is not necessarily accurate and no change to the values passed to the progress","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1046991,"byte_end":1047088,"line_start":597,"line_end":597,"column_start":1,"column_end":98}},{"value":"/ function during decoding will be considered breaking. A decoder could in theory report the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047089,"byte_end":1047183,"line_start":598,"line_end":598,"column_start":1,"column_end":95}},{"value":"/ progress `(0, 0)` if progress is unknown, without violating the interface contract of the type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047184,"byte_end":1047283,"line_start":599,"line_end":599,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":5938},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047654,"byte_end":1047661,"line_start":613,"line_end":613,"column_start":12,"column_end":19},"name":"current","qualname":"<Progress>::current","value":"fn current(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of completed decoding.\n","sig":null,"attributes":[{"value":"/ A measure of completed decoding.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047606,"byte_end":1047642,"line_start":612,"line_end":612,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5939},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047834,"byte_end":1047839,"line_start":620,"line_end":620,"column_start":12,"column_end":17},"name":"total","qualname":"<Progress>::total","value":"fn total(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of all necessary decoding work.","sig":null,"attributes":[{"value":"/ A measure of all necessary decoding work.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047709,"byte_end":1047754,"line_start":617,"line_end":617,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047759,"byte_end":1047762,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ This is in general greater or equal than `current`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047767,"byte_end":1047822,"line_start":619,"line_end":619,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5940},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047949,"byte_end":1047958,"line_start":625,"line_end":625,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Progress>::remaining","value":"fn remaining(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a measure for remaining decoding work.\n","sig":null,"attributes":[{"value":"/ Calculate a measure for remaining decoding work.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047885,"byte_end":1047937,"line_start":624,"line_end":624,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":5941},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048087,"byte_end":1048099,"line_start":631,"line_end":631,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5946},{"krate":0,"index":5947},{"krate":0,"index":5948},{"krate":0,"index":5949},{"krate":0,"index":5950},{"krate":0,"index":5952},{"krate":0,"index":5954}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048035,"byte_end":1048076,"line_start":630,"line_end":630,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":5943},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048176,"byte_end":1048182,"line_start":633,"line_end":633,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read + 'a;","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[{"value":"/ The type of reader produced by `into_reader`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048117,"byte_end":1048166,"line_start":632,"line_end":632,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5944},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048272,"byte_end":1048282,"line_start":636,"line_end":636,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048200,"byte_end":1048264,"line_start":635,"line_end":635,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5945},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048387,"byte_end":1048397,"line_start":639,"line_end":639,"column_start":8,"column_end":18},"name":"color_type","qualname":"::image::ImageDecoder::color_type","value":"fn color_type<'_>(&'_ Self) -> ColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" Returns the color type of the image data produced by this decoder\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image data produced by this decoder","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048310,"byte_end":1048379,"line_start":638,"line_end":638,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5946},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048492,"byte_end":1048511,"line_start":642,"line_end":642,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"::image::ImageDecoder::original_color_type","value":"fn original_color_type<'_>(&'_ Self) -> ExtendedColorType","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" Returns the color type of the image file before decoding\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image file before decoding","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048424,"byte_end":1048484,"line_start":641,"line_end":641,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5947},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048852,"byte_end":1048863,"line_start":649,"line_end":649,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[{"value":"/ Returns a reader that can be used to obtain the bytes of the image. For the best","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048586,"byte_end":1048670,"line_start":646,"line_end":646,"column_start":5,"column_end":89}},{"value":"/ performance, always try to read at least `scanline_bytes` from the reader at a time. Reading","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048675,"byte_end":1048771,"line_start":647,"line_end":647,"column_start":5,"column_end":101}},{"value":"/ fewer bytes will cause the reader to perform internal buffering.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048776,"byte_end":1048844,"line_start":648,"line_end":648,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5948},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1049321,"byte_end":1049332,"line_start":657,"line_end":657,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"fn total_bytes<'_>(&'_ Self) -> u64","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the decoded image.","sig":null,"attributes":[{"value":"/ Returns the total number of bytes in the decoded image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048905,"byte_end":1048964,"line_start":651,"line_end":651,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048969,"byte_end":1048972,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ This is the size of the buffer that must be passed to `read_image` or","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048977,"byte_end":1049050,"line_start":653,"line_end":653,"column_start":5,"column_end":78}},{"value":"/ `read_image_with_progress`. The returned value may exceed usize::MAX, in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1049055,"byte_end":1049131,"line_start":654,"line_end":654,"column_start":5,"column_end":81}},{"value":"/ which case it isn't actually possible to construct a buffer to decode all the image data","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1049136,"byte_end":1049228,"line_start":655,"line_end":655,"column_start":5,"column_end":97}},{"value":"/ into. If, however, the size does not fit in a u64 then u64::MAX is returned.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1049233,"byte_end":1049313,"line_start":656,"line_end":656,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5949},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1049771,"byte_end":1049785,"line_start":666,"line_end":666,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"fn scanline_bytes<'_>(&'_ Self) -> u64","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[{"value":"/ Returns the minimum number of bytes that can be efficiently read from this decoder. This may","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1049613,"byte_end":1049709,"line_start":664,"line_end":664,"column_start":5,"column_end":101}},{"value":"/ be as few as 1 or as many as `total_bytes()`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1049714,"byte_end":1049763,"line_start":665,"line_end":665,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5950},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050686,"byte_end":1050696,"line_start":691,"line_end":691,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"fn read_image<'_>(Self, &'_ mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.","sig":null,"attributes":[{"value":"/ Returns all the bytes in the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1049840,"byte_end":1049879,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1049884,"byte_end":1049887,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes and writes the pixel data of the image into it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1049892,"byte_end":1049980,"line_start":672,"line_end":672,"column_start":5,"column_end":93}},{"value":"/ Although not required, for certain color types callers may want to pass buffers which are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1049985,"byte_end":1050078,"line_start":673,"line_end":673,"column_start":5,"column_end":98}},{"value":"/ aligned to 2 or 4 byte boundaries to the slice can be cast to a [u16] or [u32]. To accommodate","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050083,"byte_end":1050181,"line_start":674,"line_end":674,"column_start":5,"column_end":103}},{"value":"/ such casts, the returned contents will always be in native endian.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050186,"byte_end":1050256,"line_start":675,"line_end":675,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050261,"byte_end":1050264,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050269,"byte_end":1050281,"line_start":677,"line_end":677,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050286,"byte_end":1050289,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ This function panics if buf.len() != self.total_bytes().","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050294,"byte_end":1050354,"line_start":679,"line_end":679,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050359,"byte_end":1050362,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050367,"byte_end":1050381,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050386,"byte_end":1050389,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```no_build","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050394,"byte_end":1050409,"line_start":683,"line_end":683,"column_start":5,"column_end":20}},{"value":"/ use zerocopy::{AsBytes, FromBytes};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050414,"byte_end":1050453,"line_start":684,"line_end":684,"column_start":5,"column_end":44}},{"value":"/ fn read_16bit_image(decoder: impl ImageDecoder) -> Vec<16> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050458,"byte_end":1050522,"line_start":685,"line_end":685,"column_start":5,"column_end":69}},{"value":"/     let mut buf: Vec<u16> = vec![0; decoder.total_bytes()/2];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050527,"byte_end":1050592,"line_start":686,"line_end":686,"column_start":5,"column_end":70}},{"value":"/     decoder.read_image(buf.as_bytes());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050597,"byte_end":1050640,"line_start":687,"line_end":687,"column_start":5,"column_end":48}},{"value":"/     buf","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050645,"byte_end":1050656,"line_start":688,"line_end":688,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050661,"byte_end":1050666,"line_start":689,"line_end":689,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050671,"byte_end":1050678,"line_start":690,"line_end":690,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5952},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050924,"byte_end":1050948,"line_start":697,"line_end":697,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"fn read_image_with_progress<F, '_>(Self, &'_ mut [u8], F) -> ImageResult<()>\nwhere F: Fn(Progress) -> ()","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[{"value":"/ Same as `read_image` but periodically calls the provided callback to give updates on loading","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050802,"byte_end":1050898,"line_start":695,"line_end":695,"column_start":5,"column_end":101}},{"value":"/ progress.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1050903,"byte_end":1050916,"line_start":696,"line_end":696,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5954},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052536,"byte_end":1052546,"line_start":740,"line_end":740,"column_start":8,"column_end":18},"name":"set_limits","qualname":"::image::ImageDecoder::set_limits","value":"fn set_limits<'_>(&'_ mut Self, crate::io::Limits) -> ImageResult<()>","parent":{"krate":0,"index":5941},"children":[],"decl_id":null,"docs":" Set decoding limits for this decoder. See [`Limits`] for the different kinds of\n limits that is possible to set.","sig":null,"attributes":[{"value":"/ Set decoding limits for this decoder. See [`Limits`] for the different kinds of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1051900,"byte_end":1051983,"line_start":729,"line_end":729,"column_start":5,"column_end":88}},{"value":"/ limits that is possible to set.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1051988,"byte_end":1052023,"line_start":730,"line_end":730,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052028,"byte_end":1052031,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ Note to implementors: make sure you call [`Limits::check_support`] so that","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052036,"byte_end":1052114,"line_start":732,"line_end":732,"column_start":5,"column_end":83}},{"value":"/ decoding fails if any unsupported strict limits are set. Also make sure","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052119,"byte_end":1052194,"line_start":733,"line_end":733,"column_start":5,"column_end":80}},{"value":"/ you call [`Limits::check_dimensions`] to check the `max_image_width` and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052199,"byte_end":1052275,"line_start":734,"line_end":734,"column_start":5,"column_end":81}},{"value":"/ `max_image_height` limits.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052280,"byte_end":1052310,"line_start":735,"line_end":735,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052315,"byte_end":1052318,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ [`Limits`]: ./io/struct.Limits.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052323,"byte_end":1052362,"line_start":737,"line_end":737,"column_start":5,"column_end":44}},{"value":"/ [`Limits::check_support`]: ./io/struct.Limits.html#method.check_support","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052367,"byte_end":1052442,"line_start":738,"line_end":738,"column_start":5,"column_end":80}},{"value":"/ [`Limits::check_dimensions`]: ./io/struct.Limits.html#method.check_dimensions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052447,"byte_end":1052528,"line_start":739,"line_end":739,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":5955},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052871,"byte_end":1052887,"line_start":751,"line_end":751,"column_start":11,"column_end":27},"name":"ImageDecoderRect","qualname":"::image::ImageDecoderRect","value":"ImageDecoderRect<'a>: ImageDecoder + Sized","parent":null,"children":[{"krate":0,"index":5957},{"krate":0,"index":5959}],"decl_id":null,"docs":" Specialized image decoding not be supported by all formats\n","sig":null,"attributes":[{"value":"/ Specialized image decoding not be supported by all formats","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052798,"byte_end":1052860,"line_start":750,"line_end":750,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5957},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053042,"byte_end":1053051,"line_start":753,"line_end":753,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderRect::read_rect","value":"fn read_rect<'_, '_>(&'_ mut Self, u32, u32, u32, u32, &'_ mut [u8])\n-> ImageResult<()>","parent":{"krate":0,"index":5955},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).\n","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052924,"byte_end":1053034,"line_start":752,"line_end":752,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":5959},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053994,"byte_end":1054017,"line_start":776,"line_end":776,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderRect::read_rect_with_progress","value":"fn read_rect_with_progress<F, '_,\n'_>(&'_ mut Self, u32, u32, u32, u32, &'_ mut [u8], F) -> ImageResult<()>\nwhere F: Fn(Progress) -> ()","parent":{"krate":0,"index":5955},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image, periodically reporting progress.","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image, periodically reporting progress.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053278,"byte_end":1053357,"line_start":764,"line_end":764,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053362,"byte_end":1053365,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ The output buffer will be filled with fields specified by","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053370,"byte_end":1053431,"line_start":766,"line_end":766,"column_start":5,"column_end":66}},{"value":"/ [`ImageDecoder::color_type()`](trait.ImageDecoder.html#fn.color_type),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053436,"byte_end":1053510,"line_start":767,"line_end":767,"column_start":5,"column_end":79}},{"value":"/ in that order, each field represented in native-endian.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053515,"byte_end":1053574,"line_start":768,"line_end":768,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053579,"byte_end":1053582,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ The progress callback will be called at least once at the start and the end of decoding,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053587,"byte_end":1053679,"line_start":770,"line_end":770,"column_start":5,"column_end":97}},{"value":"/ implementations are encouraged to call this more often,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053684,"byte_end":1053743,"line_start":771,"line_end":771,"column_start":5,"column_end":64}},{"value":"/ with a frequency meaningful for display to the end-user.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053748,"byte_end":1053808,"line_start":772,"line_end":772,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053813,"byte_end":1053816,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the output buffer isn't at least","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053821,"byte_end":1053885,"line_start":774,"line_end":774,"column_start":5,"column_end":69}},{"value":"/ `color_type().bytes_per_pixel() * color_type().channel_count() * width * height` bytes long.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1053890,"byte_end":1053986,"line_start":775,"line_end":775,"column_start":5,"column_end":101}}]},{"kind":"Trait","id":{"krate":0,"index":5961},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054248,"byte_end":1054264,"line_start":788,"line_end":788,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":5963}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[{"value":"/ AnimationDecoder trait","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054211,"byte_end":1054237,"line_start":787,"line_end":787,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5963},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054336,"byte_end":1054347,"line_start":790,"line_end":790,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"fn into_frames(Self) -> Frames","parent":{"krate":0,"index":5961},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[{"value":"/ Consume the decoder producing a series of frames.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054275,"byte_end":1054328,"line_start":789,"line_end":789,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":5964},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054419,"byte_end":1054431,"line_start":794,"line_end":794,"column_start":11,"column_end":23},"name":"ImageEncoder","qualname":"::image::ImageEncoder","value":"ImageEncoder","parent":null,"children":[{"krate":0,"index":5965}],"decl_id":null,"docs":" The trait all encoders implement\n","sig":null,"attributes":[{"value":"/ The trait all encoders implement","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054372,"byte_end":1054408,"line_start":793,"line_end":793,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5965},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054981,"byte_end":1054992,"line_start":805,"line_end":805,"column_start":8,"column_end":19},"name":"write_image","qualname":"::image::ImageEncoder::write_image","value":"fn write_image<'_>(Self, &'_ [u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":5964},"children":[],"decl_id":null,"docs":" Writes all the bytes in an image to the encoder.","sig":null,"attributes":[{"value":"/ Writes all the bytes in an image to the encoder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054438,"byte_end":1054490,"line_start":795,"line_end":795,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054495,"byte_end":1054498,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes of the pixel data of the image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054503,"byte_end":1054574,"line_start":797,"line_end":797,"column_start":5,"column_end":76}},{"value":"/ and encodes them. Unlike particular format encoders inherent impl encode","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054579,"byte_end":1054655,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ methods where endianness is not specified, here image data bytes should","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054660,"byte_end":1054735,"line_start":799,"line_end":799,"column_start":5,"column_end":80}},{"value":"/ always be in native endian. The implementor will reorder the endianness","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054740,"byte_end":1054815,"line_start":800,"line_end":800,"column_start":5,"column_end":80}},{"value":"/ as necessary for the target encoding format.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054820,"byte_end":1054868,"line_start":801,"line_end":801,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054873,"byte_end":1054876,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ See also `ImageDecoder::read_image` which reads byte buffers into","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054881,"byte_end":1054950,"line_start":803,"line_end":803,"column_start":5,"column_end":74}},{"value":"/ native endian.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1054955,"byte_end":1054973,"line_start":804,"line_end":804,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8497},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055186,"byte_end":1055192,"line_start":816,"line_end":816,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":8500},{"krate":0,"index":8501},{"krate":0,"index":8502},{"krate":0,"index":8503},{"krate":0,"index":8504}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055129,"byte_end":1055157,"line_start":814,"line_end":814,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5970},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055398,"byte_end":1055402,"line_start":827,"line_end":827,"column_start":8,"column_end":12},"name":"next","qualname":"<Pixels as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<(u32, u32, I::Pixel)>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5973},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055833,"byte_end":1055838,"line_start":847,"line_end":847,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pixels as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2887},"children":[],"decl_id":{"krate":2,"index":2888},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5974},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056110,"byte_end":1056126,"line_start":860,"line_end":860,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":5975},{"krate":0,"index":5976},{"krate":0,"index":5977},{"krate":0,"index":5978},{"krate":0,"index":5979},{"krate":0,"index":5980},{"krate":0,"index":5981},{"krate":0,"index":5982},{"krate":0,"index":5983},{"krate":0,"index":5984}],"decl_id":null,"docs":" Trait to inspect an image.","sig":null,"attributes":[{"value":"/ Trait to inspect an image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055892,"byte_end":1055922,"line_start":852,"line_end":852,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055923,"byte_end":1055926,"line_start":853,"line_end":853,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055927,"byte_end":1055934,"line_start":854,"line_end":854,"column_start":1,"column_end":8}},{"value":"/ use image::{GenericImageView, Rgb, RgbImage};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055935,"byte_end":1055984,"line_start":855,"line_end":855,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055985,"byte_end":1055988,"line_start":856,"line_end":856,"column_start":1,"column_end":4}},{"value":"/ let buffer = RgbImage::new(10, 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055989,"byte_end":1056028,"line_start":857,"line_end":857,"column_start":1,"column_end":40}},{"value":"/ let image: &dyn GenericImageView<Pixel=Rgb<u8>> = &buffer;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056029,"byte_end":1056091,"line_start":858,"line_end":858,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056092,"byte_end":1056099,"line_start":859,"line_end":859,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5975},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056165,"byte_end":1056170,"line_start":862,"line_end":862,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056133,"byte_end":1056155,"line_start":861,"line_end":861,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5976},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056231,"byte_end":1056241,"line_start":865,"line_end":865,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056184,"byte_end":1056223,"line_start":864,"line_end":864,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5977},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056305,"byte_end":1056310,"line_start":868,"line_end":868,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"fn width<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056269,"byte_end":1056297,"line_start":867,"line_end":867,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5978},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056425,"byte_end":1056431,"line_start":874,"line_end":874,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"fn height<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056388,"byte_end":1056417,"line_start":873,"line_end":873,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5979},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056558,"byte_end":1056564,"line_start":880,"line_end":880,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"fn bounds<'_>(&'_ Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056509,"byte_end":1056550,"line_start":879,"line_end":879,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":5980},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056681,"byte_end":1056690,"line_start":883,"line_end":883,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"fn in_bounds<'_>(&'_ Self, u32, u32) -> bool","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056602,"byte_end":1056673,"line_start":882,"line_end":882,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5981},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056987,"byte_end":1056996,"line_start":893,"line_end":893,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"fn get_pixel<'_>(&'_ Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y). Indexed from top left.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056838,"byte_end":1056901,"line_start":888,"line_end":888,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056906,"byte_end":1056909,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056914,"byte_end":1056926,"line_start":890,"line_end":890,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056931,"byte_end":1056934,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1056939,"byte_end":1056979,"line_start":892,"line_end":892,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5982},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057341,"byte_end":1057357,"line_start":903,"line_end":903,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"unsafe fn unsafe_get_pixel<'_>(&'_ Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y). Indexed from top left.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057041,"byte_end":1057104,"line_start":895,"line_end":895,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057109,"byte_end":1057112,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057117,"byte_end":1057192,"line_start":897,"line_end":897,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057197,"byte_end":1057209,"line_start":898,"line_end":898,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057214,"byte_end":1057217,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057222,"byte_end":1057277,"line_start":900,"line_end":900,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057282,"byte_end":1057285,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: #method.in_bounds","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057290,"byte_end":1057326,"line_start":902,"line_end":902,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5983},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057589,"byte_end":1057595,"line_start":910,"line_end":910,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"fn pixels<'_>(&'_ Self) -> Pixels where Self: Sized","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057438,"byte_end":1057492,"line_start":907,"line_end":907,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057497,"byte_end":1057550,"line_start":908,"line_end":908,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057555,"byte_end":1057581,"line_start":909,"line_end":909,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5984},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058078,"byte_end":1058082,"line_start":928,"line_end":928,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"fn view<'_>(&'_ Self, u32, u32, u32, u32) -> SubImage<&'_ Self> where\nSelf: Sized","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" Returns a subimage that is an immutable view into this image.\n You can use [`GenericImage::sub_image`] if you need a mutable view instead.\n The coordinates set the position of the top left corner of the view.\n","sig":null,"attributes":[{"value":"/ Returns a subimage that is an immutable view into this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057844,"byte_end":1057909,"line_start":925,"line_end":925,"column_start":5,"column_end":70}},{"value":"/ You can use [`GenericImage::sub_image`] if you need a mutable view instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057914,"byte_end":1057993,"line_start":926,"line_end":926,"column_start":5,"column_end":84}},{"value":"/ The coordinates set the position of the top left corner of the view.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1057998,"byte_end":1058070,"line_start":927,"line_end":927,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":5985},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058424,"byte_end":1058436,"line_start":939,"line_end":939,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":5986},{"krate":0,"index":5987},{"krate":0,"index":5988},{"krate":0,"index":5989},{"krate":0,"index":5990},{"krate":0,"index":5992},{"krate":0,"index":5994}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058377,"byte_end":1058413,"line_start":938,"line_end":938,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5986},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059310,"byte_end":1059323,"line_start":961,"line_end":961,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"fn get_pixel_mut<'_>(&'_ mut Self, u32, u32) -> &'_ mut Self::Pixel","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`. Indexed from top left.","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`. Indexed from top left.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058461,"byte_end":1058547,"line_start":940,"line_end":940,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058552,"byte_end":1058555,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058560,"byte_end":1058572,"line_start":942,"line_end":942,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058577,"byte_end":1058580,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058585,"byte_end":1058625,"line_start":944,"line_end":944,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058630,"byte_end":1058633,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ Panics for dynamic images (this method is deprecated and will be removed).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058638,"byte_end":1058716,"line_start":946,"line_end":946,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058721,"byte_end":1058724,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ ## Known issues","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058729,"byte_end":1058748,"line_start":948,"line_end":948,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058753,"byte_end":1058756,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ This requires the buffer to contain a unique set of continuous channels in the exact order","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058761,"byte_end":1058855,"line_start":950,"line_end":950,"column_start":5,"column_end":99}},{"value":"/ and byte representation that the pixel type requires. This is somewhat restrictive.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058860,"byte_end":1058947,"line_start":951,"line_end":951,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058952,"byte_end":1058955,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ TODO: Maybe use some kind of entry API? this would allow pixel type conversion on the fly","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058960,"byte_end":1059053,"line_start":953,"line_end":953,"column_start":5,"column_end":98}},{"value":"/ while still doing only one array lookup:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059058,"byte_end":1059102,"line_start":954,"line_end":954,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059107,"byte_end":1059110,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059115,"byte_end":1059128,"line_start":956,"line_end":956,"column_start":5,"column_end":18}},{"value":"/ let px = image.pixel_entry_at(x,y);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059133,"byte_end":1059172,"line_start":957,"line_end":957,"column_start":5,"column_end":44}},{"value":"/ px.set_from_rgba(rgba)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059177,"byte_end":1059203,"line_start":958,"line_end":958,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059208,"byte_end":1059215,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.24.0\", note =\n\"Use `get_pixel` and `put_pixel` instead.\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059220,"byte_end":1059302,"line_start":960,"line_end":960,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":5987},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059521,"byte_end":1059530,"line_start":968,"line_end":968,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"fn put_pixel<'_>(&'_ mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y). Indexed from top left.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059377,"byte_end":1059435,"line_start":963,"line_end":963,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059440,"byte_end":1059443,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059448,"byte_end":1059460,"line_start":965,"line_end":965,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059465,"byte_end":1059468,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059473,"byte_end":1059513,"line_start":967,"line_end":967,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5988},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059908,"byte_end":1059924,"line_start":978,"line_end":978,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"unsafe fn unsafe_put_pixel<'_>(&'_ mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y). Indexed from top left.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059584,"byte_end":1059643,"line_start":970,"line_end":970,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059648,"byte_end":1059651,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059656,"byte_end":1059731,"line_start":972,"line_end":972,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059736,"byte_end":1059748,"line_start":973,"line_end":973,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059753,"byte_end":1059756,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059761,"byte_end":1059816,"line_start":975,"line_end":975,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059821,"byte_end":1059824,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: traits.GenericImageView.html#method.in_bounds","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1059829,"byte_end":1059893,"line_start":977,"line_end":977,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5989},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060223,"byte_end":1060234,"line_start":987,"line_end":987,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"fn blend_pixel<'_>(&'_ mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060022,"byte_end":1060092,"line_start":982,"line_end":982,"column_start":5,"column_end":75}},{"value":"deprecated(since = \"0.24.0\", note =\n\"Use iterator `pixels_mut` to blend the pixels directly\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060097,"byte_end":1060215,"line_start":983,"line_end":986,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":5990},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060996,"byte_end":1061005,"line_start":1004,"line_end":1004,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"fn copy_from<O, '_, '_>(&'_ mut Self, &'_ O, u32, u32) -> ImageResult<()>\nwhere O: GenericImageView<Pixel = Self::Pixel>","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060288,"byte_end":1060352,"line_start":989,"line_end":989,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060357,"byte_end":1060360,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060365,"byte_end":1060426,"line_start":991,"line_end":991,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060431,"byte_end":1060464,"line_start":992,"line_end":992,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060469,"byte_end":1060472,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a piece of the other image, use [`GenericImageView::view`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060477,"byte_end":1060562,"line_start":994,"line_end":994,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060567,"byte_end":1060570,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ You can use [`FlatSamples`] to source pixels from an arbitrary regular raster of channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060575,"byte_end":1060667,"line_start":996,"line_end":996,"column_start":5,"column_end":97}},{"value":"/ values, for example from a foreign interface or a fixed image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060672,"byte_end":1060738,"line_start":997,"line_end":997,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060743,"byte_end":1060746,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060751,"byte_end":1060764,"line_start":999,"line_end":999,"column_start":5,"column_end":18}},{"value":"/ Returns an error if the image is too large to be copied at the given position","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060769,"byte_end":1060850,"line_start":1000,"line_end":1000,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060855,"byte_end":1060858,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ [`GenericImageView::view`]: trait.GenericImageView.html#method.view","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060863,"byte_end":1060934,"line_start":1002,"line_end":1002,"column_start":5,"column_end":76}},{"value":"/ [`FlatSamples`]: flat/struct.FlatSamples.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1060939,"byte_end":1060988,"line_start":1003,"line_end":1003,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5992},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1062052,"byte_end":1062063,"line_start":1032,"line_end":1032,"column_start":8,"column_end":19},"name":"copy_within","qualname":"::image::GenericImage::copy_within","value":"fn copy_within<'_>(&'_ mut Self, Rect, u32, u32) -> bool","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" Copies all of the pixels from one part of this image to another part of this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from one part of this image to another part of this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1061704,"byte_end":1061791,"line_start":1025,"line_end":1025,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1061796,"byte_end":1061799,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ The destination rectangle of the copy is specified with the top-left corner placed at (x, y).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1061804,"byte_end":1061901,"line_start":1027,"line_end":1027,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1061906,"byte_end":1061909,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1061914,"byte_end":1061927,"line_start":1029,"line_end":1029,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1061932,"byte_end":1062001,"line_start":1030,"line_end":1030,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1062006,"byte_end":1062044,"line_start":1031,"line_end":1031,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5994},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1063947,"byte_end":1063956,"line_start":1075,"line_end":1075,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"fn sub_image<'_>(&'_ mut Self, u32, u32, u32, u32) -> SubImage<&'_ mut Self>\nwhere Self: Sized","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":" Returns a mutable subimage that is a view into this image.\n If you want an immutable subimage instead, use [`GenericImageView::view`]\n The coordinates set the position of the top left corner of the SubImage.\n","sig":null,"attributes":[{"value":"/ Returns a mutable subimage that is a view into this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1063714,"byte_end":1063776,"line_start":1072,"line_end":1072,"column_start":5,"column_end":67}},{"value":"/ If you want an immutable subimage instead, use [`GenericImageView::view`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1063781,"byte_end":1063858,"line_start":1073,"line_end":1073,"column_start":5,"column_end":82}},{"value":"/ The coordinates set the position of the top left corner of the SubImage.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1063863,"byte_end":1063939,"line_start":1074,"line_end":1074,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":8509},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1065457,"byte_end":1065465,"line_start":1107,"line_end":1107,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":8511}],"decl_id":null,"docs":" A View into another image","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064259,"byte_end":1064288,"line_start":1085,"line_end":1085,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064289,"byte_end":1064292,"line_start":1086,"line_end":1086,"column_start":1,"column_end":4}},{"value":"/ Instances of this struct can be created using:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064293,"byte_end":1064343,"line_start":1087,"line_end":1087,"column_start":1,"column_end":51}},{"value":"/   - [`GenericImage::sub_image`] to create a mutable view,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064344,"byte_end":1064405,"line_start":1088,"line_end":1088,"column_start":1,"column_end":62}},{"value":"/   - [`GenericImageView::view`] to create an immutable view,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064406,"byte_end":1064469,"line_start":1089,"line_end":1089,"column_start":1,"column_end":64}},{"value":"/   - [`SubImage::new`] to instantiate the struct directly.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064470,"byte_end":1064531,"line_start":1090,"line_end":1090,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064532,"byte_end":1064535,"line_start":1091,"line_end":1091,"column_start":1,"column_end":4}},{"value":"/ Note that this does _not_ implement `GenericImage`, but it dereferences to one which allows you","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064536,"byte_end":1064635,"line_start":1092,"line_end":1092,"column_start":1,"column_end":100}},{"value":"/ to use it as if it did. See [Design Considerations](#Design-Considerations) below for details.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064636,"byte_end":1064734,"line_start":1093,"line_end":1093,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064735,"byte_end":1064738,"line_start":1094,"line_end":1094,"column_start":1,"column_end":4}},{"value":"/ # Design Considerations","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064739,"byte_end":1064766,"line_start":1095,"line_end":1095,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064767,"byte_end":1064770,"line_start":1096,"line_end":1096,"column_start":1,"column_end":4}},{"value":"/ For reasons relating to coherence, this is not itself a `GenericImage` or a `GenericImageView`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064771,"byte_end":1064870,"line_start":1097,"line_end":1097,"column_start":1,"column_end":100}},{"value":"/ In short, we want to reserve the ability of adding traits implemented for _all_ generic images","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064871,"byte_end":1064969,"line_start":1098,"line_end":1098,"column_start":1,"column_end":99}},{"value":"/ but in a different manner for `SubImage`. This may be required to ensure that stacking","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1064970,"byte_end":1065060,"line_start":1099,"line_end":1099,"column_start":1,"column_end":91}},{"value":"/ sub-images comes at no double indirect cost.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1065061,"byte_end":1065109,"line_start":1100,"line_end":1100,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1065110,"byte_end":1065113,"line_start":1101,"line_end":1101,"column_start":1,"column_end":4}},{"value":"/ If, ultimately, this is not needed then a directly implementation of `GenericImage` can and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1065114,"byte_end":1065209,"line_start":1102,"line_end":1102,"column_start":1,"column_end":96}},{"value":"/ will get added. This inconvenience may alternatively get resolved if Rust allows some forms of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1065210,"byte_end":1065308,"line_start":1103,"line_end":1103,"column_start":1,"column_end":99}},{"value":"/ specialization, which might make this trick unnecessary and thus also allows for a direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1065309,"byte_end":1065402,"line_start":1104,"line_end":1104,"column_start":1,"column_end":94}},{"value":"/ implementation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1065403,"byte_end":1065422,"line_start":1105,"line_end":1105,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8517},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1065749,"byte_end":1065762,"line_start":1116,"line_end":1116,"column_start":12,"column_end":25},"name":"SubImageInner","qualname":"::image::SubImageInner","value":"SubImageInner {  }","parent":null,"children":[{"krate":0,"index":8519},{"krate":0,"index":8520},{"krate":0,"index":8521},{"krate":0,"index":8522},{"krate":0,"index":8523}],"decl_id":null,"docs":" The inner type of `SubImage` that implements `GenericImage{,View}`.","sig":null,"attributes":[{"value":"/ The inner type of `SubImage` that implements `GenericImage{,View}`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1065503,"byte_end":1065574,"line_start":1111,"line_end":1111,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1065575,"byte_end":1065578,"line_start":1112,"line_end":1112,"column_start":1,"column_end":4}},{"value":"/ This type is _nominally_ `pub` but it is not exported from the crate. It should be regarded as","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1065579,"byte_end":1065677,"line_start":1113,"line_end":1113,"column_start":1,"column_end":99}},{"value":"/ an existential type in any case.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1065678,"byte_end":1065714,"line_start":1114,"line_end":1114,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":6001},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1066231,"byte_end":1066234,"line_start":1133,"line_end":1133,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"fn new(I, u32, u32, u32, u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n The coordinates set the position of the top left corner of the SubImage.\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1066110,"byte_end":1066138,"line_start":1131,"line_end":1131,"column_start":5,"column_end":33}},{"value":"/ The coordinates set the position of the top left corner of the SubImage.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1066143,"byte_end":1066219,"line_start":1132,"line_end":1132,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":6002},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1066593,"byte_end":1066606,"line_start":1146,"line_end":1146,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"fn change_bounds<'_>(&'_ mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1066537,"byte_end":1066581,"line_start":1145,"line_end":1145,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6003},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1066864,"byte_end":1066872,"line_start":1154,"line_end":1154,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"fn to_image<'_>(&'_ Self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>\nwhere I: Deref, I::Target: GenericImageView + 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1066809,"byte_end":1066852,"line_start":1153,"line_end":1153,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6006},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068317,"byte_end":1068321,"line_start":1197,"line_end":1197,"column_start":12,"column_end":16},"name":"view","qualname":"<SubImage<I>>::view","value":"fn view<'_>(&'_ Self, u32, u32, u32, u32) -> SubImage<&'_ I::Target>","parent":null,"children":[],"decl_id":null,"docs":" Create a sub-view of the image.","sig":null,"attributes":[{"value":"/ Create a sub-view of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067520,"byte_end":1067555,"line_start":1179,"line_end":1179,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067560,"byte_end":1067563,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ The coordinates given are relative to the current view on the underlying image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067568,"byte_end":1067651,"line_start":1181,"line_end":1181,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067656,"byte_end":1067659,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ Note that this method is preferred to the one from `GenericImageView`. This is accessible","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067664,"byte_end":1067757,"line_start":1183,"line_end":1183,"column_start":5,"column_end":98}},{"value":"/ with the explicit method call syntax but it should rarely be needed due to causing an","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067762,"byte_end":1067851,"line_start":1184,"line_end":1184,"column_start":5,"column_end":94}},{"value":"/ extra level of indirection.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067856,"byte_end":1067887,"line_start":1185,"line_end":1185,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067892,"byte_end":1067895,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067900,"byte_end":1067907,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}},{"value":"/ use image::{GenericImageView, RgbImage, SubImage};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067912,"byte_end":1067966,"line_start":1188,"line_end":1188,"column_start":5,"column_end":59}},{"value":"/ let buffer = RgbImage::new(10, 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067971,"byte_end":1068010,"line_start":1189,"line_end":1189,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068015,"byte_end":1068018,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ let subimage: SubImage<&RgbImage> = buffer.view(0, 0, 10, 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068023,"byte_end":1068089,"line_start":1191,"line_end":1191,"column_start":5,"column_end":71}},{"value":"/ let subview: SubImage<&RgbImage> = subimage.view(0, 0, 10, 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068094,"byte_end":1068161,"line_start":1192,"line_end":1192,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068166,"byte_end":1068169,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ // Less efficient and NOT &RgbImage","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068174,"byte_end":1068213,"line_start":1194,"line_end":1194,"column_start":5,"column_end":44}},{"value":"/ let _: SubImage<&_> = GenericImageView::view(&*subimage, 0, 0, 10, 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068218,"byte_end":1068293,"line_start":1195,"line_end":1195,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068298,"byte_end":1068305,"line_start":1196,"line_end":1196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6010},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068792,"byte_end":1068797,"line_start":1207,"line_end":1207,"column_start":12,"column_end":17},"name":"inner","qualname":"<SubImage<I>>::inner","value":"fn inner<'_>(&'_ Self) -> &'_ I::Target","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Get a reference to the underlying image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068736,"byte_end":1068780,"line_start":1206,"line_end":1206,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6013},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1069085,"byte_end":1069094,"line_start":1220,"line_end":1220,"column_start":12,"column_end":21},"name":"sub_image","qualname":"<SubImage<I>>::sub_image","value":"fn sub_image<'_>(&'_ mut Self, u32, u32, u32, u32)\n-> SubImage<&'_ mut I::Target>","parent":null,"children":[],"decl_id":null,"docs":" Create a mutable sub-view of the image.","sig":null,"attributes":[{"value":"/ Create a mutable sub-view of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068934,"byte_end":1068977,"line_start":1217,"line_end":1217,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068982,"byte_end":1068985,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ The coordinates given are relative to the current view on the underlying image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068990,"byte_end":1069073,"line_start":1219,"line_end":1219,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":6014},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1069590,"byte_end":1069599,"line_start":1235,"line_end":1235,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<SubImage<I>>::inner_mut","value":"fn inner_mut<'_>(&'_ mut Self) -> &'_ mut I::Target","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the underlying image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1069526,"byte_end":1069578,"line_start":1234,"line_end":1234,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6018},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1069765,"byte_end":1069770,"line_start":1245,"line_end":1245,"column_start":8,"column_end":13},"name":"deref","qualname":"<SubImage<I> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3491},"children":[],"decl_id":{"krate":2,"index":3493},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6021},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1069891,"byte_end":1069900,"line_start":1254,"line_end":1254,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<SubImage<I> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut Self::Target","parent":{"krate":2,"index":3504},"children":[],"decl_id":{"krate":2,"index":3505},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6025},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1070130,"byte_end":1070140,"line_start":1267,"line_end":1267,"column_start":8,"column_end":18},"name":"dimensions","qualname":"<SubImageInner<I> as image::GenericImageView>::dimensions","value":"fn dimensions<'_>(&'_ Self) -> (u32, u32)","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5976},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6026},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1070215,"byte_end":1070221,"line_start":1271,"line_end":1271,"column_start":8,"column_end":14},"name":"bounds","qualname":"<SubImageInner<I> as image::GenericImageView>::bounds","value":"fn bounds<'_>(&'_ Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5979},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6027},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1070334,"byte_end":1070343,"line_start":1275,"line_end":1275,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"<SubImageInner<I> as image::GenericImageView>::get_pixel","value":"fn get_pixel<'_>(&'_ Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":5974},"children":[],"decl_id":{"krate":0,"index":5981},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6030},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1070590,"byte_end":1070603,"line_start":1286,"line_end":1286,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"<SubImageInner<I> as image::GenericImage>::get_pixel_mut","value":"fn get_pixel_mut<'_>(&'_ mut Self, u32, u32) -> &'_ mut Self::Pixel","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5986},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6031},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1070736,"byte_end":1070745,"line_start":1290,"line_end":1290,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"<SubImageInner<I> as image::GenericImage>::put_pixel","value":"fn put_pixel<'_>(&'_ mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5987},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6032},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1070977,"byte_end":1070988,"line_start":1296,"line_end":1296,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"<SubImageInner<I> as image::GenericImage>::blend_pixel","value":"fn blend_pixel<'_>(&'_ mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":5985},"children":[],"decl_id":{"krate":0,"index":5989},"docs":" DEPRECATED: This method will be removed. Blend the pixel directly instead.\n","sig":null,"attributes":[{"value":"/ DEPRECATED: This method will be removed. Blend the pixel directly instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1070891,"byte_end":1070969,"line_start":1295,"line_end":1295,"column_start":5,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":6063},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1087950,"byte_end":1087965,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"EncodableLayout","qualname":"::traits::EncodableLayout","value":"EncodableLayout: seals::EncodableLayout","parent":null,"children":[{"krate":0,"index":6064}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice in a pixel layout\n for image encoding.\n","sig":null,"attributes":[{"value":"/ Types which are safe to treat as an immutable byte slice in a pixel layout","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1087837,"byte_end":1087915,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ for image encoding.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1087916,"byte_end":1087939,"line_start":11,"line_end":11,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":6064},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088036,"byte_end":1088044,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::traits::EncodableLayout::as_bytes","value":"fn as_bytes<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":0,"index":6063},"children":[],"decl_id":null,"docs":" Get the bytes of this value.\n","sig":null,"attributes":[{"value":"/ Get the bytes of this value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1087996,"byte_end":1088028,"line_start":13,"line_end":13,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":6066},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088104,"byte_end":1088112,"line_start":18,"line_end":18,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"<[u8] as traits::EncodableLayout>::as_bytes","value":"fn as_bytes<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":0,"index":6063},"children":[],"decl_id":{"krate":0,"index":6064},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6068},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088215,"byte_end":1088223,"line_start":24,"line_end":24,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"<[u16] as traits::EncodableLayout>::as_bytes","value":"fn as_bytes<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":0,"index":6063},"children":[],"decl_id":{"krate":0,"index":6064},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6070},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088326,"byte_end":1088334,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"<[f32] as traits::EncodableLayout>::as_bytes","value":"fn as_bytes<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":0,"index":6063},"children":[],"decl_id":{"krate":0,"index":6064},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6071},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088566,"byte_end":1088575,"line_start":37,"line_end":37,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[{"krate":0,"index":6072},{"krate":0,"index":6073}],"decl_id":null,"docs":" The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.\n","sig":null,"attributes":[{"value":"/ The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088397,"byte_end":1088482,"line_start":35,"line_end":35,"column_start":1,"column_end":86}}]},{"kind":"Const","id":{"krate":0,"index":6072},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088833,"byte_end":1088850,"line_start":40,"line_end":40,"column_start":11,"column_end":28},"name":"DEFAULT_MAX_VALUE","qualname":"::traits::Primitive::DEFAULT_MAX_VALUE","value":"Self","parent":{"krate":0,"index":6071},"children":[],"decl_id":null,"docs":" The maximum value for this type of primitive within the context of color.\n For floats, the maximum is `1.0`, whereas the integer types inherit their usual maximum values.\n","sig":null,"attributes":[{"value":"/ The maximum value for this type of primitive within the context of color.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088641,"byte_end":1088718,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/ For floats, the maximum is `1.0`, whereas the integer types inherit their usual maximum values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088723,"byte_end":1088822,"line_start":39,"line_end":39,"column_start":5,"column_end":104}}]},{"kind":"Const","id":{"krate":0,"index":6073},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1089055,"byte_end":1089072,"line_start":44,"line_end":44,"column_start":11,"column_end":28},"name":"DEFAULT_MIN_VALUE","qualname":"::traits::Primitive::DEFAULT_MIN_VALUE","value":"Self","parent":{"krate":0,"index":6071},"children":[],"decl_id":null,"docs":" The minimum value for this type of primitive within the context of color.\n For floats, the minimum is `0.0`, whereas the integer types inherit their usual minimum values.\n","sig":null,"attributes":[{"value":"/ The minimum value for this type of primitive within the context of color.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088863,"byte_end":1088940,"line_start":42,"line_end":42,"column_start":5,"column_end":82}},{"value":"/ For floats, the minimum is `0.0`, whereas the integer types inherit their usual minimum values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088945,"byte_end":1089044,"line_start":43,"line_end":43,"column_start":5,"column_end":104}}]},{"kind":"Trait","id":{"krate":0,"index":6075},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1089986,"byte_end":1089997,"line_start":72,"line_end":72,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":6076},{"krate":0,"index":6077},{"krate":0,"index":6078}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[{"value":"/ An Enlargable::Larger value should be enough to calculate","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1089843,"byte_end":1089904,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/ the sum (average) of a few hundred or thousand Enlargeable values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1089905,"byte_end":1089975,"line_start":71,"line_end":71,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":6076},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1090036,"byte_end":1090042,"line_start":73,"line_end":73,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Copy + NumCast + Num + PartialOrd<Self::Larger> + Clone + Bounded + AddAssign;","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6077},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1090131,"byte_end":1090141,"line_start":75,"line_end":75,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"fn clamp_from(Self::Larger) -> Self","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6078},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1090409,"byte_end":1090418,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"to_larger","qualname":"::traits::Enlargeable::to_larger","value":"fn to_larger(Self) -> Self::Larger","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6103},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1091321,"byte_end":1091325,"line_start":130,"line_end":130,"column_start":11,"column_end":15},"name":"Lerp","qualname":"::traits::Lerp","value":"Lerp: Bounded + NumCast","parent":null,"children":[{"krate":0,"index":6104},{"krate":0,"index":6105}],"decl_id":null,"docs":" Linear interpolation without involving floating numbers.\n","sig":null,"attributes":[{"value":"/ Linear interpolation without involving floating numbers.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1091250,"byte_end":1091310,"line_start":129,"line_end":129,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":6104},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1091356,"byte_end":1091361,"line_start":131,"line_end":131,"column_start":10,"column_end":15},"name":"Ratio","qualname":"::traits::Lerp::Ratio","value":"type Ratio: Primitive;","parent":{"krate":0,"index":6103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6105},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1091382,"byte_end":1091386,"line_start":133,"line_end":133,"column_start":8,"column_end":12},"name":"lerp","qualname":"::traits::Lerp::lerp","value":"fn lerp(Self, Self, Self::Ratio) -> Self","parent":{"krate":0,"index":6103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6114},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092037,"byte_end":1092041,"line_start":164,"line_end":164,"column_start":8,"column_end":12},"name":"lerp","qualname":"<f32 as traits::Lerp>::lerp","value":"fn lerp(Self, Self, Self::Ratio) -> Self","parent":{"krate":0,"index":6103},"children":[],"decl_id":{"krate":0,"index":6105},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6115},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092257,"byte_end":1092275,"line_start":171,"line_end":171,"column_start":11,"column_end":29},"name":"PixelWithColorType","qualname":"::traits::PixelWithColorType","value":"PixelWithColorType: Pixel + self::private::SealedPixelWithColorType","parent":null,"children":[{"krate":0,"index":6116}],"decl_id":null,"docs":" The pixel with an associated `ColorType`.\n Not all possible pixels represent one of the predefined `ColorType`s.\n","sig":null,"attributes":[{"value":"/ The pixel with an associated `ColorType`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092127,"byte_end":1092172,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/ Not all possible pixels represent one of the predefined `ColorType`s.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092173,"byte_end":1092246,"line_start":170,"line_end":170,"column_start":1,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":6116},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092561,"byte_end":1092571,"line_start":176,"line_end":176,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::traits::PixelWithColorType::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":6115},"children":[],"decl_id":null,"docs":" This pixel has the format of one of the predefined `ColorType`s,\n such as `Rgb8`, `La16` or `Rgba32F`.\n This is needed for automatically detecting\n a color format when saving an image as a file.\n","sig":null,"attributes":[{"value":"/ This pixel has the format of one of the predefined `ColorType`s,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092331,"byte_end":1092399,"line_start":172,"line_end":172,"column_start":5,"column_end":73}},{"value":"/ such as `Rgb8`, `La16` or `Rgba32F`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092404,"byte_end":1092444,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/ This is needed for automatically detecting","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092449,"byte_end":1092495,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/ a color format when saving an image as a file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092500,"byte_end":1092550,"line_start":175,"line_end":175,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":6118},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092635,"byte_end":1092645,"line_start":180,"line_end":180,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::<color::Rgb<u8> as traits::PixelWithColorType>::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6120},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092727,"byte_end":1092737,"line_start":183,"line_end":183,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::<color::Rgb<u16> as traits::PixelWithColorType>::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":6119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6122},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092820,"byte_end":1092830,"line_start":186,"line_end":186,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::<color::Rgb<f32> as traits::PixelWithColorType>::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":6121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6124},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092915,"byte_end":1092925,"line_start":190,"line_end":190,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::<color::Rgba<u8> as traits::PixelWithColorType>::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":6123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6126},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093009,"byte_end":1093019,"line_start":193,"line_end":193,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::<color::Rgba<u16> as traits::PixelWithColorType>::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":6125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6128},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093104,"byte_end":1093114,"line_start":196,"line_end":196,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::<color::Rgba<f32> as traits::PixelWithColorType>::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":6127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6130},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093200,"byte_end":1093210,"line_start":200,"line_end":200,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::<color::Luma<u8> as traits::PixelWithColorType>::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":6129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6132},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093291,"byte_end":1093301,"line_start":203,"line_end":203,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::<color::Luma<u16> as traits::PixelWithColorType>::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":6131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6134},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093383,"byte_end":1093393,"line_start":206,"line_end":206,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::<color::LumaA<u8> as traits::PixelWithColorType>::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":6133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6136},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093476,"byte_end":1093486,"line_start":209,"line_end":209,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::<color::LumaA<u16> as traits::PixelWithColorType>::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":6135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6139},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093645,"byte_end":1093669,"line_start":216,"line_end":216,"column_start":15,"column_end":39},"name":"SealedPixelWithColorType","qualname":"::traits::private::SealedPixelWithColorType","value":"SealedPixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6150},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094309,"byte_end":1094314,"line_start":235,"line_end":235,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::traits::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":6151},{"krate":0,"index":6152},{"krate":0,"index":6153},{"krate":0,"index":6154},{"krate":0,"index":6155},{"krate":0,"index":6156},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6159},{"krate":0,"index":6160},{"krate":0,"index":6161},{"krate":0,"index":6162},{"krate":0,"index":6163},{"krate":0,"index":6164},{"krate":0,"index":6166},{"krate":0,"index":6168},{"krate":0,"index":6171},{"krate":0,"index":6174},{"krate":0,"index":6177},{"krate":0,"index":6180},{"krate":0,"index":6182},{"krate":0,"index":6184},{"krate":0,"index":6185}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094184,"byte_end":1094208,"line_start":232,"line_end":232,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094209,"byte_end":1094212,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094213,"byte_end":1094298,"line_start":234,"line_end":234,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":6151},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094414,"byte_end":1094422,"line_start":237,"line_end":237,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::traits::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" The scalar type that is used to store each channel in this pixel.\n","sig":null,"attributes":[{"value":"/ The scalar type that is used to store each channel in this pixel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094335,"byte_end":1094404,"line_start":236,"line_end":236,"column_start":5,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":6152},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094497,"byte_end":1094510,"line_start":240,"line_end":240,"column_start":11,"column_end":24},"name":"CHANNEL_COUNT","qualname":"::traits::Pixel::CHANNEL_COUNT","value":"u8","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" The number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ The number of channels of this pixel type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094440,"byte_end":1094486,"line_start":239,"line_end":239,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6153},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094567,"byte_end":1094575,"line_start":243,"line_end":243,"column_start":8,"column_end":16},"name":"channels","qualname":"::traits::Pixel::channels","value":"fn channels<'_>(&'_ Self) -> &'_ [Self::Subpixel]","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094521,"byte_end":1094559,"line_start":242,"line_end":242,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6154},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094663,"byte_end":1094675,"line_start":246,"line_end":246,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::traits::Pixel::channels_mut","value":"fn channels_mut<'_>(&'_ mut Self) -> &'_ mut [Self::Subpixel]","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094610,"byte_end":1094655,"line_start":245,"line_end":245,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":6155},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094841,"byte_end":1094852,"line_start":250,"line_end":250,"column_start":11,"column_end":22},"name":"COLOR_MODEL","qualname":"::traits::Pixel::COLOR_MODEL","value":"&'static str","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" A string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ A string that can help to interpret the meaning each channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094718,"byte_end":1094782,"line_start":248,"line_end":248,"column_start":5,"column_end":69}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094787,"byte_end":1094830,"line_start":249,"line_end":249,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6156},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1095109,"byte_end":1095118,"line_start":255,"line_end":255,"column_start":8,"column_end":17},"name":"channels4","qualname":"::traits::Pixel::channels4","value":"fn channels4<'_>(&'_ Self)\n-> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value\n","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094873,"byte_end":1094938,"line_start":252,"line_end":252,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094943,"byte_end":1095018,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"deprecated(since = \"0.24.0\", note = \"Use `channels()` or `channels_mut()`\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1095023,"byte_end":1095101,"line_start":254,"line_end":254,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":6157},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1095545,"byte_end":1095558,"line_start":270,"line_end":270,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::traits::Pixel::from_channels","value":"fn from_channels(Self::Subpixel, Self::Subpixel, Self::Subpixel,\nSelf::Subpixel) -> Self","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.\n","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1095254,"byte_end":1095310,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1095315,"byte_end":1095382,"line_start":265,"line_end":265,"column_start":5,"column_end":72}},{"value":"deprecated(since = \"0.24.0\", note =\n\"Use the constructor of the pixel, for example `Rgba([r,g,b,a])` or `Pixel::from_slice`\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1095387,"byte_end":1095537,"line_start":266,"line_end":269,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":6158},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1095912,"byte_end":1095922,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::traits::Pixel::from_slice","value":"fn from_slice<'_>(&'_ [Self::Subpixel]) -> &'_ Self","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1095688,"byte_end":1095720,"line_start":277,"line_end":277,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1095725,"byte_end":1095728,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1095733,"byte_end":1095817,"line_start":279,"line_end":279,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1095822,"byte_end":1095904,"line_start":280,"line_end":280,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":6159},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096202,"byte_end":1096216,"line_start":287,"line_end":287,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::traits::Pixel::from_slice_mut","value":"fn from_slice_mut<'_>(&'_ mut [Self::Subpixel]) -> &'_ mut Self","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1095964,"byte_end":1096010,"line_start":283,"line_end":283,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096015,"byte_end":1096018,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096023,"byte_end":1096107,"line_start":285,"line_end":285,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096112,"byte_end":1096194,"line_start":286,"line_end":286,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":6160},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096303,"byte_end":1096309,"line_start":290,"line_end":290,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::traits::Pixel::to_rgb","value":"fn to_rgb<'_>(&'_ Self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096266,"byte_end":1096295,"line_start":289,"line_end":289,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6161},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096405,"byte_end":1096412,"line_start":293,"line_end":293,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::traits::Pixel::to_rgba","value":"fn to_rgba<'_>(&'_ Self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096346,"byte_end":1096397,"line_start":292,"line_end":292,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6162},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096488,"byte_end":1096495,"line_start":296,"line_end":296,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::traits::Pixel::to_luma","value":"fn to_luma<'_>(&'_ Self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096450,"byte_end":1096480,"line_start":295,"line_end":295,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":6163},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096593,"byte_end":1096606,"line_start":299,"line_end":299,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::traits::Pixel::to_luma_alpha","value":"fn to_luma_alpha<'_>(&'_ Self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096533,"byte_end":1096585,"line_start":298,"line_end":298,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6164},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096714,"byte_end":1096717,"line_start":302,"line_end":302,"column_start":8,"column_end":11},"name":"map","qualname":"::traits::Pixel::map","value":"fn map<F, '_>(&'_ Self, F) -> Self where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096645,"byte_end":1096706,"line_start":301,"line_end":301,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6166},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096878,"byte_end":1096883,"line_start":307,"line_end":307,"column_start":8,"column_end":13},"name":"apply","qualname":"::traits::Pixel::apply","value":"fn apply<F, '_>(&'_ mut Self, F) where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096809,"byte_end":1096870,"line_start":306,"line_end":306,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6168},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1097108,"byte_end":1097122,"line_start":313,"line_end":313,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::traits::Pixel::map_with_alpha","value":"fn map_with_alpha<F, G, '_>(&'_ Self, F, G) -> Self where\nF: FnMut(Self::Subpixel) -> Self::Subpixel, G: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1096971,"byte_end":1097043,"line_start":311,"line_end":311,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1097048,"byte_end":1097100,"line_start":312,"line_end":312,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6171},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1097428,"byte_end":1097444,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::traits::Pixel::apply_with_alpha","value":"fn apply_with_alpha<F, G, '_>(&'_ mut Self, F, G) where\nF: FnMut(Self::Subpixel) -> Self::Subpixel, G: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1097275,"byte_end":1097347,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1097352,"byte_end":1097420,"line_start":319,"line_end":319,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6174},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1097673,"byte_end":1097690,"line_start":326,"line_end":326,"column_start":8,"column_end":25},"name":"map_without_alpha","qualname":"::traits::Pixel::map_without_alpha","value":"fn map_without_alpha<F, '_>(&'_ Self, F) -> Self where\nF: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1097593,"byte_end":1097665,"line_start":325,"line_end":325,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6177},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1097982,"byte_end":1098001,"line_start":337,"line_end":337,"column_start":8,"column_end":27},"name":"apply_without_alpha","qualname":"::traits::Pixel::apply_without_alpha","value":"fn apply_without_alpha<F, '_>(&'_ mut Self, F) where F: FnMut(Self::Subpixel)\n-> Self::Subpixel","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Works in place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1097878,"byte_end":1097950,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ Works in place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1097955,"byte_end":1097974,"line_start":336,"line_end":336,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":6180},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1098244,"byte_end":1098248,"line_start":346,"line_end":346,"column_start":8,"column_end":12},"name":"map2","qualname":"::traits::Pixel::map2","value":"fn map2<F, '_, '_>(&'_ Self, &'_ Self, F) -> Self where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1098142,"byte_end":1098206,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1098211,"byte_end":1098236,"line_start":345,"line_end":345,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6182},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1098488,"byte_end":1098494,"line_start":352,"line_end":352,"column_start":8,"column_end":14},"name":"apply2","qualname":"::traits::Pixel::apply2","value":"fn apply2<F, '_, '_>(&'_ mut Self, &'_ Self, F) where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1098370,"byte_end":1098434,"line_start":350,"line_end":350,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1098439,"byte_end":1098480,"line_start":351,"line_end":351,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":6184},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1098641,"byte_end":1098647,"line_start":357,"line_end":357,"column_start":8,"column_end":14},"name":"invert","qualname":"::traits::Pixel::invert","value":"fn invert<'_>(&'_ mut Self)","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1098612,"byte_end":1098633,"line_start":356,"line_end":356,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":6185},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1098758,"byte_end":1098763,"line_start":360,"line_end":360,"column_start":8,"column_end":13},"name":"blend","qualname":"::traits::Pixel::blend","value":"fn blend<'_, '_>(&'_ mut Self, &'_ Self)","parent":{"krate":0,"index":6150},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1098665,"byte_end":1098750,"line_start":359,"line_end":359,"column_start":5,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":6187},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1098872,"byte_end":1098887,"line_start":365,"line_end":365,"column_start":15,"column_end":30},"name":"EncodableLayout","qualname":"::traits::seals::EncodableLayout","value":"EncodableLayout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16390,"byte_end":16406,"line_start":192,"line_end":192,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17071,"byte_end":17084,"line_start":212,"line_end":212,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17837,"byte_end":17850,"line_start":237,"line_end":237,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18604,"byte_end":18618,"line_start":262,"line_end":262,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18997,"byte_end":19007,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19343,"byte_end":19353,"line_start":289,"line_end":289,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19469,"byte_end":19484,"line_start":295,"line_end":295,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19613,"byte_end":19628,"line_start":301,"line_end":301,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19878,"byte_end":19894,"line_start":310,"line_end":310,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":20197,"byte_end":20207,"line_start":322,"line_end":322,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":20668,"byte_end":20678,"line_start":335,"line_end":335,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":21131,"byte_end":21147,"line_start":348,"line_end":348,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":22520,"byte_end":22536,"line_start":383,"line_end":383,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":22563,"byte_end":22577,"line_start":385,"line_end":385,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":23450,"byte_end":23464,"line_start":411,"line_end":411,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":23669,"byte_end":23682,"line_start":420,"line_end":420,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":24065,"byte_end":24078,"line_start":433,"line_end":433,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":24283,"byte_end":24296,"line_start":442,"line_end":442,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":24774,"byte_end":24787,"line_start":456,"line_end":456,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":24992,"byte_end":25002,"line_start":465,"line_end":465,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":25506,"byte_end":25516,"line_start":478,"line_end":478,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":25543,"byte_end":25558,"line_start":480,"line_end":480,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72607,"byte_end":72614,"line_start":403,"line_end":403,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73381,"byte_end":73389,"line_start":438,"line_end":438,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83709,"byte_end":83721,"line_start":112,"line_end":112,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":92146,"byte_end":92158,"line_start":388,"line_end":388,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":121492,"byte_end":121503,"line_start":95,"line_end":95,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":122627,"byte_end":122637,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131455,"byte_end":131461,"line_start":70,"line_end":70,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133525,"byte_end":133531,"line_start":135,"line_end":135,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134355,"byte_end":134361,"line_start":160,"line_end":160,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112322,"byte_end":112334,"line_start":19,"line_end":19,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114383,"byte_end":114389,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114614,"byte_end":114620,"line_start":73,"line_end":73,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142247,"byte_end":142259,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1021},{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":154937,"byte_end":154940,"line_start":446,"line_end":446,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155200,"byte_end":155211,"line_start":461,"line_end":461,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172669,"byte_end":172680,"line_start":913,"line_end":913,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178656,"byte_end":178660,"line_start":1070,"line_end":1070,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184264,"byte_end":184271,"line_start":1206,"line_end":1206,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":188702,"byte_end":188713,"line_start":1325,"line_end":1325,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":189337,"byte_end":189348,"line_start":1346,"line_end":1346,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":189966,"byte_end":189970,"line_start":1365,"line_end":1365,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":191128,"byte_end":191135,"line_start":1408,"line_end":1408,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":192312,"byte_end":192319,"line_start":1451,"line_end":1451,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":193172,"byte_end":193182,"line_start":1477,"line_end":1477,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":193334,"byte_end":193357,"line_start":1481,"line_end":1481,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":193565,"byte_end":193588,"line_start":1486,"line_end":1486,"column_start":31,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":194264,"byte_end":194269,"line_start":1506,"line_end":1506,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":195204,"byte_end":195209,"line_start":1530,"line_end":1530,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":195234,"byte_end":195244,"line_start":1532,"line_end":1532,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":204496,"byte_end":204507,"line_start":106,"line_end":106,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":206431,"byte_end":206443,"line_start":164,"line_end":164,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":208612,"byte_end":208622,"line_start":208,"line_end":208,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":208778,"byte_end":208790,"line_start":214,"line_end":214,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":209137,"byte_end":209154,"line_start":229,"line_end":229,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":217030,"byte_end":217038,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":218424,"byte_end":218433,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":219718,"byte_end":219733,"line_start":579,"line_end":579,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":221589,"byte_end":221599,"line_start":631,"line_end":631,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":255389,"byte_end":255398,"line_start":1484,"line_end":1484,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":255818,"byte_end":255828,"line_start":1498,"line_end":1498,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":256604,"byte_end":256614,"line_start":1528,"line_end":1528,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261269,"byte_end":261279,"line_start":19,"line_end":19,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":269875,"byte_end":269885,"line_start":253,"line_end":253,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":275626,"byte_end":275638,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":276911,"byte_end":276921,"line_start":73,"line_end":73,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":277077,"byte_end":277089,"line_start":79,"line_end":79,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":277778,"byte_end":277789,"line_start":117,"line_end":117,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":278518,"byte_end":278524,"line_start":140,"line_end":140,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":280157,"byte_end":280167,"line_start":187,"line_end":187,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":282254,"byte_end":282264,"line_start":247,"line_end":247,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":286225,"byte_end":286235,"line_start":330,"line_end":330,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":289105,"byte_end":289115,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":290072,"byte_end":290082,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":292108,"byte_end":292118,"line_start":120,"line_end":120,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":293016,"byte_end":293026,"line_start":152,"line_end":152,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294052,"byte_end":294061,"line_start":192,"line_end":192,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294321,"byte_end":294331,"line_start":204,"line_end":204,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":320154,"byte_end":320168,"line_start":41,"line_end":41,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":321903,"byte_end":321917,"line_start":91,"line_end":91,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1843}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":322696,"byte_end":322710,"line_start":117,"line_end":117,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":325387,"byte_end":325402,"line_start":191,"line_end":191,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":325695,"byte_end":325710,"line_start":200,"line_end":200,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":326122,"byte_end":326137,"line_start":220,"line_end":220,"column_start":56,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":327003,"byte_end":327018,"line_start":254,"line_end":254,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":328050,"byte_end":328065,"line_start":286,"line_end":286,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":333381,"byte_end":333391,"line_start":56,"line_end":56,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1991},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":334312,"byte_end":334321,"line_start":82,"line_end":82,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2000},{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":334734,"byte_end":334744,"line_start":96,"line_end":96,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":339589,"byte_end":339605,"line_start":230,"line_end":230,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":340216,"byte_end":340232,"line_start":251,"line_end":251,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":344792,"byte_end":344802,"line_start":363,"line_end":363,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":345094,"byte_end":345103,"line_start":378,"line_end":378,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":345766,"byte_end":345772,"line_start":401,"line_end":401,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":346155,"byte_end":346165,"line_start":418,"line_end":418,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2061}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":351550,"byte_end":351560,"line_start":566,"line_end":566,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":355156,"byte_end":355168,"line_start":52,"line_end":52,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":356935,"byte_end":356945,"line_start":89,"line_end":89,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":357101,"byte_end":357113,"line_start":95,"line_end":95,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2176}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":357615,"byte_end":357623,"line_start":115,"line_end":115,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":358214,"byte_end":358224,"line_start":135,"line_end":135,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":359598,"byte_end":359607,"line_start":177,"line_end":177,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2191},{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":360023,"byte_end":360033,"line_start":191,"line_end":191,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":360577,"byte_end":360587,"line_start":214,"line_end":214,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361717,"byte_end":361727,"line_start":266,"line_end":266,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364033,"byte_end":364043,"line_start":331,"line_end":331,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2231},{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":370256,"byte_end":370266,"line_start":498,"line_end":498,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":371160,"byte_end":371183,"line_start":526,"line_end":526,"column_start":15,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":371473,"byte_end":371496,"line_start":539,"line_end":539,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":373302,"byte_end":373325,"line_start":590,"line_end":590,"column_start":37,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379746,"byte_end":379757,"line_start":762,"line_end":762,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":390572,"byte_end":390582,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2338},{"krate":0,"index":2339}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":393165,"byte_end":393176,"line_start":90,"line_end":90,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":393302,"byte_end":393313,"line_start":96,"line_end":96,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2358},{"krate":0,"index":2359}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":394014,"byte_end":394034,"line_start":125,"line_end":125,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":394293,"byte_end":394313,"line_start":135,"line_end":135,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2370},{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":407939,"byte_end":407951,"line_start":46,"line_end":46,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2471}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":409201,"byte_end":409211,"line_start":75,"line_end":75,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2473}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":409367,"byte_end":409379,"line_start":81,"line_end":81,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":409620,"byte_end":409639,"line_start":92,"line_end":92,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2476}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":409879,"byte_end":409898,"line_start":101,"line_end":101,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2478}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":411179,"byte_end":411189,"line_start":146,"line_end":146,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":413532,"byte_end":413540,"line_start":218,"line_end":218,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2509}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":414853,"byte_end":414862,"line_start":266,"line_end":266,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2518},{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":415282,"byte_end":415292,"line_start":280,"line_end":280,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":426483,"byte_end":426491,"line_start":34,"line_end":34,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2582},{"krate":0,"index":2584}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":428187,"byte_end":428197,"line_start":84,"line_end":84,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":430451,"byte_end":430461,"line_start":141,"line_end":141,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":432946,"byte_end":432957,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2663},{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":434740,"byte_end":434750,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2674}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":435163,"byte_end":435174,"line_start":82,"line_end":82,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":436955,"byte_end":436964,"line_start":145,"line_end":145,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":437257,"byte_end":437267,"line_start":157,"line_end":157,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2688}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":476440,"byte_end":476449,"line_start":184,"line_end":184,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2817},{"krate":0,"index":2821},{"krate":0,"index":2822}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479924,"byte_end":479936,"line_start":316,"line_end":316,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480274,"byte_end":480286,"line_start":328,"line_end":328,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480916,"byte_end":480927,"line_start":353,"line_end":353,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2854},{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":491506,"byte_end":491517,"line_start":656,"line_end":656,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2868}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":514545,"byte_end":514559,"line_start":50,"line_end":50,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":517217,"byte_end":517231,"line_start":109,"line_end":109,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":526754,"byte_end":526768,"line_start":344,"line_end":344,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3017}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":527074,"byte_end":527088,"line_start":352,"line_end":352,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3020}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":537739,"byte_end":537748,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3150}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":538540,"byte_end":538549,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3153},{"krate":0,"index":3154}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":539942,"byte_end":539952,"line_start":118,"line_end":118,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":545224,"byte_end":545234,"line_start":229,"line_end":229,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":547295,"byte_end":547306,"line_start":293,"line_end":293,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":552977,"byte_end":552988,"line_start":440,"line_end":440,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3203}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":553126,"byte_end":553139,"line_start":444,"line_end":444,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3210},{"krate":0,"index":3211}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555750,"byte_end":555760,"line_start":525,"line_end":525,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":560089,"byte_end":560099,"line_start":624,"line_end":624,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":561846,"byte_end":561856,"line_start":667,"line_end":667,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":562796,"byte_end":562811,"line_start":690,"line_end":690,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3244}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":562897,"byte_end":562907,"line_start":696,"line_end":696,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3246}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":562997,"byte_end":563017,"line_start":702,"line_end":702,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3248}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":563323,"byte_end":563343,"line_start":714,"line_end":714,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\autobreak.rs","byte_start":571628,"byte_end":571637,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3302},{"krate":0,"index":3303}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\autobreak.rs","byte_start":572898,"byte_end":572907,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3306},{"krate":0,"index":3307}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\autobreak.rs","byte_start":573533,"byte_end":573542,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":577475,"byte_end":577487,"line_start":84,"line_end":84,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3433}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":580851,"byte_end":580861,"line_start":163,"line_end":163,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3435}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":581017,"byte_end":581029,"line_start":169,"line_end":169,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3437}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":581505,"byte_end":581518,"line_start":191,"line_end":191,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3439}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":582110,"byte_end":582125,"line_start":213,"line_end":213,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3441}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":583147,"byte_end":583157,"line_start":256,"line_end":256,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":594715,"byte_end":594716,"line_start":569,"line_end":569,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":594859,"byte_end":594868,"line_start":573,"line_end":573,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3498},{"krate":0,"index":3499}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":595281,"byte_end":595291,"line_start":587,"line_end":587,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":597024,"byte_end":597034,"line_start":636,"line_end":636,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3511},{"krate":0,"index":3515},{"krate":0,"index":3517}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":599606,"byte_end":599608,"line_start":703,"line_end":703,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":600116,"byte_end":600119,"line_start":721,"line_end":721,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3531},{"krate":0,"index":3532},{"krate":0,"index":3533}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":601118,"byte_end":601124,"line_start":747,"line_end":747,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3537}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":602432,"byte_end":602437,"line_start":785,"line_end":785,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":603085,"byte_end":603097,"line_start":803,"line_end":803,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3545}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":603222,"byte_end":603235,"line_start":809,"line_end":809,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":603551,"byte_end":603563,"line_start":819,"line_end":819,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3549}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":603873,"byte_end":603888,"line_start":829,"line_end":829,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3551}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":622458,"byte_end":622468,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":630356,"byte_end":630366,"line_start":291,"line_end":291,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3693}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":630599,"byte_end":630617,"line_start":303,"line_end":303,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3696}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":631487,"byte_end":631502,"line_start":331,"line_end":331,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3700}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":632063,"byte_end":632080,"line_start":352,"line_end":352,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3703}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":636101,"byte_end":636119,"line_start":446,"line_end":446,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3706}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":638568,"byte_end":638581,"line_start":510,"line_end":510,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3709},{"krate":0,"index":3710}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":638892,"byte_end":638904,"line_start":523,"line_end":523,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3717},{"krate":0,"index":3719}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":640321,"byte_end":640332,"line_start":568,"line_end":568,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3727}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":642043,"byte_end":642054,"line_start":622,"line_end":622,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":642173,"byte_end":642184,"line_start":628,"line_end":628,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3733}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":642285,"byte_end":642298,"line_start":634,"line_end":634,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":647155,"byte_end":647172,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3763}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":647684,"byte_end":647694,"line_start":150,"line_end":150,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3765},{"krate":0,"index":3767}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":648664,"byte_end":648673,"line_start":175,"line_end":175,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3776},{"krate":0,"index":3777}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":653347,"byte_end":653361,"line_start":297,"line_end":297,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3784}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":654040,"byte_end":654049,"line_start":320,"line_end":320,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3786}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":654242,"byte_end":654251,"line_start":329,"line_end":329,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3788}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":654445,"byte_end":654454,"line_start":338,"line_end":338,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3790}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":654649,"byte_end":654658,"line_start":347,"line_end":347,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3792}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":655729,"byte_end":655737,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3876},{"krate":0,"index":3877}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":656917,"byte_end":656927,"line_start":70,"line_end":70,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":669535,"byte_end":669545,"line_start":414,"line_end":414,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3918},{"krate":0,"index":3919},{"krate":0,"index":3920}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":672458,"byte_end":672467,"line_start":497,"line_end":497,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3927}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673112,"byte_end":673124,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3966}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673491,"byte_end":673501,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3968}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673657,"byte_end":673669,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673758,"byte_end":673768,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3975},{"krate":0,"index":3976}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":675292,"byte_end":675302,"line_start":88,"line_end":88,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3981}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\header.rs","byte_start":680156,"byte_end":680165,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4047},{"krate":0,"index":4048},{"krate":0,"index":4049},{"krate":0,"index":4050}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\header.rs","byte_start":682083,"byte_end":682089,"line_start":80,"line_end":80,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4052},{"krate":0,"index":4053},{"krate":0,"index":4054}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":685902,"byte_end":685913,"line_start":36,"line_end":36,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4140}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":688730,"byte_end":688740,"line_start":109,"line_end":109,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4144},{"krate":0,"index":4145}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":690621,"byte_end":690631,"line_start":153,"line_end":153,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4153},{"krate":0,"index":4154}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":691051,"byte_end":691062,"line_start":167,"line_end":167,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4158},{"krate":0,"index":4159},{"krate":0,"index":4160},{"krate":0,"index":4161},{"krate":0,"index":4162},{"krate":0,"index":4163}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":695498,"byte_end":695509,"line_start":282,"line_end":282,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4171},{"krate":0,"index":4172}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":697463,"byte_end":697474,"line_start":334,"line_end":334,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4175}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":699174,"byte_end":699186,"line_start":27,"line_end":27,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4266}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":699323,"byte_end":699338,"line_start":30,"line_end":30,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4272}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":700246,"byte_end":700256,"line_start":57,"line_end":57,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4274}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":700413,"byte_end":700425,"line_start":63,"line_end":63,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":700707,"byte_end":700720,"line_start":82,"line_end":82,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4277},{"krate":0,"index":4279}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":702105,"byte_end":702116,"line_start":129,"line_end":129,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4297},{"krate":0,"index":4298},{"krate":0,"index":4301},{"krate":0,"index":4302}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":705946,"byte_end":705956,"line_start":256,"line_end":256,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4315},{"krate":0,"index":4316}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":706369,"byte_end":706380,"line_start":270,"line_end":270,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4324}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":708568,"byte_end":708579,"line_start":332,"line_end":332,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4328}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":710651,"byte_end":710663,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4422}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":711373,"byte_end":711383,"line_start":44,"line_end":44,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4424}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":711540,"byte_end":711552,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":712070,"byte_end":712083,"line_start":78,"line_end":78,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4438},{"krate":0,"index":4440},{"krate":0,"index":4444},{"krate":0,"index":4446},{"krate":0,"index":4450},{"krate":0,"index":4451}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":712610,"byte_end":712623,"line_start":98,"line_end":98,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4436},{"krate":0,"index":4437}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":721121,"byte_end":721131,"line_start":337,"line_end":337,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4457}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\huffman.rs","byte_start":734485,"byte_end":734496,"line_start":28,"line_end":28,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4491},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4498},{"krate":0,"index":4499}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":747038,"byte_end":747050,"line_start":81,"line_end":81,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4581}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":748053,"byte_end":748063,"line_start":105,"line_end":105,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4583}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":748220,"byte_end":748232,"line_start":111,"line_end":111,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":748535,"byte_end":748550,"line_start":125,"line_end":125,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4588},{"krate":0,"index":4589},{"krate":0,"index":4590},{"krate":0,"index":4591},{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4597},{"krate":0,"index":4598},{"krate":0,"index":4599},{"krate":0,"index":4600},{"krate":0,"index":4601}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":766187,"byte_end":766198,"line_start":641,"line_end":641,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4603}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":766618,"byte_end":766628,"line_start":658,"line_end":658,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4605},{"krate":0,"index":4606}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":767159,"byte_end":767168,"line_start":679,"line_end":679,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4608},{"krate":0,"index":4609},{"krate":0,"index":4610}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":768239,"byte_end":768252,"line_start":724,"line_end":724,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4613},{"krate":0,"index":4614},{"krate":0,"index":4615}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless_transform.rs","byte_start":770703,"byte_end":770716,"line_start":24,"line_end":24,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4630}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless_transform.rs","byte_start":785496,"byte_end":785517,"line_start":406,"line_end":406,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4647}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":816565,"byte_end":816577,"line_start":689,"line_end":689,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4778}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":817701,"byte_end":817711,"line_start":717,"line_end":717,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4780}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":817868,"byte_end":817880,"line_start":723,"line_end":723,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":818001,"byte_end":818011,"line_start":734,"line_end":734,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4789},{"krate":0,"index":4790},{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4794},{"krate":0,"index":4795}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821734,"byte_end":821739,"line_start":884,"line_end":884,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4797},{"krate":0,"index":4798},{"krate":0,"index":4799},{"krate":0,"index":4800},{"krate":0,"index":4801},{"krate":0,"index":4802}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":824881,"byte_end":824891,"line_start":1009,"line_end":1009,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4833},{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4850},{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4862}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":862739,"byte_end":862747,"line_start":2105,"line_end":2105,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4865},{"krate":0,"index":4866}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":863364,"byte_end":863372,"line_start":2128,"line_end":2128,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4868}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":863437,"byte_end":863447,"line_start":2134,"line_end":2134,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4870}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":863736,"byte_end":863746,"line_start":2146,"line_end":2146,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4872}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":863813,"byte_end":863822,"line_start":2152,"line_end":2152,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4874}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":864359,"byte_end":864368,"line_start":2170,"line_end":2170,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":887598,"byte_end":887604,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4926},{"krate":0,"index":4927}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888194,"byte_end":888200,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4930},{"krate":0,"index":4931}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888719,"byte_end":888724,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4933},{"krate":0,"index":4934},{"krate":0,"index":4935},{"krate":0,"index":4936},{"krate":0,"index":4937},{"krate":0,"index":4938},{"krate":0,"index":4939},{"krate":0,"index":4940}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889799,"byte_end":889804,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4942},{"krate":0,"index":4943},{"krate":0,"index":4945},{"krate":0,"index":4946},{"krate":0,"index":4947},{"krate":0,"index":4948}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":895993,"byte_end":896001,"line_start":270,"line_end":270,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4957}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":899531,"byte_end":899537,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5069}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":899917,"byte_end":899923,"line_start":44,"line_end":44,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5073}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900072,"byte_end":900078,"line_start":53,"line_end":53,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5077}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900287,"byte_end":900293,"line_start":63,"line_end":63,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5081}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900440,"byte_end":900446,"line_start":71,"line_end":71,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5084}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900848,"byte_end":900857,"line_start":90,"line_end":90,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5092},{"krate":0,"index":5093},{"krate":0,"index":5095}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901249,"byte_end":901258,"line_start":108,"line_end":108,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5099}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901407,"byte_end":901416,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5103}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901664,"byte_end":901673,"line_start":129,"line_end":129,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5107}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":902226,"byte_end":902230,"line_start":152,"line_end":152,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5115}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903148,"byte_end":903152,"line_start":174,"line_end":174,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5121}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903698,"byte_end":903702,"line_start":196,"line_end":196,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5125}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903851,"byte_end":903855,"line_start":205,"line_end":205,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5129}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904222,"byte_end":904226,"line_start":219,"line_end":219,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5132}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904371,"byte_end":904375,"line_start":227,"line_end":227,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5135}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904949,"byte_end":904956,"line_start":250,"line_end":250,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5143}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":905896,"byte_end":905903,"line_start":272,"line_end":272,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5147},{"krate":0,"index":5148},{"krate":0,"index":5149}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":906462,"byte_end":906469,"line_start":294,"line_end":294,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5153}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":906618,"byte_end":906625,"line_start":303,"line_end":303,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5157}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":907007,"byte_end":907014,"line_start":317,"line_end":317,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5160}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":907457,"byte_end":907472,"line_start":339,"line_end":339,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5171},{"krate":0,"index":5172},{"krate":0,"index":5174}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908011,"byte_end":908026,"line_start":363,"line_end":363,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5178}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908152,"byte_end":908167,"line_start":372,"line_end":372,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5181}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908343,"byte_end":908358,"line_start":381,"line_end":381,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5184}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908896,"byte_end":908909,"line_start":405,"line_end":405,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5194},{"krate":0,"index":5195},{"krate":0,"index":5197}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":909583,"byte_end":909596,"line_start":435,"line_end":435,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5201}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":909720,"byte_end":909733,"line_start":444,"line_end":444,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5204}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":909903,"byte_end":909916,"line_start":453,"line_end":453,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5207}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":910441,"byte_end":910459,"line_start":477,"line_end":477,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5221}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":911006,"byte_end":911024,"line_start":501,"line_end":501,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5225}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":911155,"byte_end":911173,"line_start":510,"line_end":510,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5228}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":911720,"byte_end":911736,"line_start":534,"line_end":534,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5238},{"krate":0,"index":5239},{"krate":0,"index":5241}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":912419,"byte_end":912435,"line_start":564,"line_end":564,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5245}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":912564,"byte_end":912580,"line_start":573,"line_end":573,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5248}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915455,"byte_end":915466,"line_start":663,"line_end":663,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5252},{"krate":0,"index":5253},{"krate":0,"index":5254},{"krate":0,"index":5255},{"krate":0,"index":5256},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5260},{"krate":0,"index":5261},{"krate":0,"index":5262},{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5266},{"krate":0,"index":5268},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":5276}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":923248,"byte_end":923259,"line_start":884,"line_end":884,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5280},{"krate":0,"index":5281},{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5284},{"krate":0,"index":5285},{"krate":0,"index":5286},{"krate":0,"index":5288}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":926593,"byte_end":926604,"line_start":982,"line_end":982,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5292}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":927200,"byte_end":927211,"line_start":1006,"line_end":1006,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5297}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":927993,"byte_end":928004,"line_start":1034,"line_end":1034,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5302}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":928949,"byte_end":928960,"line_start":1065,"line_end":1065,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5308}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":929229,"byte_end":929240,"line_start":1080,"line_end":1080,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5312},{"krate":0,"index":5313}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":929468,"byte_end":929479,"line_start":1092,"line_end":1092,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5317}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":929709,"byte_end":929720,"line_start":1102,"line_end":1102,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5321},{"krate":0,"index":5322}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":929955,"byte_end":929966,"line_start":1114,"line_end":1114,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5326}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":930191,"byte_end":930202,"line_start":1124,"line_end":1124,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5330}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":930561,"byte_end":930572,"line_start":1139,"line_end":1139,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5334},{"krate":0,"index":5335},{"krate":0,"index":5336},{"krate":0,"index":5337},{"krate":0,"index":5338}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":931261,"byte_end":931272,"line_start":1166,"line_end":1166,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5342},{"krate":0,"index":5343},{"krate":0,"index":5344},{"krate":0,"index":5345},{"krate":0,"index":5346}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":933935,"byte_end":933946,"line_start":1238,"line_end":1238,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5349},{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5353},{"krate":0,"index":5354}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936348,"byte_end":936357,"line_start":1313,"line_end":1313,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5359}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":937735,"byte_end":937746,"line_start":1351,"line_end":1351,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":5367}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951587,"byte_end":951596,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5407},{"krate":0,"index":5408},{"krate":0,"index":5410},{"krate":0,"index":5412},{"krate":0,"index":5413}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":955248,"byte_end":955265,"line_start":151,"line_end":151,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5415}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":956586,"byte_end":956603,"line_start":187,"line_end":187,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5417}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":962123,"byte_end":962124,"line_start":378,"line_end":378,"column_start":41,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5424}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":964366,"byte_end":964367,"line_start":454,"line_end":454,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5448}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":965390,"byte_end":965394,"line_start":481,"line_end":481,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5457}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":965668,"byte_end":965672,"line_start":492,"line_end":492,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5461}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":965908,"byte_end":965912,"line_start":501,"line_end":501,"column_start":70,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5465}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":966206,"byte_end":966210,"line_start":512,"line_end":512,"column_start":71,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5469}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":966537,"byte_end":966542,"line_start":526,"line_end":526,"column_start":58,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5473}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":966875,"byte_end":966880,"line_start":538,"line_end":538,"column_start":70,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5477}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":967220,"byte_end":967225,"line_start":550,"line_end":550,"column_start":71,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":5481}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":967560,"byte_end":967565,"line_start":562,"line_end":562,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5485}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":967884,"byte_end":967888,"line_start":575,"line_end":575,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5489}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":968282,"byte_end":968286,"line_start":589,"line_end":589,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5493}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":968671,"byte_end":968675,"line_start":603,"line_end":603,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5497}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":969069,"byte_end":969073,"line_start":617,"line_end":617,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5501}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":969476,"byte_end":969479,"line_start":633,"line_end":633,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5505}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":969827,"byte_end":969830,"line_start":646,"line_end":646,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5509}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":970176,"byte_end":970179,"line_start":659,"line_end":659,"column_start":58,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5513}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":970518,"byte_end":970521,"line_start":672,"line_end":672,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5517}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":970969,"byte_end":970974,"line_start":691,"line_end":691,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5522}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":971985,"byte_end":971989,"line_start":724,"line_end":724,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5525}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":972099,"byte_end":972103,"line_start":730,"line_end":730,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5528}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":974486,"byte_end":974489,"line_start":794,"line_end":794,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5531}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":974707,"byte_end":974712,"line_start":806,"line_end":806,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5536}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":974891,"byte_end":974895,"line_start":815,"line_end":815,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5539}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":975089,"byte_end":975093,"line_start":826,"line_end":826,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5542}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":975311,"byte_end":975314,"line_start":836,"line_end":836,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5545}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":983948,"byte_end":983960,"line_start":122,"line_end":122,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5686},{"krate":0,"index":5687},{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5690},{"krate":0,"index":5691},{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":5694},{"krate":0,"index":5695},{"krate":0,"index":5696},{"krate":0,"index":5699},{"krate":0,"index":5700},{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":5703},{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5706},{"krate":0,"index":5707},{"krate":0,"index":5708},{"krate":0,"index":5709},{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5712},{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5715},{"krate":0,"index":5716},{"krate":0,"index":5717},{"krate":0,"index":5718},{"krate":0,"index":5719},{"krate":0,"index":5720},{"krate":0,"index":5721},{"krate":0,"index":5722},{"krate":0,"index":5723},{"krate":0,"index":5724},{"krate":0,"index":5725},{"krate":0,"index":5726},{"krate":0,"index":5727},{"krate":0,"index":5728},{"krate":0,"index":5729},{"krate":0,"index":5730},{"krate":0,"index":5731},{"krate":0,"index":5732},{"krate":0,"index":5733},{"krate":0,"index":5734},{"krate":0,"index":5735},{"krate":0,"index":5736},{"krate":0,"index":5737},{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5745},{"krate":0,"index":5746},{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5750},{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5756},{"krate":0,"index":5757},{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5760},{"krate":0,"index":5761},{"krate":0,"index":5762},{"krate":0,"index":5763},{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":5768},{"krate":0,"index":5769},{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5774},{"krate":0,"index":5776}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011454,"byte_end":1011466,"line_start":882,"line_end":882,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5779}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011588,"byte_end":1011600,"line_start":888,"line_end":888,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5781}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011722,"byte_end":1011734,"line_start":894,"line_end":894,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5783}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011849,"byte_end":1011861,"line_start":900,"line_end":900,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5785}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011980,"byte_end":1011992,"line_start":906,"line_end":906,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5787}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012119,"byte_end":1012131,"line_start":912,"line_end":912,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5789}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012258,"byte_end":1012270,"line_start":918,"line_end":918,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5791}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012390,"byte_end":1012402,"line_start":924,"line_end":924,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5793}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012524,"byte_end":1012536,"line_start":930,"line_end":930,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5795}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012659,"byte_end":1012671,"line_start":936,"line_end":936,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5797}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012816,"byte_end":1012828,"line_start":942,"line_end":942,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5799}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1013003,"byte_end":1013015,"line_start":948,"line_end":948,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5801}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1013190,"byte_end":1013202,"line_start":955,"line_end":955,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805},{"krate":0,"index":5806}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1013700,"byte_end":1013712,"line_start":972,"line_end":972,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5808},{"krate":0,"index":5809},{"krate":0,"index":5810}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1016125,"byte_end":1016137,"line_start":1017,"line_end":1017,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5812}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028299,"byte_end":1028310,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5900},{"krate":0,"index":5903},{"krate":0,"index":5907},{"krate":0,"index":5909},{"krate":0,"index":5910},{"krate":0,"index":5911}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1036425,"byte_end":1036442,"line_start":315,"line_end":315,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5913}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1038144,"byte_end":1038159,"line_start":361,"line_end":361,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5921},{"krate":0,"index":5922}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047393,"byte_end":1047401,"line_start":606,"line_end":606,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5937},{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":5940}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055336,"byte_end":1055342,"line_start":824,"line_end":824,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5969},{"krate":0,"index":5970}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055810,"byte_end":1055816,"line_start":846,"line_end":846,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5973}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1066092,"byte_end":1066100,"line_start":1130,"line_end":1130,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6001},{"krate":0,"index":6002},{"krate":0,"index":6003}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067449,"byte_end":1067457,"line_start":1174,"line_end":1174,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6006},{"krate":0,"index":6010}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068864,"byte_end":1068872,"line_start":1212,"line_end":1212,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6013},{"krate":0,"index":6014}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1069688,"byte_end":1069696,"line_start":1240,"line_end":1240,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6017},{"krate":0,"index":6018}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1069847,"byte_end":1069855,"line_start":1250,"line_end":1250,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6021}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1070018,"byte_end":1070031,"line_start":1260,"line_end":1260,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6024},{"krate":0,"index":6025},{"krate":0,"index":6026},{"krate":0,"index":6027}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1070504,"byte_end":1070517,"line_start":1281,"line_end":1281,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6032}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092615,"byte_end":1092618,"line_start":179,"line_end":179,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6118}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092706,"byte_end":1092709,"line_start":182,"line_end":182,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6120}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092799,"byte_end":1092802,"line_start":185,"line_end":185,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6122}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092894,"byte_end":1092898,"line_start":189,"line_end":189,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6124}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092987,"byte_end":1092991,"line_start":192,"line_end":192,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093082,"byte_end":1093086,"line_start":195,"line_end":195,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6128}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093179,"byte_end":1093183,"line_start":199,"line_end":199,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6130}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093269,"byte_end":1093273,"line_start":202,"line_end":202,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6132}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093361,"byte_end":1093366,"line_start":205,"line_end":205,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6134}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093453,"byte_end":1093458,"line_start":208,"line_end":208,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6136}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093711,"byte_end":1093714,"line_start":217,"line_end":217,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093760,"byte_end":1093763,"line_start":218,"line_end":218,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093810,"byte_end":1093813,"line_start":219,"line_end":219,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093861,"byte_end":1093865,"line_start":221,"line_end":221,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093911,"byte_end":1093915,"line_start":222,"line_end":222,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093962,"byte_end":1093966,"line_start":223,"line_end":223,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094014,"byte_end":1094018,"line_start":225,"line_end":225,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094064,"byte_end":1094069,"line_start":226,"line_end":226,"column_start":39,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094116,"byte_end":1094120,"line_start":228,"line_end":228,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094167,"byte_end":1094172,"line_start":229,"line_end":229,"column_start":39,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5039,"byte_end":5044,"line_start":153,"line_end":153,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":144}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5381,"byte_end":5385,"line_start":165,"line_end":165,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":244}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5426,"byte_end":5434,"line_start":168,"line_end":168,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":257}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\mod.rs","byte_start":32303,"byte_end":32311,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":448}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5460,"byte_end":5462,"line_start":171,"line_end":171,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":714}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":5508,"byte_end":5512,"line_start":174,"line_end":174,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":931}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7811,"byte_end":7814,"line_start":221,"line_end":221,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1147}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":7856,"byte_end":7859,"line_start":223,"line_end":223,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1509}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8069,"byte_end":8072,"line_start":226,"line_end":226,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1599}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8119,"byte_end":8127,"line_start":228,"line_end":228,"column_start":13,"column_end":21},"ref_id":{"krate":0,"index":1754}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8169,"byte_end":8172,"line_start":230,"line_end":230,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1889}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8214,"byte_end":8217,"line_start":232,"line_end":232,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2067}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8259,"byte_end":8262,"line_start":234,"line_end":234,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2379}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8305,"byte_end":8309,"line_start":236,"line_end":236,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2597}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8351,"byte_end":8358,"line_start":238,"line_end":238,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2928}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8400,"byte_end":8403,"line_start":240,"line_end":240,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3022}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8445,"byte_end":8448,"line_start":242,"line_end":242,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3250}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8490,"byte_end":8493,"line_start":244,"line_end":244,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3793}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8536,"byte_end":8540,"line_start":246,"line_end":246,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4055}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src/lib.rs","byte_start":8614,"byte_end":8618,"line_start":248,"line_end":248,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4176}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\mod.rs","byte_start":698249,"byte_end":698252,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4658}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":16390,"byte_end":16406,"line_start":192,"line_end":192,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":6227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17071,"byte_end":17084,"line_start":212,"line_end":212,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":6284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":17837,"byte_end":17850,"line_start":237,"line_end":237,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":6253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18604,"byte_end":18618,"line_start":262,"line_end":262,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":6258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":18997,"byte_end":19007,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":6289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19343,"byte_end":19353,"line_start":289,"line_end":289,"column_start":26,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19469,"byte_end":19484,"line_start":295,"line_end":295,"column_start":28,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":6315},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19613,"byte_end":19628,"line_start":301,"line_end":301,"column_start":36,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":6315},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":19878,"byte_end":19894,"line_start":310,"line_end":310,"column_start":32,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":6227},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":20197,"byte_end":20207,"line_start":322,"line_end":322,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":20668,"byte_end":20678,"line_start":335,"line_end":335,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":6206},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":21131,"byte_end":21147,"line_start":348,"line_end":348,"column_start":23,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6227},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":22520,"byte_end":22536,"line_start":383,"line_end":383,"column_start":16,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":6227},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":22563,"byte_end":22577,"line_start":385,"line_end":385,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":6258},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":23450,"byte_end":23464,"line_start":411,"line_end":411,"column_start":16,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":6258},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":23669,"byte_end":23682,"line_start":420,"line_end":420,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6253},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":24065,"byte_end":24078,"line_start":433,"line_end":433,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":6253},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":24283,"byte_end":24296,"line_start":442,"line_end":442,"column_start":23,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":6284},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":24774,"byte_end":24787,"line_start":456,"line_end":456,"column_start":16,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":6284},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":24992,"byte_end":25002,"line_start":465,"line_end":465,"column_start":23,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":6289},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":25506,"byte_end":25516,"line_start":478,"line_end":478,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":6289},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\error.rs","byte_start":25543,"byte_end":25558,"line_start":480,"line_end":480,"column_start":23,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":6315},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":72607,"byte_end":72614,"line_start":403,"line_end":403,"column_start":19,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":6358},"to":{"krate":0,"index":531}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\colorops.rs","byte_start":73381,"byte_end":73389,"line_start":438,"line_end":438,"column_start":32,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":37,"index":26},"to":{"krate":0,"index":531}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":83709,"byte_end":83721,"line_start":112,"line_end":112,"column_start":22,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":607},"to":{"krate":34,"index":311}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\imageops\\sample.rs","byte_start":92146,"byte_end":92158,"line_start":388,"line_end":388,"column_start":34,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":121492,"byte_end":121503,"line_start":95,"line_end":95,"column_start":29,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":805},"to":{"krate":0,"index":795}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\free_functions.rs","byte_start":122627,"byte_end":122637,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":816},"to":{"krate":0,"index":795}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":131455,"byte_end":131461,"line_start":70,"line_end":70,"column_start":15,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":133525,"byte_end":133531,"line_start":135,"line_end":135,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\reader.rs","byte_start":134355,"byte_end":134361,"line_start":160,"line_end":160,"column_start":25,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":112322,"byte_end":112334,"line_start":19,"line_end":19,"column_start":18,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6382},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114383,"byte_end":114389,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6398},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\io\\mod.rs","byte_start":114614,"byte_end":114620,"line_start":73,"line_end":73,"column_start":6,"column_end":12},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":142247,"byte_end":142259,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":154937,"byte_end":154940,"line_start":446,"line_end":446,"column_start":6,"column_end":9},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":155200,"byte_end":155211,"line_start":461,"line_end":461,"column_start":14,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":172669,"byte_end":172680,"line_start":913,"line_end":913,"column_start":22,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":178656,"byte_end":178660,"line_start":1070,"line_end":1070,"column_start":24,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":184264,"byte_end":184271,"line_start":1206,"line_end":1206,"column_start":24,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":188702,"byte_end":188713,"line_start":1325,"line_end":1325,"column_start":40,"column_end":51},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6417},"to":{"krate":2,"index":3576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":189337,"byte_end":189348,"line_start":1346,"line_end":1346,"column_start":43,"column_end":54},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6417},"to":{"krate":2,"index":3580}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":189966,"byte_end":189970,"line_start":1365,"line_end":1365,"column_start":45,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6470},"to":{"krate":0,"index":5974}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":191128,"byte_end":191135,"line_start":1408,"line_end":1408,"column_start":45,"column_end":52},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6483},"to":{"krate":0,"index":5974}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":192312,"byte_end":192319,"line_start":1451,"line_end":1451,"column_start":41,"column_end":48},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":6483},"to":{"krate":0,"index":5985}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":193172,"byte_end":193182,"line_start":1477,"line_end":1477,"column_start":22,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":193334,"byte_end":193357,"line_start":1481,"line_end":1481,"column_start":31,"column_end":54},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6545},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":193565,"byte_end":193588,"line_start":1486,"line_end":1486,"column_start":31,"column_end":54},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6545},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":194264,"byte_end":194269,"line_start":1506,"line_end":1506,"column_start":23,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6496},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":195204,"byte_end":195209,"line_start":1530,"line_end":1530,"column_start":23,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6496},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\flat.rs","byte_start":195234,"byte_end":195244,"line_start":1532,"line_end":1532,"column_start":21,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6520},"to":{"krate":2,"index":2966}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":204496,"byte_end":204507,"line_start":106,"line_end":106,"column_start":23,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1279},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":206431,"byte_end":206443,"line_start":164,"line_end":164,"column_start":23,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6603},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":208612,"byte_end":208622,"line_start":208,"line_end":208,"column_start":29,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":208778,"byte_end":208790,"line_start":214,"line_end":214,"column_start":23,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6603},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":209137,"byte_end":209154,"line_start":229,"line_end":229,"column_start":23,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6664},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":217030,"byte_end":217038,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":218424,"byte_end":218433,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":6706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":219718,"byte_end":219733,"line_start":579,"line_end":579,"column_start":32,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1357},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":221589,"byte_end":221599,"line_start":631,"line_end":631,"column_start":22,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":255389,"byte_end":255398,"line_start":1484,"line_end":1484,"column_start":18,"column_end":27},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1407},"to":{"krate":1,"index":4667}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":255818,"byte_end":255828,"line_start":1498,"line_end":1498,"column_start":52,"column_end":62},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1322},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\decoder.rs","byte_start":256604,"byte_end":256614,"line_start":1528,"line_end":1528,"column_start":56,"column_end":66},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1322},"to":{"krate":0,"index":5955}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":261269,"byte_end":261279,"line_start":19,"line_end":19,"column_start":25,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\bmp\\encoder.rs","byte_start":269875,"byte_end":269885,"line_start":253,"line_end":253,"column_start":37,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1478},"to":{"krate":0,"index":5964}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":275626,"byte_end":275638,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6718},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":276911,"byte_end":276921,"line_start":73,"line_end":73,"column_start":29,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":277077,"byte_end":277089,"line_start":79,"line_end":79,"column_start":23,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":6718},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":277778,"byte_end":277789,"line_start":117,"line_end":117,"column_start":6,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":6781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":278518,"byte_end":278524,"line_start":140,"line_end":140,"column_start":6,"column_end":12},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":6761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":280157,"byte_end":280167,"line_start":187,"line_end":187,"column_start":6,"column_end":16},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":6773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":282254,"byte_end":282264,"line_start":247,"line_end":247,"column_start":15,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dds.rs","byte_start":286225,"byte_end":286235,"line_start":330,"line_end":330,"column_start":45,"column_end":55},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1583},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":289105,"byte_end":289115,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":6792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":290072,"byte_end":290082,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":292108,"byte_end":292118,"line_start":120,"line_end":120,"column_start":45,"column_end":55},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1655},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":293016,"byte_end":293026,"line_start":152,"line_end":152,"column_start":56,"column_end":66},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1655},"to":{"krate":0,"index":5955}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294052,"byte_end":294061,"line_start":192,"line_end":192,"column_start":24,"column_end":33},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1683},"to":{"krate":1,"index":4667}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\dxt.rs","byte_start":294321,"byte_end":294331,"line_start":204,"line_end":204,"column_start":16,"column_end":26},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":320154,"byte_end":320168,"line_start":41,"line_end":41,"column_start":15,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":321903,"byte_end":321917,"line_start":91,"line_end":91,"column_start":24,"column_end":38},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1825},"to":{"krate":1,"index":4667}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":322696,"byte_end":322710,"line_start":117,"line_end":117,"column_start":31,"column_end":45},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1825},"to":{"krate":1,"index":4742}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":325387,"byte_end":325402,"line_start":191,"line_end":191,"column_start":15,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":325695,"byte_end":325710,"line_start":200,"line_end":200,"column_start":45,"column_end":60},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1855},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":326122,"byte_end":326137,"line_start":220,"line_end":220,"column_start":56,"column_end":71},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1855},"to":{"krate":0,"index":5955}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":327003,"byte_end":327018,"line_start":254,"line_end":254,"column_start":16,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\farbfeld.rs","byte_start":328050,"byte_end":328065,"line_start":286,"line_end":286,"column_start":33,"column_end":48},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1877},"to":{"krate":0,"index":5964}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":333381,"byte_end":333391,"line_start":56,"line_end":56,"column_start":15,"column_end":25},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":334312,"byte_end":334321,"line_start":82,"line_end":82,"column_start":18,"column_end":27},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1993},"to":{"krate":1,"index":4667}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":334734,"byte_end":334744,"line_start":96,"line_end":96,"column_start":45,"column_end":55},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1985},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":339589,"byte_end":339605,"line_start":230,"line_end":230,"column_start":15,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":340216,"byte_end":340232,"line_start":251,"line_end":251,"column_start":28,"column_end":44},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2010},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":344792,"byte_end":344802,"line_start":363,"line_end":363,"column_start":49,"column_end":59},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1985},"to":{"krate":0,"index":5961}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":345094,"byte_end":345103,"line_start":378,"line_end":378,"column_start":6,"column_end":15},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":345766,"byte_end":345772,"line_start":401,"line_end":401,"column_start":6,"column_end":12},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":6810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":346155,"byte_end":346165,"line_start":418,"line_end":418,"column_start":16,"column_end":26},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\gif.rs","byte_start":351550,"byte_end":351560,"line_start":566,"line_end":566,"column_start":6,"column_end":16},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":6206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":355156,"byte_end":355168,"line_start":52,"line_end":52,"column_start":23,"column_end":35},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":6821},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":356935,"byte_end":356945,"line_start":89,"line_end":89,"column_start":29,"column_end":39},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":357101,"byte_end":357113,"line_start":95,"line_end":95,"column_start":23,"column_end":35},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":6821},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":357615,"byte_end":357623,"line_start":115,"line_end":115,"column_start":23,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6865},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":358214,"byte_end":358224,"line_start":135,"line_end":135,"column_start":18,"column_end":28},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":359598,"byte_end":359607,"line_start":177,"line_end":177,"column_start":18,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2184},"to":{"krate":1,"index":4667}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":360023,"byte_end":360033,"line_start":191,"line_end":191,"column_start":48,"column_end":58},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":6894},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":360577,"byte_end":360587,"line_start":214,"line_end":214,"column_start":59,"column_end":69},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6894},"to":{"krate":0,"index":5955}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":361717,"byte_end":361727,"line_start":266,"line_end":266,"column_start":6,"column_end":16},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":6910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":364033,"byte_end":364043,"line_start":331,"line_end":331,"column_start":18,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":370256,"byte_end":370266,"line_start":498,"line_end":498,"column_start":32,"column_end":42},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6901},"to":{"krate":2,"index":8410}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":371160,"byte_end":371183,"line_start":526,"line_end":526,"column_start":15,"column_end":38},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":371473,"byte_end":371496,"line_start":539,"line_end":539,"column_start":28,"column_end":51},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2240},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":373302,"byte_end":373325,"line_start":590,"line_end":590,"column_start":37,"column_end":60},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2240},"to":{"krate":2,"index":8479}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\decoder.rs","byte_start":379746,"byte_end":379757,"line_start":762,"line_end":762,"column_start":6,"column_end":17},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":6930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":390572,"byte_end":390582,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":393165,"byte_end":393176,"line_start":90,"line_end":90,"column_start":10,"column_end":21},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":393302,"byte_end":393313,"line_start":96,"line_end":96,"column_start":23,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2349},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":394014,"byte_end":394034,"line_start":125,"line_end":125,"column_start":10,"column_end":30},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\hdr\\encoder.rs","byte_start":394293,"byte_end":394313,"line_start":135,"line_end":135,"column_start":23,"column_end":43},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2361},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":407939,"byte_end":407951,"line_start":46,"line_end":46,"column_start":23,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":6960},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":409201,"byte_end":409211,"line_start":75,"line_end":75,"column_start":29,"column_end":39},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":409367,"byte_end":409379,"line_start":81,"line_end":81,"column_start":23,"column_end":35},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6960},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":409620,"byte_end":409639,"line_start":92,"line_end":92,"column_start":23,"column_end":42},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6996},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":409879,"byte_end":409898,"line_start":101,"line_end":101,"column_start":28,"column_end":47},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":6996},"to":{"krate":2,"index":3171}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":411179,"byte_end":411189,"line_start":146,"line_end":146,"column_start":22,"column_end":32},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":413532,"byte_end":413540,"line_start":218,"line_end":218,"column_start":6,"column_end":14},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":7019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":414853,"byte_end":414862,"line_start":266,"line_end":266,"column_start":18,"column_end":27},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2511},"to":{"krate":1,"index":4667}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\decoder.rs","byte_start":415282,"byte_end":415292,"line_start":280,"line_end":280,"column_start":52,"column_end":62},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2479},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":426483,"byte_end":426491,"line_start":34,"line_end":34,"column_start":10,"column_end":18},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":428187,"byte_end":428197,"line_start":84,"line_end":84,"column_start":16,"column_end":26},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\ico\\encoder.rs","byte_start":430451,"byte_end":430461,"line_start":141,"line_end":141,"column_start":33,"column_end":43},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2571},"to":{"krate":0,"index":5964}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":432946,"byte_end":432957,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":434740,"byte_end":434750,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2666},"to":{"krate":1,"index":4667}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":435163,"byte_end":435174,"line_start":82,"line_end":82,"column_start":45,"column_end":56},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2657},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":436955,"byte_end":436964,"line_start":145,"line_end":145,"column_start":6,"column_end":15},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":7940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\decoder.rs","byte_start":437257,"byte_end":437267,"line_start":157,"line_end":157,"column_start":6,"column_end":16},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":476440,"byte_end":476449,"line_start":184,"line_end":184,"column_start":16,"column_end":25},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":479924,"byte_end":479936,"line_start":316,"line_end":316,"column_start":6,"column_end":18},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":7068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480274,"byte_end":480286,"line_start":328,"line_end":328,"column_start":18,"column_end":30},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":7068},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":480916,"byte_end":480927,"line_start":353,"line_end":353,"column_start":16,"column_end":27},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\jpeg\\encoder.rs","byte_start":491506,"byte_end":491517,"line_start":656,"line_end":656,"column_start":33,"column_end":44},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2827},"to":{"krate":0,"index":5964}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":514545,"byte_end":514559,"line_start":50,"line_end":50,"column_start":22,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":7083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":517217,"byte_end":517231,"line_start":109,"line_end":109,"column_start":52,"column_end":66},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":7083},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":526754,"byte_end":526768,"line_start":344,"line_end":344,"column_start":9,"column_end":23},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":7092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\openexr.rs","byte_start":527074,"byte_end":527088,"line_start":352,"line_end":352,"column_start":26,"column_end":40},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":7092},"to":{"krate":0,"index":5964}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":537739,"byte_end":537748,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":538540,"byte_end":538549,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3143},"to":{"krate":1,"index":4667}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":539942,"byte_end":539952,"line_start":118,"line_end":118,"column_start":15,"column_end":25},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":545224,"byte_end":545234,"line_start":229,"line_end":229,"column_start":45,"column_end":55},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3155},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":547295,"byte_end":547306,"line_start":293,"line_end":293,"column_start":15,"column_end":26},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":552977,"byte_end":552988,"line_start":440,"line_end":440,"column_start":49,"column_end":60},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3186},"to":{"krate":0,"index":5961}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":553126,"byte_end":553139,"line_start":444,"line_end":444,"column_start":36,"column_end":49},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3204},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":555750,"byte_end":555760,"line_start":525,"line_end":525,"column_start":16,"column_end":26},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":560089,"byte_end":560099,"line_start":624,"line_end":624,"column_start":33,"column_end":43},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3212},"to":{"krate":0,"index":5964}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":561846,"byte_end":561856,"line_start":667,"line_end":667,"column_start":6,"column_end":16},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":562796,"byte_end":562811,"line_start":690,"line_end":690,"column_start":18,"column_end":33},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":7099},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":562897,"byte_end":562907,"line_start":696,"line_end":696,"column_start":18,"column_end":28},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":7121},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":562997,"byte_end":563017,"line_start":702,"line_end":702,"column_start":23,"column_end":43},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":7145},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\png.rs","byte_start":563323,"byte_end":563343,"line_start":714,"line_end":714,"column_start":28,"column_end":48},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":7145},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\autobreak.rs","byte_start":571628,"byte_end":571637,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\autobreak.rs","byte_start":572898,"byte_end":572907,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3293},"to":{"krate":1,"index":4724}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\autobreak.rs","byte_start":573533,"byte_end":573542,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3293},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":577475,"byte_end":577487,"line_start":84,"line_end":84,"column_start":18,"column_end":30},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":7161},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":580851,"byte_end":580861,"line_start":163,"line_end":163,"column_start":29,"column_end":39},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":581017,"byte_end":581029,"line_start":169,"line_end":169,"column_start":23,"column_end":35},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":7161},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":581505,"byte_end":581518,"line_start":191,"line_end":191,"column_start":18,"column_end":31},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":7220},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":582110,"byte_end":582125,"line_start":213,"line_end":213,"column_start":18,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":7247},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":583147,"byte_end":583157,"line_start":256,"line_end":256,"column_start":18,"column_end":28},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":586878,"byte_end":586885,"line_start":356,"line_end":356,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":4749},"to":{"krate":0,"index":3469}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":594715,"byte_end":594716,"line_start":569,"line_end":569,"column_start":26,"column_end":27},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3490},"to":{"krate":0,"index":3469}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":594859,"byte_end":594868,"line_start":573,"line_end":573,"column_start":18,"column_end":27},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3491},"to":{"krate":1,"index":4667}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":595281,"byte_end":595291,"line_start":587,"line_end":587,"column_start":45,"column_end":55},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3456},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":597024,"byte_end":597034,"line_start":636,"line_end":636,"column_start":15,"column_end":25},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":599606,"byte_end":599608,"line_start":703,"line_end":703,"column_start":17,"column_end":19},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3446},"to":{"krate":0,"index":3442}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":600116,"byte_end":600119,"line_start":721,"line_end":721,"column_start":17,"column_end":20},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3448},"to":{"krate":0,"index":3442}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":601118,"byte_end":601124,"line_start":747,"line_end":747,"column_start":17,"column_end":23},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3450},"to":{"krate":0,"index":3442}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":602432,"byte_end":602437,"line_start":785,"line_end":785,"column_start":17,"column_end":22},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3452},"to":{"krate":0,"index":3442}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":603085,"byte_end":603097,"line_start":803,"line_end":803,"column_start":31,"column_end":43},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7343},"to":{"krate":0,"index":3454}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":603222,"byte_end":603235,"line_start":809,"line_end":809,"column_start":31,"column_end":44},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":7352},"to":{"krate":0,"index":3454}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":603551,"byte_end":603563,"line_start":819,"line_end":819,"column_start":31,"column_end":43},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":7362},"to":{"krate":0,"index":3454}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\decoder.rs","byte_start":603873,"byte_end":603888,"line_start":829,"line_end":829,"column_start":31,"column_end":46},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":7372},"to":{"krate":0,"index":3454}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":622458,"byte_end":622468,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":630356,"byte_end":630366,"line_start":291,"line_end":291,"column_start":33,"column_end":43},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3643},"to":{"krate":0,"index":5964}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":630599,"byte_end":630617,"line_start":303,"line_end":303,"column_start":10,"column_end":28},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":631487,"byte_end":631502,"line_start":331,"line_end":331,"column_start":10,"column_end":25},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":632063,"byte_end":632080,"line_start":352,"line_end":352,"column_start":10,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":636101,"byte_end":636119,"line_start":446,"line_end":446,"column_start":10,"column_end":28},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":638568,"byte_end":638581,"line_start":510,"line_end":510,"column_start":10,"column_end":23},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":638892,"byte_end":638904,"line_start":523,"line_end":523,"column_start":10,"column_end":22},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":640321,"byte_end":640332,"line_start":568,"line_end":568,"column_start":10,"column_end":21},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":7290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":642043,"byte_end":642054,"line_start":622,"line_end":622,"column_start":29,"column_end":40},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":7290},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":642173,"byte_end":642184,"line_start":628,"line_end":628,"column_start":30,"column_end":41},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":7290},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\encoder.rs","byte_start":642285,"byte_end":642298,"line_start":634,"line_end":634,"column_start":10,"column_end":23},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":647155,"byte_end":647172,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":7382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":647684,"byte_end":647694,"line_start":150,"line_end":150,"column_start":6,"column_end":16},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":7319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":648664,"byte_end":648673,"line_start":175,"line_end":175,"column_start":6,"column_end":15},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":653347,"byte_end":653361,"line_start":297,"line_end":297,"column_start":43,"column_end":57},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3778},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":654040,"byte_end":654049,"line_start":320,"line_end":320,"column_start":29,"column_end":38},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3746},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":654242,"byte_end":654251,"line_start":329,"line_end":329,"column_start":30,"column_end":39},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3746},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":654445,"byte_end":654454,"line_start":338,"line_end":338,"column_start":29,"column_end":38},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3746},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\pnm\\header.rs","byte_start":654649,"byte_end":654658,"line_start":347,"line_end":347,"column_start":32,"column_end":41},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3746},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":655729,"byte_end":655737,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":656917,"byte_end":656927,"line_start":70,"line_end":70,"column_start":22,"column_end":32},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":669535,"byte_end":669545,"line_start":414,"line_end":414,"column_start":52,"column_end":62},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3878},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\decoder.rs","byte_start":672458,"byte_end":672467,"line_start":497,"line_end":497,"column_start":31,"column_end":40},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3921},"to":{"krate":1,"index":4667}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673112,"byte_end":673124,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":7402},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673491,"byte_end":673501,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673657,"byte_end":673669,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":7402},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":673758,"byte_end":673768,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\encoder.rs","byte_start":675292,"byte_end":675302,"line_start":88,"line_end":88,"column_start":33,"column_end":43},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3970},"to":{"krate":0,"index":5964}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\header.rs","byte_start":680156,"byte_end":680165,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tga\\header.rs","byte_start":682083,"byte_end":682089,"line_start":80,"line_end":80,"column_start":6,"column_end":12},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":7428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":685902,"byte_end":685913,"line_start":36,"line_end":36,"column_start":9,"column_end":20},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":688730,"byte_end":688740,"line_start":109,"line_end":109,"column_start":6,"column_end":16},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":6206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":690621,"byte_end":690631,"line_start":153,"line_end":153,"column_start":18,"column_end":28},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4146},"to":{"krate":1,"index":4667}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":691051,"byte_end":691062,"line_start":167,"line_end":167,"column_start":52,"column_end":63},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4133},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":695498,"byte_end":695509,"line_start":282,"line_end":282,"column_start":23,"column_end":34},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\tiff.rs","byte_start":697463,"byte_end":697474,"line_start":334,"line_end":334,"column_start":40,"column_end":51},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4164},"to":{"krate":0,"index":5964}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":699174,"byte_end":699186,"line_start":27,"line_end":27,"column_start":23,"column_end":35},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":7445},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":699323,"byte_end":699338,"line_start":30,"line_end":30,"column_start":31,"column_end":46},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4267},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":700246,"byte_end":700256,"line_start":57,"line_end":57,"column_start":29,"column_end":39},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":700413,"byte_end":700425,"line_start":63,"line_end":63,"column_start":23,"column_end":35},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":7445},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":700707,"byte_end":700720,"line_start":82,"line_end":82,"column_start":6,"column_end":19},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":7466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":702105,"byte_end":702116,"line_start":129,"line_end":129,"column_start":15,"column_end":26},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":705946,"byte_end":705956,"line_start":256,"line_end":256,"column_start":18,"column_end":28},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4308},"to":{"krate":1,"index":4667}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":706369,"byte_end":706380,"line_start":270,"line_end":270,"column_start":45,"column_end":56},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4291},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\decoder.rs","byte_start":708568,"byte_end":708579,"line_start":332,"line_end":332,"column_start":49,"column_end":60},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4291},"to":{"krate":0,"index":5961}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":710651,"byte_end":710663,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":7497},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":711373,"byte_end":711383,"line_start":44,"line_end":44,"column_start":29,"column_end":39},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":711540,"byte_end":711552,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":7497},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":712070,"byte_end":712083,"line_start":78,"line_end":78,"column_start":6,"column_end":19},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":7534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":712610,"byte_end":712623,"line_start":98,"line_end":98,"column_start":27,"column_end":40},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4431},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\extended.rs","byte_start":721121,"byte_end":721131,"line_start":337,"line_end":337,"column_start":6,"column_end":16},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":7539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\huffman.rs","byte_start":734485,"byte_end":734496,"line_start":28,"line_end":28,"column_start":6,"column_end":17},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":7608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":747038,"byte_end":747050,"line_start":81,"line_end":81,"column_start":23,"column_end":35},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":7620},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":748053,"byte_end":748063,"line_start":105,"line_end":105,"column_start":29,"column_end":39},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":748220,"byte_end":748232,"line_start":111,"line_end":111,"column_start":23,"column_end":35},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":7620},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":748535,"byte_end":748550,"line_start":125,"line_end":125,"column_start":15,"column_end":30},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":7641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":766187,"byte_end":766198,"line_start":641,"line_end":641,"column_start":6,"column_end":17},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":7652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":766618,"byte_end":766628,"line_start":658,"line_end":658,"column_start":6,"column_end":16},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":7664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":767159,"byte_end":767168,"line_start":679,"line_end":679,"column_start":6,"column_end":15},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":7671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless.rs","byte_start":768239,"byte_end":768252,"line_start":724,"line_end":724,"column_start":6,"column_end":19},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":7679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless_transform.rs","byte_start":770703,"byte_end":770716,"line_start":24,"line_end":24,"column_start":6,"column_end":19},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":7689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\lossless_transform.rs","byte_start":785496,"byte_end":785517,"line_start":406,"line_end":406,"column_start":6,"column_end":27},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":7705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":816565,"byte_end":816577,"line_start":689,"line_end":689,"column_start":23,"column_end":35},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":7811},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":817701,"byte_end":817711,"line_start":717,"line_end":717,"column_start":29,"column_end":39},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":817868,"byte_end":817880,"line_start":723,"line_end":723,"column_start":23,"column_end":35},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":7811},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":818001,"byte_end":818011,"line_start":734,"line_end":734,"column_start":6,"column_end":16},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":821734,"byte_end":821739,"line_start":884,"line_end":884,"column_start":6,"column_end":11},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":7852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":824881,"byte_end":824891,"line_start":1009,"line_end":1009,"column_start":15,"column_end":25},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":862739,"byte_end":862747,"line_start":2105,"line_end":2105,"column_start":6,"column_end":14},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":7714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":863364,"byte_end":863372,"line_start":2128,"line_end":2128,"column_start":18,"column_end":26},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":7714},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":863437,"byte_end":863447,"line_start":2134,"line_end":2134,"column_start":6,"column_end":16},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":7741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":863736,"byte_end":863746,"line_start":2146,"line_end":2146,"column_start":18,"column_end":28},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":7741},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":863813,"byte_end":863822,"line_start":2152,"line_end":2152,"column_start":6,"column_end":15},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":7765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\codecs\\webp\\vp8.rs","byte_start":864359,"byte_end":864368,"line_start":2170,"line_end":2170,"column_start":18,"column_end":27},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":7765},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":887598,"byte_end":887604,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888194,"byte_end":888200,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":888719,"byte_end":888724,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":7886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":889799,"byte_end":889804,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":7893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\animation.rs","byte_start":895993,"byte_end":896001,"line_start":270,"line_end":270,"column_start":22,"column_end":30},"kind":{"Impl":{"id":257}},"from":{"krate":2,"index":50200},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":899531,"byte_end":899537,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5059},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":899917,"byte_end":899923,"line_start":44,"line_end":44,"column_start":47,"column_end":53},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5059},"to":{"krate":2,"index":8479}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900072,"byte_end":900078,"line_start":53,"line_end":53,"column_start":49,"column_end":55},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5059},"to":{"krate":2,"index":8454}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900287,"byte_end":900293,"line_start":63,"line_end":63,"column_start":26,"column_end":32},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5059},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900440,"byte_end":900446,"line_start":71,"line_end":71,"column_start":31,"column_end":37},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5059},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":900848,"byte_end":900857,"line_start":90,"line_end":90,"column_start":38,"column_end":47},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5085},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901249,"byte_end":901258,"line_start":108,"line_end":108,"column_start":47,"column_end":56},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5085},"to":{"krate":2,"index":8479}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901407,"byte_end":901416,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5085},"to":{"krate":2,"index":8454}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":901664,"byte_end":901673,"line_start":129,"line_end":129,"column_start":31,"column_end":40},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5085},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":902226,"byte_end":902230,"line_start":152,"line_end":152,"column_start":25,"column_end":29},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903148,"byte_end":903152,"line_start":174,"line_end":174,"column_start":38,"column_end":42},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5108},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903698,"byte_end":903702,"line_start":196,"line_end":196,"column_start":47,"column_end":51},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5108},"to":{"krate":2,"index":8479}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":903851,"byte_end":903855,"line_start":205,"line_end":205,"column_start":49,"column_end":53},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5108},"to":{"krate":2,"index":8454}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904222,"byte_end":904226,"line_start":219,"line_end":219,"column_start":26,"column_end":30},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5108},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904371,"byte_end":904375,"line_start":227,"line_end":227,"column_start":31,"column_end":35},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5108},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":904949,"byte_end":904956,"line_start":250,"line_end":250,"column_start":25,"column_end":32},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":905896,"byte_end":905903,"line_start":272,"line_end":272,"column_start":38,"column_end":45},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5136},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":906462,"byte_end":906469,"line_start":294,"line_end":294,"column_start":47,"column_end":54},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5136},"to":{"krate":2,"index":8479}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":906618,"byte_end":906625,"line_start":303,"line_end":303,"column_start":49,"column_end":56},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5136},"to":{"krate":2,"index":8454}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":907007,"byte_end":907014,"line_start":317,"line_end":317,"column_start":31,"column_end":38},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5136},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":907457,"byte_end":907472,"line_start":339,"line_end":339,"column_start":38,"column_end":53},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5161},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908011,"byte_end":908026,"line_start":363,"line_end":363,"column_start":47,"column_end":62},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5161},"to":{"krate":2,"index":8479}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908152,"byte_end":908167,"line_start":372,"line_end":372,"column_start":26,"column_end":41},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5161},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908343,"byte_end":908358,"line_start":381,"line_end":381,"column_start":31,"column_end":46},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5161},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":908896,"byte_end":908909,"line_start":405,"line_end":405,"column_start":38,"column_end":51},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5185},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":909583,"byte_end":909596,"line_start":435,"line_end":435,"column_start":47,"column_end":60},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5185},"to":{"krate":2,"index":8479}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":909720,"byte_end":909733,"line_start":444,"line_end":444,"column_start":26,"column_end":39},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5185},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":909903,"byte_end":909916,"line_start":453,"line_end":453,"column_start":31,"column_end":44},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5185},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":910441,"byte_end":910459,"line_start":477,"line_end":477,"column_start":38,"column_end":56},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5208},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":911006,"byte_end":911024,"line_start":501,"line_end":501,"column_start":47,"column_end":65},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5208},"to":{"krate":2,"index":8479}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":911155,"byte_end":911173,"line_start":510,"line_end":510,"column_start":31,"column_end":49},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5208},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":911720,"byte_end":911736,"line_start":534,"line_end":534,"column_start":38,"column_end":54},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5229},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":912419,"byte_end":912435,"line_start":564,"line_end":564,"column_start":47,"column_end":63},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5229},"to":{"krate":2,"index":8479}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":912564,"byte_end":912580,"line_start":573,"line_end":573,"column_start":31,"column_end":47},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5229},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":915455,"byte_end":915466,"line_start":663,"line_end":663,"column_start":20,"column_end":31},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":7909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":923248,"byte_end":923259,"line_start":884,"line_end":884,"column_start":20,"column_end":31},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":7909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":926593,"byte_end":926604,"line_start":982,"line_end":982,"column_start":20,"column_end":31},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":7909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":927200,"byte_end":927211,"line_start":1006,"line_end":1006,"column_start":20,"column_end":31},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":7909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":927993,"byte_end":928004,"line_start":1034,"line_end":1034,"column_start":20,"column_end":31},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":7909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":928949,"byte_end":928960,"line_start":1065,"line_end":1065,"column_start":32,"column_end":43},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":7909},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":929229,"byte_end":929240,"line_start":1080,"line_end":1080,"column_start":30,"column_end":41},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":7909},"to":{"krate":2,"index":3491}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":929468,"byte_end":929479,"line_start":1092,"line_end":1092,"column_start":33,"column_end":44},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":7909},"to":{"krate":2,"index":3504}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":929709,"byte_end":929720,"line_start":1102,"line_end":1102,"column_start":42,"column_end":53},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":7909},"to":{"krate":2,"index":3576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":929955,"byte_end":929966,"line_start":1114,"line_end":1114,"column_start":45,"column_end":56},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":7909},"to":{"krate":2,"index":3580}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":930191,"byte_end":930202,"line_start":1124,"line_end":1124,"column_start":30,"column_end":41},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":7909},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":930561,"byte_end":930572,"line_start":1139,"line_end":1139,"column_start":41,"column_end":52},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":7909},"to":{"krate":0,"index":5974}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":931261,"byte_end":931272,"line_start":1166,"line_end":1166,"column_start":37,"column_end":48},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":7909},"to":{"krate":0,"index":5985}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":933935,"byte_end":933946,"line_start":1238,"line_end":1238,"column_start":16,"column_end":27},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":7909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":936348,"byte_end":936357,"line_start":1313,"line_end":1313,"column_start":6,"column_end":15},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\buffer.rs","byte_start":937735,"byte_end":937746,"line_start":1351,"line_end":1351,"column_start":67,"column_end":78},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":7909},"to":{"krate":0,"index":5355}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":951587,"byte_end":951596,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":7940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":955248,"byte_end":955265,"line_start":151,"line_end":151,"column_start":6,"column_end":23},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":7975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":956586,"byte_end":956603,"line_start":187,"line_end":187,"column_start":26,"column_end":43},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":7975},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":962123,"byte_end":962124,"line_start":378,"line_end":378,"column_start":41,"column_end":42},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":5423},"to":{"krate":0,"index":5419}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":964366,"byte_end":964367,"line_start":454,"line_end":454,"column_start":29,"column_end":30},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":5447},"to":{"krate":0,"index":5442}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":965390,"byte_end":965394,"line_start":481,"line_end":481,"column_start":57,"column_end":61},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":8261},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":965668,"byte_end":965672,"line_start":492,"line_end":492,"column_start":58,"column_end":62},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":8261},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":965908,"byte_end":965912,"line_start":501,"line_end":501,"column_start":70,"column_end":74},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":8261},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":966206,"byte_end":966210,"line_start":512,"line_end":512,"column_start":71,"column_end":75},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":8261},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":966537,"byte_end":966542,"line_start":526,"line_end":526,"column_start":58,"column_end":63},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":8319},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":966875,"byte_end":966880,"line_start":538,"line_end":538,"column_start":70,"column_end":75},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":8319},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":967220,"byte_end":967225,"line_start":550,"line_end":550,"column_start":71,"column_end":76},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":8319},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":967560,"byte_end":967565,"line_start":562,"line_end":562,"column_start":57,"column_end":62},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":8319},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":967884,"byte_end":967888,"line_start":575,"line_end":575,"column_start":57,"column_end":61},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":8290},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":968282,"byte_end":968286,"line_start":589,"line_end":589,"column_start":56,"column_end":60},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":8290},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":968671,"byte_end":968675,"line_start":603,"line_end":603,"column_start":58,"column_end":62},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":8290},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":969069,"byte_end":969073,"line_start":617,"line_end":617,"column_start":57,"column_end":61},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":8290},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":969476,"byte_end":969479,"line_start":633,"line_end":633,"column_start":56,"column_end":59},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":8232},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":969827,"byte_end":969830,"line_start":646,"line_end":646,"column_start":57,"column_end":60},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":8232},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":970176,"byte_end":970179,"line_start":659,"line_end":659,"column_start":58,"column_end":61},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":8232},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":970518,"byte_end":970521,"line_start":672,"line_end":672,"column_start":57,"column_end":60},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":8232},"to":{"krate":0,"index":5439}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":970969,"byte_end":970974,"line_start":691,"line_end":691,"column_start":30,"column_end":35},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":8319},"to":{"krate":0,"index":5518}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":971985,"byte_end":971989,"line_start":724,"line_end":724,"column_start":30,"column_end":34},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":8261},"to":{"krate":0,"index":5518}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":972099,"byte_end":972103,"line_start":730,"line_end":730,"column_start":30,"column_end":34},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":8290},"to":{"krate":0,"index":5518}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":974486,"byte_end":974489,"line_start":794,"line_end":794,"column_start":30,"column_end":33},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":8232},"to":{"krate":0,"index":5518}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":974707,"byte_end":974712,"line_start":806,"line_end":806,"column_start":31,"column_end":36},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":8319},"to":{"krate":0,"index":5532}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":974891,"byte_end":974895,"line_start":815,"line_end":815,"column_start":31,"column_end":35},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":8261},"to":{"krate":0,"index":5532}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":975089,"byte_end":975093,"line_start":826,"line_end":826,"column_start":31,"column_end":35},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":8290},"to":{"krate":0,"index":5532}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\color.rs","byte_start":975311,"byte_end":975314,"line_start":836,"line_end":836,"column_start":31,"column_end":34},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":8232},"to":{"krate":0,"index":5532}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":983948,"byte_end":983960,"line_start":122,"line_end":122,"column_start":6,"column_end":18},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":8348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011454,"byte_end":1011466,"line_start":882,"line_end":882,"column_start":26,"column_end":38},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011588,"byte_end":1011600,"line_start":888,"line_end":888,"column_start":31,"column_end":43},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011722,"byte_end":1011734,"line_start":894,"line_end":894,"column_start":25,"column_end":37},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011849,"byte_end":1011861,"line_start":900,"line_end":900,"column_start":26,"column_end":38},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1011980,"byte_end":1011992,"line_start":906,"line_end":906,"column_start":28,"column_end":40},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012119,"byte_end":1012131,"line_start":912,"line_end":912,"column_start":33,"column_end":45},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012258,"byte_end":1012270,"line_start":918,"line_end":918,"column_start":27,"column_end":39},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012390,"byte_end":1012402,"line_start":924,"line_end":924,"column_start":28,"column_end":40},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012524,"byte_end":1012536,"line_start":930,"line_end":930,"column_start":28,"column_end":40},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012659,"byte_end":1012671,"line_start":936,"line_end":936,"column_start":29,"column_end":41},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1012816,"byte_end":1012828,"line_start":942,"line_end":942,"column_start":49,"column_end":61},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1013003,"byte_end":1013015,"line_start":948,"line_end":948,"column_start":50,"column_end":62},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1013190,"byte_end":1013202,"line_start":955,"line_end":955,"column_start":27,"column_end":39},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":8348},"to":{"krate":0,"index":5974}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1013700,"byte_end":1013712,"line_start":972,"line_end":972,"column_start":23,"column_end":35},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":8348},"to":{"krate":0,"index":5985}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\dynimage.rs","byte_start":1016125,"byte_end":1016137,"line_start":1017,"line_end":1017,"column_start":18,"column_end":30},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":8348},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1028299,"byte_end":1028310,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":8402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1036425,"byte_end":1036442,"line_start":315,"line_end":315,"column_start":28,"column_end":45},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":8445},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1038144,"byte_end":1038159,"line_start":361,"line_end":361,"column_start":6,"column_end":21},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1047393,"byte_end":1047401,"line_start":606,"line_end":606,"column_start":6,"column_end":14},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":8482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1048105,"byte_end":1048110,"line_start":631,"line_end":631,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3273},"to":{"krate":0,"index":5941}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052893,"byte_end":1052905,"line_start":751,"line_end":751,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":5941},"to":{"krate":0,"index":5955}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1052912,"byte_end":1052917,"line_start":751,"line_end":751,"column_start":52,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":3273},"to":{"krate":0,"index":5955}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055336,"byte_end":1055342,"line_start":824,"line_end":824,"column_start":44,"column_end":50},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":8497},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1055810,"byte_end":1055816,"line_start":846,"line_end":846,"column_start":27,"column_end":33},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":8497},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1058438,"byte_end":1058454,"line_start":939,"line_end":939,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":5974},"to":{"krate":0,"index":5985}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1066092,"byte_end":1066100,"line_start":1130,"line_end":1130,"column_start":9,"column_end":17},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":8509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1067449,"byte_end":1067457,"line_start":1174,"line_end":1174,"column_start":9,"column_end":17},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":8509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1068864,"byte_end":1068872,"line_start":1212,"line_end":1212,"column_start":9,"column_end":17},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":8509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1069688,"byte_end":1069696,"line_start":1240,"line_end":1240,"column_start":19,"column_end":27},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":8509},"to":{"krate":2,"index":3491}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1069847,"byte_end":1069855,"line_start":1250,"line_end":1250,"column_start":22,"column_end":30},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":8509},"to":{"krate":2,"index":3504}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1070018,"byte_end":1070031,"line_start":1260,"line_end":1260,"column_start":30,"column_end":43},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":8517},"to":{"krate":0,"index":5974}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\image.rs","byte_start":1070504,"byte_end":1070517,"line_start":1281,"line_end":1281,"column_start":26,"column_end":39},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":8517},"to":{"krate":0,"index":5985}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1087974,"byte_end":1087989,"line_start":12,"line_end":12,"column_start":35,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":6187},"to":{"krate":0,"index":6063}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088577,"byte_end":1088581,"line_start":37,"line_end":37,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3278},"to":{"krate":0,"index":6071}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088584,"byte_end":1088591,"line_start":37,"line_end":37,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":34,"index":362},"to":{"krate":0,"index":6071}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088594,"byte_end":1088597,"line_start":37,"line_end":37,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":34,"index":968},"to":{"krate":0,"index":6071}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088600,"byte_end":1088610,"line_start":37,"line_end":37,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2966},"to":{"krate":0,"index":6071}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088619,"byte_end":1088624,"line_start":37,"line_end":37,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2887},"to":{"krate":0,"index":6071}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1088627,"byte_end":1088634,"line_start":37,"line_end":37,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":34,"index":237},"to":{"krate":0,"index":6071}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1089999,"byte_end":1090004,"line_start":72,"line_end":72,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3273},"to":{"krate":0,"index":6075}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1090007,"byte_end":1090014,"line_start":72,"line_end":72,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":34,"index":237},"to":{"krate":0,"index":6075}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1090017,"byte_end":1090024,"line_start":72,"line_end":72,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":34,"index":362},"to":{"krate":0,"index":6075}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1091327,"byte_end":1091334,"line_start":130,"line_end":130,"column_start":17,"column_end":24},"kind":"SuperTrait","from":{"krate":34,"index":237},"to":{"krate":0,"index":6103}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1091337,"byte_end":1091344,"line_start":130,"line_end":130,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":34,"index":362},"to":{"krate":0,"index":6103}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092277,"byte_end":1092282,"line_start":171,"line_end":171,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":6150},"to":{"krate":0,"index":6115}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092300,"byte_end":1092324,"line_start":171,"line_end":171,"column_start":54,"column_end":78},"kind":"SuperTrait","from":{"krate":0,"index":6139},"to":{"krate":0,"index":6115}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092615,"byte_end":1092618,"line_start":179,"line_end":179,"column_start":29,"column_end":32},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":8232},"to":{"krate":0,"index":6115}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092706,"byte_end":1092709,"line_start":182,"line_end":182,"column_start":29,"column_end":32},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":8232},"to":{"krate":0,"index":6115}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092799,"byte_end":1092802,"line_start":185,"line_end":185,"column_start":29,"column_end":32},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":8232},"to":{"krate":0,"index":6115}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092894,"byte_end":1092898,"line_start":189,"line_end":189,"column_start":29,"column_end":33},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":8290},"to":{"krate":0,"index":6115}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1092987,"byte_end":1092991,"line_start":192,"line_end":192,"column_start":29,"column_end":33},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":8290},"to":{"krate":0,"index":6115}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093082,"byte_end":1093086,"line_start":195,"line_end":195,"column_start":29,"column_end":33},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":8290},"to":{"krate":0,"index":6115}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093179,"byte_end":1093183,"line_start":199,"line_end":199,"column_start":29,"column_end":33},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":8261},"to":{"krate":0,"index":6115}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093269,"byte_end":1093273,"line_start":202,"line_end":202,"column_start":29,"column_end":33},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":8261},"to":{"krate":0,"index":6115}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093361,"byte_end":1093366,"line_start":205,"line_end":205,"column_start":29,"column_end":34},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":8319},"to":{"krate":0,"index":6115}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093453,"byte_end":1093458,"line_start":208,"line_end":208,"column_start":29,"column_end":34},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":8319},"to":{"krate":0,"index":6115}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093711,"byte_end":1093714,"line_start":217,"line_end":217,"column_start":39,"column_end":42},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":8232},"to":{"krate":0,"index":6139}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093760,"byte_end":1093763,"line_start":218,"line_end":218,"column_start":39,"column_end":42},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":8232},"to":{"krate":0,"index":6139}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093810,"byte_end":1093813,"line_start":219,"line_end":219,"column_start":39,"column_end":42},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":8232},"to":{"krate":0,"index":6139}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093861,"byte_end":1093865,"line_start":221,"line_end":221,"column_start":39,"column_end":43},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":8290},"to":{"krate":0,"index":6139}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093911,"byte_end":1093915,"line_start":222,"line_end":222,"column_start":39,"column_end":43},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":8290},"to":{"krate":0,"index":6139}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1093962,"byte_end":1093966,"line_start":223,"line_end":223,"column_start":39,"column_end":43},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":8290},"to":{"krate":0,"index":6139}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094014,"byte_end":1094018,"line_start":225,"line_end":225,"column_start":39,"column_end":43},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":8261},"to":{"krate":0,"index":6139}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094064,"byte_end":1094069,"line_start":226,"line_end":226,"column_start":39,"column_end":44},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":8319},"to":{"krate":0,"index":6139}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094116,"byte_end":1094120,"line_start":228,"line_end":228,"column_start":39,"column_end":43},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":8261},"to":{"krate":0,"index":6139}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094167,"byte_end":1094172,"line_start":229,"line_end":229,"column_start":39,"column_end":44},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":8319},"to":{"krate":0,"index":6139}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094316,"byte_end":1094320,"line_start":235,"line_end":235,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":3278},"to":{"krate":0,"index":6150}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.5\\./src\\traits.rs","byte_start":1094323,"byte_end":1094328,"line_start":235,"line_end":235,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2887},"to":{"krate":0,"index":6150}}]}