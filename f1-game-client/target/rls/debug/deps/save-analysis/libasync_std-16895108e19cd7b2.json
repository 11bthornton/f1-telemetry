{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0","program":"C:\\Users\\Ben\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","async_std","--edition=2018","C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-channel\"","--cfg","feature=\"async-global-executor\"","--cfg","feature=\"async-io\"","--cfg","feature=\"async-lock\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-channel\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-lite\"","--cfg","feature=\"gloo-timers\"","--cfg","feature=\"kv-log-macro\"","--cfg","feature=\"log\"","--cfg","feature=\"memchr\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"pin-utils\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","--cfg","feature=\"wasm-bindgen-futures\"","-C","metadata=16895108e19cd7b2","-C","extra-filename=-16895108e19cd7b2","--out-dir","c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps","--extern","async_channel=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libasync_channel-2ec4d088c446dd8e.rmeta","--extern","async_global_executor=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libasync_global_executor-deae23dccb8ae3fd.rmeta","--extern","async_io=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libasync_io-01625f8aad49ab14.rmeta","--extern","async_lock=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libasync_lock-0cf6e986b133be57.rmeta","--extern","crossbeam_utils=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libcrossbeam_utils-ea438954782dfe0a.rmeta","--extern","futures_core=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libfutures_core-6c662d95f77b2f87.rmeta","--extern","futures_io=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libfutures_io-91ac66a646e2d9b6.rmeta","--extern","futures_lite=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libfutures_lite-f535b464b080ecdc.rmeta","--extern","kv_log_macro=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libkv_log_macro-53e96cdd4911abb7.rmeta","--extern","log=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\liblog-8ba5e39123a654c6.rmeta","--extern","memchr=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libmemchr-a7c56888e2e2e346.rmeta","--extern","once_cell=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libonce_cell-289f6e181fa116d7.rmeta","--extern","pin_project_lite=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libpin_project_lite-cbd0e9a622ede1d9.rmeta","--extern","pin_utils=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libpin_utils-f186234556ab0239.rmeta","--extern","slab=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libslab-98d8df007dba1138.rmeta","--cap-lints","allow","-L","native=C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.30.30705\\atlmfc\\lib\\x64","-L","native=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\build\\wepoll-ffi-34f6e8a25ccce791\\out","-L","native=C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.42.0\\lib","--error-format=json","--sysroot","C:\\Users\\Ben\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libasync_std-16895108e19cd7b2.rmeta"},"prelude":{"crate_id":{"name":"async_std","disambiguator":[15040876015109348766,0]},"crate_root":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src","external_crates":[{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10288641326355699271,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","num":2,"id":{"name":"core","disambiguator":[5178777620647193466,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7203661724729889941,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17525700935344431946,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14114419768508526436,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[7430704726206783492,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12664251144516306473,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5349691386245612169,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7588176879124425336,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12802573245210436658,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[15058356585373963657,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11406058276128544710,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[12054102872615165506,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15575797803660711391,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[2170788131994516450,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":16,"id":{"name":"kv_log_macro","disambiguator":[1974577118347118945,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":17,"id":{"name":"log","disambiguator":[12962908896140855491,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","num":18,"id":{"name":"cfg_if","disambiguator":[7872221195650628815,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":19,"id":{"name":"value_bag","disambiguator":[12614158785438163357,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","num":20,"id":{"name":"futures_core","disambiguator":[13412865793139997503,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","num":21,"id":{"name":"pin_project_lite","disambiguator":[6621430443817631547,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","num":22,"id":{"name":"async_lock","disambiguator":[14123118671153444933,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","num":23,"id":{"name":"event_listener","disambiguator":[9686504692904195901,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":24,"id":{"name":"futures_lite","disambiguator":[1819541201088999364,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","num":25,"id":{"name":"parking","disambiguator":[3009397415668499507,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","num":26,"id":{"name":"waker_fn","disambiguator":[13797696997638982724,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","num":27,"id":{"name":"futures_io","disambiguator":[2244033671744110353,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","num":28,"id":{"name":"fastrand","disambiguator":[2196587609525212048,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","num":29,"id":{"name":"memchr","disambiguator":[14172788285213947117,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","num":30,"id":{"name":"async_channel","disambiguator":[7935052298102017327,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","num":31,"id":{"name":"concurrent_queue","disambiguator":[17317036530603466288,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","num":32,"id":{"name":"crossbeam_utils","disambiguator":[12261398158359852006,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":33,"id":{"name":"async_io","disambiguator":[8107040055704591989,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":34,"id":{"name":"socket2","disambiguator":[5241300313612454483,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":35,"id":{"name":"winapi","disambiguator":[3052853135328917355,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":36,"id":{"name":"polling","disambiguator":[8796988399382582089,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":37,"id":{"name":"wepoll_ffi","disambiguator":[15026773439058360796,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":38,"id":{"name":"windows_sys","disambiguator":[12860283537905889122,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":39,"id":{"name":"slab","disambiguator":[5853818257851179701,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\rt\\mod.rs","num":40,"id":{"name":"once_cell","disambiguator":[10393899279476839872,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":41,"id":{"name":"async_global_executor","disambiguator":[2708343429675199288,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":42,"id":{"name":"async_executor","disambiguator":[5134366392137640764,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":43,"id":{"name":"async_task","disambiguator":[3367316793432617638,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":44,"id":{"name":"blocking","disambiguator":[7743457954385452898,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":45,"id":{"name":"atomic_waker","disambiguator":[17199936211266032586,0]}}],"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":0,"byte_end":11549,"line_start":1,"line_end":339,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":14075},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874813,"byte_end":13874820,"line_start":122,"line_end":122,"column_start":26,"column_end":33},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":2,"index":50356},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874822,"byte_end":13874826,"line_start":122,"line_end":122,"column_start":35,"column_end":39},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":2,"index":14085},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874828,"byte_end":13874833,"line_start":122,"line_end":122,"column_start":41,"column_end":46},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":20,"index":169},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874855,"byte_end":13874860,"line_start":123,"line_end":123,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":20,"index":169},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\ready.rs","byte_start":14014810,"byte_end":14014815,"line_start":4,"line_end":4,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1911}},{"kind":"Use","ref_id":{"krate":0,"index":1932},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874915,"byte_end":13874924,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874985,"byte_end":13874993,"line_start":134,"line_end":134,"column_start":23,"column_end":31},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13875016,"byte_end":13875023,"line_start":135,"line_end":135,"column_start":22,"column_end":29},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13875047,"byte_end":13875054,"line_start":136,"line_end":136,"column_start":23,"column_end":30},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13875056,"byte_end":13875067,"line_start":136,"line_end":136,"column_start":32,"column_end":43},"alias_span":null,"name":"try_current","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13875088,"byte_end":13875092,"line_start":137,"line_end":137,"column_start":19,"column_end":23},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13875115,"byte_end":13875121,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2279},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13875115,"byte_end":13875121,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13875148,"byte_end":13875158,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13875179,"byte_end":13875184,"line_start":140,"line_end":140,"column_start":20,"column_end":25},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13875244,"byte_end":13875249,"line_start":142,"line_end":142,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13875276,"byte_end":13875287,"line_start":143,"line_end":143,"column_start":26,"column_end":37},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13875289,"byte_end":13875297,"line_start":143,"line_end":143,"column_start":39,"column_end":47},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2126},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13875756,"byte_end":13875770,"line_start":163,"line_end":163,"column_start":29,"column_end":43},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":2,"index":13773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13878442,"byte_end":13878448,"line_start":50,"line_end":50,"column_start":21,"column_end":27},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":2,"index":13773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\future\\mod.rs","byte_start":14168801,"byte_end":14168807,"line_start":23,"line_end":23,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2332}},{"kind":"Use","ref_id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13878512,"byte_end":13878519,"line_start":55,"line_end":55,"column_start":22,"column_end":29},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":2390},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13878542,"byte_end":13878549,"line_start":56,"line_end":56,"column_start":22,"column_end":29},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":2406},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13878570,"byte_end":13878575,"line_start":57,"line_end":57,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13878703,"byte_end":13878710,"line_start":65,"line_end":65,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":2410},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13878712,"byte_end":13878724,"line_start":65,"line_end":65,"column_start":28,"column_end":40},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891371,"byte_end":13891376,"line_start":304,"line_end":304,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":2424},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891378,"byte_end":13891383,"line_start":304,"line_end":304,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891404,"byte_end":13891411,"line_start":305,"line_end":305,"column_start":19,"column_end":26},"alias_span":null,"name":"from_fn","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891413,"byte_end":13891419,"line_start":305,"line_end":305,"column_start":28,"column_end":34},"alias_span":null,"name":"FromFn","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":1825},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891442,"byte_end":13891451,"line_start":306,"line_end":306,"column_start":21,"column_end":30},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":6593},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891453,"byte_end":13891461,"line_start":306,"line_end":306,"column_start":32,"column_end":40},"alias_span":null,"name":"FromIter","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":1848},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891479,"byte_end":13891483,"line_start":307,"line_end":307,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":6554},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891485,"byte_end":13891489,"line_start":307,"line_end":307,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":1868},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891509,"byte_end":13891515,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":2439},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891517,"byte_end":13891523,"line_start":308,"line_end":308,"column_start":26,"column_end":32},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":1890},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891548,"byte_end":13891559,"line_start":309,"line_end":309,"column_start":23,"column_end":34},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":2448},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891561,"byte_end":13891571,"line_start":309,"line_end":309,"column_start":36,"column_end":46},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":91}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891590,"byte_end":13891591,"line_start":310,"line_end":310,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Stream","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":8185},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894041,"byte_end":13894046,"line_start":98,"line_end":98,"column_start":16,"column_end":21},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":8149},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894064,"byte_end":13894070,"line_start":99,"line_end":99,"column_start":17,"column_end":23},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":8060},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894088,"byte_end":13894094,"line_start":100,"line_end":100,"column_start":17,"column_end":23},"alias_span":null,"name":"Copied","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":7886},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894112,"byte_end":13894118,"line_start":101,"line_end":101,"column_start":17,"column_end":23},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":7687},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894134,"byte_end":13894138,"line_start":102,"line_end":102,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":7556},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894157,"byte_end":13894164,"line_start":103,"line_end":103,"column_start":18,"column_end":25},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":7380},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894179,"byte_end":13894182,"line_start":104,"line_end":104,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":6906},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894198,"byte_end":13894202,"line_start":105,"line_end":105,"column_start":15,"column_end":19},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":6866},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894218,"byte_end":13894222,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":6817},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894244,"byte_end":13894253,"line_start":107,"line_end":107,"column_start":21,"column_end":30},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":6773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894272,"byte_end":13894278,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"alias_span":null,"name":"StepBy","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":6730},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894294,"byte_end":13894298,"line_start":109,"line_end":109,"column_start":15,"column_end":19},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":6681},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894320,"byte_end":13894329,"line_start":110,"line_end":110,"column_start":21,"column_end":30},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":0,"index":6632},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13894344,"byte_end":13894347,"line_start":111,"line_end":111,"column_start":14,"column_end":17},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13895075,"byte_end":13895081,"line_start":146,"line_end":146,"column_start":31,"column_end":37},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":1,"index":4084},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216702,"byte_end":14216707,"line_start":276,"line_end":276,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":1,"index":10203},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216709,"byte_end":14216718,"line_start":276,"line_end":276,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":1,"index":10327},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216720,"byte_end":14216727,"line_start":276,"line_end":276,"column_start":41,"column_end":48},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":1,"index":4685},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216729,"byte_end":14216739,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":1,"index":4082},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216741,"byte_end":14216747,"line_start":276,"line_end":276,"column_start":62,"column_end":68},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":1,"index":10339},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216749,"byte_end":14216757,"line_start":276,"line_end":276,"column_start":70,"column_end":78},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":27,"index":49},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216784,"byte_end":14216791,"line_start":278,"line_end":278,"column_start":24,"column_end":31},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":6506},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216793,"byte_end":14216798,"line_start":278,"line_end":278,"column_start":33,"column_end":38},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":6458},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216800,"byte_end":14216805,"line_start":278,"line_end":278,"column_start":40,"column_end":45},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":6324},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216832,"byte_end":14216841,"line_start":279,"line_end":279,"column_start":25,"column_end":34},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":6283},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216868,"byte_end":14216877,"line_start":280,"line_end":280,"column_start":26,"column_end":35},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3763},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216879,"byte_end":14216893,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216914,"byte_end":14216918,"line_start":281,"line_end":281,"column_start":19,"column_end":23},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3771},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216940,"byte_end":14216946,"line_start":282,"line_end":282,"column_start":21,"column_end":27},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3683},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216968,"byte_end":14216973,"line_start":283,"line_end":283,"column_start":21,"column_end":26},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3684},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216975,"byte_end":14216980,"line_start":283,"line_end":283,"column_start":28,"column_end":33},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":2457}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217001,"byte_end":14217002,"line_start":284,"line_end":284,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"Read, _","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3715},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217025,"byte_end":14217031,"line_start":285,"line_end":285,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3716},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217033,"byte_end":14217039,"line_start":285,"line_end":285,"column_start":30,"column_end":36},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":27,"index":47},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217060,"byte_end":14217064,"line_start":286,"line_end":286,"column_start":19,"column_end":23},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3743},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217085,"byte_end":14217089,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3744},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217091,"byte_end":14217095,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":2457}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217117,"byte_end":14217118,"line_start":288,"line_end":288,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"Write, _","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":27,"index":49},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14226982,"byte_end":14226989,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":2565}},{"kind":"Use","ref_id":{"krate":27,"index":39},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14227028,"byte_end":14227032,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":2565}},{"kind":"Use","ref_id":{"krate":27,"index":47},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14227071,"byte_end":14227075,"line_start":16,"line_end":16,"column_start":20,"column_end":24},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":2565}},{"kind":"Use","ref_id":{"krate":27,"index":42},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14227114,"byte_end":14227119,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":2565}},{"kind":"Use","ref_id":{"krate":0,"index":2773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14227166,"byte_end":14227176,"line_start":21,"line_end":21,"column_start":30,"column_end":40},"alias_span":null,"name":"BufReadExt","value":"","parent":{"krate":0,"index":2565}},{"kind":"Use","ref_id":{"krate":0,"index":3117},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14227218,"byte_end":14227225,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"ReadExt","value":"","parent":{"krate":0,"index":2565}},{"kind":"Use","ref_id":{"krate":0,"index":3180},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14227267,"byte_end":14227274,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"SeekExt","value":"","parent":{"krate":0,"index":2565}},{"kind":"Use","ref_id":{"krate":0,"index":3367},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14227317,"byte_end":14227325,"line_start":27,"line_end":27,"column_start":27,"column_end":35},"alias_span":null,"name":"WriteExt","value":"","parent":{"krate":0,"index":2565}},{"kind":"Use","ref_id":{"krate":0,"index":6506},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":14227397,"byte_end":14227402,"line_start":6,"line_end":6,"column_start":16,"column_end":21},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":2590}},{"kind":"Use","ref_id":{"krate":0,"index":6458},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":14227419,"byte_end":14227424,"line_start":7,"line_end":7,"column_start":16,"column_end":21},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":2590}},{"kind":"Use","ref_id":{"krate":27,"index":49},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":14227596,"byte_end":14227608,"line_start":18,"line_end":18,"column_start":21,"column_end":33},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":2590}},{"kind":"Use","ref_id":{"krate":0,"index":3752},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14241261,"byte_end":14241266,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":2784}},{"kind":"Use","ref_id":{"krate":0,"index":6409},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14241283,"byte_end":14241288,"line_start":21,"line_end":21,"column_start":16,"column_end":21},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":2784}},{"kind":"Use","ref_id":{"krate":0,"index":6369},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14241304,"byte_end":14241308,"line_start":22,"line_end":22,"column_start":15,"column_end":19},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":2784}},{"kind":"Use","ref_id":{"krate":27,"index":39},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14241331,"byte_end":14241340,"line_start":24,"line_end":24,"column_start":21,"column_end":30},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":2784}},{"kind":"Use","ref_id":{"krate":27,"index":47},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\mod.rs","byte_start":14272561,"byte_end":14272570,"line_start":7,"line_end":7,"column_start":21,"column_end":30},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":3137}},{"kind":"Use","ref_id":{"krate":27,"index":42},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14274371,"byte_end":14274381,"line_start":15,"line_end":15,"column_start":21,"column_end":31},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":3184}},{"kind":"Use","ref_id":{"krate":0,"index":3953},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217522,"byte_end":14217529,"line_start":311,"line_end":311,"column_start":21,"column_end":28},"alias_span":null,"name":"_eprint","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3950},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217531,"byte_end":14217537,"line_start":311,"line_end":311,"column_start":30,"column_end":36},"alias_span":null,"name":"_print","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217601,"byte_end":14217607,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3993},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217609,"byte_end":14217615,"line_start":314,"line_end":314,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3927},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217677,"byte_end":14217682,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":4031},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217684,"byte_end":14217689,"line_start":316,"line_end":316,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3986},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217752,"byte_end":14217758,"line_start":318,"line_end":318,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":4070},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217760,"byte_end":14217766,"line_start":318,"line_end":318,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217790,"byte_end":14217797,"line_start":319,"line_end":319,"column_start":22,"column_end":29},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":2457}},{"kind":"Use","ref_id":{"krate":1,"index":5923},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14346418,"byte_end":14346429,"line_start":5,"line_end":5,"column_start":9,"column_end":20},"alias_span":null,"name":"AsRawHandle","value":"","parent":{"krate":0,"index":4109}},{"kind":"Use","ref_id":{"krate":1,"index":5925},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14346431,"byte_end":14346444,"line_start":5,"line_end":5,"column_start":22,"column_end":35},"alias_span":null,"name":"FromRawHandle","value":"","parent":{"krate":0,"index":4109}},{"kind":"Use","ref_id":{"krate":1,"index":5927},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14346446,"byte_end":14346459,"line_start":5,"line_end":5,"column_start":37,"column_end":50},"alias_span":null,"name":"IntoRawHandle","value":"","parent":{"krate":0,"index":4109}},{"kind":"Use","ref_id":{"krate":1,"index":5921},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14346461,"byte_end":14346470,"line_start":5,"line_end":5,"column_start":52,"column_end":61},"alias_span":null,"name":"RawHandle","value":"","parent":{"krate":0,"index":4109}},{"kind":"Use","ref_id":{"krate":1,"index":5951},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14346480,"byte_end":14346491,"line_start":6,"line_end":6,"column_start":9,"column_end":20},"alias_span":null,"name":"AsRawSocket","value":"","parent":{"krate":0,"index":4109}},{"kind":"Use","ref_id":{"krate":1,"index":5953},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14346493,"byte_end":14346506,"line_start":6,"line_end":6,"column_start":22,"column_end":35},"alias_span":null,"name":"FromRawSocket","value":"","parent":{"krate":0,"index":4109}},{"kind":"Use","ref_id":{"krate":1,"index":5955},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14346508,"byte_end":14346521,"line_start":6,"line_end":6,"column_start":37,"column_end":50},"alias_span":null,"name":"IntoRawSocket","value":"","parent":{"krate":0,"index":4109}},{"kind":"Use","ref_id":{"krate":1,"index":5922},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14346523,"byte_end":14346532,"line_start":6,"line_end":6,"column_start":52,"column_end":61},"alias_span":null,"name":"RawSocket","value":"","parent":{"krate":0,"index":4109}},{"kind":"Use","ref_id":{"krate":2,"index":13773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218440,"byte_end":14218446,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218497,"byte_end":14218503,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218560,"byte_end":14218569,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218625,"byte_end":14218634,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":27,"index":49},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218681,"byte_end":14218688,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":27,"index":39},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218740,"byte_end":14218744,"line_start":27,"line_end":27,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":27,"index":47},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218796,"byte_end":14218800,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":27,"index":42},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218852,"byte_end":14218857,"line_start":31,"line_end":31,"column_start":24,"column_end":29},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":0,"index":2773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218919,"byte_end":14218929,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":0,"index":3117},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218990,"byte_end":14218997,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":0,"index":3180},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14219058,"byte_end":14219065,"line_start":38,"line_end":38,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":0,"index":3367},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14219126,"byte_end":14219134,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14219200,"byte_end":14219210,"line_start":45,"line_end":45,"column_start":20,"column_end":30},"alias_span":null,"name":"task_local","value":"","parent":{"krate":0,"index":2460}},{"kind":"Use","ref_id":{"krate":5,"index":6652},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14226052,"byte_end":14226055,"line_start":175,"line_end":175,"column_start":21,"column_end":24},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":2461}},{"kind":"Use","ref_id":{"krate":5,"index":6672},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14226057,"byte_end":14226061,"line_start":175,"line_end":175,"column_start":26,"column_end":30},"alias_span":null,"name":"Weak","value":"","parent":{"krate":0,"index":2461}},{"kind":"Use","ref_id":{"krate":22,"index":60},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14226101,"byte_end":14226106,"line_start":178,"line_end":178,"column_start":22,"column_end":27},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":2461}},{"kind":"Use","ref_id":{"krate":22,"index":108},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14226108,"byte_end":14226118,"line_start":178,"line_end":178,"column_start":29,"column_end":39},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":2461}},{"kind":"Use","ref_id":{"krate":22,"index":137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14226120,"byte_end":14226133,"line_start":178,"line_end":178,"column_start":41,"column_end":54},"alias_span":null,"name":"MutexGuardArc","value":"","parent":{"krate":0,"index":2461}},{"kind":"Use","ref_id":{"krate":22,"index":375},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14226173,"byte_end":14226179,"line_start":181,"line_end":181,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":2461}},{"kind":"Use","ref_id":{"krate":22,"index":418},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14226181,"byte_end":14226196,"line_start":181,"line_end":181,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":2461}},{"kind":"Use","ref_id":{"krate":22,"index":440},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14226198,"byte_end":14226223,"line_start":181,"line_end":181,"column_start":47,"column_end":72},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":2461}},{"kind":"Use","ref_id":{"krate":22,"index":476},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14226225,"byte_end":14226241,"line_start":181,"line_end":181,"column_start":74,"column_end":90},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":2461}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":14226680,"byte_end":14226681,"line_start":8,"line_end":8,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2492}},{"kind":"Use","ref_id":{"krate":0,"index":5714},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350265,"byte_end":14350275,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4378},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350296,"byte_end":14350304,"line_start":31,"line_end":31,"column_start":20,"column_end":28},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":5720},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350320,"byte_end":14350324,"line_start":32,"line_end":32,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":1,"index":10081},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350345,"byte_end":14350353,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":1,"index":10040},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350373,"byte_end":14350381,"line_start":34,"line_end":34,"column_start":19,"column_end":27},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":5750},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350405,"byte_end":14350416,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":1,"index":10067},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350439,"byte_end":14350450,"line_start":36,"line_end":36,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":5760},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350470,"byte_end":14350477,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4267},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350502,"byte_end":14350514,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4286},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350530,"byte_end":14350534,"line_start":40,"line_end":40,"column_start":15,"column_end":19},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4306},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350556,"byte_end":14350566,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4325},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350592,"byte_end":14350606,"line_start":42,"line_end":42,"column_start":25,"column_end":39},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4629},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350627,"byte_end":14350636,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4646},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350656,"byte_end":14350664,"line_start":44,"line_end":44,"column_start":19,"column_end":27},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4696},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350680,"byte_end":14350684,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4737},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350704,"byte_end":14350712,"line_start":46,"line_end":46,"column_start":19,"column_end":27},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4767},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350733,"byte_end":14350742,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4786},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350768,"byte_end":14350782,"line_start":48,"line_end":48,"column_start":25,"column_end":39},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4805},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350804,"byte_end":14350814,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4824},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350840,"byte_end":14350854,"line_start":50,"line_end":50,"column_start":25,"column_end":39},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4843},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350877,"byte_end":14350888,"line_start":51,"line_end":51,"column_start":22,"column_end":33},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4862},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350906,"byte_end":14350912,"line_start":52,"line_end":52,"column_start":17,"column_end":23},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4882},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350939,"byte_end":14350954,"line_start":53,"line_end":53,"column_start":26,"column_end":41},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4900},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350982,"byte_end":14350998,"line_start":54,"line_end":54,"column_start":27,"column_end":43},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":0,"index":4918},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14351015,"byte_end":14351020,"line_start":55,"line_end":55,"column_start":16,"column_end":21},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":4174}},{"kind":"Use","ref_id":{"krate":1,"index":10081},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file_type.rs","byte_start":14394623,"byte_end":14394631,"line_start":2,"line_end":2,"column_start":22,"column_end":30},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":4615}},{"kind":"Use","ref_id":{"krate":1,"index":10040},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399863,"byte_end":14399871,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":4636}},{"kind":"Use","ref_id":{"krate":1,"index":10067},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\permissions.rs","byte_start":14414596,"byte_end":14414607,"line_start":2,"line_end":2,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":4682}},{"kind":"Use","ref_id":{"krate":1,"index":6437},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434296,"byte_end":14434308,"line_start":80,"line_end":80,"column_start":5,"column_end":17},"alias_span":null,"name":"is_separator","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":1,"index":10804},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434310,"byte_end":14434319,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":1,"index":6730},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434321,"byte_end":14434328,"line_start":80,"line_end":80,"column_start":30,"column_end":37},"alias_span":null,"name":"Display","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":1,"index":10713},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434330,"byte_end":14434336,"line_start":80,"line_end":80,"column_start":39,"column_end":45},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":1,"index":10787},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434338,"byte_end":14434353,"line_start":80,"line_end":80,"column_start":47,"column_end":62},"alias_span":null,"name":"PrefixComponent","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":1,"index":10874},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434355,"byte_end":14434371,"line_start":80,"line_end":80,"column_start":64,"column_end":80},"alias_span":null,"name":"StripPrefixError","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":1,"index":6438},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434373,"byte_end":14434387,"line_start":80,"line_end":80,"column_start":82,"column_end":96},"alias_span":null,"name":"MAIN_SEPARATOR","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":0,"index":5774},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434412,"byte_end":14434421,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"alias_span":null,"name":"Ancestors","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":0,"index":5785},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434443,"byte_end":14434453,"line_start":84,"line_end":84,"column_start":21,"column_end":31},"alias_span":null,"name":"Components","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":0,"index":5811},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434469,"byte_end":14434473,"line_start":85,"line_end":85,"column_start":15,"column_end":19},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":0,"index":5817},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434489,"byte_end":14434493,"line_start":86,"line_end":86,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":0,"index":6091},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434512,"byte_end":14434519,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"alias_span":null,"name":"PathBuf","value":"","parent":{"krate":0,"index":4925}},{"kind":"Use","ref_id":{"krate":1,"index":10581},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483311,"byte_end":14483325,"line_start":59,"line_end":59,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":1,"index":10606},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483345,"byte_end":14483353,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":1,"index":10449},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483374,"byte_end":14483380,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":1,"index":10473},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483382,"byte_end":14483390,"line_start":61,"line_end":61,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":1,"index":10491},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483392,"byte_end":14483400,"line_start":61,"line_end":61,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":1,"index":10397},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483422,"byte_end":14483432,"line_start":62,"line_end":62,"column_start":20,"column_end":30},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":1,"index":10421},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483434,"byte_end":14483446,"line_start":62,"line_end":62,"column_start":32,"column_end":44},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":1,"index":10434},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483448,"byte_end":14483460,"line_start":62,"line_end":62,"column_start":46,"column_end":58},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":0,"index":5403},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483513,"byte_end":14483526,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":0,"index":5531},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483577,"byte_end":14483585,"line_start":67,"line_end":67,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":0,"index":6114},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483587,"byte_end":14483598,"line_start":67,"line_end":67,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":0,"index":6137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483600,"byte_end":14483609,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":0,"index":6162},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483660,"byte_end":14483669,"line_start":69,"line_end":69,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":5311}},{"kind":"Use","ref_id":{"krate":0,"index":5531},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\mod.rs","byte_start":14491721,"byte_end":14491729,"line_start":1,"line_end":1,"column_start":20,"column_end":28},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":5467}},{"kind":"Use","ref_id":{"krate":0,"index":6114},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\mod.rs","byte_start":14491731,"byte_end":14491742,"line_start":1,"line_end":1,"column_start":30,"column_end":41},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":5467}},{"kind":"Use","ref_id":{"krate":0,"index":6137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\mod.rs","byte_start":14491761,"byte_end":14491770,"line_start":2,"line_end":2,"column_start":17,"column_end":26},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":5467}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":0,"byte_end":11549,"line_start":1,"line_end":339,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":91},{"krate":0,"index":2457},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2492},{"krate":0,"index":4174},{"krate":0,"index":4925},{"krate":0,"index":5311},{"krate":0,"index":5702}],"decl_id":null,"docs":" # Async version of the Rust standard library","sig":null,"attributes":[{"value":"/ # Async version of the Rust standard library","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":0,"byte_end":48,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":49,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `async-std` is a foundation of portable Rust software, a set of minimal and battle-tested","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":53,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ shared abstractions for the [broader Rust ecosystem][crates.io]. It offers std types, like","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":147,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ [`Future`] and [`Stream`], library-defined [operations on language primitives](#primitives),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":242,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ [standard macros](#macros), [I/O] and [multithreading], among [many other things][other].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":339,"byte_end":432,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":433,"byte_end":436,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `async-std` is available from [crates.io]. Once included, `async-std` can be accessed","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":437,"byte_end":526,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ in [`use`] statements through the path `async_std`, as in [`use async_std::future`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":527,"byte_end":615,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":616,"byte_end":619,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [I/O]: io/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":620,"byte_end":644,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ [multithreading]: task/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":645,"byte_end":682,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ [other]: #what-is-in-the-standard-library-documentation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":683,"byte_end":742,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ [`use`]: https://doc.rust-lang.org/book/ch07-02-defining-modules-to-control-scope-and-privacy.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":743,"byte_end":845,"line_start":14,"line_end":14,"column_start":1,"column_end":103}},{"value":"/ [`use async_std::future`]: future/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":846,"byte_end":894,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [crates.io]: https://crates.io","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":895,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`Future`]: future/trait.Future.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":930,"byte_end":970,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ [`Stream`]: stream/trait.Stream.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":971,"byte_end":1011,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1012,"byte_end":1015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # How to read this documentation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1016,"byte_end":1052,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1053,"byte_end":1056,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If you already know the name of what you are looking for, the fastest way to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1057,"byte_end":1137,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ find it is to use the <a href=\"#\" onclick=\"focusSearchBar();\">search","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1138,"byte_end":1210,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ bar</a> at the top of the page.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1211,"byte_end":1246,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1247,"byte_end":1250,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Otherwise, you may want to jump to one of these useful sections:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1251,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1320,"byte_end":1323,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * [`async_std::*` modules](#modules)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1324,"byte_end":1364,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ * [Async macros](#macros)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1365,"byte_end":1394,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/ * [The Async Prelude](prelude/index.html)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1395,"byte_end":1440,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ * [Cargo.toml feature flags](#features)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1441,"byte_end":1484,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ * [Examples](#examples)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1485,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If this is your first time, the documentation for `async-std` is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1517,"byte_end":1585,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ written to be casually perused. Clicking on interesting things should","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1586,"byte_end":1659,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ generally lead you to interesting places. Still, there are important bits","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1660,"byte_end":1737,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ you don't want to miss, so read on for a tour of the `async-std` and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1738,"byte_end":1810,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/ its documentation!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1811,"byte_end":1833,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1834,"byte_end":1837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Once you are familiar with the contents of `async-std` you may","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1838,"byte_end":1904,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/ begin to find the verbosity of the prose distracting. At this stage in your","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1905,"byte_end":1984,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ development you may want to press the `[-]` button near the top of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1985,"byte_end":2059,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ page to collapse it into a more skimmable view.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2060,"byte_end":2111,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2112,"byte_end":2115,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ While you are looking at that `[-]` button also notice the `[src]`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2116,"byte_end":2186,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ button. Rust's API documentation comes with the source code and you are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2187,"byte_end":2262,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ encouraged to read it. The `async-std` source is generally high","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2263,"byte_end":2330,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ quality and a peek behind the curtains is often enlightening.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2331,"byte_end":2396,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2397,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Modules in this crate are organized in the same way as in `std`, except blocking","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2401,"byte_end":2485,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"/ functions have been replaced with async functions and threads have been replaced with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2486,"byte_end":2575,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ lightweight tasks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2576,"byte_end":2598,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2599,"byte_end":2602,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You can find more information, reading materials, and other resources here:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2603,"byte_end":2682,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2683,"byte_end":2686,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * [The async-std website](https://async.rs/)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2687,"byte_end":2735,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ * [The async-std book](https://book.async.rs)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2736,"byte_end":2785,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/ * [GitHub repository](https://github.com/async-rs/async-std)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2786,"byte_end":2850,"line_start":58,"line_end":58,"column_start":1,"column_end":65}},{"value":"/ * [List of code examples](https://github.com/async-rs/async-std/tree/HEAD/examples)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2851,"byte_end":2938,"line_start":59,"line_end":59,"column_start":1,"column_end":88}},{"value":"/ * [Discord chat](https://discord.gg/JvZeVNe)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2939,"byte_end":2987,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2988,"byte_end":2991,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # What is in the `async-std` documentation?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2992,"byte_end":3039,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3040,"byte_end":3043,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ First, `async-std` is divided into a number of focused","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3044,"byte_end":3102,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/ modules, [all listed further down this page](#modules). These modules are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3103,"byte_end":3180,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ the bedrock upon which async Rust is forged, and they have mighty names","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3181,"byte_end":3256,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ like [`async_std::os`] and [`async_std::task`]. Modules' documentation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3257,"byte_end":3331,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ typically includes an overview of the module along with examples, and are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3332,"byte_end":3409,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ a smart place to start familiarizing yourself with the library.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3410,"byte_end":3477,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3478,"byte_end":3481,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Second, `async-std` defines [The Async Prelude], a small collection","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3482,"byte_end":3553,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"/ of items - mostly traits - that should be imported into every module of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3554,"byte_end":3629,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ every async crate. The traits in the prelude are pervasive, making the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3630,"byte_end":3704,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ prelude documentation a good entry point to learning about the library.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3705,"byte_end":3780,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3781,"byte_end":3784,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [The Async Prelude]: prelude/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3785,"byte_end":3828,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/ [`async_std::os`]: os/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3829,"byte_end":3865,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ [`async_std::task`]: task/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3866,"byte_end":3906,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3907,"byte_end":3910,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ And finally, `async-std` exports a number of async macros, and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3911,"byte_end":3977,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ [lists them on this page](#macros).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3978,"byte_end":4017,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4018,"byte_end":4021,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Contributing changes to the documentation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4022,"byte_end":4069,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4070,"byte_end":4073,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Check out `async-std`'s contribution guidelines [here](https://async.rs/contribute).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4074,"byte_end":4162,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"/ The source for this documentation can be found on [GitHub](https://github.com/async-rs).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4163,"byte_end":4255,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/ To contribute changes, make sure you read the guidelines first, then submit","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4256,"byte_end":4335,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ pull requests for your suggested changes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4336,"byte_end":4381,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4382,"byte_end":4385,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Contributions are appreciated! If you see a part of the docs that can be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4386,"byte_end":4462,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ improved, submit a PR, or chat with us first on","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4463,"byte_end":4514,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/ [Discord](https://discord.gg/JvZeVNe).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4515,"byte_end":4557,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4558,"byte_end":4561,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # A tour of `async-std`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4562,"byte_end":4589,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4590,"byte_end":4593,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The rest of this crate documentation is dedicated to pointing out notable","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4594,"byte_end":4671,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ features of `async-std`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4672,"byte_end":4700,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4701,"byte_end":4704,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Platform abstractions and I/O","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4705,"byte_end":4741,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4742,"byte_end":4745,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Besides basic data types, `async-std` is largely concerned with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4746,"byte_end":4813,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/ abstracting over differences in common platforms, most notably Windows and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4814,"byte_end":4892,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ Unix derivatives.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4893,"byte_end":4914,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4915,"byte_end":4918,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Common types of I/O, including [files], [TCP], [UDP], are defined in the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4919,"byte_end":4995,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"/ [`io`], [`fs`], and [`net`] modules.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4996,"byte_end":5036,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5037,"byte_end":5040,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The [`task`] module contains `async-std`'s task abstractions. [`sync`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5041,"byte_end":5115,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ contains further primitive shared memory types. [`channel`]  contains the channel types for message passing.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5116,"byte_end":5228,"line_start":109,"line_end":109,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5229,"byte_end":5232,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [files]: fs/struct.File.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5233,"byte_end":5265,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/ [TCP]: net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5266,"byte_end":5302,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [UDP]: net/struct.UdpSocket.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5303,"byte_end":5339,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"/ [`io`]: io/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5340,"byte_end":5365,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"/ [`sync`]: sync/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5366,"byte_end":5395,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ [`channel`]: channel/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5396,"byte_end":5431,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5432,"byte_end":5435,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Timeouts, intervals, and delays","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5436,"byte_end":5474,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5475,"byte_end":5478,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ `async-std` provides several methods to manipulate time:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5479,"byte_end":5539,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5540,"byte_end":5543,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ * [`task::sleep`] to wait for a duration to pass without blocking.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5544,"byte_end":5614,"line_start":122,"line_end":122,"column_start":1,"column_end":71}},{"value":"/ * [`stream::interval`] for emitting an event at a set interval.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5615,"byte_end":5682,"line_start":123,"line_end":123,"column_start":1,"column_end":68}},{"value":"/ * [`future::timeout`] to time-out futures if they don't resolve within a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5683,"byte_end":5759,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/   set interval.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5760,"byte_end":5779,"line_start":125,"line_end":125,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5780,"byte_end":5783,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: task/fn.sleep.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5784,"byte_end":5823,"line_start":127,"line_end":127,"column_start":1,"column_end":40}},{"value":"/ [`stream::interval`]: stream/fn.interval.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5824,"byte_end":5873,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/ [`future::timeout`]: future/fn.timeout.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5874,"byte_end":5921,"line_start":129,"line_end":129,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5922,"byte_end":5925,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5926,"byte_end":5940,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5941,"byte_end":5944,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ All examples require the [`\"attributes\"` feature](#features) to be enabled.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5945,"byte_end":6024,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ This feature is not enabled by default because it significantly impacts","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6025,"byte_end":6100,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ compile times. See [`task::block_on`] for an alternative way to start","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6101,"byte_end":6174,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ executing tasks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6175,"byte_end":6195,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6196,"byte_end":6199,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Call an async function from the main function:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6200,"byte_end":6250,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6251,"byte_end":6254,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ async fn say_hello() {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6366,"byte_end":6392,"line_start":142,"line_end":142,"column_start":1,"column_end":27}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6393,"byte_end":6427,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6428,"byte_end":6433,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6434,"byte_end":6437,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6438,"byte_end":6460,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6461,"byte_end":6482,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/     say_hello().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6483,"byte_end":6509,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6510,"byte_end":6515,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6516,"byte_end":6523,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6524,"byte_end":6527,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Await two futures concurrently, and return a tuple of their output:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6528,"byte_end":6599,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6600,"byte_end":6603,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6715,"byte_end":6745,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6746,"byte_end":6749,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6750,"byte_end":6772,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6773,"byte_end":6794,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/     let a = async { 1u8 };","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6795,"byte_end":6825,"line_start":160,"line_end":160,"column_start":1,"column_end":31}},{"value":"/     let b = async { 2u8 };","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6826,"byte_end":6856,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"/     assert_eq!(a.join(b).await, (1u8, 2u8))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6857,"byte_end":6904,"line_start":162,"line_end":162,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6905,"byte_end":6910,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6911,"byte_end":6918,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6919,"byte_end":6922,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Create a UDP server that echoes back each received message to the sender:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6923,"byte_end":7000,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7001,"byte_end":7004,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7122,"byte_end":7156,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7157,"byte_end":7160,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7161,"byte_end":7183,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7184,"byte_end":7228,"line_start":173,"line_end":173,"column_start":1,"column_end":45}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7229,"byte_end":7291,"line_start":174,"line_end":174,"column_start":1,"column_end":63}},{"value":"/     println!(\"Listening on {}\", socket.local_addr()?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7292,"byte_end":7350,"line_start":175,"line_end":175,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7351,"byte_end":7354,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7355,"byte_end":7393,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7394,"byte_end":7397,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7398,"byte_end":7412,"line_start":179,"line_end":179,"column_start":1,"column_end":15}},{"value":"/         let (recv, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7413,"byte_end":7478,"line_start":180,"line_end":180,"column_start":1,"column_end":66}},{"value":"/         let sent = socket.send_to(&buf[..recv], &peer).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7479,"byte_end":7545,"line_start":181,"line_end":181,"column_start":1,"column_end":67}},{"value":"/         println!(\"Sent {} out of {} bytes to {}\", sent, recv, peer);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7546,"byte_end":7618,"line_start":182,"line_end":182,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7619,"byte_end":7628,"line_start":183,"line_end":183,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7629,"byte_end":7634,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7635,"byte_end":7642,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ [`task::block_on`]: task/fn.block_on.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7643,"byte_end":7688,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7689,"byte_end":7692,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7693,"byte_end":7707,"line_start":188,"line_end":188,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7708,"byte_end":7711,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7712,"byte_end":7733,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7734,"byte_end":7743,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7744,"byte_end":7786,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7787,"byte_end":7885,"line_start":193,"line_end":193,"column_start":1,"column_end":99}},{"value":"/ ><code>unstable</code></span>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7886,"byte_end":7919,"line_start":194,"line_end":194,"column_start":1,"column_end":34}},{"value":"/ are available only when the `unstable` Cargo feature is enabled:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7920,"byte_end":7988,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7989,"byte_end":7992,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7993,"byte_end":8004,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8005,"byte_end":8033,"line_start":198,"line_end":198,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8034,"byte_end":8055,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"/ features = [\"unstable\"]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8056,"byte_end":8083,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8084,"byte_end":8091,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8092,"byte_end":8095,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8096,"byte_end":8117,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8118,"byte_end":8127,"line_start":204,"line_end":204,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8128,"byte_end":8170,"line_start":205,"line_end":205,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8171,"byte_end":8269,"line_start":206,"line_end":206,"column_start":1,"column_end":99}},{"value":"/ ><code>attributes</code></span>","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8270,"byte_end":8305,"line_start":207,"line_end":207,"column_start":1,"column_end":36}},{"value":"/ are available only when the `attributes` Cargo feature is enabled:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8306,"byte_end":8376,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8377,"byte_end":8380,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8381,"byte_end":8392,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8393,"byte_end":8421,"line_start":211,"line_end":211,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8422,"byte_end":8443,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/ features = [\"attributes\"]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8444,"byte_end":8473,"line_start":213,"line_end":213,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8474,"byte_end":8481,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8482,"byte_end":8485,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 1.0 runtime is also simultaneously possible","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8486,"byte_end":8564,"line_start":216,"line_end":216,"column_start":1,"column_end":79}},{"value":"/ using the `tokio1` Cargo feature:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8565,"byte_end":8602,"line_start":217,"line_end":217,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8603,"byte_end":8606,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8607,"byte_end":8618,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8619,"byte_end":8647,"line_start":220,"line_end":220,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8648,"byte_end":8669,"line_start":221,"line_end":221,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio1\"]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8670,"byte_end":8695,"line_start":222,"line_end":222,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8696,"byte_end":8703,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8704,"byte_end":8707,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.2 runtime is possible using the `tokio02`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8708,"byte_end":8786,"line_start":225,"line_end":225,"column_start":1,"column_end":79}},{"value":"/ Cargo feature:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8787,"byte_end":8805,"line_start":226,"line_end":226,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8806,"byte_end":8809,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8810,"byte_end":8821,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8822,"byte_end":8850,"line_start":229,"line_end":229,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8851,"byte_end":8872,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio02\"]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8873,"byte_end":8899,"line_start":231,"line_end":231,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8900,"byte_end":8907,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8908,"byte_end":8911,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.3 runtime is also simultaneously possible","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8912,"byte_end":8990,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ using the `tokio03` Cargo feature:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8991,"byte_end":9029,"line_start":235,"line_end":235,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9030,"byte_end":9033,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9034,"byte_end":9045,"line_start":237,"line_end":237,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9046,"byte_end":9074,"line_start":238,"line_end":238,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9075,"byte_end":9096,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio03\"]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9097,"byte_end":9123,"line_start":240,"line_end":240,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9124,"byte_end":9131,"line_start":241,"line_end":241,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9132,"byte_end":9135,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ Additionally it's possible to only use the core traits and combinators by","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9136,"byte_end":9213,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/ only enabling the `std` Cargo feature:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9214,"byte_end":9256,"line_start":244,"line_end":244,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9257,"byte_end":9260,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9261,"byte_end":9272,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9273,"byte_end":9301,"line_start":247,"line_end":247,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9302,"byte_end":9323,"line_start":248,"line_end":248,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9324,"byte_end":9352,"line_start":249,"line_end":249,"column_start":1,"column_end":29}},{"value":"/ features = [\"std\"]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9353,"byte_end":9375,"line_start":250,"line_end":250,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9376,"byte_end":9383,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9384,"byte_end":9387,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ And to use async-std on `no_std` targets that only support `alloc` only","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9388,"byte_end":9463,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/ enable the `alloc` Cargo feature:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9464,"byte_end":9501,"line_start":254,"line_end":254,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9502,"byte_end":9505,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9506,"byte_end":9517,"line_start":256,"line_end":256,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9518,"byte_end":9546,"line_start":257,"line_end":257,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9547,"byte_end":9568,"line_start":258,"line_end":258,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9569,"byte_end":9597,"line_start":259,"line_end":259,"column_start":1,"column_end":29}},{"value":"/ features = [\"alloc\"]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9598,"byte_end":9622,"line_start":260,"line_end":260,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9623,"byte_end":9630,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9631,"byte_end":9634,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ # Runtime configuration","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9635,"byte_end":9662,"line_start":263,"line_end":263,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9663,"byte_end":9666,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Several environment variables are available to tune the async-std","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9667,"byte_end":9736,"line_start":265,"line_end":265,"column_start":1,"column_end":70}},{"value":"/ runtime:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9737,"byte_end":9749,"line_start":266,"line_end":266,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9750,"byte_end":9753,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ * `ASYNC_STD_THREAD_COUNT`: The number of threads that the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9754,"byte_end":9816,"line_start":268,"line_end":268,"column_start":1,"column_end":63}},{"value":"/ async-std runtime will start. By default, this is one per logical","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9817,"byte_end":9886,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ cpu as determined by [async-global-executor](async_global_executor),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9887,"byte_end":9959,"line_start":270,"line_end":270,"column_start":1,"column_end":73}},{"value":"/ which may be different than the number of physical cpus. Async-std","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9960,"byte_end":10030,"line_start":271,"line_end":271,"column_start":1,"column_end":71}},{"value":"/ _will panic_ if this is set to any value other than a positive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10031,"byte_end":10097,"line_start":272,"line_end":272,"column_start":1,"column_end":67}},{"value":"/ integer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10098,"byte_end":10110,"line_start":273,"line_end":273,"column_start":1,"column_end":13}},{"value":"/ * `ASYNC_STD_THREAD_NAME`: The name that async-std's runtime","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10111,"byte_end":10175,"line_start":274,"line_end":274,"column_start":1,"column_end":65}},{"value":"/ threads report to the operating system. The default value is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10176,"byte_end":10240,"line_start":275,"line_end":275,"column_start":1,"column_end":65}},{"value":"/ `\"async-std/runtime\"`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10241,"byte_end":10267,"line_start":276,"line_end":276,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10268,"byte_end":10271,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10365,"byte_end":10436,"line_start":281,"line_end":281,"column_start":1,"column_end":72}},{"value":"allow(clippy :: mutex_atomic, clippy :: module_inception)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10437,"byte_end":10494,"line_start":282,"line_end":282,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1902},{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":1911},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1941},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":1992},{"krate":0,"index":2047},{"krate":0,"index":2058},{"krate":0,"index":2091},{"krate":0,"index":2104},{"krate":0,"index":2118},{"krate":0,"index":2129},{"krate":0,"index":2146},{"krate":0,"index":2162},{"krate":0,"index":2211},{"krate":0,"index":2250}],"decl_id":null,"docs":" Types and traits for working with asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16640,"byte_end":16665,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Types and traits for working with asynchronous tasks.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870075,"byte_end":13870132,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870133,"byte_end":13870136,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is similar to [`std::thread`], except it uses asynchronous tasks in place of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870137,"byte_end":13870229,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ threads.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870230,"byte_end":13870242,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870243,"byte_end":13870246,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870247,"byte_end":13870304,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870305,"byte_end":13870308,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## The task model","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870309,"byte_end":13870330,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870331,"byte_end":13870334,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An executing asynchronous Rust program consists of a collection of native OS threads, on top of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870335,"byte_end":13870434,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ which multiple stackless coroutines are multiplexed. We refer to these as \"tasks\".  Tasks can","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870435,"byte_end":13870532,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ be named, and provide some built-in support for synchronization.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870533,"byte_end":13870601,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870602,"byte_end":13870605,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Communication between tasks can be done through channels, Rust's message-passing types, along","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870606,"byte_end":13870703,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ with [other forms of tasks synchronization](../sync/index.html) and shared-memory data","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870704,"byte_end":13870794,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/ structures. In particular, types that are guaranteed to be threadsafe are easily shared between","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870795,"byte_end":13870894,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ tasks using the atomically-reference-counted container, [`Arc`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870895,"byte_end":13870963,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870964,"byte_end":13870967,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Fatal logic errors in Rust cause *thread panic*, during which a thread will unwind the stack,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13870968,"byte_end":13871065,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ running destructors and freeing owned resources. If a panic occurs inside a task, there is no","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871066,"byte_end":13871163,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ meaningful way of recovering, so the panic will propagate through any thread boundaries all the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871164,"byte_end":13871263,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ way to the root task. This is also known as a \"panic = abort\" model.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871264,"byte_end":13871336,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871337,"byte_end":13871340,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Spawning a task","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871341,"byte_end":13871363,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871364,"byte_end":13871367,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A new task can be spawned using the [`task::spawn`][`spawn`] function:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871368,"byte_end":13871442,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871443,"byte_end":13871446,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871447,"byte_end":13871460,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871461,"byte_end":13871485,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871486,"byte_end":13871489,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871490,"byte_end":13871513,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/     // some work here","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871514,"byte_end":13871539,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871540,"byte_end":13871547,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871548,"byte_end":13871555,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871556,"byte_end":13871559,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ In this example, the spawned task is \"detached\" from the current task. This means that it can","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871560,"byte_end":13871657,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"/ outlive its parent (the task that spawned it), unless this parent is the root task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871658,"byte_end":13871745,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871746,"byte_end":13871749,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The root task can also wait on the completion of the child task; a call to [`spawn`] produces a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871750,"byte_end":13871849,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ [`JoinHandle`], which implements `Future` and can be `await`ed:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871850,"byte_end":13871917,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871918,"byte_end":13871921,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871922,"byte_end":13871929,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871930,"byte_end":13871954,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871955,"byte_end":13871958,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871959,"byte_end":13871998,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13871999,"byte_end":13872004,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ let child = task::spawn(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872005,"byte_end":13872040,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/     // some work here","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872041,"byte_end":13872066,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872067,"byte_end":13872074,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ // some work here","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872075,"byte_end":13872096,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ let res = child.await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872097,"byte_end":13872123,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872124,"byte_end":13872129,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872130,"byte_end":13872138,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872139,"byte_end":13872146,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872147,"byte_end":13872150,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `await` operator returns the final value produced by the child task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872151,"byte_end":13872227,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872228,"byte_end":13872231,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Configuring tasks","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872232,"byte_end":13872256,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872257,"byte_end":13872260,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ A new task can be configured before it is spawned via the [`Builder`] type,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872261,"byte_end":13872340,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ which currently allows you to set the name for the child task:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872341,"byte_end":13872407,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872408,"byte_end":13872411,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872412,"byte_end":13872419,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872420,"byte_end":13872452,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872453,"byte_end":13872477,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872478,"byte_end":13872481,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872482,"byte_end":13872521,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872522,"byte_end":13872527,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ task::Builder::new().name(\"child1\".to_string()).spawn(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872528,"byte_end":13872593,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872594,"byte_end":13872628,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872629,"byte_end":13872636,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872637,"byte_end":13872642,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872643,"byte_end":13872651,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872652,"byte_end":13872659,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872660,"byte_end":13872663,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## The `Task` type","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872664,"byte_end":13872686,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872687,"byte_end":13872690,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Tasks are represented via the [`Task`] type, which you can get in one of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872691,"byte_end":13872767,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ two ways:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872768,"byte_end":13872781,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872782,"byte_end":13872785,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ * By spawning a new task, e.g., using the [`task::spawn`][`spawn`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872786,"byte_end":13872856,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/   function, and calling [`task`][`JoinHandle::task`] on the [`JoinHandle`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872857,"byte_end":13872936,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ * By requesting the current task, using the [`task::current`] function.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13872937,"byte_end":13873012,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873013,"byte_end":13873016,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ## Task-local storage","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873017,"byte_end":13873042,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873043,"byte_end":13873046,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This module also provides an implementation of task-local storage for Rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873047,"byte_end":13873125,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ programs. Task-local storage is a method of storing data into a global","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873126,"byte_end":13873200,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ variable that each task in the program will have its own copy of.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873201,"byte_end":13873270,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ Tasks do not share this data, so accesses do not need to be synchronized.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873271,"byte_end":13873348,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873349,"byte_end":13873352,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ A task-local key owns the value it contains and will destroy the value when the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873353,"byte_end":13873436,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"/ task exits. It is created with the [`task_local!`] macro and can contain any","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873437,"byte_end":13873517,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ value that is `'static` (no borrowed pointers). It provides an accessor function,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873518,"byte_end":13873603,"line_start":94,"line_end":94,"column_start":1,"column_end":86}},{"value":"/ [`with`], that yields a shared reference to the value to the specified","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873604,"byte_end":13873678,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ closure. Task-local keys allow only shared access to values, as there would be no","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873679,"byte_end":13873764,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/ way to guarantee uniqueness if mutable borrows were allowed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873765,"byte_end":13873829,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873830,"byte_end":13873833,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Naming tasks","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873834,"byte_end":13873853,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873854,"byte_end":13873857,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Tasks are able to have associated names for identification purposes. By default, spawned","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873858,"byte_end":13873950,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/ tasks are unnamed. To specify a name for a task, build the task with [`Builder`] and pass","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13873951,"byte_end":13874044,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"/ the desired task name to [`Builder::name`]. To retrieve the task name from within the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874045,"byte_end":13874134,"line_start":103,"line_end":103,"column_start":1,"column_end":90}},{"value":"/ task, use [`Task::name`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874135,"byte_end":13874164,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874165,"byte_end":13874168,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: ../sync/struct.Arc.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874169,"byte_end":13874205,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874206,"byte_end":13874234,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874235,"byte_end":13874277,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`JoinHandle::task`]: struct.JoinHandle.html#method.task","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874278,"byte_end":13874338,"line_start":109,"line_end":109,"column_start":1,"column_end":61}},{"value":"/ [`join`]: struct.JoinHandle.html#method.join","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874339,"byte_end":13874387,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"/ [`panic!`]: https://doc.rust-lang.org/std/macro.panic.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874388,"byte_end":13874450,"line_start":111,"line_end":111,"column_start":1,"column_end":63}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874451,"byte_end":13874487,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874488,"byte_end":13874542,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"/ [`task::current`]: fn.current.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874543,"byte_end":13874581,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/ [`Task`]: struct.Task.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874582,"byte_end":13874612,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ [`Task::name`]: struct.Task.html#method.name","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874613,"byte_end":13874661,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/ [`task_local!`]: ../macro.task_local.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874662,"byte_end":13874707,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"/ [`with`]: struct.LocalKey.html#method.with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13874708,"byte_end":13874754,"line_start":118,"line_end":118,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1932},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015501,"byte_end":14015510,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cooperatively gives up a timeslice to the task scheduler.","sig":null,"attributes":[{"value":"/ Cooperatively gives up a timeslice to the task scheduler.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14014898,"byte_end":14014959,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14014960,"byte_end":14014963,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calling this function will move the currently executing future to the back","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14014964,"byte_end":14015042,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ of the execution queue, making room for other futures to execute. This is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015043,"byte_end":14015120,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ especially useful after running CPU-intensive operations inside a future.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015121,"byte_end":14015198,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015199,"byte_end":14015202,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also [`task::spawn_blocking`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015203,"byte_end":14015241,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015242,"byte_end":14015245,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015246,"byte_end":14015298,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015299,"byte_end":14015302,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015303,"byte_end":14015317,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015318,"byte_end":14015321,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015322,"byte_end":14015338,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015339,"byte_end":14015342,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015343,"byte_end":14015350,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015351,"byte_end":14015390,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015391,"byte_end":14015396,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015397,"byte_end":14015421,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015422,"byte_end":14015425,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ task::yield_now().await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015426,"byte_end":14015454,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015455,"byte_end":14015460,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015461,"byte_end":14015469,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015470,"byte_end":14015477,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015478,"byte_end":14015487,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016812,"byte_end":14016820,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"block_on","qualname":"::task::block_on::block_on","value":"fn block_on<F, T>(F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task and blocks the current thread on its result.","sig":null,"attributes":[{"value":"/ Spawns a task and blocks the current thread on its result.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016128,"byte_end":14016190,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016191,"byte_end":14016194,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Calling this function is similar to [spawning] a thread and immediately [joining] it, except an","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016195,"byte_end":14016294,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ asynchronous task will be spawned.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016295,"byte_end":14016333,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016334,"byte_end":14016337,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::spawn_blocking`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016338,"byte_end":14016377,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016378,"byte_end":14016381,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016382,"byte_end":14016434,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016435,"byte_end":14016438,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [spawning]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016439,"byte_end":14016505,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/ [joining]: https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016506,"byte_end":14016592,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016593,"byte_end":14016596,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016597,"byte_end":14016611,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016612,"byte_end":14016615,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016616,"byte_end":14016629,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016630,"byte_end":14016654,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016655,"byte_end":14016658,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016659,"byte_end":14016674,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/     task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016675,"byte_end":14016705,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/         println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016706,"byte_end":14016744,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/     })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016745,"byte_end":14016755,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016756,"byte_end":14016761,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016762,"byte_end":14016769,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":14016770,"byte_end":14016804,"line_start":28,"line_end":28,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14017436,"byte_end":14017443,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Builder","qualname":"::task::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":2254}],"decl_id":null,"docs":" Task builder that configures the settings of a new task.\n","sig":null,"attributes":[{"value":"/ Task builder that configures the settings of a new task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14017338,"byte_end":14017398,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14017557,"byte_end":14017560,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder.\n","sig":null,"attributes":[{"value":"/ Creates a new builder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14017505,"byte_end":14017531,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14017536,"byte_end":14017545,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14017680,"byte_end":14017684,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"fn name(Self, String) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configures the name of the task.\n","sig":null,"attributes":[{"value":"/ Configures the name of the task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14017618,"byte_end":14017654,"line_start":24,"line_end":24,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14017659,"byte_end":14017668,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14018303,"byte_end":14018308,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Builder>::spawn","value":"fn spawn<F, T>(Self, F) -> io::Result<JoinHandle<T>> where F: Future<Output =\nT> + Send + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14018205,"byte_end":14018252,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14018257,"byte_end":14018291,"line_start":49,"line_end":49,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14021300,"byte_end":14021308,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"blocking","qualname":"<Builder>::blocking","value":"fn blocking<F, T>(Self, F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings, blocking on its execution.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings, blocking on its execution.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14021175,"byte_end":14021249,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14021254,"byte_end":14021288,"line_start":140,"line_end":140,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023753,"byte_end":14023760,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"current","qualname":"::task::current::current","value":"fn current() -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023223,"byte_end":14023264,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023265,"byte_end":14023268,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023269,"byte_end":14023281,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023282,"byte_end":14023285,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will panic if not called within the context of a task created by [`block_on`],","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023286,"byte_end":14023382,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ [`spawn`], or [`Builder::spawn`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023383,"byte_end":14023420,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023421,"byte_end":14023424,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023425,"byte_end":14023459,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023460,"byte_end":14023488,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023489,"byte_end":14023545,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023546,"byte_end":14023549,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023550,"byte_end":14023564,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023565,"byte_end":14023568,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023569,"byte_end":14023576,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023577,"byte_end":14023616,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023617,"byte_end":14023622,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023623,"byte_end":14023647,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023648,"byte_end":14023651,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ println!(\"The name of this task is {:?}\", task::current().name());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023652,"byte_end":14023722,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023723,"byte_end":14023728,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023729,"byte_end":14023737,"line_start":23,"line_end":23,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023738,"byte_end":14023745,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024389,"byte_end":14024400,"line_start":46,"line_end":46,"column_start":8,"column_end":19},"name":"try_current","qualname":"::task::current::try_current","value":"fn try_current() -> Option<Task>","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task if called within the context of a task created by [`block_on`],\n [`spawn`], or [`Builder::spawn`], otherwise returns `None`.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task if called within the context of a task created by [`block_on`],","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023859,"byte_end":14023963,"line_start":29,"line_end":29,"column_start":1,"column_end":105}},{"value":"/ [`spawn`], or [`Builder::spawn`], otherwise returns `None`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14023964,"byte_end":14024027,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024028,"byte_end":14024031,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024032,"byte_end":14024066,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024067,"byte_end":14024095,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024096,"byte_end":14024152,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024153,"byte_end":14024156,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024157,"byte_end":14024171,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024172,"byte_end":14024175,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024176,"byte_end":14024183,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024184,"byte_end":14024208,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024209,"byte_end":14024212,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ match task::try_current() {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024213,"byte_end":14024244,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/     Some(t) => println!(\"The name of this task is {:?}\", t.name()),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024245,"byte_end":14024316,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/     None    => println!(\"Not inside a task!\"),","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024317,"byte_end":14024367,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024368,"byte_end":14024373,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":14024374,"byte_end":14024381,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14024857,"byte_end":14024867,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"JoinHandle","qualname":"::task::join_handle::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":2268},{"krate":0,"index":2269}],"decl_id":null,"docs":" A handle that awaits the result of a task.","sig":null,"attributes":[{"value":"/ A handle that awaits the result of a task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14024566,"byte_end":14024612,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14024613,"byte_end":14024616,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`JoinHandle`] will detach the task, meaning that there is no longer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14024617,"byte_end":14024700,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ a handle to the task and no way to `join` on it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14024701,"byte_end":14024753,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14024754,"byte_end":14024757,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created when a task is [spawned].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14024758,"byte_end":14024795,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14024796,"byte_end":14024799,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [spawned]: fn.spawn.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14024800,"byte_end":14024828,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025676,"byte_end":14025680,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"task","qualname":"<JoinHandle<T>>::task","value":"fn task<'_>(&'_ Self) -> &'_ Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying task.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025339,"byte_end":14025383,"line_start":34,"line_end":34,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025388,"byte_end":14025391,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025396,"byte_end":14025410,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025415,"byte_end":14025418,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025423,"byte_end":14025430,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025435,"byte_end":14025474,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025479,"byte_end":14025484,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025489,"byte_end":14025513,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025518,"byte_end":14025521,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025526,"byte_end":14025562,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/     1 + 2","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025567,"byte_end":14025580,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025585,"byte_end":14025592,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ println!(\"id = {}\", handle.task().id());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025597,"byte_end":14025641,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025646,"byte_end":14025651,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025656,"byte_end":14025664,"line_start":48,"line_end":48,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025807,"byte_end":14025813,"line_start":55,"line_end":55,"column_start":18,"column_end":24},"name":"cancel","qualname":"<JoinHandle<T>>::cancel","value":"async fn cancel(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cancel this task.\n","sig":null,"attributes":[{"value":"/ Cancel this task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025729,"byte_end":14025750,"line_start":53,"line_end":53,"column_start":5,"column_end":26}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025755,"byte_end":14025789,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14026224,"byte_end":14026228,"line_start":71,"line_end":71,"column_start":8,"column_end":12},"name":"drop","qualname":"<JoinHandle<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14026444,"byte_end":14026448,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"poll","qualname":"<JoinHandle<T> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14026402,"byte_end":14026436,"line_start":81,"line_end":81,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027648,"byte_end":14027653,"line_start":31,"line_end":31,"column_start":14,"column_end":19},"name":"sleep","qualname":"::task::sleep::sleep","value":"async fn sleep(Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sleeps for the specified amount of time.","sig":null,"attributes":[{"value":"/ Sleeps for the specified amount of time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027034,"byte_end":14027078,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027079,"byte_end":14027082,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function might sleep for slightly longer than the specified duration but never less.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027083,"byte_end":14027176,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027177,"byte_end":14027180,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::thread::sleep`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027181,"byte_end":14027245,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027246,"byte_end":14027249,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::thread::sleep`]: https://doc.rust-lang.org/std/thread/fn.sleep.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027250,"byte_end":14027328,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027329,"byte_end":14027332,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also: [`stream::interval`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027333,"byte_end":14027368,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027369,"byte_end":14027372,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`stream::interval`]: ../stream/fn.interval.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027373,"byte_end":14027425,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027426,"byte_end":14027429,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027430,"byte_end":14027444,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027445,"byte_end":14027448,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027449,"byte_end":14027456,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027457,"byte_end":14027496,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027497,"byte_end":14027502,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027503,"byte_end":14027531,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027532,"byte_end":14027535,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027536,"byte_end":14027560,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027561,"byte_end":14027564,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027565,"byte_end":14027611,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027612,"byte_end":14027617,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027618,"byte_end":14027626,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":14027627,"byte_end":14027634,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028238,"byte_end":14028243,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::spawn","value":"fn spawn<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> + Send +\n'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task.","sig":null,"attributes":[{"value":"/ Spawns a task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14027812,"byte_end":14027830,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14027831,"byte_end":14027834,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is similar to [`std::thread::spawn`], except it spawns an asynchronous task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14027835,"byte_end":14027929,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14027930,"byte_end":14027933,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14027934,"byte_end":14028005,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028006,"byte_end":14028009,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028010,"byte_end":14028024,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028025,"byte_end":14028028,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028029,"byte_end":14028036,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028037,"byte_end":14028076,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028077,"byte_end":14028082,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028083,"byte_end":14028107,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028108,"byte_end":14028111,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028112,"byte_end":14028148,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     1 + 2","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028149,"byte_end":14028162,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028163,"byte_end":14028170,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028171,"byte_end":14028174,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028175,"byte_end":14028207,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028208,"byte_end":14028213,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028214,"byte_end":14028222,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":14028223,"byte_end":14028230,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2126},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14029083,"byte_end":14029097,"line_start":31,"line_end":31,"column_start":8,"column_end":22},"name":"spawn_blocking","qualname":"::task::spawn_blocking::spawn_blocking","value":"fn spawn_blocking<F, T>(F) -> JoinHandle<T> where F: FnOnce() -> T + Send +\n'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a blocking task.","sig":null,"attributes":[{"value":"/ Spawns a blocking task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028455,"byte_end":14028482,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028483,"byte_end":14028486,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The task will be spawned onto a thread pool specifically dedicated to blocking tasks. This","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028487,"byte_end":14028581,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ is useful to prevent long-running synchronous operations from blocking the main futures","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028582,"byte_end":14028673,"line_start":6,"line_end":6,"column_start":1,"column_end":92}},{"value":"/ executor.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028674,"byte_end":14028687,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028688,"byte_end":14028691,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::block_on`], [`task::spawn`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028692,"byte_end":14028742,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028743,"byte_end":14028746,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`task::block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028747,"byte_end":14028787,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ [`task::spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028788,"byte_end":14028822,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028823,"byte_end":14028826,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028827,"byte_end":14028841,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028842,"byte_end":14028845,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028846,"byte_end":14028862,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028863,"byte_end":14028866,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028867,"byte_end":14028874,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028875,"byte_end":14028914,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028915,"byte_end":14028920,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028921,"byte_end":14028945,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028946,"byte_end":14028949,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028950,"byte_end":14028979,"line_start":23,"line_end":23,"column_start":1,"column_end":30}},{"value":"/     println!(\"long-running task here\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14028980,"byte_end":14029023,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14029024,"byte_end":14029030,"line_start":25,"line_end":25,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14029031,"byte_end":14029042,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14029043,"byte_end":14029048,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14029049,"byte_end":14029057,"line_start":28,"line_end":28,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14029058,"byte_end":14029065,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":14029066,"byte_end":14029075,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029371,"byte_end":14029375,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":2274},{"krate":0,"index":2275}],"decl_id":null,"docs":" A handle to a task.\n","sig":null,"attributes":[{"value":"/ A handle to a task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029319,"byte_end":14029342,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029756,"byte_end":14029758,"line_start":28,"line_end":28,"column_start":12,"column_end":14},"name":"id","qualname":"<Task>::id","value":"fn id<'_>(&'_ Self) -> TaskId","parent":null,"children":[],"decl_id":null,"docs":" Gets the task's unique identifier.\n","sig":null,"attributes":[{"value":"/ Gets the task's unique identifier.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029692,"byte_end":14029730,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029735,"byte_end":14029744,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029995,"byte_end":14029999,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"name","qualname":"<Task>::name","value":"fn name<'_>(&'_ Self) -> Option<&'_ str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this task.","sig":null,"attributes":[{"value":"/ Returns the name of this task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029805,"byte_end":14029839,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029844,"byte_end":14029847,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The name is configured by [`Builder::name`] before spawning.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029852,"byte_end":14029916,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029921,"byte_end":14029924,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029929,"byte_end":14029983,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14030115,"byte_end":14030118,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Task as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030627,"byte_end":14030633,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"TaskId","qualname":"::task::task_id::TaskId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a task.","sig":null,"attributes":[{"value":"/ A unique identifier for a task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030374,"byte_end":14030409,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030410,"byte_end":14030413,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030414,"byte_end":14030428,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030429,"byte_end":14030432,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030433,"byte_end":14030440,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030441,"byte_end":14030465,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030466,"byte_end":14030469,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030470,"byte_end":14030496,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/     println!(\"id = {:?}\", task::current().id());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030497,"byte_end":14030549,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030550,"byte_end":14030556,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030557,"byte_end":14030564,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14031092,"byte_end":14031095,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TaskId as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031523,"byte_end":14031531,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { __init, __key }","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299}],"decl_id":null,"docs":" The key for accessing a task-local value.","sig":null,"attributes":[{"value":"/ The key for accessing a task-local value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031337,"byte_end":14031382,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031383,"byte_end":14031386,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Every task-local value is lazily initialized on first access and destroyed when the task","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031387,"byte_end":14031479,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ completes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031480,"byte_end":14031494,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031580,"byte_end":14031586,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"__init","qualname":"::task::task_local::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2299},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031627,"byte_end":14031632,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"__key","qualname":"::task::task_local::LocalKey::__key","value":"std::sync::atomic::AtomicU32","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032654,"byte_end":14032658,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"fn with<F, R>(&'static Self, F) -> R where F: for<'_> FnOnce(&'_ T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Gets a reference to the task-local value with this key.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031690,"byte_end":14031749,"line_start":22,"line_end":22,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031754,"byte_end":14031757,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031762,"byte_end":14031830,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031835,"byte_end":14031838,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031843,"byte_end":14031935,"line_start":26,"line_end":26,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031940,"byte_end":14031943,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031948,"byte_end":14031960,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031965,"byte_end":14031968,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a task created by","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031973,"byte_end":14032055,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032060,"byte_end":14032111,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032116,"byte_end":14032119,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032124,"byte_end":14032158,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032163,"byte_end":14032191,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032196,"byte_end":14032252,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032257,"byte_end":14032260,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032265,"byte_end":14032279,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032284,"byte_end":14032287,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032292,"byte_end":14032299,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032304,"byte_end":14032309,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032314,"byte_end":14032338,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032343,"byte_end":14032346,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032351,"byte_end":14032375,"line_start":43,"line_end":43,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032380,"byte_end":14032410,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032415,"byte_end":14032418,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032423,"byte_end":14032440,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/     static NUMBER: Cell<u32> = Cell::new(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032445,"byte_end":14032493,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032498,"byte_end":14032503,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032508,"byte_end":14032511,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032516,"byte_end":14032542,"line_start":50,"line_end":50,"column_start":5,"column_end":31}},{"value":"/     let v = NUMBER.with(|c| c.get());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032547,"byte_end":14032588,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, 5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032593,"byte_end":14032618,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032623,"byte_end":14032630,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032635,"byte_end":14032642,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033944,"byte_end":14033952,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: for<'_> FnOnce(&'_ T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Attempts to get a reference to the task-local value with this key.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032848,"byte_end":14032918,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032923,"byte_end":14032926,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14032931,"byte_end":14032999,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033004,"byte_end":14033007,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033012,"byte_end":14033104,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033109,"byte_end":14033112,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if not called within the context of a task created by","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033117,"byte_end":14033205,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033210,"byte_end":14033261,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033266,"byte_end":14033269,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033274,"byte_end":14033308,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033313,"byte_end":14033341,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033346,"byte_end":14033402,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033407,"byte_end":14033410,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033415,"byte_end":14033429,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033434,"byte_end":14033437,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033442,"byte_end":14033449,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033454,"byte_end":14033459,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033464,"byte_end":14033488,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033493,"byte_end":14033496,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033501,"byte_end":14033525,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033530,"byte_end":14033560,"line_start":83,"line_end":83,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033565,"byte_end":14033568,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033573,"byte_end":14033590,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/     static VAL: Cell<u32> = Cell::new(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033595,"byte_end":14033640,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033645,"byte_end":14033650,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033655,"byte_end":14033658,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033663,"byte_end":14033689,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/     let v = VAL.try_with(|c| c.get());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033694,"byte_end":14033736,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(v, Ok(5));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033741,"byte_end":14033770,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033775,"byte_end":14033782,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033787,"byte_end":14033790,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // Returns an error because not called within the context of a task.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033795,"byte_end":14033867,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert!(VAL.try_with(|c| c.get()).is_err());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033872,"byte_end":14033920,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14033925,"byte_end":14033932,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14035505,"byte_end":14035516,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":2304}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`].","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14035338,"byte_end":14035386,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14035387,"byte_end":14035390,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`LocalKey::try_with`]: struct.LocalKey.html#method.try_with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14035391,"byte_end":14035455,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14035581,"byte_end":14035584,"line_start":149,"line_end":149,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AccessError as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14035736,"byte_end":14035739,"line_start":155,"line_end":155,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AccessError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":2332},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2376},{"krate":0,"index":2405},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16640,"byte_end":16665,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Asynchronous values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13875918,"byte_end":13875942,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13875943,"byte_end":13875946,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Base Futures Concurrency","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13875947,"byte_end":13875978,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13875979,"byte_end":13875982,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Often it's desirable to await multiple futures as if it was a single","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13875983,"byte_end":13876055,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ future. The `join` family of operations converts multiple futures into a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876056,"byte_end":13876132,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ single future that returns all of their outputs. The `race` family of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876133,"byte_end":13876206,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ operations converts multiple future into a single future that returns the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876207,"byte_end":13876284,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ first output.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876285,"byte_end":13876302,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876303,"byte_end":13876306,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For operating on futures the following functions can be used:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876307,"byte_end":13876372,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876373,"byte_end":13876376,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ | Name               | Return signature | When does it return?     |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876377,"byte_end":13876449,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ | ---                | ---              | ---                      |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876450,"byte_end":13876522,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ | [`Future::join`]   | `(T1, T2)`       | Wait for all to complete","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876523,"byte_end":13876593,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ | [`Future::race`]   | `T`              | Return on first value","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876594,"byte_end":13876661,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876662,"byte_end":13876665,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Fallible Futures Concurrency","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876666,"byte_end":13876701,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876702,"byte_end":13876705,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For operating on futures that return `Result` additional `try_` variants of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876706,"byte_end":13876785,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ the functions mentioned before can be used. These functions are aware of `Result`,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876786,"byte_end":13876872,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/ and will behave slightly differently from their base variants.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876873,"byte_end":13876939,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876940,"byte_end":13876943,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_join`, if any of the futures returns `Err` all","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13876944,"byte_end":13877014,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ futures are dropped and an error is returned. This is referred to as","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877015,"byte_end":13877087,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ \"short-circuiting\".","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877088,"byte_end":13877111,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877112,"byte_end":13877115,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_race`, instead of returning the first future that","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877116,"byte_end":13877189,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ completes it returns the first future that _successfully_ completes. This","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877190,"byte_end":13877267,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ means `try_race` will keep going until any one of the futures returns","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877268,"byte_end":13877341,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ `Ok`, or _all_ futures have returned `Err`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877342,"byte_end":13877389,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877390,"byte_end":13877393,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ However sometimes it can be useful to use the base variants of the functions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877394,"byte_end":13877474,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ even on futures that return `Result`. Here is an overview of operations that","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877475,"byte_end":13877555,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ work on `Result`, and their respective semantics:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877556,"byte_end":13877609,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877610,"byte_end":13877613,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ | Name                   | Return signature               | When does it return? |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877614,"byte_end":13877700,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"/ | ---                    | ---                            | ---                  |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877701,"byte_end":13877787,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"/ | [`Future::join`]       | `(Result<T, E>, Result<T, E>)` | Wait for all to complete","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877788,"byte_end":13877876,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/ | [`Future::try_join`]   | `Result<(T1, T2), E>`          | Return on first `Err`, wait for all to complete","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877877,"byte_end":13877988,"line_start":40,"line_end":40,"column_start":1,"column_end":112}},{"value":"/ | [`Future::race`]       | `Result<T, E>`                 | Return on first value","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13877989,"byte_end":13878074,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ | [`Future::try_race`]   | `Result<T, E>`                 | Return on first `Ok`, reject on last Err","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13878075,"byte_end":13878179,"line_start":42,"line_end":42,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13878180,"byte_end":13878183,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`Future::join`]: trait.Future.html#method.join","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13878184,"byte_end":13878235,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_join`]: trait.Future.html#method.try_join","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13878236,"byte_end":13878295,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/ [`Future::race`]: trait.Future.html#method.race","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13878296,"byte_end":13878347,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_race`]: trait.Future.html#method.try_race","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13878348,"byte_end":13878407,"line_start":47,"line_end":47,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\future\\mod.rs","byte_start":14168929,"byte_end":14168938,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[],"decl_id":null,"docs":"    Extension methods for [`Future`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176672,"byte_end":14176679,"line_start":27,"line_end":27,"column_start":14,"column_end":21},"name":"pending","qualname":"::future::pending::pending","value":"async fn pending<T>() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Never resolves to a value.","sig":null,"attributes":[{"value":"/ Never resolves to a value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176280,"byte_end":14176310,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176311,"byte_end":14176314,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176315,"byte_end":14176329,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176330,"byte_end":14176333,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176334,"byte_end":14176341,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176342,"byte_end":14176381,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176382,"byte_end":14176387,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176388,"byte_end":14176416,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176417,"byte_end":14176420,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176421,"byte_end":14176447,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176448,"byte_end":14176470,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176471,"byte_end":14176474,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_secs(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176475,"byte_end":14176512,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ let fut = future::pending();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176513,"byte_end":14176545,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176546,"byte_end":14176549,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let res: io::Result<()> = io::timeout(dur, fut).await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176550,"byte_end":14176608,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176609,"byte_end":14176635,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176636,"byte_end":14176641,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176642,"byte_end":14176650,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176651,"byte_end":14176658,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2390},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177570,"byte_end":14177577,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"async fn poll_fn<F, T>(F) -> /*impl Trait*/ where\nF: for<'_, '_> FnMut(&'_ mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177055,"byte_end":14177126,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177127,"byte_end":14177130,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177131,"byte_end":14177197,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177198,"byte_end":14177201,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177202,"byte_end":14177216,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177217,"byte_end":14177220,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177221,"byte_end":14177228,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177229,"byte_end":14177268,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177269,"byte_end":14177274,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177275,"byte_end":14177301,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use async_std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177302,"byte_end":14177343,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177344,"byte_end":14177347,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn poll_greeting(_: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177348,"byte_end":14177407,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/     Poll::Ready(\"hello world\".to_string())","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177408,"byte_end":14177454,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177455,"byte_end":14177460,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177461,"byte_end":14177464,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::poll_fn(poll_greeting).await, \"hello world\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177465,"byte_end":14177533,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177534,"byte_end":14177539,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177540,"byte_end":14177548,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177549,"byte_end":14177556,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2406},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178357,"byte_end":14178362,"line_start":18,"line_end":18,"column_start":14,"column_end":19},"name":"ready","qualname":"::future::ready::ready","value":"async fn ready<T>(T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Resolves to the provided value.","sig":null,"attributes":[{"value":"/ Resolves to the provided value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14177968,"byte_end":14178003,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178004,"byte_end":14178007,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::convert::identity`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178008,"byte_end":14178076,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178077,"byte_end":14178080,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178081,"byte_end":14178167,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178168,"byte_end":14178171,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178172,"byte_end":14178186,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178187,"byte_end":14178190,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178191,"byte_end":14178198,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178199,"byte_end":14178238,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178239,"byte_end":14178244,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178245,"byte_end":14178271,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178272,"byte_end":14178275,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::ready(10).await, 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178276,"byte_end":14178320,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178321,"byte_end":14178326,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178327,"byte_end":14178335,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":14178336,"byte_end":14178343,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879681,"byte_end":13879688,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"name":"timeout","qualname":"::future::timeout::timeout","value":"async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where F: Future<Output =\nT>","parent":null,"children":[],"decl_id":null,"docs":" Awaits a future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits a future or times out after a duration of time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879153,"byte_end":13879211,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879212,"byte_end":13879215,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you want to await an I/O future consider using","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879216,"byte_end":13879269,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ [`io::timeout`](../io/fn.timeout.html) instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879270,"byte_end":13879321,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879322,"byte_end":13879325,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879326,"byte_end":13879340,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879341,"byte_end":13879344,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879345,"byte_end":13879352,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879353,"byte_end":13879427,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879428,"byte_end":13879433,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879434,"byte_end":13879462,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879463,"byte_end":13879466,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879467,"byte_end":13879493,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879494,"byte_end":13879497,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let never = future::pending::<()>();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879498,"byte_end":13879538,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ let dur = Duration::from_millis(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879539,"byte_end":13879578,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ assert!(future::timeout(dur, never).await.is_err());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879579,"byte_end":13879635,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879636,"byte_end":13879641,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879642,"byte_end":13879659,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13879660,"byte_end":13879667,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2410},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13880851,"byte_end":13880863,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::future::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":2411}],"decl_id":null,"docs":" An error returned when a future times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a future times out.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13880748,"byte_end":13880794,"line_start":74,"line_end":74,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13880963,"byte_end":13880966,"line_start":83,"line_end":83,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TimeoutError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10305},"children":[],"decl_id":{"krate":2,"index":10306},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":1761},{"krate":0,"index":1784},{"krate":0,"index":1808},{"krate":0,"index":1831},{"krate":0,"index":1854},{"krate":0,"index":1874}],"decl_id":null,"docs":" Composable asynchronous iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16640,"byte_end":16665,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Composable asynchronous iteration.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881066,"byte_end":13881104,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881105,"byte_end":13881108,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::iter`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881109,"byte_end":13881162,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881163,"byte_end":13881166,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If you've found yourself with an asynchronous collection of some kind,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881167,"byte_end":13881241,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ and needed to perform an operation on the elements of said collection,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881242,"byte_end":13881316,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ you'll quickly run into 'streams'. Streams are heavily used in idiomatic","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881317,"byte_end":13881393,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ asynchronous Rust code, so it's worth becoming familiar with them.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881394,"byte_end":13881464,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881465,"byte_end":13881468,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Before explaining more, let's talk about how this module is structured:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881469,"byte_end":13881544,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881545,"byte_end":13881548,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881549,"byte_end":13881567,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881568,"byte_end":13881571,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This module is largely organized by type:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881572,"byte_end":13881617,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881618,"byte_end":13881621,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [Traits] are the core portion: these traits define what kind of streams","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881622,"byte_end":13881699,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/   exist and what you can do with them. The methods of these traits are worth","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881700,"byte_end":13881780,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   putting some extra study time into.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881781,"byte_end":13881822,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ * [Functions] provide some helpful ways to create some basic streams.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881823,"byte_end":13881896,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ * [Structs] are often the return types of the various methods on this","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881897,"byte_end":13881970,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/   module's traits. You'll usually want to look at the method that creates","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13881971,"byte_end":13882048,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   the `struct`, rather than the `struct` itself. For more detail about why,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882049,"byte_end":13882128,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   see '[Implementing Stream](#implementing-stream)'.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882129,"byte_end":13882185,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882186,"byte_end":13882189,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [Traits]: #traits","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882190,"byte_end":13882211,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ [Functions]: #functions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882212,"byte_end":13882239,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ [Structs]: #structs","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882240,"byte_end":13882263,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882264,"byte_end":13882267,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ That's it! Let's dig into streams.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882268,"byte_end":13882306,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882307,"byte_end":13882310,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Stream","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882311,"byte_end":13882323,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882324,"byte_end":13882327,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The heart and soul of this module is the [`Stream`] trait. The core of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882328,"byte_end":13882402,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ [`Stream`] looks like this:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882403,"byte_end":13882434,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882435,"byte_end":13882438,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882439,"byte_end":13882446,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882447,"byte_end":13882490,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882491,"byte_end":13882515,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ trait Stream {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882516,"byte_end":13882534,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/     type Item;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882535,"byte_end":13882553,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/     fn poll_next(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882554,"byte_end":13882647,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882648,"byte_end":13882653,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882654,"byte_end":13882661,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882662,"byte_end":13882665,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ A stream has a method, [`next`], which when called, returns an","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882666,"byte_end":13882732,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ [`Poll`]<[`Option`]`<Item>>`. [`next`] will return `Ready(Some(Item))`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882733,"byte_end":13882807,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ as long as there are elements, and once they've all been exhausted, will","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882808,"byte_end":13882884,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ return `None` to indicate that iteration is finished. If we're waiting on","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882885,"byte_end":13882962,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ something asynchronous to resolve `Pending` is returned.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13882963,"byte_end":13883023,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883024,"byte_end":13883027,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Individual streams may choose to resume iteration, and so calling","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883028,"byte_end":13883097,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ [`next`] again may or may not eventually start returning `Ready(Some(Item))`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883098,"byte_end":13883178,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ again at some point.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883179,"byte_end":13883203,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883204,"byte_end":13883207,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]'s full definition includes a number of other methods as well,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883208,"byte_end":13883284,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ but they are default methods, built on top of [`next`], and so you get","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883285,"byte_end":13883359,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ them for free.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883360,"byte_end":13883378,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883379,"byte_end":13883382,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Streams are also composable, and it's common to chain them together to do","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883383,"byte_end":13883460,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ more complex forms of processing. See the [Adapters](#adapters) section","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883461,"byte_end":13883536,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ below for more details.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883537,"byte_end":13883564,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883565,"byte_end":13883568,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../task/enum.Poll.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883569,"byte_end":13883605,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883606,"byte_end":13883639,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ [`next`]: trait.Stream.html#tymethod.next","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883640,"byte_end":13883685,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`Option`]: ../../std/option/enum.Option.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883686,"byte_end":13883735,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883736,"byte_end":13883739,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # The three forms of streaming","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883740,"byte_end":13883774,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883775,"byte_end":13883778,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ There are three common methods which can create streams from a collection:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883779,"byte_end":13883857,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883858,"byte_end":13883861,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `stream()`, which iterates over `&T`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883862,"byte_end":13883905,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/ * `stream_mut()`, which iterates over `&mut T`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883906,"byte_end":13883957,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/ * `into_stream()`, which iterates over `T`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13883958,"byte_end":13884005,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884006,"byte_end":13884009,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Various things in async-std may implement one or more of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884010,"byte_end":13884074,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ three, where appropriate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884075,"byte_end":13884104,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884105,"byte_end":13884108,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Implementing Stream","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884109,"byte_end":13884134,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884135,"byte_end":13884138,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Creating a stream of your own involves two steps: creating a `struct` to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884139,"byte_end":13884215,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ hold the stream's state, and then `impl`ementing [`Stream`] for that","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884216,"byte_end":13884288,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ `struct`. This is why there are so many `struct`s in this module: there is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884289,"byte_end":13884367,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ one for each stream and iterator adapter.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884368,"byte_end":13884413,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884414,"byte_end":13884417,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Let's make a stream named `Counter` which counts from `1` to `5`:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884418,"byte_end":13884487,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884488,"byte_end":13884491,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884492,"byte_end":13884499,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884500,"byte_end":13884532,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884533,"byte_end":13884576,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884577,"byte_end":13884601,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/ // First, the struct:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884602,"byte_end":13884627,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884628,"byte_end":13884631,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ /// A stream which counts from one to five","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884632,"byte_end":13884678,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"/ struct Counter {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884679,"byte_end":13884699,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"/     count: usize,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884700,"byte_end":13884721,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884722,"byte_end":13884727,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884728,"byte_end":13884731,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // we want our count to start at one, so let's add a new() method to help.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884732,"byte_end":13884810,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ // This isn't strictly necessary, but is convenient. Note that we start","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884811,"byte_end":13884886,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ // `count` at zero, we'll see why in `next()`'s implementation below.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884887,"byte_end":13884960,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/ impl Counter {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884961,"byte_end":13884979,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"/     fn new() -> Counter {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13884980,"byte_end":13885009,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"/         Counter { count: 0 }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885010,"byte_end":13885042,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885043,"byte_end":13885052,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885053,"byte_end":13885058,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885059,"byte_end":13885062,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // Then, we implement `Stream` for our `Counter`:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885063,"byte_end":13885116,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885117,"byte_end":13885120,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ impl Stream for Counter {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885121,"byte_end":13885150,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"/     // we will be counting with usize","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885151,"byte_end":13885192,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/     type Item = usize;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885193,"byte_end":13885219,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885220,"byte_end":13885223,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     // poll_next() is the only required method","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885224,"byte_end":13885274,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885275,"byte_end":13885373,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/         // Increment our count. This is why we started at zero.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885374,"byte_end":13885441,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"/         self.count += 1;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885442,"byte_end":13885470,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885471,"byte_end":13885474,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/         // Check to see if we've finished counting or not.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885475,"byte_end":13885537,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/         if self.count < 6 {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885538,"byte_end":13885569,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"/             Poll::Ready(Some(self.count))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885570,"byte_end":13885615,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885616,"byte_end":13885636,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"/             Poll::Ready(None)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885637,"byte_end":13885670,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885671,"byte_end":13885684,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885685,"byte_end":13885694,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885695,"byte_end":13885700,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885701,"byte_end":13885704,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885705,"byte_end":13885734,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885735,"byte_end":13885809,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885810,"byte_end":13885815,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ let mut counter = Counter::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885816,"byte_end":13885853,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885854,"byte_end":13885857,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885858,"byte_end":13885900,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885901,"byte_end":13885923,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885924,"byte_end":13885927,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885928,"byte_end":13885970,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885971,"byte_end":13885993,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885994,"byte_end":13885997,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13885998,"byte_end":13886040,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886041,"byte_end":13886063,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886064,"byte_end":13886067,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886068,"byte_end":13886110,"line_start":142,"line_end":142,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886111,"byte_end":13886133,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886134,"byte_end":13886137,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886138,"byte_end":13886180,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886181,"byte_end":13886203,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886204,"byte_end":13886209,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886210,"byte_end":13886227,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886228,"byte_end":13886235,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886236,"byte_end":13886239,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This will print `1` through `5`, each on their own line.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886240,"byte_end":13886300,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886301,"byte_end":13886304,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Calling `next().await` this way gets repetitive. Rust has a construct which","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886305,"byte_end":13886384,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/ can call `next()` on your stream, until it reaches `None`. Let's go over","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886385,"byte_end":13886461,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"/ that next.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886462,"byte_end":13886476,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886477,"byte_end":13886480,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # while let Loops and IntoStream","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886481,"byte_end":13886517,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886518,"byte_end":13886521,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Rust's `while let` loop syntax is an idiomatic way to iterate over streams. Here's a basic","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886522,"byte_end":13886616,"line_start":159,"line_end":159,"column_start":1,"column_end":95}},{"value":"/ example of `while let`:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886617,"byte_end":13886644,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886645,"byte_end":13886648,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886649,"byte_end":13886656,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886657,"byte_end":13886731,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886732,"byte_end":13886737,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886738,"byte_end":13886770,"line_start":165,"line_end":165,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886771,"byte_end":13886799,"line_start":166,"line_end":166,"column_start":1,"column_end":29}},{"value":"/ let mut values = stream::from_iter(1u8..6);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886800,"byte_end":13886847,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886848,"byte_end":13886851,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = values.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886852,"byte_end":13886897,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886898,"byte_end":13886924,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886925,"byte_end":13886930,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886931,"byte_end":13886936,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886937,"byte_end":13886954,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886955,"byte_end":13886962,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886963,"byte_end":13886966,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers one through five, each on their own line. But","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13886967,"byte_end":13887044,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ you'll notice something here: we never called anything on our vector to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887045,"byte_end":13887120,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/ produce a stream. What gives?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887121,"byte_end":13887154,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887155,"byte_end":13887158,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ There's a trait in the standard library for converting something into an","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887159,"byte_end":13887235,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ stream: [`IntoStream`]. This trait has one method, [`into_stream`],","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887236,"byte_end":13887307,"line_start":181,"line_end":181,"column_start":1,"column_end":72}},{"value":"/ which converts the thing implementing [`IntoStream`] into a stream.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887308,"byte_end":13887379,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887380,"byte_end":13887383,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Unlike `std::iter::IntoIterator`, `IntoStream` does not have compiler","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887384,"byte_end":13887457,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ support yet. This means that automatic conversions like with `for` loops","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887458,"byte_end":13887534,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"/ doesn't occur yet, and `into_stream` or `from_iter` as above will always","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887535,"byte_end":13887611,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ have to be called manually.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887612,"byte_end":13887643,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887644,"byte_end":13887647,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887648,"byte_end":13887689,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ [`into_stream`]: trait.IntoStream.html#tymethod.into_stream","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887690,"byte_end":13887753,"line_start":190,"line_end":190,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887754,"byte_end":13887757,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ # Adapters","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887758,"byte_end":13887772,"line_start":192,"line_end":192,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887773,"byte_end":13887776,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ Functions which take an [`Stream`] and return another [`Stream`] are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887777,"byte_end":13887849,"line_start":194,"line_end":194,"column_start":1,"column_end":73}},{"value":"/ often called 'stream adapters', as they are a form of the 'adapter","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887850,"byte_end":13887920,"line_start":195,"line_end":195,"column_start":1,"column_end":71}},{"value":"/ pattern'.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887921,"byte_end":13887934,"line_start":196,"line_end":196,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887935,"byte_end":13887938,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Common stream adapters include [`map`], [`take`], and [`filter`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13887939,"byte_end":13888008,"line_start":198,"line_end":198,"column_start":1,"column_end":70}},{"value":"/ For more, see their documentation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888009,"byte_end":13888047,"line_start":199,"line_end":199,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888048,"byte_end":13888051,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888052,"byte_end":13888093,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888094,"byte_end":13888137,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"/ [`filter`]: trait.Stream.html#method.filter","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888138,"byte_end":13888185,"line_start":203,"line_end":203,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888186,"byte_end":13888189,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ # Laziness","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888190,"byte_end":13888204,"line_start":205,"line_end":205,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888205,"byte_end":13888208,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ Streams (and stream [adapters](#adapters)) are *lazy*. This means that","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888209,"byte_end":13888283,"line_start":207,"line_end":207,"column_start":1,"column_end":75}},{"value":"/ just creating a stream doesn't _do_ a whole lot. Nothing really happens","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888284,"byte_end":13888359,"line_start":208,"line_end":208,"column_start":1,"column_end":76}},{"value":"/ until you call [`next`]. This is sometimes a source of confusion when","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888360,"byte_end":13888433,"line_start":209,"line_end":209,"column_start":1,"column_end":74}},{"value":"/ creating a stream solely for its side effects. For example, the [`map`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888434,"byte_end":13888509,"line_start":210,"line_end":210,"column_start":1,"column_end":76}},{"value":"/ method calls a closure on each element it iterates over:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888510,"byte_end":13888570,"line_start":211,"line_end":211,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888571,"byte_end":13888574,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888575,"byte_end":13888582,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888583,"byte_end":13888615,"line_start":214,"line_end":214,"column_start":1,"column_end":33}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888616,"byte_end":13888690,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888691,"byte_end":13888696,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888697,"byte_end":13888729,"line_start":217,"line_end":217,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888730,"byte_end":13888758,"line_start":218,"line_end":218,"column_start":1,"column_end":29}},{"value":"/ let v = stream::repeat(1u8).take(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888759,"byte_end":13888799,"line_start":219,"line_end":219,"column_start":1,"column_end":41}},{"value":"/ v.map(|x| println!(\"{}\", x));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888800,"byte_end":13888833,"line_start":220,"line_end":220,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888834,"byte_end":13888839,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888840,"byte_end":13888857,"line_start":222,"line_end":222,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888858,"byte_end":13888865,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888866,"byte_end":13888869,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ This will not print any values, as we only created a stream, rather than","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888870,"byte_end":13888946,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ using it. The compiler will warn us about this kind of behavior:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13888947,"byte_end":13889015,"line_start":226,"line_end":226,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889016,"byte_end":13889019,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889020,"byte_end":13889031,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ warning: unused result that must be used: streams are lazy and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889032,"byte_end":13889098,"line_start":229,"line_end":229,"column_start":1,"column_end":67}},{"value":"/ do nothing unless consumed","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889099,"byte_end":13889129,"line_start":230,"line_end":230,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889130,"byte_end":13889137,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889138,"byte_end":13889141,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ The idiomatic way to write a [`map`] for its side effects is to use a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889142,"byte_end":13889215,"line_start":233,"line_end":233,"column_start":1,"column_end":74}},{"value":"/ `while let` loop instead:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889216,"byte_end":13889245,"line_start":234,"line_end":234,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889246,"byte_end":13889249,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889250,"byte_end":13889257,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889258,"byte_end":13889332,"line_start":237,"line_end":237,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889333,"byte_end":13889338,"line_start":238,"line_end":238,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889339,"byte_end":13889371,"line_start":239,"line_end":239,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889372,"byte_end":13889400,"line_start":240,"line_end":240,"column_start":1,"column_end":29}},{"value":"/ let mut v = stream::repeat(1u8).take(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889401,"byte_end":13889445,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889446,"byte_end":13889449,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = &v.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889450,"byte_end":13889491,"line_start":243,"line_end":243,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889492,"byte_end":13889518,"line_start":244,"line_end":244,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889519,"byte_end":13889524,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889525,"byte_end":13889530,"line_start":246,"line_end":246,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889531,"byte_end":13889548,"line_start":247,"line_end":247,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889549,"byte_end":13889556,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889557,"byte_end":13889560,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889561,"byte_end":13889602,"line_start":250,"line_end":250,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889603,"byte_end":13889606,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ The two most common ways to evaluate a stream are to use a `while let` loop","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889607,"byte_end":13889686,"line_start":252,"line_end":252,"column_start":1,"column_end":80}},{"value":"/ like this, or using the [`collect`] method to produce a new collection.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889687,"byte_end":13889762,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889763,"byte_end":13889766,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889767,"byte_end":13889816,"line_start":255,"line_end":255,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889817,"byte_end":13889820,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # Infinity","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889821,"byte_end":13889835,"line_start":257,"line_end":257,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889836,"byte_end":13889839,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Streams do not have to be finite. As an example, a repeat stream is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889840,"byte_end":13889911,"line_start":259,"line_end":259,"column_start":1,"column_end":72}},{"value":"/ an infinite stream:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889912,"byte_end":13889935,"line_start":260,"line_end":260,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889936,"byte_end":13889939,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889940,"byte_end":13889947,"line_start":262,"line_end":262,"column_start":1,"column_end":8}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889948,"byte_end":13889976,"line_start":263,"line_end":263,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::repeat(1u8);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13889977,"byte_end":13890015,"line_start":264,"line_end":264,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890016,"byte_end":13890023,"line_start":265,"line_end":265,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890024,"byte_end":13890027,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ It is common to use the [`take`] stream adapter to turn an infinite","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890028,"byte_end":13890099,"line_start":267,"line_end":267,"column_start":1,"column_end":72}},{"value":"/ stream into a finite one:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890100,"byte_end":13890129,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890130,"byte_end":13890133,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890134,"byte_end":13890141,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890142,"byte_end":13890216,"line_start":271,"line_end":271,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890217,"byte_end":13890222,"line_start":272,"line_end":272,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890223,"byte_end":13890255,"line_start":273,"line_end":273,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890256,"byte_end":13890284,"line_start":274,"line_end":274,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::from_iter(0u8..);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890285,"byte_end":13890328,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"/ let mut five_numbers = numbers.take(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890329,"byte_end":13890372,"line_start":276,"line_end":276,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890373,"byte_end":13890376,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ while let Some(number) = five_numbers.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890377,"byte_end":13890433,"line_start":278,"line_end":278,"column_start":1,"column_end":57}},{"value":"/     println!(\"{}\", number);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890434,"byte_end":13890465,"line_start":279,"line_end":279,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890466,"byte_end":13890471,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890472,"byte_end":13890477,"line_start":281,"line_end":281,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890478,"byte_end":13890495,"line_start":282,"line_end":282,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890496,"byte_end":13890503,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890504,"byte_end":13890507,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers `0` through `4`, each on their own line.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890508,"byte_end":13890580,"line_start":285,"line_end":285,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890581,"byte_end":13890584,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ Bear in mind that methods on infinite streams, even those for which a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890585,"byte_end":13890658,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ result can be determined mathematically in finite time, may not terminate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890659,"byte_end":13890737,"line_start":288,"line_end":288,"column_start":1,"column_end":79}},{"value":"/ Specifically, methods such as [`min`], which in the general case require","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890738,"byte_end":13890814,"line_start":289,"line_end":289,"column_start":1,"column_end":77}},{"value":"/ traversing every element in the stream, are likely not to return","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890815,"byte_end":13890883,"line_start":290,"line_end":290,"column_start":1,"column_end":69}},{"value":"/ successfully for any infinite streams.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890884,"byte_end":13890926,"line_start":291,"line_end":291,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890927,"byte_end":13890930,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890931,"byte_end":13890944,"line_start":293,"line_end":293,"column_start":1,"column_end":14}},{"value":"/ let ones = async_std::stream::repeat(1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890945,"byte_end":13890989,"line_start":294,"line_end":294,"column_start":1,"column_end":45}},{"value":"/ let least = ones.min().await.unwrap(); // Oh no! An infinite loop!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13890990,"byte_end":13891060,"line_start":295,"line_end":295,"column_start":1,"column_end":71}},{"value":"/ // `ones.min()` causes an infinite loop, so we won't reach this point!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891061,"byte_end":13891135,"line_start":296,"line_end":296,"column_start":1,"column_end":75}},{"value":"/ println!(\"The smallest number one is {}.\", least);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891136,"byte_end":13891190,"line_start":297,"line_end":297,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891191,"byte_end":13891198,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891199,"byte_end":13891202,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ [`std::iter`]: https://doc.rust-lang.org/std/iter/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891203,"byte_end":13891267,"line_start":300,"line_end":300,"column_start":1,"column_end":65}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891268,"byte_end":13891311,"line_start":301,"line_end":301,"column_start":1,"column_end":44}},{"value":"/ [`min`]: trait.Stream.html#method.min","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13891312,"byte_end":13891353,"line_start":302,"line_end":302,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13951180,"byte_end":13951189,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13951129,"byte_end":13951168,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13951717,"byte_end":13951721,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"poll","qualname":"<AllFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13952535,"byte_end":13952544,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13952484,"byte_end":13952523,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13953072,"byte_end":13953076,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"poll","qualname":"<AnyFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8185},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\chain.rs","byte_start":13954191,"byte_end":13954196,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":8188},{"krate":0,"index":8189}],"decl_id":null,"docs":" A stream that chains two streams one after another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\chain.rs","byte_start":13954590,"byte_end":13954599,"line_start":39,"line_end":39,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chain<S, U> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8149},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cloned.rs","byte_start":13955523,"byte_end":13955529,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Cloned","qualname":"::stream::stream::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":8151}],"decl_id":null,"docs":" A stream that clones the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cloned.rs","byte_start":13955792,"byte_end":13955801,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Cloned<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8096},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cmp.rs","byte_start":13956453,"byte_end":13956462,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"CmpFuture","qualname":"::stream::stream::cmp::CmpFuture","value":"CmpFuture {  }","parent":null,"children":[{"krate":0,"index":8099},{"krate":0,"index":8100},{"krate":0,"index":8101},{"krate":0,"index":8102}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cmp.rs","byte_start":13957039,"byte_end":13957043,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<CmpFuture<L, R> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8060},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\copied.rs","byte_start":13959145,"byte_end":13959151,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Copied","qualname":"::stream::stream::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":8062}],"decl_id":null,"docs":" A stream that copies the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\copied.rs","byte_start":13959413,"byte_end":13959422,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Copied<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8020},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","byte_start":13959910,"byte_end":13959915,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":8022},{"krate":0,"index":8023}],"decl_id":null,"docs":" A stream that will repeatedly yield the same list of elements.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","byte_start":13960252,"byte_end":13960261,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Cycle<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7980},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\enumerate.rs","byte_start":13960793,"byte_end":13960802,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":7982},{"krate":0,"index":7983}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\enumerate.rs","byte_start":13961071,"byte_end":13961080,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Enumerate<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7935},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\eq.rs","byte_start":13961879,"byte_end":13961887,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"EqFuture","qualname":"::stream::stream::eq::EqFuture","value":"EqFuture {  }","parent":null,"children":[{"krate":0,"index":7938},{"krate":0,"index":7939}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\eq.rs","byte_start":13962374,"byte_end":13962378,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"poll","qualname":"<EqFuture<L, R> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7886},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter.rs","byte_start":13963426,"byte_end":13963432,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7889},{"krate":0,"index":7890}],"decl_id":null,"docs":" A stream to filter elements of another stream with a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter.rs","byte_start":13963789,"byte_end":13963798,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Filter<S, P> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7837},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter_map.rs","byte_start":13964405,"byte_end":13964414,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7840},{"krate":0,"index":7841}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter_map.rs","byte_start":13964721,"byte_end":13964730,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FilterMap<S, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13965393,"byte_end":13965403,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"FindFuture","qualname":"::stream::stream::find::FindFuture","value":"FindFuture {  }","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13965342,"byte_end":13965381,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13965797,"byte_end":13965801,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"poll","qualname":"<FindFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13966389,"byte_end":13966402,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"FindMapFuture","qualname":"::stream::stream::find_map::FindMapFuture","value":"FindMapFuture {  }","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13966338,"byte_end":13966377,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13966806,"byte_end":13966810,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"poll","qualname":"<FindMapFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7775},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fold.rs","byte_start":13967479,"byte_end":13967489,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":7779},{"krate":0,"index":7780},{"krate":0,"index":7781}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fold.rs","byte_start":13967910,"byte_end":13967914,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<FoldFuture<S, F, B> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7730},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\for_each.rs","byte_start":13968679,"byte_end":13968692,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"ForEachFuture","qualname":"::stream::stream::for_each::ForEachFuture","value":"ForEachFuture {  }","parent":null,"children":[{"krate":0,"index":7733},{"krate":0,"index":7734}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\for_each.rs","byte_start":13969035,"byte_end":13969039,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEachFuture<S, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7687},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fuse.rs","byte_start":13969872,"byte_end":13969876,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7689},{"krate":0,"index":7690}],"decl_id":null,"docs":" A stream that yields `None` forever after the underlying stream yields `None` once.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fuse.rs","byte_start":13970177,"byte_end":13970186,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Fuse<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<S::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7646},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ge.rs","byte_start":13971032,"byte_end":13971040,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GeFuture","qualname":"::stream::stream::ge::GeFuture","value":"GeFuture {  }","parent":null,"children":[{"krate":0,"index":7649}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ge.rs","byte_start":13971496,"byte_end":13971500,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"poll","qualname":"<GeFuture<L, R> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7605},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\gt.rs","byte_start":13972265,"byte_end":13972273,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GtFuture","qualname":"::stream::stream::gt::GtFuture","value":"GtFuture {  }","parent":null,"children":[{"krate":0,"index":7608}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\gt.rs","byte_start":13972745,"byte_end":13972749,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"poll","qualname":"<GtFuture<L, R> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7556},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\inspect.rs","byte_start":13973502,"byte_end":13973509,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7559},{"krate":0,"index":7560}],"decl_id":null,"docs":" A stream that does something with each element of another stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\inspect.rs","byte_start":13973836,"byte_end":13973845,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Inspect<S, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7511},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\last.rs","byte_start":13974371,"byte_end":13974381,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"LastFuture","qualname":"::stream::stream::last::LastFuture","value":"LastFuture {  }","parent":null,"children":[{"krate":0,"index":7514},{"krate":0,"index":7515}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\last.rs","byte_start":13974719,"byte_end":13974723,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"poll","qualname":"<LastFuture<S, S::Item> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7470},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\le.rs","byte_start":13975594,"byte_end":13975602,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LeFuture","qualname":"::stream::stream::le::LeFuture","value":"LeFuture {  }","parent":null,"children":[{"krate":0,"index":7473}],"decl_id":null,"docs":" Determines if the elements of this `Stream` are lexicographically\n less or equal to those of another.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\le.rs","byte_start":13976074,"byte_end":13976078,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"poll","qualname":"<LeFuture<L, R> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7429},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\lt.rs","byte_start":13976837,"byte_end":13976845,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LtFuture","qualname":"::stream::stream::lt::LtFuture","value":"LtFuture {  }","parent":null,"children":[{"krate":0,"index":7432}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\lt.rs","byte_start":13977317,"byte_end":13977321,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"poll","qualname":"<LtFuture<L, R> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7380},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\map.rs","byte_start":13977843,"byte_end":13977846,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7383},{"krate":0,"index":7384}],"decl_id":null,"docs":" A stream that maps value of another stream with a function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\map.rs","byte_start":13978166,"byte_end":13978175,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Map<S, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7335},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max.rs","byte_start":13978670,"byte_end":13978679,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MaxFuture","qualname":"::stream::stream::max::MaxFuture","value":"MaxFuture {  }","parent":null,"children":[{"krate":0,"index":7338},{"krate":0,"index":7339}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max.rs","byte_start":13978996,"byte_end":13979000,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"poll","qualname":"<MaxFuture<S, S::Item> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7278},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by.rs","byte_start":13979947,"byte_end":13979958,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MaxByFuture","qualname":"::stream::stream::max_by::MaxByFuture","value":"MaxByFuture {  }","parent":null,"children":[{"krate":0,"index":7282},{"krate":0,"index":7283},{"krate":0,"index":7284}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by.rs","byte_start":13980408,"byte_end":13980412,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"poll","qualname":"<MaxByFuture<S, F, S::Item> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7221},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13981371,"byte_end":13981385,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MaxByKeyFuture","qualname":"::stream::stream::max_by_key::MaxByKeyFuture","value":"MaxByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":7225},{"krate":0,"index":7226},{"krate":0,"index":7227}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13981850,"byte_end":13981854,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"poll","qualname":"<MaxByKeyFuture<S, S::Item, K> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7176},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min.rs","byte_start":13983025,"byte_end":13983034,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MinFuture","qualname":"::stream::stream::min::MinFuture","value":"MinFuture {  }","parent":null,"children":[{"krate":0,"index":7179},{"krate":0,"index":7180}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min.rs","byte_start":13983351,"byte_end":13983355,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"poll","qualname":"<MinFuture<S, S::Item> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7119},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by.rs","byte_start":13984299,"byte_end":13984310,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MinByFuture","qualname":"::stream::stream::min_by::MinByFuture","value":"MinByFuture {  }","parent":null,"children":[{"krate":0,"index":7123},{"krate":0,"index":7124},{"krate":0,"index":7125}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by.rs","byte_start":13984795,"byte_end":13984799,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"poll","qualname":"<MinByFuture<S, F, S::Item> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7062},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13985749,"byte_end":13985763,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MinByKeyFuture","qualname":"::stream::stream::min_by_key::MinByKeyFuture","value":"MinByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":7066},{"krate":0,"index":7067},{"krate":0,"index":7068}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13986228,"byte_end":13986232,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"poll","qualname":"<MinByKeyFuture<S, S::Item, K> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7017},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ne.rs","byte_start":13987523,"byte_end":13987531,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"NeFuture","qualname":"::stream::stream::ne::NeFuture","value":"NeFuture {  }","parent":null,"children":[{"krate":0,"index":7020},{"krate":0,"index":7021}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ne.rs","byte_start":13988018,"byte_end":13988022,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"poll","qualname":"<NeFuture<L, R> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\next.rs","byte_start":13988831,"byte_end":13988841,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"NextFuture","qualname":"::stream::stream::next::NextFuture","value":"NextFuture {  }","parent":null,"children":[{"krate":0,"index":1147}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\next.rs","byte_start":13988780,"byte_end":13988819,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\next.rs","byte_start":13989011,"byte_end":13989015,"line_start":16,"line_end":16,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13989321,"byte_end":13989330,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"NthFuture","qualname":"::stream::stream::nth::NthFuture","value":"NthFuture {  }","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13989270,"byte_end":13989309,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13989676,"byte_end":13989680,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<NthFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6964},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13990584,"byte_end":13990600,"line_start":17,"line_end":17,"column_start":16,"column_end":32},"name":"PartialCmpFuture","qualname":"::stream::stream::partial_cmp::PartialCmpFuture","value":"PartialCmpFuture {  }","parent":null,"children":[{"krate":0,"index":6967},{"krate":0,"index":6968},{"krate":0,"index":6969},{"krate":0,"index":6970}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14561205,"byte_end":14561214,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13991199,"byte_end":13991203,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<PartialCmpFuture<L, R> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13993330,"byte_end":13993344,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"PositionFuture","qualname":"::stream::stream::position::PositionFuture","value":"PositionFuture {  }","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13993279,"byte_end":13993318,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13993833,"byte_end":13993837,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"poll","qualname":"<PositionFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6906},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\scan.rs","byte_start":13994816,"byte_end":13994820,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":6910},{"krate":0,"index":6911}],"decl_id":null,"docs":" A stream to maintain state while polling another stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\scan.rs","byte_start":13995236,"byte_end":13995245,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Scan<S, St, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<B>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6866},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip.rs","byte_start":13996036,"byte_end":13996040,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":6868},{"krate":0,"index":6869}],"decl_id":null,"docs":" A stream to skip first n elements of another stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip.rs","byte_start":13996297,"byte_end":13996306,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Skip<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6817},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip_while.rs","byte_start":13997255,"byte_end":13997264,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6820},{"krate":0,"index":6821}],"decl_id":null,"docs":" A stream to skip elements of another stream based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip_while.rs","byte_start":13997652,"byte_end":13997661,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SkipWhile<S, P> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\step_by.rs","byte_start":13998798,"byte_end":13998804,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"StepBy","qualname":"::stream::stream::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":6775},{"krate":0,"index":6776},{"krate":0,"index":6777}],"decl_id":null,"docs":" A stream that steps a given amount of elements of another stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\step_by.rs","byte_start":13999173,"byte_end":13999182,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<StepBy<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6730},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take.rs","byte_start":14000207,"byte_end":14000211,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6732},{"krate":0,"index":6733}],"decl_id":null,"docs":" A stream that yields the first `n` items of another stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take.rs","byte_start":14000534,"byte_end":14000543,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Take<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<S::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6681},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take_while.rs","byte_start":14001446,"byte_end":14001455,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6684},{"krate":0,"index":6685}],"decl_id":null,"docs":" A stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take_while.rs","byte_start":14001818,"byte_end":14001827,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeWhile<S, P> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":14002464,"byte_end":14002477,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"TryFoldFuture","qualname":"::stream::stream::try_fold::TryFoldFuture","value":"TryFoldFuture {  }","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":14002413,"byte_end":14002452,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":14002991,"byte_end":14002995,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFoldFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":14003804,"byte_end":14003820,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"TryForEachFuture","qualname":"::stream::stream::try_for_each::TryForEachFuture","value":"TryForEachFuture {  }","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":14003753,"byte_end":14003792,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":14004230,"byte_end":14004234,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEachFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6632},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":14005178,"byte_end":14005181,"line_start":17,"line_end":17,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":6635},{"krate":0,"index":6636},{"krate":0,"index":6637}],"decl_id":null,"docs":" A stream that takes items from two other streams simultaneously.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":14005388,"byte_end":14005391,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Zip<A, B> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":14005873,"byte_end":14005882,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Zip<A, B> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13895203,"byte_end":13895212,"line_start":153,"line_end":153,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1697},{"krate":0,"index":1700},{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1741},{"krate":0,"index":1743},{"krate":0,"index":1745},{"krate":0,"index":1747},{"krate":0,"index":1749},{"krate":0,"index":1751},{"krate":0,"index":1753},{"krate":0,"index":1755},{"krate":0,"index":1757}],"decl_id":null,"docs":"    Extension methods for [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13895945,"byte_end":13895949,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn next<'_>(&'_ mut Self) -> NextFuture where Self: Unpin","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13896493,"byte_end":13896497,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Creates a stream that yields its first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13897134,"byte_end":13897144,"line_start":234,"line_end":234,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn take_while<P>(Self, P) -> TakeWhile<Self, P> where Self: Sized,\nP: for<'_> FnMut(&'_ Self::Item) -> bool","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Creates a stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13899141,"byte_end":13899148,"line_start":312,"line_end":312,"column_start":8,"column_end":15},"name":"step_by","qualname":"::stream::stream::StreamExt::step_by","value":"fn step_by(Self, usize) -> StepBy<Self> where Self: Sized","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Creates a stream that yields each `step`th element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13899960,"byte_end":13899965,"line_start":346,"line_end":346,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn chain<U>(Self, U) -> Chain<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Takes two streams and creates a new stream over both in sequence.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13900745,"byte_end":13900751,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"cloned","qualname":"::stream::stream::StreamExt::cloned","value":"fn cloned<'a, T>(Self) -> Cloned<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Clone + 'a","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13901513,"byte_end":13901519,"line_start":413,"line_end":413,"column_start":8,"column_end":14},"name":"copied","qualname":"::stream::stream::StreamExt::copied","value":"fn copied<'a, T>(Self) -> Copied<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Copy + 'a","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13902259,"byte_end":13902264,"line_start":445,"line_end":445,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"fn cycle(Self) -> Cycle<Self> where Self: Clone + Sized","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Creates a stream that yields the provided values infinitely and in order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13903070,"byte_end":13903079,"line_start":478,"line_end":478,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Creates a stream that gives the current element's count as well as the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13905008,"byte_end":13905011,"line_start":549,"line_end":549,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn map<B, F>(Self, F) -> Map<Self, F> where Self: Sized, F: FnMut(Self::Item)\n-> B","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Takes a closure and creates a stream that calls that closure on every element of this stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13905835,"byte_end":13905842,"line_start":585,"line_end":585,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where Self: Sized,\nF: for<'_> FnMut(&'_ Self::Item) -> ()","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        A combinator that does something with each element in the stream, passing the value\n        on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13906751,"byte_end":13906755,"line_start":629,"line_end":629,"column_start":8,"column_end":12},"name":"last","qualname":"::stream::stream::StreamExt::last","value":"fn last(Self) -> LastFuture<Self, Self::Item> where Self: Sized","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Returns the last element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13907563,"byte_end":13907567,"line_start":661,"line_end":661,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Creates a stream which ends after the first `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13908237,"byte_end":13908243,"line_start":691,"line_end":691,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn filter<P>(Self, P) -> Filter<Self, P> where Self: Sized,\nP: for<'_> FnMut(&'_ Self::Item) -> bool","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Creates a stream that uses a predicate to determine if an element should be yielded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13911023,"byte_end":13911033,"line_start":806,"line_end":806,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn filter_map<B, F>(Self, F) -> FilterMap<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Both filters and maps a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13911918,"byte_end":13911928,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::stream::stream::StreamExt::min_by_key","value":"fn min_by_key<B, F>(Self, F) -> MinByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: for<'_> FnMut(&'_ Self::Item) -> B","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value with respect to the\n        specified key function. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13912884,"byte_end":13912894,"line_start":874,"line_end":874,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::stream::stream::StreamExt::max_by_key","value":"fn max_by_key<B, F>(Self, F) -> MaxByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: for<'_> FnMut(&'_ Self::Item) -> B","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value with respect to the\n        specified key function. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13913927,"byte_end":13913933,"line_start":913,"line_end":913,"column_start":8,"column_end":14},"name":"min_by","qualname":"::stream::stream::StreamExt::min_by","value":"fn min_by<F>(Self, F) -> MinByFuture<Self, F, Self::Item> where Self: Sized,\nF: for<'_, '_> FnMut(&'_ Self::Item, &'_ Self::Item) -> Ordering","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value with respect to the\n        specified comparison function. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13914789,"byte_end":13914792,"line_start":947,"line_end":947,"column_start":8,"column_end":11},"name":"max","qualname":"::stream::stream::StreamExt::max","value":"fn max(Self) -> MaxFuture<Self, Self::Item> where Self: Sized, Self::Item: Ord","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13915586,"byte_end":13915589,"line_start":980,"line_end":980,"column_start":8,"column_end":11},"name":"min","qualname":"::stream::stream::StreamExt::min","value":"fn min(Self) -> MinFuture<Self, Self::Item> where Self: Sized, Self::Item: Ord","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13916553,"byte_end":13916559,"line_start":1017,"line_end":1017,"column_start":8,"column_end":14},"name":"max_by","qualname":"::stream::stream::StreamExt::max_by","value":"fn max_by<F>(Self, F) -> MaxByFuture<Self, F, Self::Item> where Self: Sized,\nF: for<'_, '_> FnMut(&'_ Self::Item, &'_ Self::Item) -> Ordering","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value with respect to the\n        specified comparison function. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13918033,"byte_end":13918036,"line_start":1081,"line_end":1081,"column_start":8,"column_end":11},"name":"nth","qualname":"::stream::stream::StreamExt::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> NthFuture where Self: Unpin + Sized","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Returns the nth element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13919402,"byte_end":13919405,"line_start":1137,"line_end":1137,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"fn all<F, '_>(&'_ mut Self, F) -> AllFuture where Self: Unpin + Sized,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13919385,"byte_end":13919394,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13920496,"byte_end":13920500,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"find","qualname":"::stream::stream::StreamExt::find","value":"fn find<P, '_>(&'_ mut Self, P) -> FindFuture where Self: Unpin + Sized,\nP: for<'_> FnMut(&'_ Self::Item) -> bool","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Searches for an element in a stream that satisfies a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13921177,"byte_end":13921185,"line_start":1214,"line_end":1214,"column_start":8,"column_end":16},"name":"find_map","qualname":"::stream::stream::StreamExt::find_map","value":"fn find_map<F, B, '_>(&'_ mut Self, F) -> FindMapFuture where Self: Unpin +\nSized, F: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Applies function to the elements of stream and returns the first non-none result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13921898,"byte_end":13921902,"line_start":1247,"line_end":1247,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn fold<B, F>(Self, B, F) -> FoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        A combinator that applies a function to every element in a stream\n        producing a single, final value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13923588,"byte_end":13923596,"line_start":1321,"line_end":1321,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn for_each<F>(Self, F) -> ForEachFuture<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> ()","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Call a closure on each element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13924982,"byte_end":13924985,"line_start":1377,"line_end":1377,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"fn any<F, '_>(&'_ mut Self, F) -> AnyFuture where Self: Unpin + Sized,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13924965,"byte_end":13924974,"line_start":1376,"line_end":1376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13927671,"byte_end":13927675,"line_start":1473,"line_end":1473,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn scan<St, B, F>(Self, St, F) -> Scan<Self, St, F> where Self: Sized,\nF: for<'_> FnMut(&'_ mut St, Self::Item) -> Option<B>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        A stream adaptor similar to [`fold`] that holds internal state and produces a new\n        stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13927654,"byte_end":13927663,"line_start":1472,"line_end":1472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13928683,"byte_end":13928693,"line_start":1508,"line_end":1508,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn skip_while<P>(Self, P) -> SkipWhile<Self, P> where Self: Sized,\nP: for<'_> FnMut(&'_ Self::Item) -> bool","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Combinator that `skip`s elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13929350,"byte_end":13929354,"line_start":1536,"line_end":1536,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Creates a combinator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13931295,"byte_end":13931303,"line_start":1612,"line_end":1612,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::stream::StreamExt::try_fold","value":"fn try_fold<B, F, T, E, '_>(&'_ mut Self, T, F) -> TryFoldFuture where\nSelf: Unpin + Sized, F: FnMut(B, Self::Item) -> Result<T, E>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        A combinator that applies a function as long as it returns successfully, producing a single, final value.\n        Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13932400,"byte_end":13932412,"line_start":1658,"line_end":1658,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::stream::StreamExt::try_for_each","value":"fn try_for_each<F, E, '_>(&'_ mut Self, F) -> TryForEachFuture where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Result<(), E>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Applies a falliable function to each element in a stream, stopping at first error and returning it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13933932,"byte_end":13933935,"line_start":1706,"line_end":1706,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn zip<U>(Self, U) -> Zip<Self, U> where Self: Sized, U: Stream","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        'Zips up' two streams into a single stream of pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13933915,"byte_end":13933924,"line_start":1705,"line_end":1705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13939290,"byte_end":13939301,"line_start":1878,"line_end":1878,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::stream::stream::StreamExt::partial_cmp","value":"fn partial_cmp<S>(Self, S) -> PartialCmpFuture<Self, S> where Self: Sized +\nStream, S: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Lexicographically compares the elements of this `Stream` with those\n        of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13940288,"byte_end":13940296,"line_start":1918,"line_end":1918,"column_start":8,"column_end":16},"name":"position","qualname":"::stream::stream::StreamExt::position","value":"fn position<P, '_>(&'_ mut Self, P) -> PositionFuture where Self: Unpin +\nSized, P: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Searches for an element in a Stream that satisfies a predicate, returning\n        its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13941439,"byte_end":13941442,"line_start":1956,"line_end":1956,"column_start":8,"column_end":11},"name":"cmp","qualname":"::stream::stream::StreamExt::cmp","value":"fn cmp<S>(Self, S) -> CmpFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: Ord","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Lexicographically compares the elements of this `Stream` with those\n        of another using 'Ord'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13943169,"byte_end":13943171,"line_start":2022,"line_end":2022,"column_start":8,"column_end":10},"name":"ne","qualname":"::stream::stream::StreamExt::ne","value":"fn ne<S>(Self, S) -> NeFuture<Self, S> where Self: Sized, S: Sized + Stream,\n<Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        not equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13944238,"byte_end":13944240,"line_start":2059,"line_end":2059,"column_start":8,"column_end":10},"name":"ge","qualname":"::stream::stream::StreamExt::ge","value":"fn ge<S>(Self, S) -> GeFuture<Self, S> where Self: Sized + Stream, S: Stream,\n<Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        greater than or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13945299,"byte_end":13945301,"line_start":2096,"line_end":2096,"column_start":8,"column_end":10},"name":"eq","qualname":"::stream::stream::StreamExt::eq","value":"fn eq<S>(Self, S) -> EqFuture<Self, S> where Self: Sized + Stream, S: Sized +\nStream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13946358,"byte_end":13946360,"line_start":2133,"line_end":2133,"column_start":8,"column_end":10},"name":"gt","qualname":"::stream::stream::StreamExt::gt","value":"fn gt<S>(Self, S) -> GtFuture<Self, S> where Self: Sized + Stream, S: Stream,\n<Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        greater than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13947413,"byte_end":13947415,"line_start":2170,"line_end":2170,"column_start":8,"column_end":10},"name":"le","qualname":"::stream::stream::StreamExt::le","value":"fn le<S>(Self, S) -> LeFuture<Self, S> where Self: Sized + Stream, S: Stream,\n<Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        less or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13948462,"byte_end":13948464,"line_start":2207,"line_end":2207,"column_start":8,"column_end":10},"name":"lt","qualname":"::stream::stream::StreamExt::lt","value":"fn lt<S>(Self, S) -> LtFuture<Self, S> where Self: Sized + Stream, S: Stream,\n<Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1669},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        less than those of another.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007054,"byte_end":14007059,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ Creates a stream that doesn't yield any items.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006623,"byte_end":14006673,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006674,"byte_end":14006677,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`empty`] function. See its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006678,"byte_end":14006741,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006742,"byte_end":14006769,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006770,"byte_end":14006773,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006774,"byte_end":14006802,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006803,"byte_end":14006806,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006807,"byte_end":14006821,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006822,"byte_end":14006825,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006826,"byte_end":14006833,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006834,"byte_end":14006873,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006874,"byte_end":14006879,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006880,"byte_end":14006910,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006911,"byte_end":14006937,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006938,"byte_end":14006941,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::empty::<i32>();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006942,"byte_end":14006981,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006982,"byte_end":14006985,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14006986,"byte_end":14007023,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007024,"byte_end":14007029,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007030,"byte_end":14007038,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007039,"byte_end":14007046,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2424},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007296,"byte_end":14007301,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2426}],"decl_id":null,"docs":" A stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ A stream that doesn't yield any items.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007130,"byte_end":14007172,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007173,"byte_end":14007176,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This stream is constructed by the [`empty`] function.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007177,"byte_end":14007234,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007235,"byte_end":14007238,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007239,"byte_end":14007267,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007396,"byte_end":14007405,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Empty<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14007821,"byte_end":14007827,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"FromFn","qualname":"::stream::from_fn::FromFn","value":"FromFn {  }","parent":null,"children":[{"krate":0,"index":2432}],"decl_id":null,"docs":" A stream that yields elements by calling a closure.","sig":null,"attributes":[{"value":"/ A stream that yields elements by calling a closure.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14007597,"byte_end":14007652,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14007653,"byte_end":14007656,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`from_fn`] function. See its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14007657,"byte_end":14007720,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14007721,"byte_end":14007748,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14007749,"byte_end":14007752,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`from_fn`]: fn.from_fn.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14007753,"byte_end":14007785,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008687,"byte_end":14008694,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"from_fn","qualname":"::stream::from_fn::from_fn","value":"fn from_fn<T, F>(F) -> FromFn<F> where F: FnMut() -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a provided closure is called.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a provided closure is called.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14007878,"byte_end":14007966,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14007967,"byte_end":14007970,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows creating a custom stream with any behaviour without using the more verbose","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14007971,"byte_end":14008061,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ syntax of creating a dedicated type and implementing a `Stream` trait for it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008062,"byte_end":14008143,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008144,"byte_end":14008147,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008148,"byte_end":14008162,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008163,"byte_end":14008166,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008167,"byte_end":14008174,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008175,"byte_end":14008214,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008215,"byte_end":14008220,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008221,"byte_end":14008251,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008252,"byte_end":14008278,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008279,"byte_end":14008282,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0u8;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008283,"byte_end":14008307,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ let s = stream::from_fn(|| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008308,"byte_end":14008340,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/     count += 1;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008341,"byte_end":14008360,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/     if count > 3 {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008361,"byte_end":14008383,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         None","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008384,"byte_end":14008400,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008401,"byte_end":14008417,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/         Some(count)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008418,"byte_end":14008441,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008442,"byte_end":14008451,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008452,"byte_end":14008459,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008460,"byte_end":14008463,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008464,"byte_end":14008491,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008492,"byte_end":14008495,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008496,"byte_end":14008536,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008537,"byte_end":14008577,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008578,"byte_end":14008618,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008619,"byte_end":14008656,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008657,"byte_end":14008662,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008663,"byte_end":14008671,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008672,"byte_end":14008679,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008873,"byte_end":14008882,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FromFn<F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6593},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009503,"byte_end":14009511,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"name":"FromIter","qualname":"::stream::from_iter::FromIter","value":"FromIter {  }","parent":null,"children":[{"krate":0,"index":6595}],"decl_id":null,"docs":" A stream that was created from iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1825},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14010011,"byte_end":14010020,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::stream::from_iter::from_iter","value":"fn from_iter<I>(I) -> FromIter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator into a stream.","sig":null,"attributes":[{"value":"/ Converts an iterator into a stream.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009543,"byte_end":14009582,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009583,"byte_end":14009586,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009587,"byte_end":14009601,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009602,"byte_end":14009605,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009606,"byte_end":14009613,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009614,"byte_end":14009653,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009654,"byte_end":14009659,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009660,"byte_end":14009690,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009691,"byte_end":14009717,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009718,"byte_end":14009721,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::from_iter(vec![0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009722,"byte_end":14009774,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009775,"byte_end":14009778,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(0));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009779,"byte_end":14009819,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009820,"byte_end":14009860,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009861,"byte_end":14009901,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009902,"byte_end":14009942,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009943,"byte_end":14009980,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009981,"byte_end":14009986,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009987,"byte_end":14009995,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14009996,"byte_end":14010003,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14010206,"byte_end":14010215,"line_start":52,"line_end":52,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FromIter<I> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1848},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14011106,"byte_end":14011110,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields a single item.","sig":null,"attributes":[{"value":"/ Creates a stream that yields a single item.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010773,"byte_end":14010820,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010821,"byte_end":14010824,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010825,"byte_end":14010839,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010840,"byte_end":14010843,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010844,"byte_end":14010851,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010852,"byte_end":14010891,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010892,"byte_end":14010897,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010898,"byte_end":14010928,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010929,"byte_end":14010955,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010956,"byte_end":14010959,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::once(7);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010960,"byte_end":14010992,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010993,"byte_end":14010996,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14010997,"byte_end":14011037,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14011038,"byte_end":14011075,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14011076,"byte_end":14011081,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14011082,"byte_end":14011090,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14011091,"byte_end":14011098,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6554},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14011410,"byte_end":14011414,"line_start":40,"line_end":40,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":6556}],"decl_id":null,"docs":" A stream that yields a single item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14011511,"byte_end":14011520,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Once<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<T>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1868},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012300,"byte_end":14012306,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ Creates a stream that yields the same item repeatedly.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14011951,"byte_end":14012009,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012010,"byte_end":14012013,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012014,"byte_end":14012028,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012029,"byte_end":14012032,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012033,"byte_end":14012040,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012041,"byte_end":14012080,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012081,"byte_end":14012086,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012087,"byte_end":14012117,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012118,"byte_end":14012144,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012145,"byte_end":14012148,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::repeat(7);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012149,"byte_end":14012183,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012184,"byte_end":14012187,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012188,"byte_end":14012228,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012229,"byte_end":14012269,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012270,"byte_end":14012275,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012276,"byte_end":14012284,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012285,"byte_end":14012292,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2439},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012593,"byte_end":14012599,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2441}],"decl_id":null,"docs":" A stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ A stream that yields the same item repeatedly.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012377,"byte_end":14012427,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012428,"byte_end":14012431,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat`] function. See its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012432,"byte_end":14012494,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012495,"byte_end":14012522,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012523,"byte_end":14012526,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012527,"byte_end":14012557,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012686,"byte_end":14012695,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Repeat<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2448},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013175,"byte_end":14013185,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":2450}],"decl_id":null,"docs":" A stream that repeats elements of type `T` endlessly by applying a provided closure.","sig":null,"attributes":[{"value":"/ A stream that repeats elements of type `T` endlessly by applying a provided closure.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14012906,"byte_end":14012994,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14012995,"byte_end":14012998,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat_with`] function. See its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14012999,"byte_end":14013066,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013067,"byte_end":14013094,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013095,"byte_end":14013098,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`repeat_with`]: fn.repeat_with.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013099,"byte_end":14013139,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1890},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014291,"byte_end":14014302,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"fn repeat_with<T, F>(F) -> RepeatWith<F> where F: FnMut() -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013240,"byte_end":14013342,"line_start":19,"line_end":19,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013343,"byte_end":14013346,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013347,"byte_end":14013361,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013362,"byte_end":14013365,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013366,"byte_end":14013382,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013383,"byte_end":14013386,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013387,"byte_end":14013394,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013395,"byte_end":14013434,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013435,"byte_end":14013440,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013441,"byte_end":14013471,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013472,"byte_end":14013498,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013499,"byte_end":14013502,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let s = stream::repeat_with(|| 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013503,"byte_end":14013541,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013542,"byte_end":14013545,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013546,"byte_end":14013573,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013574,"byte_end":14013577,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013578,"byte_end":14013618,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013619,"byte_end":14013659,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013660,"byte_end":14013700,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013701,"byte_end":14013741,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013742,"byte_end":14013750,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013751,"byte_end":14013758,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013759,"byte_end":14013762,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Going finite:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013763,"byte_end":14013780,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013781,"byte_end":14013784,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013785,"byte_end":14013792,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013793,"byte_end":14013832,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013833,"byte_end":14013838,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013839,"byte_end":14013869,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013870,"byte_end":14013896,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013897,"byte_end":14013900,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut n = 1;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013901,"byte_end":14013919,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ let s = stream::repeat_with(|| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013920,"byte_end":14013956,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     let item = n;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013957,"byte_end":14013978,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     n *= 2;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013979,"byte_end":14013994,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     item","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013995,"byte_end":14014007,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/ })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014008,"byte_end":14014014,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ .take(4);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014015,"byte_end":14014028,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014029,"byte_end":14014032,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014033,"byte_end":14014060,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014061,"byte_end":14014064,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014065,"byte_end":14014105,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014106,"byte_end":14014146,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(4));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014147,"byte_end":14014187,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(8));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014188,"byte_end":14014228,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014229,"byte_end":14014266,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014267,"byte_end":14014275,"line_start":65,"line_end":65,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014276,"byte_end":14014283,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014494,"byte_end":14014503,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<RepeatWith<F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2457},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2498},{"krate":0,"index":2501},{"krate":0,"index":2504},{"krate":0,"index":2507},{"krate":0,"index":2510},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2517},{"krate":0,"index":2520},{"krate":0,"index":2523},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2536},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2551},{"krate":0,"index":2554},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2590},{"krate":0,"index":2784},{"krate":0,"index":3137},{"krate":0,"index":3184},{"krate":0,"index":3381},{"krate":0,"index":3407},{"krate":0,"index":3482},{"krate":0,"index":3544},{"krate":0,"index":3591},{"krate":0,"index":3659},{"krate":0,"index":3694},{"krate":0,"index":3722},{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3787},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3794},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3801},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3808},{"krate":0,"index":3811},{"krate":0,"index":3814},{"krate":0,"index":3854},{"krate":0,"index":3891},{"krate":0,"index":3938},{"krate":0,"index":3956}],"decl_id":null,"docs":" Traits, helpers, and type definitions for core I/O functionality.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Traits, helpers, and type definitions for core I/O functionality.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14207915,"byte_end":14207984,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14207985,"byte_end":14207988,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `async_std::io` module contains a number of common things you'll need","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14207989,"byte_end":14208066,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ when doing input and output. The most core part of this module is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208067,"byte_end":14208136,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ the [`Read`] and [`Write`] traits, which provide the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208137,"byte_end":14208193,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/ most general interface for reading and writing input and output.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208194,"byte_end":14208262,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208263,"byte_end":14208266,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::io`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208267,"byte_end":14208318,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208319,"byte_end":14208322,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::io`]: https://doc.rust-lang.org/std/io/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208323,"byte_end":14208383,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208384,"byte_end":14208387,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Read and Write","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208388,"byte_end":14208408,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208409,"byte_end":14208412,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, [`Read`] and [`Write`] are implemented by a number","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208413,"byte_end":14208492,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of other types, and you can implement them for your types too. As such,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208493,"byte_end":14208568,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ you'll see a few different types of I/O throughout the documentation in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208569,"byte_end":14208644,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ this module: [`File`]s, [`TcpStream`]s, and sometimes even [`Vec<T>`]s. For","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208645,"byte_end":14208724,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ example, [`Read`] adds a [`read`][`Read::read`] method, which we can use on","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208725,"byte_end":14208804,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ [`File`]s:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208805,"byte_end":14208819,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208820,"byte_end":14208823,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208824,"byte_end":14208837,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208838,"byte_end":14208866,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208867,"byte_end":14208897,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208898,"byte_end":14208901,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208902,"byte_end":14208976,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208977,"byte_end":14208982,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14208983,"byte_end":14209028,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209029,"byte_end":14209058,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209059,"byte_end":14209062,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209063,"byte_end":14209089,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209090,"byte_end":14209129,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209130,"byte_end":14209133,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209134,"byte_end":14209180,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209181,"byte_end":14209186,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209187,"byte_end":14209204,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209205,"byte_end":14209212,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209213,"byte_end":14209216,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Read`] and [`Write`] are so important, implementors of the two traits have a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209217,"byte_end":14209299,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ nickname: readers and writers. So you'll sometimes see 'a reader' instead","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209300,"byte_end":14209377,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ of 'a type that implements the [`Read`] trait'. Much easier!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209378,"byte_end":14209442,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209443,"byte_end":14209446,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Seek and BufRead","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209447,"byte_end":14209470,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209471,"byte_end":14209474,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Beyond that, there are two important traits that are provided: [`Seek`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209475,"byte_end":14209550,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ and [`BufRead`]. Both of these build on top of a reader to control","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209551,"byte_end":14209621,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ how the reading happens. [`Seek`] lets you control where the next byte is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209622,"byte_end":14209699,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ coming from:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209700,"byte_end":14209716,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209717,"byte_end":14209720,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209721,"byte_end":14209734,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209735,"byte_end":14209763,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209764,"byte_end":14209796,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209797,"byte_end":14209827,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209828,"byte_end":14209831,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209832,"byte_end":14209906,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209907,"byte_end":14209912,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209913,"byte_end":14209958,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209959,"byte_end":14209988,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209989,"byte_end":14209992,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // skip to the last 10 bytes of the file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14209993,"byte_end":14210037,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ f.seek(SeekFrom::End(-10)).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210038,"byte_end":14210076,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210077,"byte_end":14210080,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210081,"byte_end":14210107,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210108,"byte_end":14210147,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210148,"byte_end":14210151,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210152,"byte_end":14210198,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210199,"byte_end":14210204,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210205,"byte_end":14210222,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210223,"byte_end":14210230,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210231,"byte_end":14210234,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`] uses an internal buffer to provide a number of other ways to read, but","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210235,"byte_end":14210321,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"/ to show it off, we'll need to talk about buffers in general. Keep reading!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210322,"byte_end":14210400,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210401,"byte_end":14210404,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## BufReader and BufWriter","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210405,"byte_end":14210435,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210436,"byte_end":14210439,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210440,"byte_end":14210521,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210522,"byte_end":14210596,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with two structs, [`BufReader`] and [`BufWriter`], which wrap","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210597,"byte_end":14210678,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/ readers and writers. The wrapper uses a buffer, reducing the number of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210679,"byte_end":14210753,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210754,"byte_end":14210828,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210829,"byte_end":14210832,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`BufRead`] trait to add extra","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210833,"byte_end":14210909,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ methods to any reader:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210910,"byte_end":14210936,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210937,"byte_end":14210940,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210941,"byte_end":14210954,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210955,"byte_end":14210983,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14210984,"byte_end":14211017,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211018,"byte_end":14211048,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211049,"byte_end":14211052,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211053,"byte_end":14211127,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211128,"byte_end":14211133,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211134,"byte_end":14211175,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/ let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211176,"byte_end":14211215,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211216,"byte_end":14211251,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211252,"byte_end":14211255,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // read a line into buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211256,"byte_end":14211286,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/ reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211287,"byte_end":14211328,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211329,"byte_end":14211332,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211333,"byte_end":14211360,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211361,"byte_end":14211366,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211367,"byte_end":14211384,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211385,"byte_end":14211392,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211393,"byte_end":14211396,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211397,"byte_end":14211478,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"/ to [`write`][`Write::write`]:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211479,"byte_end":14211512,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211513,"byte_end":14211516,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211517,"byte_end":14211530,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211531,"byte_end":14211559,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211560,"byte_end":14211594,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211595,"byte_end":14211628,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211629,"byte_end":14211632,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211633,"byte_end":14211707,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211708,"byte_end":14211713,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211714,"byte_end":14211757,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211758,"byte_end":14211763,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/     let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211764,"byte_end":14211807,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211808,"byte_end":14211811,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     // write a byte to the buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211812,"byte_end":14211849,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"/     writer.write(&[42]).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211850,"byte_end":14211885,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"/ } // the buffer is flushed once writer goes out of scope","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211886,"byte_end":14211946,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"/ //","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211947,"byte_end":14211953,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211954,"byte_end":14211959,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211960,"byte_end":14211977,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211978,"byte_end":14211985,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211986,"byte_end":14211989,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Standard input and output","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14211990,"byte_end":14212022,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212023,"byte_end":14212026,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ A very common source of input is standard input:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212027,"byte_end":14212079,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212080,"byte_end":14212083,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212084,"byte_end":14212097,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212098,"byte_end":14212120,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212121,"byte_end":14212124,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212125,"byte_end":14212199,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212200,"byte_end":14212205,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212206,"byte_end":14212240,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212241,"byte_end":14212244,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212245,"byte_end":14212290,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212291,"byte_end":14212294,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ println!(\"You typed: {}\", input.trim());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212295,"byte_end":14212339,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212340,"byte_end":14212345,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212346,"byte_end":14212363,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212364,"byte_end":14212371,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212372,"byte_end":14212375,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Note that you cannot use the [`?` operator] in functions that do not return","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212376,"byte_end":14212455,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ a [`Result<T, E>`][`Result`]. Instead, you can call [`.unwrap()`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212456,"byte_end":14212525,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"/ or `match` on the return value to catch any possible errors:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212526,"byte_end":14212590,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212591,"byte_end":14212594,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212595,"byte_end":14212608,"line_start":147,"line_end":147,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212609,"byte_end":14212631,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212632,"byte_end":14212635,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212636,"byte_end":14212710,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212711,"byte_end":14212716,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212717,"byte_end":14212751,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212752,"byte_end":14212755,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await.unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212756,"byte_end":14212809,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212810,"byte_end":14212815,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212816,"byte_end":14212833,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212834,"byte_end":14212841,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212842,"byte_end":14212845,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ And a very common source of output is standard output:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212846,"byte_end":14212904,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212905,"byte_end":14212908,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212909,"byte_end":14212922,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212923,"byte_end":14212945,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212946,"byte_end":14212980,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212981,"byte_end":14212984,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14212985,"byte_end":14213059,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213060,"byte_end":14213065,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"/ io::stdout().write(&[42]).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213066,"byte_end":14213103,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213104,"byte_end":14213109,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213110,"byte_end":14213127,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213128,"byte_end":14213135,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213136,"byte_end":14213139,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Of course, using [`io::stdout`] directly is less common than something like","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213140,"byte_end":14213219,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ [`println!`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213220,"byte_end":14213237,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213238,"byte_end":14213241,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ## Iterator types","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213242,"byte_end":14213263,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213264,"byte_end":14213267,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ A large number of the structures provided by `std::io` are for various","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213268,"byte_end":14213342,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"/ ways of iterating over I/O. For example, [`Lines`] is used to split over","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213343,"byte_end":14213419,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ lines:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213420,"byte_end":14213430,"line_start":179,"line_end":179,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213431,"byte_end":14213434,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213435,"byte_end":14213448,"line_start":181,"line_end":181,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213449,"byte_end":14213477,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213478,"byte_end":14213511,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213512,"byte_end":14213542,"line_start":184,"line_end":184,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213543,"byte_end":14213546,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213547,"byte_end":14213621,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213622,"byte_end":14213627,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213628,"byte_end":14213669,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ let reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213670,"byte_end":14213705,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213706,"byte_end":14213709,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let mut lines = reader.lines();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213710,"byte_end":14213745,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"/ while let Some(line) = lines.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213746,"byte_end":14213793,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"/     println!(\"{}\", line?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213794,"byte_end":14213824,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213825,"byte_end":14213830,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213831,"byte_end":14213836,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213837,"byte_end":14213854,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213855,"byte_end":14213862,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213863,"byte_end":14213866,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Functions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213867,"byte_end":14213883,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213884,"byte_end":14213887,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ There are a number of [functions][functions-list] that offer access to various","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213888,"byte_end":14213970,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"/ features. For example, we can use three of these functions to copy everything","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14213971,"byte_end":14214052,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"/ from standard input to standard output:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214053,"byte_end":14214096,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214097,"byte_end":14214100,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214101,"byte_end":14214114,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214115,"byte_end":14214137,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214138,"byte_end":14214141,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214142,"byte_end":14214216,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214217,"byte_end":14214222,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/ io::copy(&mut io::stdin(), &mut io::stdout()).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214223,"byte_end":14214280,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214281,"byte_end":14214286,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214287,"byte_end":14214304,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214305,"byte_end":14214312,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214313,"byte_end":14214316,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [functions-list]: #functions-1","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214317,"byte_end":14214351,"line_start":215,"line_end":215,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214352,"byte_end":14214355,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ## io::Result","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214356,"byte_end":14214373,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214374,"byte_end":14214377,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Last, but certainly not least, is [`io::Result`]. This type is used","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214378,"byte_end":14214449,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"/ as the return type of many `std::io` functions that can cause an error, and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214450,"byte_end":14214529,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ can be returned from your own functions as well. Many of the examples in this","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214530,"byte_end":14214611,"line_start":221,"line_end":221,"column_start":1,"column_end":82}},{"value":"/ module use the [`?` operator]:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214612,"byte_end":14214646,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214647,"byte_end":14214650,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214651,"byte_end":14214658,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ #![allow(dead_code)]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214659,"byte_end":14214683,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214684,"byte_end":14214706,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214707,"byte_end":14214710,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ async fn read_input() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214711,"byte_end":14214756,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/     let mut input = String::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214757,"byte_end":14214795,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214796,"byte_end":14214799,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/     io::stdin().read_line(&mut input).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214800,"byte_end":14214849,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214850,"byte_end":14214853,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/     println!(\"You typed: {}\", input.trim());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214854,"byte_end":14214902,"line_start":233,"line_end":233,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214903,"byte_end":14214906,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214907,"byte_end":14214921,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214922,"byte_end":14214927,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214928,"byte_end":14214935,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214936,"byte_end":14214939,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The return type of `read_input`, [`io::Result<()>`][`io::Result`], is a very","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14214940,"byte_end":14215020,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ common type for functions which don't have a 'real' return value, but do want to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215021,"byte_end":14215105,"line_start":240,"line_end":240,"column_start":1,"column_end":85}},{"value":"/ return errors if they happen. In this case, the only purpose of this function is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215106,"byte_end":14215190,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"/ to read the line and print it, so we use `()`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215191,"byte_end":14215241,"line_start":242,"line_end":242,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215242,"byte_end":14215245,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ## Platform-specific behavior","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215246,"byte_end":14215279,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215280,"byte_end":14215283,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Many I/O functions throughout the standard library are documented to indicate","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215284,"byte_end":14215365,"line_start":246,"line_end":246,"column_start":1,"column_end":82}},{"value":"/ what various library or syscalls they are delegated to. This is done to help","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215366,"byte_end":14215446,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"/ applications both understand what's happening under the hood as well as investigate","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215447,"byte_end":14215534,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"/ any possibly unclear semantics. Note, however, that this is informative, not a binding","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215535,"byte_end":14215625,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"/ contract. The implementation of many of these functions are subject to change over","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215626,"byte_end":14215712,"line_start":250,"line_end":250,"column_start":1,"column_end":87}},{"value":"/ time and may call fewer or more syscalls/library functions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215713,"byte_end":14215776,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215777,"byte_end":14215780,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215781,"byte_end":14215810,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215811,"byte_end":14215842,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215843,"byte_end":14215872,"line_start":255,"line_end":255,"column_start":1,"column_end":30}},{"value":"/ [`BufRead`]: trait.BufRead.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215873,"byte_end":14215908,"line_start":256,"line_end":256,"column_start":1,"column_end":36}},{"value":"/ [`File`]: ../fs/struct.File.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215909,"byte_end":14215945,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215946,"byte_end":14215993,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/ [`Vec<T>`]: ../vec/struct.Vec.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14215994,"byte_end":14216032,"line_start":259,"line_end":259,"column_start":1,"column_end":39}},{"value":"/ [`BufReader`]: struct.BufReader.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216033,"byte_end":14216073,"line_start":260,"line_end":260,"column_start":1,"column_end":41}},{"value":"/ [`BufWriter`]: struct.BufWriter.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216074,"byte_end":14216114,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"/ [`Write::write`]: trait.Write.html#tymethod.write","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216115,"byte_end":14216168,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"/ [`io::stdout`]: fn.stdout.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216169,"byte_end":14216203,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"/ [`println!`]: ../macro.println.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216204,"byte_end":14216243,"line_start":264,"line_end":264,"column_start":1,"column_end":40}},{"value":"/ [`Lines`]: struct.Lines.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216244,"byte_end":14216276,"line_start":265,"line_end":265,"column_start":1,"column_end":33}},{"value":"/ [`io::Result`]: type.Result.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216277,"byte_end":14216313,"line_start":266,"line_end":266,"column_start":1,"column_end":37}},{"value":"/ [`?` operator]: https://doc.rust-lang.org/stable/book/appendix-02-operators.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216314,"byte_end":14216398,"line_start":267,"line_end":267,"column_start":1,"column_end":85}},{"value":"/ [`Read::read`]: trait.Read.html#tymethod.read","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216399,"byte_end":14216448,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"/ [`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216449,"byte_end":14216518,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ [`.unwrap()`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14216519,"byte_end":14216605,"line_start":270,"line_end":270,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":2565},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","parent":null,"children":[{"krate":0,"index":2566},{"krate":0,"index":2569},{"krate":0,"index":2572},{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2581},{"krate":0,"index":2584},{"krate":0,"index":2587}],"decl_id":null,"docs":" The async I/O prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async I/O prelude.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14226684,"byte_end":14226710,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14226711,"byte_end":14226714,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The purpose of this module is to alleviate imports of many common I/O traits","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14226715,"byte_end":14226795,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ by adding a glob import to the top of I/O heavy modules:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14226796,"byte_end":14226856,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14226857,"byte_end":14226860,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14226861,"byte_end":14226868,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14226869,"byte_end":14226900,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14226901,"byte_end":14226935,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":14226936,"byte_end":14226943,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6506},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\lines.rs","byte_start":14235475,"byte_end":14235480,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::buf_read::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6510},{"krate":0,"index":6511}],"decl_id":null,"docs":" A stream of lines in a byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\lines.rs","byte_start":14235722,"byte_end":14235731,"line_start":35,"line_end":35,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Lines<R> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2661},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_line.rs","byte_start":14237377,"byte_end":14237391,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ReadLineFuture","qualname":"::io::buf_read::read_line::ReadLineFuture","value":"ReadLineFuture {  }","parent":null,"children":[{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_line.rs","byte_start":14237326,"byte_end":14237365,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_line.rs","byte_start":14237663,"byte_end":14237667,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadLineFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2697},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_until.rs","byte_start":14238854,"byte_end":14238869,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadUntilFuture","qualname":"::io::buf_read::read_until::ReadUntilFuture","value":"ReadUntilFuture {  }","parent":null,"children":[{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_until.rs","byte_start":14238803,"byte_end":14238842,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_until.rs","byte_start":14239137,"byte_end":14239141,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadUntilFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6458},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\split.rs","byte_start":14240094,"byte_end":14240099,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::buf_read::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":6460},{"krate":0,"index":6461},{"krate":0,"index":6462},{"krate":0,"index":6463}],"decl_id":null,"docs":" A stream over the contents of an instance of [`BufRead`] split on a particular byte.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\split.rs","byte_start":14240338,"byte_end":14240347,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Split<R> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2773},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":14227727,"byte_end":14227737,"line_start":25,"line_end":25,"column_start":11,"column_end":21},"name":"BufReadExt","qualname":"::io::buf_read::BufReadExt","value":"BufReadExt: BufRead","parent":null,"children":[{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2779}],"decl_id":null,"docs":"    Extension methods for [`BufRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":14229324,"byte_end":14229334,"line_start":76,"line_end":76,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::buf_read::BufReadExt::read_until","value":"fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntilFuture where\nSelf: Unpin","parent":{"krate":0,"index":2773},"children":[],"decl_id":null,"docs":"        Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":14230916,"byte_end":14230925,"line_start":130,"line_end":130,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::buf_read::BufReadExt::read_line","value":"fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLineFuture where\nSelf: Unpin","parent":{"krate":0,"index":2773},"children":[],"decl_id":null,"docs":"        Reads all bytes and appends them into `buf` until a newline (the 0xA byte) is\n        reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":14232180,"byte_end":14232185,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::buf_read::BufReadExt::lines","value":"fn lines(Self) -> Lines<Self> where Self: Unpin + Sized","parent":{"krate":0,"index":2773},"children":[],"decl_id":null,"docs":"        Returns a stream over the lines of this byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":14233785,"byte_end":14233790,"line_start":227,"line_end":227,"column_start":8,"column_end":13},"name":"split","qualname":"::io::buf_read::BufReadExt::split","value":"fn split(Self, u8) -> Split<Self> where Self: Sized","parent":{"krate":0,"index":2773},"children":[],"decl_id":null,"docs":"        Returns a stream over the contents of this reader split on the byte `byte`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3752},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":14252992,"byte_end":14252997,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::io::read::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":3754}],"decl_id":null,"docs":" A stream over `u8` values of a reader.","sig":null,"attributes":[{"value":"/ A stream over `u8` values of a reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":14252734,"byte_end":14252776,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":14252777,"byte_end":14252780,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`bytes`] on a reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":14252781,"byte_end":14252851,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`bytes`] for more details.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":14252852,"byte_end":14252915,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":14252916,"byte_end":14252919,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`bytes`]: trait.Read.html#method.bytes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":14252920,"byte_end":14252963,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":14253115,"byte_end":14253124,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Bytes<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6409},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14254724,"byte_end":14254729,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::read::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6412},{"krate":0,"index":6413},{"krate":0,"index":6414}],"decl_id":null,"docs":" Adaptor to chain together two readers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255453,"byte_end":14255463,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14254902,"byte_end":14254958,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14254963,"byte_end":14254966,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14254971,"byte_end":14254985,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14254990,"byte_end":14254993,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14254998,"byte_end":14255011,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255016,"byte_end":14255096,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255101,"byte_end":14255106,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255111,"byte_end":14255141,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255146,"byte_end":14255174,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255179,"byte_end":14255182,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255187,"byte_end":14255235,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255240,"byte_end":14255288,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255293,"byte_end":14255296,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255301,"byte_end":14255342,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.into_inner();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255347,"byte_end":14255397,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255402,"byte_end":14255407,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255412,"byte_end":14255429,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255434,"byte_end":14255441,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2844},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256081,"byte_end":14256088,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> (&'_ T, &'_ U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255527,"byte_end":14255589,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255594,"byte_end":14255597,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255602,"byte_end":14255616,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255621,"byte_end":14255624,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255629,"byte_end":14255642,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255647,"byte_end":14255727,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255732,"byte_end":14255737,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255742,"byte_end":14255772,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255777,"byte_end":14255805,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255810,"byte_end":14255813,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255818,"byte_end":14255866,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255871,"byte_end":14255919,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255924,"byte_end":14255927,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255932,"byte_end":14255973,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.get_ref();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14255978,"byte_end":14256025,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256030,"byte_end":14256035,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256040,"byte_end":14256057,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256062,"byte_end":14256069,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256904,"byte_end":14256911,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> (&'_ mut T, &'_ mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256157,"byte_end":14256227,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256232,"byte_end":14256235,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256240,"byte_end":14256313,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256318,"byte_end":14256391,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256396,"byte_end":14256408,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256413,"byte_end":14256416,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256421,"byte_end":14256435,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256440,"byte_end":14256443,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256448,"byte_end":14256461,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256466,"byte_end":14256546,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256551,"byte_end":14256556,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256561,"byte_end":14256591,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256596,"byte_end":14256624,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256629,"byte_end":14256632,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256637,"byte_end":14256685,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256690,"byte_end":14256738,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256743,"byte_end":14256746,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut chain = foo_file.chain(bar_file);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256751,"byte_end":14256796,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ let (foo_file, bar_file) = chain.get_mut();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256801,"byte_end":14256848,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256853,"byte_end":14256858,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256863,"byte_end":14256880,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14256885,"byte_end":14256892,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14257069,"byte_end":14257072,"line_start":98,"line_end":98,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Chain<T, U> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14257316,"byte_end":14257325,"line_start":107,"line_end":107,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Chain<T, U> as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2854},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14257841,"byte_end":14257859,"line_start":124,"line_end":124,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Chain<T, U> as futures_lite::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14258466,"byte_end":14258479,"line_start":143,"line_end":143,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Chain<T, U> as futures_lite::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":27,"index":49},"children":[],"decl_id":{"krate":27,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14258991,"byte_end":14258998,"line_start":158,"line_end":158,"column_start":8,"column_end":15},"name":"consume","qualname":"<Chain<T, U> as futures_lite::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":27,"index":49},"children":[],"decl_id":{"krate":27,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read.rs","byte_start":14260002,"byte_end":14260012,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ReadFuture","qualname":"::io::read::read::ReadFuture","value":"ReadFuture {  }","parent":null,"children":[{"krate":0,"index":2884},{"krate":0,"index":2885}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read.rs","byte_start":14259951,"byte_end":14259990,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read.rs","byte_start":14260216,"byte_end":14260220,"line_start":17,"line_end":17,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2914},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_exact.rs","byte_start":14260582,"byte_end":14260597,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadExactFuture","qualname":"::io::read::read_exact::ReadExactFuture","value":"ReadExactFuture {  }","parent":null,"children":[{"krate":0,"index":2917},{"krate":0,"index":2918}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_exact.rs","byte_start":14260531,"byte_end":14260570,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_exact.rs","byte_start":14260803,"byte_end":14260807,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadExactFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2944},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":14261483,"byte_end":14261498,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"ReadToEndFuture","qualname":"::io::read::read_to_end::ReadToEndFuture","value":"ReadToEndFuture {  }","parent":null,"children":[{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":14261432,"byte_end":14261471,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":14261743,"byte_end":14261747,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadToEndFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2992},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_string.rs","byte_start":14263937,"byte_end":14263955,"line_start":12,"line_end":12,"column_start":12,"column_end":30},"name":"ReadToStringFuture","qualname":"::io::read::read_to_string::ReadToStringFuture","value":"ReadToStringFuture {  }","parent":null,"children":[{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_string.rs","byte_start":14263886,"byte_end":14263925,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_string.rs","byte_start":14264233,"byte_end":14264237,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadToStringFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3028},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_vectored.rs","byte_start":14265362,"byte_end":14265380,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"ReadVectoredFuture","qualname":"::io::read::read_vectored::ReadVectoredFuture","value":"ReadVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":3031},{"krate":0,"index":3032}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_vectored.rs","byte_start":14265311,"byte_end":14265350,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_vectored.rs","byte_start":14265605,"byte_end":14265609,"line_start":17,"line_end":17,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadVectoredFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6369},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266268,"byte_end":14266272,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::read::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6371},{"krate":0,"index":6372}],"decl_id":null,"docs":" Reader adaptor which limits the bytes read from an underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267162,"byte_end":14267167,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"fn limit<'_>(&'_ Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be read before this instance will\n return EOF.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266384,"byte_end":14266458,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ return EOF.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266463,"byte_end":14266478,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266483,"byte_end":14266486,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266491,"byte_end":14266501,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266506,"byte_end":14266509,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266514,"byte_end":14266591,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`Read`] instance reaches EOF.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266596,"byte_end":14266660,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266665,"byte_end":14266668,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266673,"byte_end":14266702,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266707,"byte_end":14266710,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266715,"byte_end":14266729,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266734,"byte_end":14266737,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266742,"byte_end":14266755,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266760,"byte_end":14266840,"line_start":38,"line_end":38,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266845,"byte_end":14266850,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266855,"byte_end":14266885,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266890,"byte_end":14266918,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266923,"byte_end":14266926,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266931,"byte_end":14266972,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266977,"byte_end":14266980,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266985,"byte_end":14267015,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/ let handle = f.take(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267020,"byte_end":14267047,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267052,"byte_end":14267055,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ println!(\"limit: {}\", handle.limit());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267060,"byte_end":14267102,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267107,"byte_end":14267112,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/ #     Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267117,"byte_end":14267138,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267143,"byte_end":14267150,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267956,"byte_end":14267965,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"fn set_limit<'_>(&'_ mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267214,"byte_end":14267285,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267290,"byte_end":14267364,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267369,"byte_end":14267444,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267449,"byte_end":14267473,"line_start":59,"line_end":59,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267478,"byte_end":14267481,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267486,"byte_end":14267500,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267505,"byte_end":14267508,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267513,"byte_end":14267526,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267531,"byte_end":14267611,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267616,"byte_end":14267621,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267626,"byte_end":14267656,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267661,"byte_end":14267689,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267694,"byte_end":14267697,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267702,"byte_end":14267743,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267748,"byte_end":14267751,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267756,"byte_end":14267786,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/ let mut handle = f.take(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267791,"byte_end":14267822,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/ handle.set_limit(10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267827,"byte_end":14267852,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267857,"byte_end":14267860,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(handle.limit(), 10);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267865,"byte_end":14267900,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267905,"byte_end":14267910,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267915,"byte_end":14267932,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14267937,"byte_end":14267944,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268582,"byte_end":14268592,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268030,"byte_end":14268084,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268089,"byte_end":14268092,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268097,"byte_end":14268111,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268116,"byte_end":14268119,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268124,"byte_end":14268137,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268142,"byte_end":14268222,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268227,"byte_end":14268232,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268237,"byte_end":14268267,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268272,"byte_end":14268300,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268305,"byte_end":14268308,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268313,"byte_end":14268357,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268362,"byte_end":14268365,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268370,"byte_end":14268398,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268403,"byte_end":14268437,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268442,"byte_end":14268478,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268483,"byte_end":14268486,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let file = handle.into_inner();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268491,"byte_end":14268526,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268531,"byte_end":14268536,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268541,"byte_end":14268558,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268563,"byte_end":14268570,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3069},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269177,"byte_end":14269184,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268636,"byte_end":14268682,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268687,"byte_end":14268690,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268695,"byte_end":14268709,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268714,"byte_end":14268717,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268722,"byte_end":14268735,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268740,"byte_end":14268820,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268825,"byte_end":14268830,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268835,"byte_end":14268865,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268870,"byte_end":14268898,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268903,"byte_end":14268906,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268911,"byte_end":14268955,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268960,"byte_end":14268963,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14268968,"byte_end":14268996,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269001,"byte_end":14269035,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269040,"byte_end":14269076,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269081,"byte_end":14269084,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_ref();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269089,"byte_end":14269121,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269126,"byte_end":14269131,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269136,"byte_end":14269153,"line_start":125,"line_end":125,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269158,"byte_end":14269165,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269959,"byte_end":14269966,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269231,"byte_end":14269285,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269290,"byte_end":14269293,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269298,"byte_end":14269371,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269376,"byte_end":14269448,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269453,"byte_end":14269464,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269469,"byte_end":14269472,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269477,"byte_end":14269491,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269496,"byte_end":14269499,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269504,"byte_end":14269517,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269522,"byte_end":14269602,"line_start":140,"line_end":140,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269607,"byte_end":14269612,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269617,"byte_end":14269647,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269652,"byte_end":14269680,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269685,"byte_end":14269688,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269693,"byte_end":14269737,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269742,"byte_end":14269745,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269750,"byte_end":14269778,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269783,"byte_end":14269817,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269822,"byte_end":14269858,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269863,"byte_end":14269866,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_mut();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269871,"byte_end":14269903,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269908,"byte_end":14269913,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269918,"byte_end":14269935,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14269940,"byte_end":14269947,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14270120,"byte_end":14270129,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Take<T> as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":40},"docs":" Attempt to read from the `AsyncRead` into `buf`.\n","sig":null,"attributes":[{"value":"/ Attempt to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14270060,"byte_end":14270112,"line_start":161,"line_end":161,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14270985,"byte_end":14270998,"line_start":195,"line_end":195,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Take<T> as futures_lite::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":27,"index":49},"children":[],"decl_id":{"krate":27,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14271484,"byte_end":14271491,"line_start":211,"line_end":211,"column_start":8,"column_end":15},"name":"consume","qualname":"<Take<T> as futures_lite::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":27,"index":49},"children":[],"decl_id":{"krate":27,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3117},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14241447,"byte_end":14241454,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"ReadExt","qualname":"::io::read::ReadExt","value":"ReadExt: Read","parent":null,"children":[{"krate":0,"index":3118},{"krate":0,"index":3120},{"krate":0,"index":3122},{"krate":0,"index":3124},{"krate":0,"index":3126},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131}],"decl_id":null,"docs":"    Extension methods for [`Read`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14242530,"byte_end":14242534,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"read","qualname":"::io::read::ReadExt::read","value":"fn read<'a>(&'a mut Self, &'a mut [u8]) -> ReadFuture where Self: Unpin","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"        Reads some bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14243207,"byte_end":14243220,"line_start":85,"line_end":85,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::read::ReadExt::read_vectored","value":"fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectoredFuture\nwhere Self: Unpin","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"        Like [`read`], except that it reads into a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14244214,"byte_end":14244225,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::read::ReadExt::read_to_end","value":"fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEndFuture where\nSelf: Unpin","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"        Reads all bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14245188,"byte_end":14245202,"line_start":161,"line_end":161,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::read::ReadExt::read_to_string","value":"fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToStringFuture\nwhere Self: Unpin","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"        Reads all bytes from the byte stream and appends them into a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14247060,"byte_end":14247070,"line_start":216,"line_end":216,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::read::ReadExt::read_exact","value":"fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExactFuture where\nSelf: Unpin","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"        Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14248244,"byte_end":14248248,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"take","qualname":"::io::read::ReadExt::take","value":"fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"        Creates an adaptor which will read at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14249335,"byte_end":14249341,"line_start":302,"line_end":302,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::io::read::ReadExt::by_ref","value":"fn by_ref<'_>(&'_ mut Self) -> &'_ mut Self where Self: Sized","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"        Creates a \"by reference\" adaptor for this instance of `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14250247,"byte_end":14250252,"line_start":335,"line_end":335,"column_start":8,"column_end":13},"name":"bytes","qualname":"::io::read::ReadExt::bytes","value":"fn bytes(Self) -> Bytes<Self> where Self: Sized","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"        Transforms this `Read` instance to a `Stream` over its bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14251279,"byte_end":14251284,"line_start":371,"line_end":371,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::read::ReadExt::chain","value":"fn chain<R>(Self, R) -> Chain<Self, R> where R: Read, Self: Sized","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"        Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3162},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\seek.rs","byte_start":14273716,"byte_end":14273726,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SeekFuture","qualname":"::io::seek::seek::SeekFuture","value":"SeekFuture {  }","parent":null,"children":[{"krate":0,"index":3165},{"krate":0,"index":3166}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\seek.rs","byte_start":14273665,"byte_end":14273704,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\seek.rs","byte_start":14273924,"byte_end":14273928,"line_start":17,"line_end":17,"column_start":8,"column_end":12},"name":"poll","qualname":"<SeekFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3180},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\mod.rs","byte_start":14272677,"byte_end":14272684,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"SeekExt","qualname":"::io::seek::SeekExt","value":"SeekExt: Seek","parent":null,"children":[{"krate":0,"index":3181}],"decl_id":null,"docs":"    Extension methods for [`Seek`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\mod.rs","byte_start":14273325,"byte_end":14273329,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::seek::SeekExt::seek","value":"fn seek<'_>(&'_ mut Self, SeekFrom) -> SeekFuture where Self: Unpin","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":"        Seeks to a new position in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3206},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\flush.rs","byte_start":14279545,"byte_end":14279556,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"FlushFuture","qualname":"::io::write::flush::FlushFuture","value":"FlushFuture {  }","parent":null,"children":[{"krate":0,"index":3209}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\flush.rs","byte_start":14279494,"byte_end":14279533,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\flush.rs","byte_start":14279725,"byte_end":14279729,"line_start":16,"line_end":16,"column_start":8,"column_end":12},"name":"poll","qualname":"<FlushFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3235},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write.rs","byte_start":14280038,"byte_end":14280049,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"WriteFuture","qualname":"::io::write::write::WriteFuture","value":"WriteFuture {  }","parent":null,"children":[{"krate":0,"index":3238},{"krate":0,"index":3239}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write.rs","byte_start":14279987,"byte_end":14280026,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write.rs","byte_start":14280251,"byte_end":14280255,"line_start":17,"line_end":17,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3268},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_all.rs","byte_start":14280611,"byte_end":14280625,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteAllFuture","qualname":"::io::write::write_all::WriteAllFuture","value":"WriteAllFuture {  }","parent":null,"children":[{"krate":0,"index":3271},{"krate":0,"index":3272}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_all.rs","byte_start":14280560,"byte_end":14280599,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_all.rs","byte_start":14280827,"byte_end":14280831,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteAllFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3298},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_fmt.rs","byte_start":14281510,"byte_end":14281524,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteFmtFuture","qualname":"::io::write::write_fmt::WriteFmtFuture","value":"WriteFmtFuture {  }","parent":null,"children":[{"krate":0,"index":3301},{"krate":0,"index":3302},{"krate":0,"index":3303},{"krate":0,"index":3304}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_fmt.rs","byte_start":14281447,"byte_end":14281486,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_fmt.rs","byte_start":14281487,"byte_end":14281498,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_fmt.rs","byte_start":14281812,"byte_end":14281816,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteFmtFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_vectored.rs","byte_start":14283080,"byte_end":14283099,"line_start":9,"line_end":9,"column_start":12,"column_end":31},"name":"WriteVectoredFuture","qualname":"::io::write::write_vectored::WriteVectoredFuture","value":"WriteVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3337}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_vectored.rs","byte_start":14283029,"byte_end":14283068,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_vectored.rs","byte_start":14283319,"byte_end":14283323,"line_start":17,"line_end":17,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteVectoredFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3367},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14274492,"byte_end":14274500,"line_start":22,"line_end":22,"column_start":11,"column_end":19},"name":"WriteExt","qualname":"::io::write::WriteExt","value":"WriteExt: Write","parent":null,"children":[{"krate":0,"index":3368},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3373},{"krate":0,"index":3375}],"decl_id":null,"docs":"    Extension methods for [`Write`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14275320,"byte_end":14275325,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"write","qualname":"::io::write::WriteExt::write","value":"fn write<'a>(&'a mut Self, &'a [u8]) -> WriteFuture where Self: Unpin","parent":{"krate":0,"index":3367},"children":[],"decl_id":null,"docs":"        Writes some bytes into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14275984,"byte_end":14275989,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::write::WriteExt::flush","value":"fn flush<'_>(&'_ mut Self) -> FlushFuture where Self: Unpin","parent":{"krate":0,"index":3367},"children":[],"decl_id":null,"docs":"        Flushes the stream to ensure that all buffered contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3371},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14276608,"byte_end":14276622,"line_start":96,"line_end":96,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::write::WriteExt::write_vectored","value":"fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectoredFuture\nwhere Self: Unpin","parent":{"krate":0,"index":3367},"children":[],"decl_id":null,"docs":"        Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14277560,"byte_end":14277569,"line_start":132,"line_end":132,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::write::WriteExt::write_all","value":"fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAllFuture where Self: Unpin","parent":{"krate":0,"index":3367},"children":[],"decl_id":null,"docs":"        Writes an entire buffer into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3375},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14278614,"byte_end":14278623,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"::io::write::WriteExt::write_fmt","value":"fn write_fmt<'a, '_>(&'a mut Self, std::fmt::Arguments) -> WriteFmtFuture\nwhere Self: Unpin","parent":{"krate":0,"index":3367},"children":[],"decl_id":null,"docs":"        Writes a formatted string into this writer, returning any error encountered.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6324},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286286,"byte_end":14286295,"line_start":46,"line_end":46,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":6326},{"krate":0,"index":6327},{"krate":0,"index":6328},{"krate":0,"index":6329}],"decl_id":null,"docs":" Adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3456},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286926,"byte_end":14286929,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn new(R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a buffered reader with default buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a buffered reader with default buffer capacity.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286444,"byte_end":14286503,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286508,"byte_end":14286511,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default capacity is currently 8 KB, but may change in the future.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286516,"byte_end":14286589,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286594,"byte_end":14286597,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286602,"byte_end":14286616,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286621,"byte_end":14286624,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286629,"byte_end":14286642,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286647,"byte_end":14286721,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286726,"byte_end":14286731,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286736,"byte_end":14286764,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286769,"byte_end":14286802,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286807,"byte_end":14286810,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286815,"byte_end":14286870,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286875,"byte_end":14286880,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286885,"byte_end":14286902,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286907,"byte_end":14286914,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3457},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287442,"byte_end":14287455,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn with_capacity(usize, R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffered reader with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new buffered reader with the specified capacity.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287027,"byte_end":14287089,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287094,"byte_end":14287097,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287102,"byte_end":14287116,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287121,"byte_end":14287124,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287129,"byte_end":14287142,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287147,"byte_end":14287221,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287226,"byte_end":14287231,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287236,"byte_end":14287264,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287269,"byte_end":14287302,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287307,"byte_end":14287310,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::with_capacity(1024, File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287315,"byte_end":14287386,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287391,"byte_end":14287396,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287401,"byte_end":14287418,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287423,"byte_end":14287430,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288176,"byte_end":14288183,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287681,"byte_end":14287727,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287732,"byte_end":14287735,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287740,"byte_end":14287806,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287811,"byte_end":14287814,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287819,"byte_end":14287833,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287838,"byte_end":14287841,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287846,"byte_end":14287859,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287864,"byte_end":14287938,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287943,"byte_end":14287948,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287953,"byte_end":14287981,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287986,"byte_end":14288019,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288024,"byte_end":14288027,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288032,"byte_end":14288087,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/ let inner = f.get_ref();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288092,"byte_end":14288120,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288125,"byte_end":14288130,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288135,"byte_end":14288152,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288157,"byte_end":14288164,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3461},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288743,"byte_end":14288750,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288230,"byte_end":14288284,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288289,"byte_end":14288292,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288297,"byte_end":14288363,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288368,"byte_end":14288371,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288376,"byte_end":14288390,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288395,"byte_end":14288398,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288403,"byte_end":14288416,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288421,"byte_end":14288495,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288500,"byte_end":14288505,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288510,"byte_end":14288538,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288543,"byte_end":14288576,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288581,"byte_end":14288584,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut file = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288589,"byte_end":14288651,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ let inner = file.get_mut();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288656,"byte_end":14288687,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288692,"byte_end":14288697,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288702,"byte_end":14288719,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14288724,"byte_end":14288731,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289547,"byte_end":14289553,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn buffer<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289048,"byte_end":14289095,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289100,"byte_end":14289103,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289108,"byte_end":14289177,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289182,"byte_end":14289185,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289190,"byte_end":14289204,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289209,"byte_end":14289212,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289217,"byte_end":14289230,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289235,"byte_end":14289309,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289314,"byte_end":14289319,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289324,"byte_end":14289352,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289357,"byte_end":14289390,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289395,"byte_end":14289398,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289403,"byte_end":14289458,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/ let buffer = f.buffer();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289463,"byte_end":14289491,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289496,"byte_end":14289501,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289506,"byte_end":14289523,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289528,"byte_end":14289535,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14290135,"byte_end":14290145,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the buffered reader, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps the buffered reader, returning the underlying reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289621,"byte_end":14289686,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289691,"byte_end":14289694,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289699,"byte_end":14289762,"line_start":173,"line_end":173,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289767,"byte_end":14289770,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289775,"byte_end":14289789,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289794,"byte_end":14289797,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289802,"byte_end":14289815,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289820,"byte_end":14289894,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289899,"byte_end":14289904,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289909,"byte_end":14289937,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289942,"byte_end":14289975,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289980,"byte_end":14289983,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14289988,"byte_end":14290043,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let inner = f.into_inner();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14290048,"byte_end":14290079,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14290084,"byte_end":14290089,"line_start":185,"line_end":185,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14290094,"byte_end":14290111,"line_start":186,"line_end":186,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14290116,"byte_end":14290123,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14290433,"byte_end":14290442,"line_start":202,"line_end":202,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<BufReader<R> as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14291165,"byte_end":14291183,"line_start":221,"line_end":221,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<BufReader<R> as futures_lite::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14291896,"byte_end":14291909,"line_start":241,"line_end":241,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<BufReader<R> as futures_lite::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'a, '_, '_>(Pin<&'a mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'a [u8]>>","parent":{"krate":27,"index":49},"children":[],"decl_id":{"krate":27,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14292613,"byte_end":14292620,"line_start":259,"line_end":259,"column_start":8,"column_end":15},"name":"consume","qualname":"<BufReader<R> as futures_lite::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":27,"index":49},"children":[],"decl_id":{"krate":27,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3478},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14292827,"byte_end":14292830,"line_start":266,"line_end":266,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufReader<R> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14294131,"byte_end":14294140,"line_start":295,"line_end":295,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<BufReader<R> as futures_lite::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":27,"index":47},"children":[],"decl_id":{"krate":27,"index":48},"docs":" Seeks to an offset, in bytes, in the underlying reader.","sig":null,"attributes":[{"value":"/ Seeks to an offset, in bytes, in the underlying reader.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293171,"byte_end":14293230,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293235,"byte_end":14293238,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ The position used for seeking with `SeekFrom::Current(_)` is the position the underlying","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293243,"byte_end":14293335,"line_start":280,"line_end":280,"column_start":5,"column_end":97}},{"value":"/ reader would be at if the `BufReader` had no internal buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293340,"byte_end":14293405,"line_start":281,"line_end":281,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293410,"byte_end":14293413,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Seeking always discards the internal buffer, even if the seek position would otherwise fall","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293418,"byte_end":14293513,"line_start":283,"line_end":283,"column_start":5,"column_end":100}},{"value":"/ within it. This guarantees that calling `.into_inner()` immediately after a seek yields the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293518,"byte_end":14293613,"line_start":284,"line_end":284,"column_start":5,"column_end":100}},{"value":"/ underlying reader at the same position.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293618,"byte_end":14293661,"line_start":285,"line_end":285,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293666,"byte_end":14293669,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ See [`Seek`] for more details.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293674,"byte_end":14293708,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293713,"byte_end":14293716,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Note: In the edge case where you're seeking with `SeekFrom::Current(n)` where `n` minus the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293721,"byte_end":14293816,"line_start":289,"line_end":289,"column_start":5,"column_end":100}},{"value":"/ internal buffer length overflows an `i64`, two seeks will be performed instead of one. If","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293821,"byte_end":14293914,"line_start":290,"line_end":290,"column_start":5,"column_end":98}},{"value":"/ the second seek returns `Err`, the underlying reader will be left at the same position it","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293919,"byte_end":14294012,"line_start":291,"line_end":291,"column_start":5,"column_end":98}},{"value":"/ would have if you called `seek` with `SeekFrom::Current(0)`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14294017,"byte_end":14294081,"line_start":292,"line_end":292,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14294086,"byte_end":14294089,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14294094,"byte_end":14294123,"line_start":294,"line_end":294,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6283},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299061,"byte_end":14299070,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6287}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3763},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299935,"byte_end":14299949,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::io::buf_writer::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned by `into_inner` which combines an error that\n happened while writing out the buffer, and the buffered writer object\n which may be used to recover from the condition.","sig":null,"attributes":[{"value":"/ An error returned by `into_inner` which combines an error that","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299164,"byte_end":14299230,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/ happened while writing out the buffer, and the buffered writer object","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299231,"byte_end":14299304,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ which may be used to recover from the condition.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299305,"byte_end":14299357,"line_start":94,"line_end":94,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299358,"byte_end":14299361,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299362,"byte_end":14299376,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299377,"byte_end":14299380,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299381,"byte_end":14299394,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299395,"byte_end":14299469,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299470,"byte_end":14299503,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299504,"byte_end":14299538,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299539,"byte_end":14299542,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299543,"byte_end":14299625,"line_start":103,"line_end":103,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299626,"byte_end":14299629,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299630,"byte_end":14299678,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"/ let stream = match buf_writer.into_inner().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299679,"byte_end":14299733,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/     Ok(s) => s,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299734,"byte_end":14299753,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/     Err(e) => {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299754,"byte_end":14299773,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/         // Here, e is an IntoInnerError","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299774,"byte_end":14299817,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/         panic!(\"An error occurred\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299818,"byte_end":14299858,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299859,"byte_end":14299868,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299869,"byte_end":14299875,"line_start":112,"line_end":112,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299876,"byte_end":14299881,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299882,"byte_end":14299899,"line_start":114,"line_end":114,"column_start":1,"column_end":18}},{"value":"/```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299900,"byte_end":14299906,"line_start":115,"line_end":115,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300532,"byte_end":14300535,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn new(W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300010,"byte_end":14300102,"line_start":120,"line_end":120,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300107,"byte_end":14300140,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300145,"byte_end":14300148,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300153,"byte_end":14300167,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300172,"byte_end":14300175,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300180,"byte_end":14300193,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300198,"byte_end":14300225,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300230,"byte_end":14300304,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300309,"byte_end":14300342,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300347,"byte_end":14300381,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300386,"byte_end":14300389,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300394,"byte_end":14300476,"line_start":131,"line_end":131,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300481,"byte_end":14300486,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300491,"byte_end":14300508,"line_start":133,"line_end":133,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300513,"byte_end":14300520,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301202,"byte_end":14301215,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn with_capacity(usize, W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300633,"byte_end":14300698,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300703,"byte_end":14300706,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300711,"byte_end":14300725,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300730,"byte_end":14300733,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Creating a buffer with a buffer of a hundred bytes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300738,"byte_end":14300793,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300798,"byte_end":14300801,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300806,"byte_end":14300819,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300824,"byte_end":14300851,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300856,"byte_end":14300930,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300935,"byte_end":14300968,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14300973,"byte_end":14301007,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301012,"byte_end":14301015,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301020,"byte_end":14301082,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ let mut buffer = BufWriter::with_capacity(100, stream);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301087,"byte_end":14301146,"line_start":152,"line_end":152,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301151,"byte_end":14301156,"line_start":153,"line_end":153,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301161,"byte_end":14301178,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301183,"byte_end":14301190,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301929,"byte_end":14301936,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301392,"byte_end":14301438,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301443,"byte_end":14301446,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301451,"byte_end":14301465,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301470,"byte_end":14301473,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301478,"byte_end":14301491,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301496,"byte_end":14301523,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301528,"byte_end":14301602,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301607,"byte_end":14301640,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301645,"byte_end":14301679,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301684,"byte_end":14301687,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301692,"byte_end":14301774,"line_start":174,"line_end":174,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301779,"byte_end":14301782,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301787,"byte_end":14301831,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_ref();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301836,"byte_end":14301873,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301878,"byte_end":14301883,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301888,"byte_end":14301905,"line_start":179,"line_end":179,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301910,"byte_end":14301917,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302574,"byte_end":14302581,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14301983,"byte_end":14302037,"line_start":185,"line_end":185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302042,"byte_end":14302045,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302050,"byte_end":14302115,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302120,"byte_end":14302123,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302128,"byte_end":14302142,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302147,"byte_end":14302150,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302155,"byte_end":14302168,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302173,"byte_end":14302247,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302252,"byte_end":14302285,"line_start":193,"line_end":193,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302290,"byte_end":14302324,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302329,"byte_end":14302332,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302337,"byte_end":14302419,"line_start":196,"line_end":196,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302424,"byte_end":14302427,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302432,"byte_end":14302476,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_mut();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302481,"byte_end":14302518,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302523,"byte_end":14302528,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302533,"byte_end":14302550,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302555,"byte_end":14302562,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303647,"byte_end":14303657,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"async fn into_inner(Self) -> /*impl Trait*/ where Self: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Consumes BufWriter, returning the underlying writer","sig":null,"attributes":[{"value":"/ Consumes BufWriter, returning the underlying writer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302878,"byte_end":14302933,"line_start":214,"line_end":214,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302938,"byte_end":14302941,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method will not write leftover data, it will be lost.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14302946,"byte_end":14303008,"line_start":216,"line_end":216,"column_start":5,"column_end":67}},{"value":"/ For method that will attempt to write before returning the writer see [`poll_into_inner`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303013,"byte_end":14303106,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303111,"byte_end":14303114,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`poll_into_inner`]: #method.poll_into_inner","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303119,"byte_end":14303167,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303172,"byte_end":14303186,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303191,"byte_end":14303194,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303199,"byte_end":14303212,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303217,"byte_end":14303291,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303296,"byte_end":14303329,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303334,"byte_end":14303368,"line_start":225,"line_end":225,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303373,"byte_end":14303376,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303381,"byte_end":14303463,"line_start":227,"line_end":227,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303468,"byte_end":14303471,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303476,"byte_end":14303524,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/ let stream = buf_writer.into_inner().await.unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303529,"byte_end":14303585,"line_start":230,"line_end":230,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303590,"byte_end":14303595,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303600,"byte_end":14303617,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303622,"byte_end":14303629,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14304427,"byte_end":14304433,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn buffer<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303894,"byte_end":14303950,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303955,"byte_end":14303958,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303963,"byte_end":14303977,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303982,"byte_end":14303985,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14303990,"byte_end":14304003,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14304008,"byte_end":14304082,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14304087,"byte_end":14304120,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14304125,"byte_end":14304159,"line_start":251,"line_end":251,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14304164,"byte_end":14304167,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14304172,"byte_end":14304254,"line_start":253,"line_end":253,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14304259,"byte_end":14304262,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // See how many bytes are currently buffered","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14304267,"byte_end":14304315,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ let bytes_buffered = buf_writer.buffer().len();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14304320,"byte_end":14304371,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14304376,"byte_end":14304381,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14304386,"byte_end":14304403,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14304408,"byte_end":14304415,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14305854,"byte_end":14305864,"line_start":304,"line_end":304,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<BufWriter<W> as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3536},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14306317,"byte_end":14306327,"line_start":319,"line_end":319,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<BufWriter<W> as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3537},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14306509,"byte_end":14306519,"line_start":324,"line_end":324,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<BufWriter<W> as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3540},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14306761,"byte_end":14306764,"line_start":331,"line_end":331,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufWriter<W> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14307158,"byte_end":14307167,"line_start":343,"line_end":343,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<BufWriter<W> as futures_lite::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":27,"index":47},"children":[],"decl_id":{"krate":27,"index":48},"docs":" Seek to the offset, in bytes, in the underlying writer.","sig":null,"attributes":[{"value":"/ Seek to the offset, in bytes, in the underlying writer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14307013,"byte_end":14307072,"line_start":340,"line_end":340,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14307077,"byte_end":14307080,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ Seeking always writes out the internal buffer before seeking.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14307085,"byte_end":14307150,"line_start":342,"line_end":342,"column_start":5,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308851,"byte_end":14308855,"line_start":48,"line_end":48,"column_start":14,"column_end":18},"name":"copy","qualname":"::io::copy::copy","value":"async fn copy<R, W, '_, '_>(&'_ mut R, &'_ mut W) -> /*impl Trait*/ where\nR: Read + Unpin + ?Sized, W: Write + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"/ Copies the entire contents of a reader into a writer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14307599,"byte_end":14307656,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14307657,"byte_end":14307660,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will continuously read data from `reader` and then","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14307661,"byte_end":14307729,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ write it into `writer` in a streaming fashion until `reader`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14307730,"byte_end":14307794,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/ returns EOF.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14307795,"byte_end":14307811,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14307812,"byte_end":14307815,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes that were copied from","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14307816,"byte_end":14307879,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ `reader` to `writer` is returned.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14307880,"byte_end":14307917,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14307918,"byte_end":14307921,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14307922,"byte_end":14308002,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ working with filesystem paths, see the [`fs::copy`] function.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308003,"byte_end":14308068,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308069,"byte_end":14308072,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::copy`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308073,"byte_end":14308132,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308133,"byte_end":14308136,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308137,"byte_end":14308205,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/ [`fs::copy`]: ../fs/fn.copy.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308206,"byte_end":14308242,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308243,"byte_end":14308246,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308247,"byte_end":14308259,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308260,"byte_end":14308263,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This function will return an error immediately if any call to `read` or","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308264,"byte_end":14308339,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ `write` returns an error. All instances of `ErrorKind::Interrupted` are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308340,"byte_end":14308415,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ handled by this function and the underlying operation is retried.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308416,"byte_end":14308485,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308486,"byte_end":14308489,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308490,"byte_end":14308504,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308505,"byte_end":14308508,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308509,"byte_end":14308516,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308517,"byte_end":14308591,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308592,"byte_end":14308597,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308598,"byte_end":14308620,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308621,"byte_end":14308624,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut reader: &[u8] = b\"hello\";","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308625,"byte_end":14308662,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::stdout();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308663,"byte_end":14308697,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308698,"byte_end":14308701,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ io::copy(&mut reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308702,"byte_end":14308748,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308749,"byte_end":14308754,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308755,"byte_end":14308772,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308773,"byte_end":14308780,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"cfg(any(feature = \"docs\", not(feature = \"unstable\")))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14308781,"byte_end":14308837,"line_start":47,"line_end":47,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3771},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313818,"byte_end":14313824,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":3773}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`Seek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14312994,"byte_end":14313057,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`Seek`] implementation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313058,"byte_end":14313086,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313087,"byte_end":14313090,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313091,"byte_end":14313159,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313160,"byte_end":14313232,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313233,"byte_end":14313312,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313313,"byte_end":14313338,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313339,"byte_end":14313342,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313343,"byte_end":14313417,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313418,"byte_end":14313485,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313486,"byte_end":14313519,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313520,"byte_end":14313523,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313524,"byte_end":14313553,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313554,"byte_end":14313583,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313584,"byte_end":14313615,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ [`Vec`]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313616,"byte_end":14313678,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313679,"byte_end":14313742,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313743,"byte_end":14313773,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314411,"byte_end":14314414,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"fn new(T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313888,"byte_end":14313963,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313968,"byte_end":14313971,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313976,"byte_end":14314050,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314055,"byte_end":14314123,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314128,"byte_end":14314166,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314171,"byte_end":14314174,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314179,"byte_end":14314193,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314198,"byte_end":14314201,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314206,"byte_end":14314213,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314218,"byte_end":14314248,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314253,"byte_end":14314256,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314261,"byte_end":14314300,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314305,"byte_end":14314353,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314358,"byte_end":14314387,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314392,"byte_end":14314399,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314873,"byte_end":14314883,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314526,"byte_end":14314583,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314588,"byte_end":14314591,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314596,"byte_end":14314610,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314615,"byte_end":14314618,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314623,"byte_end":14314630,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314635,"byte_end":14314665,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314670,"byte_end":14314673,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314678,"byte_end":14314717,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314722,"byte_end":14314770,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314775,"byte_end":14314804,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314809,"byte_end":14314812,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314817,"byte_end":14314849,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314854,"byte_end":14314861,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315293,"byte_end":14315300,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14314940,"byte_end":14315000,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315005,"byte_end":14315008,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315013,"byte_end":14315027,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315032,"byte_end":14315035,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315040,"byte_end":14315047,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315052,"byte_end":14315082,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315087,"byte_end":14315090,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315095,"byte_end":14315134,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315139,"byte_end":14315187,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315192,"byte_end":14315221,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315226,"byte_end":14315229,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315234,"byte_end":14315269,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315274,"byte_end":14315281,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315874,"byte_end":14315881,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315356,"byte_end":14315424,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315429,"byte_end":14315432,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315437,"byte_end":14315510,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315515,"byte_end":14315577,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315582,"byte_end":14315585,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315590,"byte_end":14315604,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315609,"byte_end":14315612,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315617,"byte_end":14315624,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315629,"byte_end":14315659,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315664,"byte_end":14315667,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315672,"byte_end":14315715,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315720,"byte_end":14315768,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315773,"byte_end":14315802,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315807,"byte_end":14315810,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315815,"byte_end":14315850,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315855,"byte_end":14315862,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316602,"byte_end":14316610,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"fn position<'_>(&'_ Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315945,"byte_end":14315993,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14315998,"byte_end":14316001,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316006,"byte_end":14316020,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316025,"byte_end":14316028,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316033,"byte_end":14316040,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316045,"byte_end":14316119,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316124,"byte_end":14316129,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316134,"byte_end":14316164,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316169,"byte_end":14316203,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316208,"byte_end":14316240,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316245,"byte_end":14316248,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316253,"byte_end":14316305,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316310,"byte_end":14316313,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316318,"byte_end":14316353,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316358,"byte_end":14316361,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316366,"byte_end":14316409,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316414,"byte_end":14316449,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316454,"byte_end":14316457,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316462,"byte_end":14316506,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316511,"byte_end":14316546,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316551,"byte_end":14316556,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316561,"byte_end":14316578,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316583,"byte_end":14316590,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14317080,"byte_end":14317092,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"fn set_position<'_>(&'_ mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316668,"byte_end":14316705,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316710,"byte_end":14316713,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316718,"byte_end":14316732,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316737,"byte_end":14316740,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316745,"byte_end":14316752,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316757,"byte_end":14316787,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316792,"byte_end":14316795,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316800,"byte_end":14316852,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316857,"byte_end":14316860,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316865,"byte_end":14316900,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316905,"byte_end":14316908,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316913,"byte_end":14316938,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316943,"byte_end":14316978,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316983,"byte_end":14316986,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14316991,"byte_end":14317016,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14317021,"byte_end":14317056,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14317061,"byte_end":14317068,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3637},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14317232,"byte_end":14317241,"line_start":158,"line_end":158,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<Cursor<T> as futures_lite::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":27,"index":47},"children":[],"decl_id":{"krate":27,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3640},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14317504,"byte_end":14317513,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Cursor<T> as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14317716,"byte_end":14317734,"line_start":179,"line_end":179,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Cursor<T> as futures_lite::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14318026,"byte_end":14318039,"line_start":192,"line_end":192,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Cursor<T> as futures_lite::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":27,"index":49},"children":[],"decl_id":{"krate":27,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14318201,"byte_end":14318208,"line_start":196,"line_end":196,"column_start":8,"column_end":15},"name":"consume","qualname":"<Cursor<T> as futures_lite::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":27,"index":49},"children":[],"decl_id":{"krate":27,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14318356,"byte_end":14318366,"line_start":202,"line_end":202,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Cursor<&'_ mut [u8]> as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14318565,"byte_end":14318584,"line_start":210,"line_end":210,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<Cursor<&'_ mut [u8]> as futures_lite::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14318803,"byte_end":14318813,"line_start":218,"line_end":218,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Cursor<&'_ mut [u8]> as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14318961,"byte_end":14318971,"line_start":222,"line_end":222,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Cursor<&'_ mut [u8]> as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14319124,"byte_end":14319134,"line_start":228,"line_end":228,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Cursor<&'_ mut Vec<u8>> as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14319333,"byte_end":14319343,"line_start":236,"line_end":236,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Cursor<&'_ mut Vec<u8>> as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14319456,"byte_end":14319466,"line_start":240,"line_end":240,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Cursor<&'_ mut Vec<u8>> as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14319649,"byte_end":14319659,"line_start":246,"line_end":246,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Cursor<Vec<u8>> as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14319858,"byte_end":14319868,"line_start":254,"line_end":254,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Cursor<Vec<u8>> as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14319981,"byte_end":14319991,"line_start":258,"line_end":258,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Cursor<Vec<u8>> as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3683},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320636,"byte_end":14320641,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a reader that contains no data.","sig":null,"attributes":[{"value":"/ Creates a reader that contains no data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320241,"byte_end":14320284,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320285,"byte_end":14320288,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320289,"byte_end":14320303,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320304,"byte_end":14320307,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320308,"byte_end":14320319,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320320,"byte_end":14320394,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320395,"byte_end":14320400,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320401,"byte_end":14320423,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320424,"byte_end":14320454,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320455,"byte_end":14320458,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320459,"byte_end":14320488,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320489,"byte_end":14320522,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320523,"byte_end":14320563,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320564,"byte_end":14320567,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320568,"byte_end":14320596,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320597,"byte_end":14320602,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320603,"byte_end":14320620,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320621,"byte_end":14320628,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3684},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320859,"byte_end":14320864,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3685}],"decl_id":null,"docs":" A reader that contains no data.","sig":null,"attributes":[{"value":"/ A reader that contains no data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320685,"byte_end":14320720,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320721,"byte_end":14320724,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`empty`] function. See its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320725,"byte_end":14320786,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320787,"byte_end":14320814,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320815,"byte_end":14320818,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320819,"byte_end":14320847,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3687},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320923,"byte_end":14320926,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Empty as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3689},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14321061,"byte_end":14321070,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Empty as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":40},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14321044,"byte_end":14321053,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3691},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14321270,"byte_end":14321283,"line_start":58,"line_end":58,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Empty as futures_lite::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'a, '_, '_>(Pin<&'a mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'a [u8]>>","parent":{"krate":27,"index":49},"children":[],"decl_id":{"krate":27,"index":50},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14321253,"byte_end":14321262,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14321446,"byte_end":14321453,"line_start":66,"line_end":66,"column_start":8,"column_end":15},"name":"consume","qualname":"<Empty as futures_lite::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":27,"index":49},"children":[],"decl_id":{"krate":27,"index":51},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14321429,"byte_end":14321438,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":3715},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322109,"byte_end":14322115,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321590,"byte_end":14321659,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321660,"byte_end":14321663,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with the given byte.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321664,"byte_end":14321760,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321761,"byte_end":14321764,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321765,"byte_end":14321780,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321781,"byte_end":14321784,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321785,"byte_end":14321796,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321797,"byte_end":14321871,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321872,"byte_end":14321877,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321878,"byte_end":14321900,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321901,"byte_end":14321931,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321932,"byte_end":14321935,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321936,"byte_end":14321964,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ io::repeat(0b101).read_exact(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14321965,"byte_end":14322018,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322019,"byte_end":14322022,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322023,"byte_end":14322069,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322070,"byte_end":14322075,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322076,"byte_end":14322093,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322094,"byte_end":14322101,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3716},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322385,"byte_end":14322391,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3717}],"decl_id":null,"docs":" A reader which yields one byte over and over and over and over and over and...","sig":null,"attributes":[{"value":"/ A reader which yields one byte over and over and over and over and over and...","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322161,"byte_end":14322243,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322244,"byte_end":14322247,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`repeat`] function. See its","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322248,"byte_end":14322310,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322311,"byte_end":14322338,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322339,"byte_end":14322342,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322343,"byte_end":14322373,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3719},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322447,"byte_end":14322450,"line_start":41,"line_end":41,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Repeat as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3721},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322586,"byte_end":14322595,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Repeat as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":40},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322569,"byte_end":14322578,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":3743},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323267,"byte_end":14323271,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ Creates a writer that consumes and drops all data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14322925,"byte_end":14322979,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14322980,"byte_end":14322983,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14322984,"byte_end":14322998,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14322999,"byte_end":14323002,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323003,"byte_end":14323014,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323015,"byte_end":14323089,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323090,"byte_end":14323095,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323096,"byte_end":14323118,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323119,"byte_end":14323149,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323150,"byte_end":14323153,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323154,"byte_end":14323186,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ writer.write(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323187,"byte_end":14323227,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323228,"byte_end":14323233,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323234,"byte_end":14323251,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323252,"byte_end":14323259,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3744},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323499,"byte_end":14323503,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3745}],"decl_id":null,"docs":" A writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ A writer that consumes and drops all data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323313,"byte_end":14323359,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323360,"byte_end":14323363,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This writer is constructed by the [`sink`] function. See its documentation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323364,"byte_end":14323442,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ for more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323443,"byte_end":14323456,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323457,"byte_end":14323460,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`sink`]: fn.sink.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323461,"byte_end":14323487,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323561,"byte_end":14323564,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Sink as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323698,"byte_end":14323708,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Sink as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":43},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323681,"byte_end":14323690,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323887,"byte_end":14323897,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Sink as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":45},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323870,"byte_end":14323879,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3751},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14324023,"byte_end":14324033,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Sink as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":46},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14324006,"byte_end":14324015,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324947,"byte_end":14324954,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"name":"timeout","qualname":"::io::timeout::timeout","value":"async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where F: Future<Output =\nio::Result<T>>","parent":null,"children":[],"decl_id":null,"docs":" Awaits an I/O future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits an I/O future or times out after a duration of time.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324334,"byte_end":14324397,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324398,"byte_end":14324401,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If you want to await a non I/O future consider using","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324402,"byte_end":14324458,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ [`future::timeout`](../future/fn.timeout.html) instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324459,"byte_end":14324518,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324519,"byte_end":14324522,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324523,"byte_end":14324537,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324538,"byte_end":14324541,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324542,"byte_end":14324555,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324556,"byte_end":14324630,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324631,"byte_end":14324636,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324637,"byte_end":14324665,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324666,"byte_end":14324669,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324670,"byte_end":14324692,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324693,"byte_end":14324696,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ io::timeout(Duration::from_secs(5), async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324697,"byte_end":14324744,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/     let stdin = io::stdin();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324745,"byte_end":14324777,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     let mut line = String::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324778,"byte_end":14324815,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     let n = stdin.read_line(&mut line).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324816,"byte_end":14324866,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324867,"byte_end":14324881,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324882,"byte_end":14324888,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324889,"byte_end":14324901,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324902,"byte_end":14324907,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324908,"byte_end":14324925,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14324926,"byte_end":14324933,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326901,"byte_end":14326907,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stderr","qualname":"::io::stderr::stderr","value":"fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard error of the current process.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326132,"byte_end":14326205,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326206,"byte_end":14326209,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stderr`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326210,"byte_end":14326271,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326272,"byte_end":14326275,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stderr`]: https://doc.rust-lang.org/std/io/fn.stderr.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326276,"byte_end":14326348,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326349,"byte_end":14326352,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326353,"byte_end":14326400,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326401,"byte_end":14326404,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326405,"byte_end":14326496,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326497,"byte_end":14326589,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326590,"byte_end":14326603,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326604,"byte_end":14326607,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326608,"byte_end":14326622,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326623,"byte_end":14326626,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326627,"byte_end":14326640,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326641,"byte_end":14326715,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326716,"byte_end":14326721,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326722,"byte_end":14326744,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326745,"byte_end":14326775,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326776,"byte_end":14326779,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stderr = io::stderr();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326780,"byte_end":14326814,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stderr.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326815,"byte_end":14326861,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326862,"byte_end":14326867,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326868,"byte_end":14326885,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14326886,"byte_end":14326893,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3993},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327537,"byte_end":14327543,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard error of the current process.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327065,"byte_end":14327123,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327124,"byte_end":14327127,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stderr`] function. See its documentation for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327128,"byte_end":14327208,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327209,"byte_end":14327218,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327219,"byte_end":14327222,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327223,"byte_end":14327270,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327271,"byte_end":14327274,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327275,"byte_end":14327366,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327367,"byte_end":14327459,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327460,"byte_end":14327473,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327474,"byte_end":14327477,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stderr`]: fn.stderr.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14327478,"byte_end":14327508,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3886},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14328436,"byte_end":14328446,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Stderr as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14330491,"byte_end":14330501,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Stderr as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14331708,"byte_end":14331718,"line_start":170,"line_end":170,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Stderr as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4030},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14332135,"byte_end":14332148,"line_start":189,"line_end":189,"column_start":12,"column_end":25},"name":"as_raw_handle","qualname":"<Stderr as std::os::windows::io::AsRawHandle>::as_raw_handle","value":"fn as_raw_handle<'_>(&'_ Self) -> RawHandle","parent":{"krate":1,"index":5923},"children":[],"decl_id":{"krate":1,"index":5924},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3927},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333200,"byte_end":14333205,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"stdin","qualname":"::io::stdin::stdin","value":"fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard input of the current process.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332446,"byte_end":14332519,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332520,"byte_end":14332523,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdin`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332524,"byte_end":14332584,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332585,"byte_end":14332588,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdin`]: https://doc.rust-lang.org/std/io/fn.stdin.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332589,"byte_end":14332659,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332660,"byte_end":14332663,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332664,"byte_end":14332711,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332712,"byte_end":14332715,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332716,"byte_end":14332807,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332808,"byte_end":14332899,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332900,"byte_end":14332913,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332914,"byte_end":14332917,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332918,"byte_end":14332932,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332933,"byte_end":14332936,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332937,"byte_end":14332950,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14332951,"byte_end":14333025,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333026,"byte_end":14333031,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333032,"byte_end":14333054,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333055,"byte_end":14333058,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333059,"byte_end":14333087,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ let mut line = String::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333088,"byte_end":14333121,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333122,"byte_end":14333160,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333161,"byte_end":14333166,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333167,"byte_end":14333184,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333185,"byte_end":14333192,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4031},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333856,"byte_end":14333861,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard input of the current process.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333388,"byte_end":14333446,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333447,"byte_end":14333450,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`stdin`] function. See its documentation for","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333451,"byte_end":14333530,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333531,"byte_end":14333540,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333541,"byte_end":14333544,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333545,"byte_end":14333592,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333593,"byte_end":14333596,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333597,"byte_end":14333688,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333689,"byte_end":14333780,"line_start":52,"line_end":52,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333781,"byte_end":14333794,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333795,"byte_end":14333798,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`stdin`]: fn.stdin.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14333799,"byte_end":14333827,"line_start":55,"line_end":55,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3929},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14335182,"byte_end":14335191,"line_start":112,"line_end":112,"column_start":18,"column_end":27},"name":"read_line","qualname":"<Stdin>::read_line","value":"async fn read_line<'_, '_>(&'_ Self, &'_ mut String) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a line of input into the specified buffer.","sig":null,"attributes":[{"value":"/ Reads a line of input into the specified buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14334777,"byte_end":14334829,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14334834,"byte_end":14334837,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14334842,"byte_end":14334856,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14334861,"byte_end":14334864,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14334869,"byte_end":14334882,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14334887,"byte_end":14334961,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14334966,"byte_end":14334971,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14334976,"byte_end":14334998,"line_start":104,"line_end":104,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14335003,"byte_end":14335006,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14335011,"byte_end":14335039,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/ let mut line = String::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14335044,"byte_end":14335077,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14335082,"byte_end":14335120,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14335125,"byte_end":14335130,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14335135,"byte_end":14335152,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14335157,"byte_end":14335164,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14336801,"byte_end":14336810,"line_start":151,"line_end":151,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Stdin as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4069},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14339154,"byte_end":14339167,"line_start":215,"line_end":215,"column_start":12,"column_end":25},"name":"as_raw_handle","qualname":"<Stdin as std::os::windows::io::AsRawHandle>::as_raw_handle","value":"fn as_raw_handle<'_>(&'_ Self) -> RawHandle","parent":{"krate":1,"index":5923},"children":[],"decl_id":{"krate":1,"index":5924},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3950},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdio.rs","byte_start":14339488,"byte_end":14339494,"line_start":10,"line_end":10,"column_start":14,"column_end":20},"name":"_print","qualname":"::io::stdio::_print","value":"async fn _print<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3953},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdio.rs","byte_start":14339665,"byte_end":14339672,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"name":"_eprint","qualname":"::io::stdio::_eprint","value":"async fn _eprint<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3986},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340745,"byte_end":14340751,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stdout","qualname":"::io::stdout::stdout","value":"fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard output of the current process.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14339975,"byte_end":14340049,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340050,"byte_end":14340053,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdout`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340054,"byte_end":14340115,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340116,"byte_end":14340119,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdout`]: https://doc.rust-lang.org/std/io/fn.stdout.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340120,"byte_end":14340192,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340193,"byte_end":14340196,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340197,"byte_end":14340244,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340245,"byte_end":14340248,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340249,"byte_end":14340340,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340341,"byte_end":14340433,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340434,"byte_end":14340447,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340448,"byte_end":14340451,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340452,"byte_end":14340466,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340467,"byte_end":14340470,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340471,"byte_end":14340484,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340485,"byte_end":14340559,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340560,"byte_end":14340565,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340566,"byte_end":14340588,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340589,"byte_end":14340619,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340620,"byte_end":14340623,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stdout = io::stdout();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340624,"byte_end":14340658,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stdout.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340659,"byte_end":14340705,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340706,"byte_end":14340711,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340712,"byte_end":14340729,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340730,"byte_end":14340737,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4070},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14341382,"byte_end":14341388,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard output of the current process.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340909,"byte_end":14340968,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340969,"byte_end":14340972,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stdout`] function. See its documentation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14340973,"byte_end":14341049,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ for more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14341050,"byte_end":14341063,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14341064,"byte_end":14341067,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14341068,"byte_end":14341115,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14341116,"byte_end":14341119,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14341120,"byte_end":14341211,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14341212,"byte_end":14341304,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14341305,"byte_end":14341318,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14341319,"byte_end":14341322,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stdout`]: fn.stdout.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14341323,"byte_end":14341353,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3988},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14342281,"byte_end":14342291,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Stdout as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3990},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14344336,"byte_end":14344346,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Stdout as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3992},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14345553,"byte_end":14345563,"line_start":170,"line_end":170,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Stdout as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4107},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14345980,"byte_end":14345993,"line_start":189,"line_end":189,"column_start":12,"column_end":25},"name":"as_raw_handle","qualname":"<Stdout as std::os::windows::io::AsRawHandle>::as_raw_handle","value":"fn as_raw_handle<'_>(&'_ Self) -> RawHandle","parent":{"krate":1,"index":5923},"children":[],"decl_id":{"krate":1,"index":5924},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2459},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\mod.rs","parent":null,"children":[{"krate":0,"index":4108}],"decl_id":null,"docs":" OS-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ OS-specific extensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\mod.rs","byte_start":14218038,"byte_end":14218065,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":4108},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::os::windows","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\mod.rs","parent":null,"children":[{"krate":0,"index":4109}],"decl_id":null,"docs":" Platform-specific extensions for Windows.\n","sig":null,"attributes":[{"value":"cfg(any(windows, feature = \"docs\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":15695,"byte_end":15733,"line_start":170,"line_end":170,"column_start":13,"column_end":51}},{"value":"/ Platform-specific extensions for Windows.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\mod.rs","byte_start":14346081,"byte_end":14346126,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":4109},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::os::windows::io","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","parent":null,"children":[{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4114},{"krate":0,"index":4117},{"krate":0,"index":4120},{"krate":0,"index":4123},{"krate":0,"index":4126},{"krate":0,"index":4129},{"krate":0,"index":4132}],"decl_id":null,"docs":" Windows-specific I/O extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Windows-specific I/O extensions.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14346320,"byte_end":14346356,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":2460},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":4135},{"krate":0,"index":4138},{"krate":0,"index":4141},{"krate":0,"index":4144},{"krate":0,"index":4147},{"krate":0,"index":4150},{"krate":0,"index":4153},{"krate":0,"index":4156},{"krate":0,"index":4159},{"krate":0,"index":4162},{"krate":0,"index":4165},{"krate":0,"index":4168},{"krate":0,"index":4171}],"decl_id":null,"docs":" The async prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async prelude.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218139,"byte_end":14218161,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218162,"byte_end":14218165,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The prelude re-exports most commonly used traits and macros from this crate.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218166,"byte_end":14218246,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218247,"byte_end":14218250,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218251,"byte_end":14218265,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218266,"byte_end":14218269,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Import the prelude with:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218270,"byte_end":14218298,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218299,"byte_end":14218302,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218303,"byte_end":14218310,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218311,"byte_end":14218341,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218342,"byte_end":14218372,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":14218373,"byte_end":14218380,"line_start":12,"line_end":12,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2461},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2466},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2473},{"krate":0,"index":2476},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2483},{"krate":0,"index":2486},{"krate":0,"index":2489}],"decl_id":null,"docs":" Synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Synchronization primitives.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219368,"byte_end":14219399,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219400,"byte_end":14219403,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::sync`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219404,"byte_end":14219457,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219458,"byte_end":14219461,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::sync`]: https://doc.rust-lang.org/std/sync/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219462,"byte_end":14219526,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219527,"byte_end":14219530,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## The need for synchronization","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219531,"byte_end":14219566,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219567,"byte_end":14219570,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ async-std's sync primitives are scheduler-aware, making it possible to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219571,"byte_end":14219645,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ `.await` their operations - for example the locking of a [`Mutex`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219646,"byte_end":14219717,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219718,"byte_end":14219721,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Conceptually, a Rust program is a series of operations which will","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219722,"byte_end":14219791,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ be executed on a computer. The timeline of events happening in the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219792,"byte_end":14219862,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ program is consistent with the order of the operations in the code.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219863,"byte_end":14219934,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219935,"byte_end":14219938,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consider the following code, operating on some global static variables:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14219939,"byte_end":14220014,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220015,"byte_end":14220018,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220019,"byte_end":14220026,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ static mut A: u32 = 0;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220027,"byte_end":14220053,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/ static mut B: u32 = 0;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220054,"byte_end":14220080,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ static mut C: u32 = 0;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220081,"byte_end":14220107,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220108,"byte_end":14220111,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220112,"byte_end":14220127,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220128,"byte_end":14220144,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/         A = 3;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220145,"byte_end":14220163,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/         B = 4;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220164,"byte_end":14220182,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/         A = A + B;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220183,"byte_end":14220205,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/         C = B;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220206,"byte_end":14220224,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/         println!(\"{} {} {}\", A, B, C);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220225,"byte_end":14220267,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/         C = A;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220268,"byte_end":14220286,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220287,"byte_end":14220296,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220297,"byte_end":14220302,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220303,"byte_end":14220310,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220311,"byte_end":14220314,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ It appears as if some variables stored in memory are changed, an addition","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220315,"byte_end":14220392,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ is performed, result is stored in `A` and the variable `C` is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220393,"byte_end":14220458,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ modified twice.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220459,"byte_end":14220478,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220479,"byte_end":14220482,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When only a single thread is involved, the results are as expected:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220483,"byte_end":14220554,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ the line `7 4 4` gets printed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220555,"byte_end":14220589,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220590,"byte_end":14220593,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ As for what happens behind the scenes, when optimizations are enabled the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220594,"byte_end":14220671,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ final generated machine code might look very different from the code:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220672,"byte_end":14220745,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220746,"byte_end":14220749,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - The first store to `C` might be moved before the store to `A` or `B`,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220750,"byte_end":14220825,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/   _as if_ we had written `C = 4; A = 3; B = 4`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220826,"byte_end":14220877,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220878,"byte_end":14220881,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - Assignment of `A + B` to `A` might be removed, since the sum can be stored","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220882,"byte_end":14220962,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/   in a temporary location until it gets printed, with the global variable","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14220963,"byte_end":14221040,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/   never getting updated.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221041,"byte_end":14221069,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221070,"byte_end":14221073,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - The final result could be determined just by looking at the code","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221074,"byte_end":14221144,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/   at compile time, so [constant folding] might turn the whole","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221145,"byte_end":14221210,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/   block into a simple `println!(\"7 4 4\")`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221211,"byte_end":14221257,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221258,"byte_end":14221261,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The compiler is allowed to perform any combination of these","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221262,"byte_end":14221325,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/ optimizations, as long as the final optimized code, when executed,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221326,"byte_end":14221396,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ produces the same results as the one without optimizations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221397,"byte_end":14221460,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221461,"byte_end":14221464,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Due to the [concurrency] involved in modern computers, assumptions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221465,"byte_end":14221535,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/ about the program's execution order are often wrong. Access to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221536,"byte_end":14221602,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/ global variables can lead to nondeterministic results, **even if**","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221603,"byte_end":14221673,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ compiler optimizations are disabled, and it is **still possible**","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221674,"byte_end":14221743,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/ to introduce synchronization bugs.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221744,"byte_end":14221782,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221783,"byte_end":14221786,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Note that thanks to Rust's safety guarantees, accessing global (static)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221787,"byte_end":14221862,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ variables requires `unsafe` code, assuming we don't use any of the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221863,"byte_end":14221933,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ synchronization primitives in this module.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221934,"byte_end":14221980,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221981,"byte_end":14221984,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [constant folding]: https://en.wikipedia.org/wiki/Constant_folding","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14221985,"byte_end":14222055,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ [concurrency]: https://en.wikipedia.org/wiki/Concurrency_(computer_science)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222056,"byte_end":14222135,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222136,"byte_end":14222139,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Out-of-order execution","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222140,"byte_end":14222169,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222170,"byte_end":14222173,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Instructions can execute in a different order from the one we define, due to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222174,"byte_end":14222254,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"/ various reasons:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222255,"byte_end":14222275,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222276,"byte_end":14222279,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - The **compiler** reordering instructions: If the compiler can issue an","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222280,"byte_end":14222356,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/   instruction at an earlier point, it will try to do so. For example, it","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222357,"byte_end":14222433,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/   might hoist memory loads at the top of a code block, so that the CPU can","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222434,"byte_end":14222512,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/   start [prefetching] the values from memory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222513,"byte_end":14222562,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222563,"byte_end":14222566,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/   In single-threaded scenarios, this can cause issues when writing","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222567,"byte_end":14222637,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"/   signal handlers or certain kinds of low-level code.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222638,"byte_end":14222695,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/   Use [compiler fences] to prevent this reordering.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222696,"byte_end":14222751,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222752,"byte_end":14222755,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ - A **single processor** executing instructions [out-of-order]:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222756,"byte_end":14222823,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/   Modern CPUs are capable of [superscalar] execution,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222824,"byte_end":14222881,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/   i.e., multiple instructions might be executing at the same time,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222882,"byte_end":14222952,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/   even though the machine code describes a sequential process.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14222953,"byte_end":14223019,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223020,"byte_end":14223023,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/   This kind of reordering is handled transparently by the CPU.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223024,"byte_end":14223090,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223091,"byte_end":14223094,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ - A **multiprocessor** system executing multiple hardware threads","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223095,"byte_end":14223164,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"/   at the same time: In multi-threaded scenarios, you can use two","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223165,"byte_end":14223233,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"/   kinds of primitives to deal with synchronization:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223234,"byte_end":14223289,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/   - [memory fences] to ensure memory accesses are made visible to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223290,"byte_end":14223359,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"/   other CPUs in the right order.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223360,"byte_end":14223396,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"/   - [atomic operations] to ensure simultaneous access to the same","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223397,"byte_end":14223466,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/   memory location doesn't lead to undefined behavior.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223467,"byte_end":14223524,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223525,"byte_end":14223528,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [prefetching]: https://en.wikipedia.org/wiki/Cache_prefetching","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223529,"byte_end":14223595,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"/ [compiler fences]: https://doc.rust-lang.org/std/sync/atomic/fn.compiler_fence.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223596,"byte_end":14223683,"line_start":103,"line_end":103,"column_start":1,"column_end":88}},{"value":"/ [out-of-order]: https://en.wikipedia.org/wiki/Out-of-order_execution","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223684,"byte_end":14223756,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/ [superscalar]: https://en.wikipedia.org/wiki/Superscalar_processor","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223757,"byte_end":14223827,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ [memory fences]: https://doc.rust-lang.org/std/sync/atomic/fn.fence.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223828,"byte_end":14223904,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ [atomic operations]: https://doc.rust-lang.org/std/sync/atomic/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223905,"byte_end":14223982,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223983,"byte_end":14223986,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## Higher-level synchronization objects","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14223987,"byte_end":14224030,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224031,"byte_end":14224034,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Most of the low-level synchronization primitives are quite error-prone and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224035,"byte_end":14224113,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ inconvenient to use, which is why async-std also exposes some","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224114,"byte_end":14224179,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"/ higher-level synchronization objects.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224180,"byte_end":14224221,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224222,"byte_end":14224225,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ These abstractions can be built out of lower-level primitives.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224226,"byte_end":14224292,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ For efficiency, the sync objects in async-std are usually","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224293,"byte_end":14224354,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ implemented with help from the scheduler, which is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224355,"byte_end":14224409,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/ able to reschedule the tasks while they are blocked on acquiring","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224410,"byte_end":14224478,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ a lock.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224479,"byte_end":14224490,"line_start":119,"line_end":119,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224491,"byte_end":14224494,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The following is an overview of the available synchronization","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224495,"byte_end":14224560,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"/ objects:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224561,"byte_end":14224573,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224574,"byte_end":14224577,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ - [`Arc`]: Atomically Reference-Counted pointer, which can be used","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224578,"byte_end":14224648,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/   in multithreaded environments to prolong the lifetime of some","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224649,"byte_end":14224716,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/   data until all the threads have finished using it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224717,"byte_end":14224773,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224774,"byte_end":14224777,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ - [`Barrier`]: Ensures multiple threads will wait for each other","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224778,"byte_end":14224846,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/   to reach a point in the program, before continuing execution all","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224847,"byte_end":14224917,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/   together.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224918,"byte_end":14224933,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224934,"byte_end":14224937,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ - [`Mutex`]: Mutual exclusion mechanism, which ensures that at","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14224938,"byte_end":14225004,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"/   most one task at a time is able to access some data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225005,"byte_end":14225063,"line_start":133,"line_end":133,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225064,"byte_end":14225067,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ - [`RwLock`]: Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225068,"byte_end":14225136,"line_start":135,"line_end":135,"column_start":1,"column_end":69}},{"value":"/   multiple readers at the same time, while allowing only one","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225137,"byte_end":14225201,"line_start":136,"line_end":136,"column_start":1,"column_end":65}},{"value":"/   writer at a time. In some cases, this can be more efficient than","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225202,"byte_end":14225272,"line_start":137,"line_end":137,"column_start":1,"column_end":71}},{"value":"/   a mutex.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225273,"byte_end":14225287,"line_start":138,"line_end":138,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225288,"byte_end":14225291,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ If you're looking for channels, check out","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225292,"byte_end":14225337,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ [`async_std::channel`][crate::channel].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225338,"byte_end":14225381,"line_start":141,"line_end":141,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225382,"byte_end":14225385,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: struct.Arc.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225386,"byte_end":14225414,"line_start":143,"line_end":143,"column_start":1,"column_end":29}},{"value":"/ [`Barrier`]: struct.Barrier.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225415,"byte_end":14225451,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/ [`channel`]: fn.channel.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225452,"byte_end":14225484,"line_start":145,"line_end":145,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: struct.Mutex.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225485,"byte_end":14225517,"line_start":146,"line_end":146,"column_start":1,"column_end":33}},{"value":"/ [`RwLock`]: struct.RwLock.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225518,"byte_end":14225552,"line_start":147,"line_end":147,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225553,"byte_end":14225556,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225557,"byte_end":14225571,"line_start":149,"line_end":149,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225572,"byte_end":14225575,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Spawn a task that updates an integer protected by a mutex:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225576,"byte_end":14225638,"line_start":151,"line_end":151,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225639,"byte_end":14225642,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225643,"byte_end":14225650,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225651,"byte_end":14225690,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225691,"byte_end":14225696,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225697,"byte_end":14225735,"line_start":156,"line_end":156,"column_start":1,"column_end":39}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225736,"byte_end":14225760,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225761,"byte_end":14225764,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let m1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225765,"byte_end":14225802,"line_start":159,"line_end":159,"column_start":1,"column_end":38}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225803,"byte_end":14225827,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225828,"byte_end":14225831,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225832,"byte_end":14225860,"line_start":162,"line_end":162,"column_start":1,"column_end":29}},{"value":"/     *m2.lock().await = 1;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225861,"byte_end":14225890,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/ })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225891,"byte_end":14225897,"line_start":164,"line_end":164,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225898,"byte_end":14225909,"line_start":165,"line_end":165,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225910,"byte_end":14225913,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(*m1.lock().await, 1);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225914,"byte_end":14225950,"line_start":167,"line_end":167,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225951,"byte_end":14225956,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225957,"byte_end":14225965,"line_start":169,"line_end":169,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225966,"byte_end":14225973,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":14225975,"byte_end":14226015,"line_start":172,"line_end":172,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":2492},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::channel","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","parent":null,"children":[{"krate":0,"index":2493}],"decl_id":null,"docs":" Channels","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Channels","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":14226437,"byte_end":14226449,"line_start":1,"line_end":1,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":14226450,"byte_end":14226453,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Multi-producer, multi-consumer queues, used for message-based","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":14226454,"byte_end":14226519,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ communication. Can provide a lightweight inter-task synchronisation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":14226520,"byte_end":14226591,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ mechanism, at the cost of some extra memory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":14226592,"byte_end":14226640,"line_start":5,"line_end":5,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":4174},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","parent":null,"children":[{"krate":0,"index":4175},{"krate":0,"index":4178},{"krate":0,"index":4181},{"krate":0,"index":4184},{"krate":0,"index":4187},{"krate":0,"index":4190},{"krate":0,"index":4193},{"krate":0,"index":4196},{"krate":0,"index":4199},{"krate":0,"index":4202},{"krate":0,"index":4205},{"krate":0,"index":4208},{"krate":0,"index":4211},{"krate":0,"index":4214},{"krate":0,"index":4217},{"krate":0,"index":4220},{"krate":0,"index":4223},{"krate":0,"index":4226},{"krate":0,"index":4229},{"krate":0,"index":4232},{"krate":0,"index":4235},{"krate":0,"index":4238},{"krate":0,"index":4241},{"krate":0,"index":4244},{"krate":0,"index":4247},{"krate":0,"index":4250},{"krate":0,"index":4273},{"krate":0,"index":4293},{"krate":0,"index":4312},{"krate":0,"index":4331},{"krate":0,"index":4352},{"krate":0,"index":4397},{"krate":0,"index":4615},{"krate":0,"index":4616},{"krate":0,"index":4636},{"krate":0,"index":4651},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4702},{"krate":0,"index":4750},{"krate":0,"index":4773},{"krate":0,"index":4792},{"krate":0,"index":4811},{"krate":0,"index":4830},{"krate":0,"index":4849},{"krate":0,"index":4869},{"krate":0,"index":4887},{"krate":0,"index":4905}],"decl_id":null,"docs":" Filesystem manipulation operations.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16847,"byte_end":16874,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11104,"byte_end":11138,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/ Filesystem manipulation operations.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349481,"byte_end":14349520,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349521,"byte_end":14349524,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::fs`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349525,"byte_end":14349576,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349577,"byte_end":14349580,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs`]: ../os/unix/fs/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349581,"byte_end":14349627,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/ [`os::windows::fs`]: ../os/windows/fs/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349628,"byte_end":14349680,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/ [`std::fs`]: https://doc.rust-lang.org/std/fs/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349681,"byte_end":14349741,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349742,"byte_end":14349745,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349746,"byte_end":14349780,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349781,"byte_end":14349784,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * Unix: use the [`os::unix::fs`] module.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349785,"byte_end":14349829,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ * Windows: use the [`os::windows::fs`] module.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349830,"byte_end":14349880,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349881,"byte_end":14349884,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349885,"byte_end":14349899,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349900,"byte_end":14349903,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349904,"byte_end":14349953,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349954,"byte_end":14349957,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349958,"byte_end":14349971,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14349972,"byte_end":14350046,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350047,"byte_end":14350052,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350053,"byte_end":14350081,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350082,"byte_end":14350112,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350113,"byte_end":14350116,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350117,"byte_end":14350165,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350166,"byte_end":14350210,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350211,"byte_end":14350216,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350217,"byte_end":14350234,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14350235,"byte_end":14350242,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4267},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352304,"byte_end":14352316,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"async fn canonicalize<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351502,"byte_end":14351543,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351544,"byte_end":14351547,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and symbolic","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351548,"byte_end":14351646,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ links resolved.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351647,"byte_end":14351666,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351667,"byte_end":14351670,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::canonicalize`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351671,"byte_end":14351738,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351739,"byte_end":14351742,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::canonicalize`]: https://doc.rust-lang.org/std/fs/fn.canonicalize.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351743,"byte_end":14351827,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351828,"byte_end":14351831,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351832,"byte_end":14351844,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351845,"byte_end":14351848,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351849,"byte_end":14351907,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351908,"byte_end":14351911,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351912,"byte_end":14351973,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * A non-final component in `path` is not a directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14351974,"byte_end":14352031,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352032,"byte_end":14352068,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352069,"byte_end":14352072,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352073,"byte_end":14352087,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352088,"byte_end":14352091,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352092,"byte_end":14352105,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352106,"byte_end":14352180,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352181,"byte_end":14352186,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352187,"byte_end":14352209,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352210,"byte_end":14352213,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let path = fs::canonicalize(\".\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352214,"byte_end":14352258,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352259,"byte_end":14352264,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352265,"byte_end":14352282,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14352283,"byte_end":14352290,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4286},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353906,"byte_end":14353910,"line_start":42,"line_end":42,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"async fn copy<P, Q>(P, Q) -> /*impl Trait*/ where P: AsRef<Path>,\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents and permissions of a file to a new location.","sig":null,"attributes":[{"value":"/ Copies the contents and permissions of a file to a new location.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14352708,"byte_end":14352776,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14352777,"byte_end":14352780,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned and equals the length of the `to` file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14352781,"byte_end":14352880,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ after this operation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14352881,"byte_end":14352906,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14352907,"byte_end":14352910,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The old contents of `to` will be overwritten. If `from` and `to` both point to the same file,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14352911,"byte_end":14353008,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ then the file will likely get truncated as a result of this operation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353009,"byte_end":14353083,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353084,"byte_end":14353087,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you're working with open [`File`]s and want to copy contents through those types, use the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353088,"byte_end":14353184,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ [`io::copy`] function.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353185,"byte_end":14353211,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353212,"byte_end":14353215,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::copy`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353216,"byte_end":14353275,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353276,"byte_end":14353279,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353280,"byte_end":14353310,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ [`io::copy`]: ../io/fn.copy.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353311,"byte_end":14353347,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ [`std::fs::copy`]: https://doc.rust-lang.org/std/fs/fn.copy.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353348,"byte_end":14353416,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353417,"byte_end":14353420,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353421,"byte_end":14353433,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353434,"byte_end":14353437,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353438,"byte_end":14353496,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353497,"byte_end":14353500,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353501,"byte_end":14353549,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read `from` or write `to`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353550,"byte_end":14353623,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353624,"byte_end":14353660,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353661,"byte_end":14353664,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353665,"byte_end":14353679,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353680,"byte_end":14353683,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353684,"byte_end":14353697,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353698,"byte_end":14353772,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353773,"byte_end":14353778,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353779,"byte_end":14353801,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353802,"byte_end":14353805,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let num_bytes = fs::copy(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353806,"byte_end":14353860,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353861,"byte_end":14353866,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353867,"byte_end":14353884,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14353885,"byte_end":14353892,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4306},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355305,"byte_end":14355315,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"async fn create_dir<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory.","sig":null,"attributes":[{"value":"/ Creates a new directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354340,"byte_end":14354368,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354369,"byte_end":14354372,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that this function will only create the final directory in `path`. If you want to create","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354373,"byte_end":14354470,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ all of its missing parent directories too, use the [`create_dir_all`] function instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354471,"byte_end":14354562,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354563,"byte_end":14354566,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354567,"byte_end":14354632,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354633,"byte_end":14354636,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: fn.create_dir_all.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354637,"byte_end":14354683,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::create_dir`]: https://doc.rust-lang.org/std/fs/fn.create_dir.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354684,"byte_end":14354764,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354765,"byte_end":14354768,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354769,"byte_end":14354781,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354782,"byte_end":14354785,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354786,"byte_end":14354844,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354845,"byte_end":14354848,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354849,"byte_end":14354910,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * A parent directory in `path` does not exist.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354911,"byte_end":14354961,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ * The current process lacks permissions to create the directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14354962,"byte_end":14355030,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355031,"byte_end":14355067,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355068,"byte_end":14355071,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355072,"byte_end":14355086,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355087,"byte_end":14355090,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355091,"byte_end":14355104,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355105,"byte_end":14355179,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355180,"byte_end":14355185,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355186,"byte_end":14355208,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355209,"byte_end":14355212,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355213,"byte_end":14355259,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355260,"byte_end":14355265,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355266,"byte_end":14355283,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14355284,"byte_end":14355291,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4325},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356430,"byte_end":14356444,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"async fn create_dir_all<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory and all of its parents if they are missing.","sig":null,"attributes":[{"value":"/ Creates a new directory and all of its parents if they are missing.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14355675,"byte_end":14355746,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14355747,"byte_end":14355750,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir_all`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14355751,"byte_end":14355820,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14355821,"byte_end":14355824,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::create_dir_all`]: https://doc.rust-lang.org/std/fs/fn.create_dir_all.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14355825,"byte_end":14355913,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14355914,"byte_end":14355917,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14355918,"byte_end":14355930,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14355931,"byte_end":14355934,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14355935,"byte_end":14355993,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14355994,"byte_end":14355997,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14355998,"byte_end":14356059,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356060,"byte_end":14356151,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356152,"byte_end":14356188,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356189,"byte_end":14356192,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356193,"byte_end":14356207,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356208,"byte_end":14356211,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356212,"byte_end":14356225,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356226,"byte_end":14356300,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356301,"byte_end":14356306,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356307,"byte_end":14356329,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356330,"byte_end":14356333,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir_all(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356334,"byte_end":14356384,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356385,"byte_end":14356390,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356391,"byte_end":14356408,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14356409,"byte_end":14356416,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5714},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357226,"byte_end":14357236,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":5715}],"decl_id":null,"docs":" A builder for creating directories with configurable options.","sig":null,"attributes":[{"value":"/ A builder for creating directories with configurable options.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14356807,"byte_end":14356872,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14356873,"byte_end":14356876,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For Unix-specific options, import the [`os::unix::fs::DirBuilderExt`] trait.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14356877,"byte_end":14356957,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14356958,"byte_end":14356961,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirBuilder`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14356962,"byte_end":14357023,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357024,"byte_end":14357027,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs::DirBuilderExt`]: ../os/unix/fs/trait.DirBuilderExt.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357028,"byte_end":14357103,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ [`std::fs::DirBuilder`]: https://doc.rust-lang.org/std/fs/struct.DirBuilder.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357104,"byte_end":14357188,"line_start":14,"line_end":14,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4345},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357764,"byte_end":14357767,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"fn new() -> DirBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357451,"byte_end":14357486,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357491,"byte_end":14357494,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The [`recursive`] option is initially set to `false`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357499,"byte_end":14357556,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357561,"byte_end":14357564,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`recursive`]: #method.recursive","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357569,"byte_end":14357605,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357610,"byte_end":14357613,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357618,"byte_end":14357632,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357637,"byte_end":14357640,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357645,"byte_end":14357652,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357657,"byte_end":14357691,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357696,"byte_end":14357699,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357704,"byte_end":14357740,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357745,"byte_end":14357752,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4346},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358515,"byte_end":14358524,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"fn recursive<'_>(&'_ mut Self, bool) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for recursive mode.","sig":null,"attributes":[{"value":"/ Sets the option for recursive mode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358017,"byte_end":14358056,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358061,"byte_end":14358064,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means all parent directories should be created recursively","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358069,"byte_end":14358163,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ if they don't exist. Parents are created with the same permissions as the final directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358168,"byte_end":14358262,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358267,"byte_end":14358270,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option is initially set to `false`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358275,"byte_end":14358319,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358324,"byte_end":14358327,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358332,"byte_end":14358346,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358351,"byte_end":14358354,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358359,"byte_end":14358366,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358371,"byte_end":14358405,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358410,"byte_end":14358413,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358418,"byte_end":14358458,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358463,"byte_end":14358491,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358496,"byte_end":14358503,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4347},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359456,"byte_end":14359462,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"create","qualname":"<DirBuilder>::create","value":"fn create<P, '_>(&'_ Self, P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates a directory with the configured options.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358628,"byte_end":14358680,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358685,"byte_end":14358688,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless recursive mode is enabled.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358693,"byte_end":14358788,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358793,"byte_end":14358796,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358801,"byte_end":14358813,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358818,"byte_end":14358821,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358826,"byte_end":14358884,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358889,"byte_end":14358892,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358897,"byte_end":14358958,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14358963,"byte_end":14359054,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359059,"byte_end":14359095,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359100,"byte_end":14359103,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359108,"byte_end":14359122,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359127,"byte_end":14359130,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359135,"byte_end":14359148,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359153,"byte_end":14359227,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359232,"byte_end":14359237,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359242,"byte_end":14359276,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359281,"byte_end":14359284,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ DirBuilder::new()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359289,"byte_end":14359310,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     .recursive(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359315,"byte_end":14359339,"line_start":92,"line_end":92,"column_start":5,"column_end":29}},{"value":"/     .create(\"./some/directory\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359344,"byte_end":14359379,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359384,"byte_end":14359400,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359405,"byte_end":14359410,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359415,"byte_end":14359432,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14359437,"byte_end":14359444,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4378},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360628,"byte_end":14360636,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::dir_entry::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" An entry in a directory.","sig":null,"attributes":[{"value":"/ An entry in a directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360332,"byte_end":14360360,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360361,"byte_end":14360364,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A stream of entries in a directory is returned by [`read_dir`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360365,"byte_end":14360432,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360433,"byte_end":14360436,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirEntry`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360437,"byte_end":14360496,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360497,"byte_end":14360500,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360501,"byte_end":14360535,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::DirEntry`]: https://doc.rust-lang.org/std/fs/struct.DirEntry.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360536,"byte_end":14360616,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4383},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361527,"byte_end":14361531,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"fn path<'_>(&'_ Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to this entry.","sig":null,"attributes":[{"value":"/ Returns the full path to this entry.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360853,"byte_end":14360893,"line_start":26,"line_end":26,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360898,"byte_end":14360901,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path passed to [`read_dir`] with the name","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360906,"byte_end":14361000,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ of this entry.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361005,"byte_end":14361023,"line_start":29,"line_end":29,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361028,"byte_end":14361031,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361036,"byte_end":14361070,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361075,"byte_end":14361078,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361083,"byte_end":14361097,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361102,"byte_end":14361105,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361110,"byte_end":14361123,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361128,"byte_end":14361202,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361207,"byte_end":14361212,"line_start":37,"line_end":37,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361217,"byte_end":14361239,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361244,"byte_end":14361274,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361279,"byte_end":14361282,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361287,"byte_end":14361330,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361335,"byte_end":14361338,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361343,"byte_end":14361387,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361392,"byte_end":14361417,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361422,"byte_end":14361461,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361466,"byte_end":14361471,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361476,"byte_end":14361481,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361486,"byte_end":14361503,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361508,"byte_end":14361515,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4384},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362662,"byte_end":14362670,"line_start":88,"line_end":88,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata for this entry.","sig":null,"attributes":[{"value":"/ Reads the metadata for this entry.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361592,"byte_end":14361630,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361635,"byte_end":14361638,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to read the metadata.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361643,"byte_end":14361711,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361716,"byte_end":14361719,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361724,"byte_end":14361815,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361820,"byte_end":14361832,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361837,"byte_end":14361840,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361845,"byte_end":14361895,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361900,"byte_end":14361903,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361908,"byte_end":14361920,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361925,"byte_end":14361928,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361933,"byte_end":14361991,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14361996,"byte_end":14361999,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362004,"byte_end":14362077,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read the metadata.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362082,"byte_end":14362147,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362152,"byte_end":14362188,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362193,"byte_end":14362196,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362201,"byte_end":14362215,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362220,"byte_end":14362223,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362228,"byte_end":14362241,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362246,"byte_end":14362320,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362325,"byte_end":14362330,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362335,"byte_end":14362357,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362362,"byte_end":14362392,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362397,"byte_end":14362400,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362405,"byte_end":14362448,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362453,"byte_end":14362456,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362461,"byte_end":14362505,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362510,"byte_end":14362535,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.metadata().await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362540,"byte_end":14362590,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362595,"byte_end":14362600,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362605,"byte_end":14362610,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362615,"byte_end":14362632,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362637,"byte_end":14362644,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4388},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363863,"byte_end":14363872,"line_start":126,"line_end":126,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file type for this entry.","sig":null,"attributes":[{"value":"/ Reads the file type for this entry.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362806,"byte_end":14362845,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362850,"byte_end":14362853,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symbolic links if this entry points at one.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362858,"byte_end":14362937,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362942,"byte_end":14362945,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata with following symbolic links, use [`metadata`] instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14362950,"byte_end":14363039,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363044,"byte_end":14363047,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363052,"byte_end":14363086,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363091,"byte_end":14363094,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363099,"byte_end":14363111,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363116,"byte_end":14363119,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363124,"byte_end":14363182,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363187,"byte_end":14363190,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363195,"byte_end":14363268,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read this entry's metadata.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363273,"byte_end":14363347,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363352,"byte_end":14363388,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363393,"byte_end":14363396,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363401,"byte_end":14363415,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363420,"byte_end":14363423,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363428,"byte_end":14363441,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363446,"byte_end":14363520,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363525,"byte_end":14363530,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363535,"byte_end":14363557,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363562,"byte_end":14363592,"line_start":115,"line_end":115,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363597,"byte_end":14363600,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363605,"byte_end":14363648,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363653,"byte_end":14363656,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363661,"byte_end":14363705,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363710,"byte_end":14363735,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.file_type().await?);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363740,"byte_end":14363791,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363796,"byte_end":14363801,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363806,"byte_end":14363811,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363816,"byte_end":14363833,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14363838,"byte_end":14363845,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4392},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364552,"byte_end":14364561,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"fn file_name<'_>(&'_ Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare name of this entry without the leading path.","sig":null,"attributes":[{"value":"/ Returns the bare name of this entry without the leading path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364009,"byte_end":14364074,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364079,"byte_end":14364082,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364087,"byte_end":14364101,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364106,"byte_end":14364109,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364114,"byte_end":14364127,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364132,"byte_end":14364206,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364211,"byte_end":14364216,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364221,"byte_end":14364243,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364248,"byte_end":14364278,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364283,"byte_end":14364286,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364291,"byte_end":14364334,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364339,"byte_end":14364342,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364347,"byte_end":14364391,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364396,"byte_end":14364421,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364426,"byte_end":14364486,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364491,"byte_end":14364496,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364501,"byte_end":14364506,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364511,"byte_end":14364528,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364533,"byte_end":14364540,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4394},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364657,"byte_end":14364660,"line_start":156,"line_end":156,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DirEntry as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4396},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364818,"byte_end":14364823,"line_start":162,"line_end":162,"column_start":8,"column_end":13},"name":"clone","qualname":"<DirEntry as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2887},"children":[],"decl_id":{"krate":2,"index":2888},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5720},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366821,"byte_end":14366825,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":5721},{"krate":0,"index":5722}],"decl_id":null,"docs":" An open file on the filesystem.","sig":null,"attributes":[{"value":"/ An open file on the filesystem.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14365529,"byte_end":14365564,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14365565,"byte_end":14365568,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Depending on what options the file was opened with, this type can be used for reading and/or","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14365569,"byte_end":14365665,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ writing.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14365666,"byte_end":14365678,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14365679,"byte_end":14365682,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they get dropped and any errors detected on closing are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14365683,"byte_end":14365778,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ ignored. Use the [`sync_all`] method before dropping a file if such errors need to be handled.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14365779,"byte_end":14365877,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14365878,"byte_end":14365881,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::File`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14365882,"byte_end":14365937,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14365938,"byte_end":14365941,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14365942,"byte_end":14365976,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::File`]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14365977,"byte_end":14366049,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366050,"byte_end":14366053,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366054,"byte_end":14366068,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366069,"byte_end":14366072,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366073,"byte_end":14366122,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366123,"byte_end":14366126,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366127,"byte_end":14366140,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366141,"byte_end":14366215,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366216,"byte_end":14366221,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366222,"byte_end":14366250,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366251,"byte_end":14366281,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366282,"byte_end":14366285,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366286,"byte_end":14366334,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366335,"byte_end":14366379,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366380,"byte_end":14366385,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366386,"byte_end":14366403,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366404,"byte_end":14366411,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366412,"byte_end":14366415,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a vector of bytes:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366416,"byte_end":14366471,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366472,"byte_end":14366475,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366476,"byte_end":14366489,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366490,"byte_end":14366564,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366565,"byte_end":14366570,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366571,"byte_end":14366599,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366600,"byte_end":14366630,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366631,"byte_end":14366634,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::open(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366635,"byte_end":14366681,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366682,"byte_end":14366716,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366717,"byte_end":14366760,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366761,"byte_end":14366766,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366767,"byte_end":14366784,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366785,"byte_end":14366792,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4489},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368286,"byte_end":14368290,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"async fn open<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in read-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in read-only mode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367453,"byte_end":14367488,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367493,"byte_end":14367496,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367501,"byte_end":14367561,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367566,"byte_end":14367569,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367574,"byte_end":14367586,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367591,"byte_end":14367594,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367599,"byte_end":14367657,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367662,"byte_end":14367665,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367670,"byte_end":14367718,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367723,"byte_end":14367784,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367789,"byte_end":14367825,"line_start":98,"line_end":98,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367830,"byte_end":14367833,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367838,"byte_end":14367919,"line_start":100,"line_end":100,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367924,"byte_end":14367927,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367932,"byte_end":14367994,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14367999,"byte_end":14368002,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368007,"byte_end":14368021,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368026,"byte_end":14368029,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368034,"byte_end":14368047,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368052,"byte_end":14368126,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368131,"byte_end":14368136,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368141,"byte_end":14368169,"line_start":109,"line_end":109,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368174,"byte_end":14368177,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368182,"byte_end":14368224,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368229,"byte_end":14368234,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368239,"byte_end":14368256,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368261,"byte_end":14368268,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4495},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369543,"byte_end":14369549,"line_start":153,"line_end":153,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"async fn create<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368598,"byte_end":14368634,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368639,"byte_end":14368642,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate it if it does.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368647,"byte_end":14368738,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368743,"byte_end":14368746,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368751,"byte_end":14368811,"line_start":128,"line_end":128,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368816,"byte_end":14368819,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368824,"byte_end":14368836,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368841,"byte_end":14368844,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368849,"byte_end":14368907,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368912,"byte_end":14368915,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368920,"byte_end":14368969,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14368974,"byte_end":14369039,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369044,"byte_end":14369080,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369085,"byte_end":14369088,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369093,"byte_end":14369174,"line_start":138,"line_end":138,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369179,"byte_end":14369182,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369187,"byte_end":14369249,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369254,"byte_end":14369257,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369262,"byte_end":14369276,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369281,"byte_end":14369284,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369289,"byte_end":14369302,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369307,"byte_end":14369381,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369386,"byte_end":14369391,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369396,"byte_end":14369424,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369429,"byte_end":14369432,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369437,"byte_end":14369481,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369486,"byte_end":14369491,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369496,"byte_end":14369513,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369518,"byte_end":14369525,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4500},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370572,"byte_end":14370580,"line_start":183,"line_end":183,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"async fn sync_all<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents and metadata to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents and metadata to disk.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369800,"byte_end":14369868,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369873,"byte_end":14369876,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function will ensure that all in-memory data reaches the filesystem.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369881,"byte_end":14369958,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369963,"byte_end":14369966,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This can be used to handle errors that would otherwise only be caught when the file is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14369971,"byte_end":14370061,"line_start":166,"line_end":166,"column_start":5,"column_end":95}},{"value":"/ closed. When a file is dropped, errors in synchronizing this in-memory data are ignored.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370066,"byte_end":14370158,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370163,"byte_end":14370166,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370171,"byte_end":14370185,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370190,"byte_end":14370193,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370198,"byte_end":14370211,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370216,"byte_end":14370290,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370295,"byte_end":14370300,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370305,"byte_end":14370333,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370338,"byte_end":14370368,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370373,"byte_end":14370376,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370381,"byte_end":14370429,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370434,"byte_end":14370478,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370483,"byte_end":14370510,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370515,"byte_end":14370520,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370525,"byte_end":14370542,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370547,"byte_end":14370554,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4505},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371785,"byte_end":14371794,"line_start":219,"line_end":219,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"async fn sync_data<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents to disk.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370917,"byte_end":14370972,"line_start":194,"line_end":194,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370977,"byte_end":14370980,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`sync_all`], except that file metadata may not be synchronized.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14370985,"byte_end":14371072,"line_start":196,"line_end":196,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371077,"byte_end":14371080,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize the contents of the file, but don't","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371085,"byte_end":14371177,"line_start":198,"line_end":198,"column_start":5,"column_end":97}},{"value":"/ need the file metadata synchronized to disk.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371182,"byte_end":14371230,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371235,"byte_end":14371238,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of [`sync_all`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371243,"byte_end":14371323,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371328,"byte_end":14371331,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371336,"byte_end":14371370,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371375,"byte_end":14371378,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371383,"byte_end":14371397,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371402,"byte_end":14371405,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371410,"byte_end":14371423,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371428,"byte_end":14371502,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371507,"byte_end":14371512,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371517,"byte_end":14371545,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371550,"byte_end":14371580,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371585,"byte_end":14371588,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371593,"byte_end":14371641,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371646,"byte_end":14371690,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371695,"byte_end":14371723,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371728,"byte_end":14371733,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371738,"byte_end":14371755,"line_start":217,"line_end":217,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14371760,"byte_end":14371767,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4510},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372891,"byte_end":14372898,"line_start":251,"line_end":251,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"async fn set_len<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the file.","sig":null,"attributes":[{"value":"/ Truncates or extends the file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372133,"byte_end":14372167,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372172,"byte_end":14372175,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current file size, then the file will be truncated. If it is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372180,"byte_end":14372271,"line_start":232,"line_end":232,"column_start":5,"column_end":96}},{"value":"/ greater than the current file size, then the file will be extended to `size` and have all","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372276,"byte_end":14372369,"line_start":233,"line_end":233,"column_start":5,"column_end":98}},{"value":"/ intermediate data filled with zeros.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372374,"byte_end":14372414,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372419,"byte_end":14372422,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The file's cursor stays at the same position, even if the cursor ends up being past the end","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372427,"byte_end":14372522,"line_start":236,"line_end":236,"column_start":5,"column_end":100}},{"value":"/ of the file after this operation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372527,"byte_end":14372564,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372569,"byte_end":14372572,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372577,"byte_end":14372591,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372596,"byte_end":14372599,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372604,"byte_end":14372617,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372622,"byte_end":14372696,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372701,"byte_end":14372706,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372711,"byte_end":14372739,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372744,"byte_end":14372747,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372752,"byte_end":14372796,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372801,"byte_end":14372829,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372834,"byte_end":14372839,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372844,"byte_end":14372861,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14372866,"byte_end":14372873,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4515},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373717,"byte_end":14373725,"line_start":277,"line_end":277,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file's metadata.","sig":null,"attributes":[{"value":"/ Reads the file's metadata.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373348,"byte_end":14373378,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373383,"byte_end":14373386,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373391,"byte_end":14373405,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373410,"byte_end":14373413,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373418,"byte_end":14373431,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373436,"byte_end":14373510,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373515,"byte_end":14373520,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373525,"byte_end":14373553,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373558,"byte_end":14373561,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373566,"byte_end":14373608,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373613,"byte_end":14373655,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373660,"byte_end":14373665,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373670,"byte_end":14373687,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373692,"byte_end":14373699,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4519},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374571,"byte_end":14374586,"line_start":306,"line_end":306,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373862,"byte_end":14373902,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373907,"byte_end":14373910,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373915,"byte_end":14373927,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373932,"byte_end":14373935,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14373940,"byte_end":14373998,"line_start":286,"line_end":286,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374003,"byte_end":14374006,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ * The current process lacks permissions to change attributes on the file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374011,"byte_end":14374088,"line_start":288,"line_end":288,"column_start":5,"column_end":82}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374093,"byte_end":14374129,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374134,"byte_end":14374137,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374142,"byte_end":14374156,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374161,"byte_end":14374164,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374169,"byte_end":14374182,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374187,"byte_end":14374261,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374266,"byte_end":14374271,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374276,"byte_end":14374304,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374309,"byte_end":14374312,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374317,"byte_end":14374361,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374366,"byte_end":14374369,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374374,"byte_end":14374431,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374436,"byte_end":14374465,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374470,"byte_end":14374509,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374514,"byte_end":14374519,"line_start":303,"line_end":303,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374524,"byte_end":14374541,"line_start":304,"line_end":304,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374546,"byte_end":14374553,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4524},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374773,"byte_end":14374777,"line_start":313,"line_end":313,"column_start":8,"column_end":12},"name":"drop","qualname":"<File as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4526},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14375272,"byte_end":14375275,"line_start":323,"line_end":323,"column_start":8,"column_end":11},"name":"fmt","qualname":"<File as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4528},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14375390,"byte_end":14375399,"line_start":329,"line_end":329,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<File as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4530},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14375607,"byte_end":14375616,"line_start":339,"line_end":339,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<&'_ File as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4532},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14375875,"byte_end":14375885,"line_start":350,"line_end":350,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<File as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4533},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14376066,"byte_end":14376076,"line_start":358,"line_end":358,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<File as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4534},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14376206,"byte_end":14376216,"line_start":362,"line_end":362,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<File as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4536},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14376371,"byte_end":14376381,"line_start":368,"line_end":368,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<&'_ File as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4537},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14376613,"byte_end":14376623,"line_start":377,"line_end":377,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<&'_ File as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14376829,"byte_end":14376839,"line_start":382,"line_end":382,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<&'_ File as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4541},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14377043,"byte_end":14377052,"line_start":389,"line_end":389,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<File as futures_lite::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":27,"index":47},"children":[],"decl_id":{"krate":27,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4543},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14377257,"byte_end":14377266,"line_start":399,"line_end":399,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<&'_ File as futures_lite::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":27,"index":47},"children":[],"decl_id":{"krate":27,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4545},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14377536,"byte_end":14377540,"line_start":410,"line_end":410,"column_start":8,"column_end":12},"name":"from","qualname":"<File as std::convert::From>::from","value":"fn from(std::fs::File) -> File","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5739},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14378409,"byte_end":14378422,"line_start":445,"line_end":445,"column_start":12,"column_end":25},"name":"as_raw_handle","qualname":"<File as std::os::windows::io::AsRawHandle>::as_raw_handle","value":"fn as_raw_handle<'_>(&'_ Self) -> RawHandle","parent":{"krate":1,"index":5923},"children":[],"decl_id":{"krate":1,"index":5924},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5741},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14378552,"byte_end":14378567,"line_start":451,"line_end":451,"column_start":19,"column_end":34},"name":"from_raw_handle","qualname":"<File as std::os::windows::io::FromRawHandle>::from_raw_handle","value":"unsafe fn from_raw_handle(RawHandle) -> File","parent":{"krate":1,"index":5925},"children":[],"decl_id":{"krate":1,"index":5926},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5743},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14378717,"byte_end":14378732,"line_start":457,"line_end":457,"column_start":12,"column_end":27},"name":"into_raw_handle","qualname":"<File as std::os::windows::io::IntoRawHandle>::into_raw_handle","value":"fn into_raw_handle(Self) -> RawHandle","parent":{"krate":1,"index":5927},"children":[],"decl_id":{"krate":1,"index":5928},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4629},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14398216,"byte_end":14398225,"line_start":33,"line_end":33,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"async fn hard_link<P, Q>(P, Q) -> /*impl Trait*/ where P: AsRef<Path>,\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a hard link on the filesystem.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397452,"byte_end":14397494,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397495,"byte_end":14397498,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that operating systems often","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397499,"byte_end":14397594,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ require these two paths to be located on the same filesystem.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397595,"byte_end":14397660,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397661,"byte_end":14397664,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::hard_link`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397665,"byte_end":14397729,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397730,"byte_end":14397733,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::hard_link`]: https://doc.rust-lang.org/std/fs/fn.hard_link.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397734,"byte_end":14397812,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397813,"byte_end":14397816,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397817,"byte_end":14397829,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397830,"byte_end":14397833,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397834,"byte_end":14397892,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397893,"byte_end":14397896,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `src` does not point to an existing file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397897,"byte_end":14397944,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397945,"byte_end":14397981,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397982,"byte_end":14397985,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14397986,"byte_end":14398000,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14398001,"byte_end":14398004,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14398005,"byte_end":14398018,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14398019,"byte_end":14398093,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14398094,"byte_end":14398099,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14398100,"byte_end":14398122,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14398123,"byte_end":14398126,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fs::hard_link(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14398127,"byte_end":14398170,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14398171,"byte_end":14398176,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14398177,"byte_end":14398194,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14398195,"byte_end":14398202,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4646},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399664,"byte_end":14399672,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"async fn metadata<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path.","sig":null,"attributes":[{"value":"/ Reads metadata for a path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14398719,"byte_end":14398749,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14398750,"byte_end":14398753,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to read metadata for the target file or directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14398754,"byte_end":14398851,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14398852,"byte_end":14398943,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14398944,"byte_end":14398956,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14398957,"byte_end":14398960,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::metadata`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14398961,"byte_end":14399024,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399025,"byte_end":14399028,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399029,"byte_end":14399079,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/ [`std::fs::metadata`]: https://doc.rust-lang.org/std/fs/fn.metadata.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399080,"byte_end":14399156,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399157,"byte_end":14399160,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399161,"byte_end":14399173,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399174,"byte_end":14399177,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399178,"byte_end":14399236,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399237,"byte_end":14399240,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399241,"byte_end":14399302,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399303,"byte_end":14399377,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399378,"byte_end":14399414,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399415,"byte_end":14399418,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399419,"byte_end":14399433,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399434,"byte_end":14399437,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399438,"byte_end":14399451,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399452,"byte_end":14399526,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399527,"byte_end":14399532,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399533,"byte_end":14399555,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399556,"byte_end":14399559,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399560,"byte_end":14399618,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399619,"byte_end":14399624,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399625,"byte_end":14399642,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14399643,"byte_end":14399650,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5750},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407298,"byte_end":14407309,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for opening files with configurable options.","sig":null,"attributes":[{"value":"/ A builder for opening files with configurable options.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14405753,"byte_end":14405811,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14405812,"byte_end":14405815,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Files can be opened in [`read`] and/or [`write`] mode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14405816,"byte_end":14405874,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14405875,"byte_end":14405878,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`append`] option opens files in a special writing mode that moves the file cursor to the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14405879,"byte_end":14405976,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ end of file before every write operation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14405977,"byte_end":14406022,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406023,"byte_end":14406026,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It is also possible to [`truncate`] the file right after opening, to [`create`] a file if it","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406027,"byte_end":14406123,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ doesn't exist yet, or to always create a new file with [`create_new`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406124,"byte_end":14406198,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406199,"byte_end":14406202,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::OpenOptions`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406203,"byte_end":14406265,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406266,"byte_end":14406269,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`read`]: #method.read","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406270,"byte_end":14406296,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406297,"byte_end":14406325,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406326,"byte_end":14406356,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406357,"byte_end":14406391,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ [`create`]: #method.create","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406392,"byte_end":14406422,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406423,"byte_end":14406461,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::OpenOptions`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406462,"byte_end":14406548,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406549,"byte_end":14406552,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406553,"byte_end":14406567,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406568,"byte_end":14406571,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Open a file for reading:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406572,"byte_end":14406600,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406601,"byte_end":14406604,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406605,"byte_end":14406618,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406619,"byte_end":14406693,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406694,"byte_end":14406699,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406700,"byte_end":14406735,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406736,"byte_end":14406739,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406740,"byte_end":14406773,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406774,"byte_end":14406793,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406794,"byte_end":14406816,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406817,"byte_end":14406833,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406834,"byte_end":14406839,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406840,"byte_end":14406857,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406858,"byte_end":14406865,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406866,"byte_end":14406869,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Open a file for both reading and writing, and create it if it doesn't exist yet:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406870,"byte_end":14406954,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406955,"byte_end":14406958,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406959,"byte_end":14406972,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14406973,"byte_end":14407047,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407048,"byte_end":14407053,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407054,"byte_end":14407089,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407090,"byte_end":14407093,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407094,"byte_end":14407127,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407128,"byte_end":14407147,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407148,"byte_end":14407168,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/     .create(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407169,"byte_end":14407190,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407191,"byte_end":14407213,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407214,"byte_end":14407230,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407231,"byte_end":14407236,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407237,"byte_end":14407254,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407255,"byte_end":14407262,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4668},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407806,"byte_end":14407809,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407357,"byte_end":14407392,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407397,"byte_end":14407400,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407405,"byte_end":14407450,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407455,"byte_end":14407458,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407463,"byte_end":14407477,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407482,"byte_end":14407485,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407490,"byte_end":14407503,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407508,"byte_end":14407582,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407587,"byte_end":14407592,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407597,"byte_end":14407632,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407637,"byte_end":14407640,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407645,"byte_end":14407678,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407683,"byte_end":14407702,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407707,"byte_end":14407729,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407734,"byte_end":14407750,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407755,"byte_end":14407760,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407765,"byte_end":14407782,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407787,"byte_end":14407794,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4669},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408380,"byte_end":14408384,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"fn read<'_>(&'_ mut Self, bool) -> &'_ mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for read mode.","sig":null,"attributes":[{"value":"/ Configures the option for read mode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407889,"byte_end":14407929,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407934,"byte_end":14407937,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be readable after opening.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407942,"byte_end":14408024,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408029,"byte_end":14408032,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408037,"byte_end":14408051,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408056,"byte_end":14408059,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408064,"byte_end":14408077,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408082,"byte_end":14408156,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408161,"byte_end":14408166,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408171,"byte_end":14408206,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408211,"byte_end":14408214,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408219,"byte_end":14408252,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408257,"byte_end":14408276,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408281,"byte_end":14408303,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408308,"byte_end":14408324,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408329,"byte_end":14408334,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408339,"byte_end":14408356,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408361,"byte_end":14408368,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4670},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409104,"byte_end":14409109,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"fn write<'_>(&'_ mut Self, bool) -> &'_ mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for write mode.","sig":null,"attributes":[{"value":"/ Configures the option for write mode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408481,"byte_end":14408522,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408527,"byte_end":14408530,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408535,"byte_end":14408617,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408622,"byte_end":14408625,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, write calls on it will overwrite the previous contents without","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408630,"byte_end":14408724,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ truncating it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408729,"byte_end":14408747,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408752,"byte_end":14408755,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408760,"byte_end":14408774,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408779,"byte_end":14408782,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408787,"byte_end":14408800,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408805,"byte_end":14408879,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408884,"byte_end":14408889,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408894,"byte_end":14408929,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408934,"byte_end":14408937,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408942,"byte_end":14408975,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14408980,"byte_end":14409000,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409005,"byte_end":14409027,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409032,"byte_end":14409048,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409053,"byte_end":14409058,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409063,"byte_end":14409080,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409085,"byte_end":14409092,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4671},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409794,"byte_end":14409800,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"fn append<'_>(&'_ mut Self, bool) -> &'_ mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for append mode.","sig":null,"attributes":[{"value":"/ Configures the option for append mode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409209,"byte_end":14409251,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409256,"byte_end":14409259,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening and the file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409264,"byte_end":14409358,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ cursor will be moved to the end of file before every write operaiton.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409363,"byte_end":14409436,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409441,"byte_end":14409444,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409449,"byte_end":14409463,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409468,"byte_end":14409471,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409476,"byte_end":14409489,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409494,"byte_end":14409568,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409573,"byte_end":14409578,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409583,"byte_end":14409618,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409623,"byte_end":14409626,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409631,"byte_end":14409664,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     .append(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409669,"byte_end":14409690,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409695,"byte_end":14409717,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409722,"byte_end":14409738,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409743,"byte_end":14409748,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409753,"byte_end":14409770,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409775,"byte_end":14409782,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4672},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410608,"byte_end":14410616,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"fn truncate<'_>(&'_ mut Self, bool) -> &'_ mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for truncating the previous file.","sig":null,"attributes":[{"value":"/ Configures the option for truncating the previous file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409903,"byte_end":14409962,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409967,"byte_end":14409970,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, the file will be truncated to the length of 0 bytes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14409975,"byte_end":14410051,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410056,"byte_end":14410059,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for truncation to work.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410064,"byte_end":14410147,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410152,"byte_end":14410155,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410160,"byte_end":14410188,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410193,"byte_end":14410223,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410228,"byte_end":14410231,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410236,"byte_end":14410250,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410255,"byte_end":14410258,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410263,"byte_end":14410276,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410281,"byte_end":14410355,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410360,"byte_end":14410365,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410370,"byte_end":14410405,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410410,"byte_end":14410413,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410418,"byte_end":14410451,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410456,"byte_end":14410476,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/     .truncate(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410481,"byte_end":14410504,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410509,"byte_end":14410531,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410536,"byte_end":14410552,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410557,"byte_end":14410562,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410567,"byte_end":14410584,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410589,"byte_end":14410596,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4673},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411455,"byte_end":14411461,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"fn create<'_>(&'_ mut Self, bool) -> &'_ mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file if it doesn't exist.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file if it doesn't exist.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410725,"byte_end":14410795,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410800,"byte_end":14410803,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created if it doesn't exist.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410808,"byte_end":14410897,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410902,"byte_end":14410905,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14410910,"byte_end":14410996,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411001,"byte_end":14411004,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411009,"byte_end":14411037,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411042,"byte_end":14411072,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411077,"byte_end":14411080,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411085,"byte_end":14411099,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411104,"byte_end":14411107,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411112,"byte_end":14411125,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411130,"byte_end":14411204,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411209,"byte_end":14411214,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411219,"byte_end":14411254,"line_start":203,"line_end":203,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411259,"byte_end":14411262,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411267,"byte_end":14411300,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411305,"byte_end":14411325,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/     .create(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411330,"byte_end":14411351,"line_start":207,"line_end":207,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411356,"byte_end":14411378,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411383,"byte_end":14411399,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411404,"byte_end":14411409,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411414,"byte_end":14411431,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411436,"byte_end":14411443,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412358,"byte_end":14412368,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"fn create_new<'_>(&'_ mut Self, bool) -> &'_ mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file or failing if it already exists.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file or failing if it already exists.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411564,"byte_end":14411646,"line_start":218,"line_end":218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411651,"byte_end":14411654,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created, or the open operation","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411659,"byte_end":14411750,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ will fail if the file already exists.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411755,"byte_end":14411796,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411801,"byte_end":14411804,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411809,"byte_end":14411895,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411900,"byte_end":14411903,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411908,"byte_end":14411936,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411941,"byte_end":14411971,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411976,"byte_end":14411979,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14411984,"byte_end":14411998,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412003,"byte_end":14412006,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412011,"byte_end":14412024,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412029,"byte_end":14412103,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412108,"byte_end":14412113,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412118,"byte_end":14412153,"line_start":233,"line_end":233,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412158,"byte_end":14412161,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412166,"byte_end":14412199,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412204,"byte_end":14412224,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/     .create_new(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412229,"byte_end":14412254,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412259,"byte_end":14412281,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412286,"byte_end":14412302,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412307,"byte_end":14412312,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412317,"byte_end":14412334,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412339,"byte_end":14412346,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4675},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413806,"byte_end":14413810,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"fn open<P, '_>(&'_ Self, P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file with the configured options.","sig":null,"attributes":[{"value":"/ Opens a file with the configured options.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412483,"byte_end":14412528,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412533,"byte_end":14412536,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412541,"byte_end":14412553,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412558,"byte_end":14412561,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412566,"byte_end":14412624,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412629,"byte_end":14412632,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ * The file does not exist and neither [`create`] nor [`create_new`] were set.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412637,"byte_end":14412718,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412723,"byte_end":14412772,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to open the file in the configured mode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412777,"byte_end":14412861,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/ * The file already exists and [`create_new`] was set.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412866,"byte_end":14412923,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/ * Invalid combination of options was used, like [`truncate`] was set but [`write`] wasn't,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14412928,"byte_end":14413022,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/   or none of [`read`], [`write`], and [`append`] modes was set.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413027,"byte_end":14413094,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ * An OS-level occurred, like too many files are open or the file name is too long.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413099,"byte_end":14413185,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413190,"byte_end":14413226,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413231,"byte_end":14413234,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413239,"byte_end":14413265,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413270,"byte_end":14413298,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413303,"byte_end":14413333,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413338,"byte_end":14413372,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/ [`create`]: #method.create","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413377,"byte_end":14413407,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413412,"byte_end":14413450,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413455,"byte_end":14413458,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413463,"byte_end":14413477,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413482,"byte_end":14413485,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413490,"byte_end":14413503,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413508,"byte_end":14413582,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413587,"byte_end":14413592,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413597,"byte_end":14413632,"line_start":275,"line_end":275,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413637,"byte_end":14413640,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413645,"byte_end":14413678,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413683,"byte_end":14413702,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413707,"byte_end":14413729,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413734,"byte_end":14413750,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413755,"byte_end":14413760,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413765,"byte_end":14413782,"line_start":282,"line_end":282,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14413787,"byte_end":14413794,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4681},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14414160,"byte_end":14414167,"line_start":295,"line_end":295,"column_start":8,"column_end":15},"name":"default","qualname":"<OpenOptions as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3246},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4696},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417314,"byte_end":14417318,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"async fn read<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as raw bytes.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as raw bytes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416309,"byte_end":14416362,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416363,"byte_end":14416366,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a buffer based on the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416367,"byte_end":14416466,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416467,"byte_end":14416563,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416564,"byte_end":14416576,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416577,"byte_end":14416580,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as a string, use [`read_to_string`] instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416581,"byte_end":14416662,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416663,"byte_end":14416666,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416667,"byte_end":14416726,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416727,"byte_end":14416730,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_to_string`]: fn.read_to_string.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416731,"byte_end":14416777,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::read`]: https://doc.rust-lang.org/std/fs/fn.read.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416778,"byte_end":14416846,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416847,"byte_end":14416850,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416851,"byte_end":14416863,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416864,"byte_end":14416867,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416868,"byte_end":14416926,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416927,"byte_end":14416930,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416931,"byte_end":14416979,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14416980,"byte_end":14417041,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417042,"byte_end":14417078,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417079,"byte_end":14417082,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417083,"byte_end":14417097,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417098,"byte_end":14417101,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417102,"byte_end":14417115,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417116,"byte_end":14417190,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417191,"byte_end":14417196,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417197,"byte_end":14417219,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417220,"byte_end":14417223,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417224,"byte_end":14417268,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417269,"byte_end":14417274,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417275,"byte_end":14417292,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14417293,"byte_end":14417300,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4737},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418875,"byte_end":14418883,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"async fn read_dir<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of entries in a directory.","sig":null,"attributes":[{"value":"/ Returns a stream of entries in a directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14417783,"byte_end":14417830,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14417831,"byte_end":14417834,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The stream yields items of type [`io::Result`]`<`[`DirEntry`]`>`. Note that I/O errors can","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14417835,"byte_end":14417929,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ occur while reading from the stream.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14417930,"byte_end":14417970,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14417971,"byte_end":14417974,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_dir`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14417975,"byte_end":14418038,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418039,"byte_end":14418042,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418043,"byte_end":14418085,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418086,"byte_end":14418124,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::read_dir`]: https://doc.rust-lang.org/std/fs/fn.read_dir.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418125,"byte_end":14418201,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418202,"byte_end":14418205,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418206,"byte_end":14418218,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418219,"byte_end":14418222,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418223,"byte_end":14418281,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418282,"byte_end":14418285,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418286,"byte_end":14418339,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ * The current process lacks permissions to read the contents of the directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418340,"byte_end":14418422,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418423,"byte_end":14418459,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418460,"byte_end":14418463,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418464,"byte_end":14418478,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418479,"byte_end":14418482,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418483,"byte_end":14418496,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418497,"byte_end":14418571,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418572,"byte_end":14418577,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418578,"byte_end":14418600,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418601,"byte_end":14418631,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418632,"byte_end":14418635,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418636,"byte_end":14418683,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418684,"byte_end":14418687,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ while let Some(res) = entries.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418688,"byte_end":14418736,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418737,"byte_end":14418762,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418763,"byte_end":14418823,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418824,"byte_end":14418829,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418830,"byte_end":14418835,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418836,"byte_end":14418853,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14418854,"byte_end":14418861,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5760},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419688,"byte_end":14419695,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of entries in a directory.","sig":null,"attributes":[{"value":"/ A stream of entries in a directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419163,"byte_end":14419202,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419203,"byte_end":14419206,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by [`read_dir`] and yields items of type","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419207,"byte_end":14419275,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`]`<`[`DirEntry`]`>`. Each [`DirEntry`] can then retrieve information like entry's","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419276,"byte_end":14419374,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ path or metadata.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419375,"byte_end":14419396,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419397,"byte_end":14419400,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::ReadDir`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419401,"byte_end":14419459,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419460,"byte_end":14419463,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419464,"byte_end":14419498,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419499,"byte_end":14419541,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419542,"byte_end":14419580,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::ReadDir`]: https://doc.rust-lang.org/std/fs/struct.ReadDir.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419581,"byte_end":14419659,"line_start":68,"line_end":68,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4747},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14420253,"byte_end":14420262,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<ReadDir as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4767},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421868,"byte_end":14421877,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"async fn read_link<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link and returns the path it points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link and returns the path it points to.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421249,"byte_end":14421309,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421310,"byte_end":14421313,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_link`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421314,"byte_end":14421378,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421379,"byte_end":14421382,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::read_link`]: https://doc.rust-lang.org/std/fs/fn.read_link.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421383,"byte_end":14421461,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421462,"byte_end":14421465,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421466,"byte_end":14421478,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421479,"byte_end":14421482,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421483,"byte_end":14421541,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421542,"byte_end":14421545,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing link.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421546,"byte_end":14421594,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421595,"byte_end":14421631,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421632,"byte_end":14421635,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421636,"byte_end":14421650,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421651,"byte_end":14421654,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421655,"byte_end":14421668,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421669,"byte_end":14421743,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421744,"byte_end":14421749,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421750,"byte_end":14421772,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421773,"byte_end":14421776,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let path = fs::read_link(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421777,"byte_end":14421822,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421823,"byte_end":14421828,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421829,"byte_end":14421846,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14421847,"byte_end":14421854,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4786},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423343,"byte_end":14423357,"line_start":39,"line_end":39,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"async fn read_to_string<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as a string.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as a string.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422263,"byte_end":14422315,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422316,"byte_end":14422319,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a string based on the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422320,"byte_end":14422419,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422420,"byte_end":14422516,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422517,"byte_end":14422529,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422530,"byte_end":14422533,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as raw bytes, use [`read`] instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422534,"byte_end":14422606,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422607,"byte_end":14422610,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_to_string`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422611,"byte_end":14422680,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422681,"byte_end":14422684,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read`]: fn.read.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422685,"byte_end":14422711,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ [`std::fs::read_to_string`]: https://doc.rust-lang.org/std/fs/fn.read_to_string.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422712,"byte_end":14422800,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422801,"byte_end":14422804,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422805,"byte_end":14422817,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422818,"byte_end":14422821,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422822,"byte_end":14422880,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422881,"byte_end":14422884,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422885,"byte_end":14422933,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422934,"byte_end":14422995,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * The contents of the file cannot be read as a UTF-8 string.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14422996,"byte_end":14423060,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423061,"byte_end":14423097,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423098,"byte_end":14423101,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423102,"byte_end":14423116,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423117,"byte_end":14423120,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423121,"byte_end":14423134,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423135,"byte_end":14423209,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423210,"byte_end":14423215,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423216,"byte_end":14423238,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423239,"byte_end":14423242,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read_to_string(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423243,"byte_end":14423297,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423298,"byte_end":14423303,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423304,"byte_end":14423321,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14423322,"byte_end":14423329,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4805},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424385,"byte_end":14424395,"line_start":31,"line_end":31,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"async fn remove_dir<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Removes an empty directory.","sig":null,"attributes":[{"value":"/ Removes an empty directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14423718,"byte_end":14423749,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14423750,"byte_end":14423753,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14423754,"byte_end":14423819,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14423820,"byte_end":14423823,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir`]: https://doc.rust-lang.org/std/fs/fn.remove_dir.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14423824,"byte_end":14423904,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14423905,"byte_end":14423908,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14423909,"byte_end":14423921,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14423922,"byte_end":14423925,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14423926,"byte_end":14423984,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14423985,"byte_end":14423988,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14423989,"byte_end":14424041,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424042,"byte_end":14424110,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424111,"byte_end":14424147,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424148,"byte_end":14424151,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424152,"byte_end":14424166,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424167,"byte_end":14424170,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424171,"byte_end":14424184,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424185,"byte_end":14424259,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424260,"byte_end":14424265,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424266,"byte_end":14424288,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424289,"byte_end":14424292,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424293,"byte_end":14424339,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424340,"byte_end":14424345,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424346,"byte_end":14424363,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14424364,"byte_end":14424371,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4824},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425455,"byte_end":14425469,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"async fn remove_dir_all<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory and all of its contents.","sig":null,"attributes":[{"value":"/ Removes a directory and all of its contents.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14424755,"byte_end":14424803,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14424804,"byte_end":14424807,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir_all`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14424808,"byte_end":14424877,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14424878,"byte_end":14424881,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir_all`]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14424882,"byte_end":14424970,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14424971,"byte_end":14424974,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14424975,"byte_end":14424987,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14424988,"byte_end":14424991,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14424992,"byte_end":14425050,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425051,"byte_end":14425054,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425055,"byte_end":14425107,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425108,"byte_end":14425176,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425177,"byte_end":14425213,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425214,"byte_end":14425217,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425218,"byte_end":14425232,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425233,"byte_end":14425236,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425237,"byte_end":14425250,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425251,"byte_end":14425325,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425326,"byte_end":14425331,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425332,"byte_end":14425354,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425355,"byte_end":14425358,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir_all(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425359,"byte_end":14425409,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425410,"byte_end":14425415,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425416,"byte_end":14425433,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14425434,"byte_end":14425441,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4843},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426472,"byte_end":14426483,"line_start":31,"line_end":31,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"async fn remove_file<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Removes a file.","sig":null,"attributes":[{"value":"/ Removes a file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14425833,"byte_end":14425852,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14425853,"byte_end":14425856,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_file`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14425857,"byte_end":14425923,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14425924,"byte_end":14425927,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_file`]: https://doc.rust-lang.org/std/fs/fn.remove_file.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14425928,"byte_end":14426010,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426011,"byte_end":14426014,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426015,"byte_end":14426027,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426028,"byte_end":14426031,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426032,"byte_end":14426090,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426091,"byte_end":14426094,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426095,"byte_end":14426143,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to remove the file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426144,"byte_end":14426207,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426208,"byte_end":14426244,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426245,"byte_end":14426248,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426249,"byte_end":14426263,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426264,"byte_end":14426267,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426268,"byte_end":14426281,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426282,"byte_end":14426356,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426357,"byte_end":14426362,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426363,"byte_end":14426385,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426386,"byte_end":14426389,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_file(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426390,"byte_end":14426426,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426427,"byte_end":14426432,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426433,"byte_end":14426450,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14426451,"byte_end":14426458,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4862},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427687,"byte_end":14427693,"line_start":35,"line_end":35,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"async fn rename<P, Q>(P, Q) -> /*impl Trait*/ where P: AsRef<Path>,\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new location.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new location.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14426839,"byte_end":14426889,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14426890,"byte_end":14426893,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a file or directory already exists at the target location, it will be overwritten by this","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14426894,"byte_end":14426990,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14426991,"byte_end":14427005,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427006,"byte_end":14427009,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::rename`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427010,"byte_end":14427071,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427072,"byte_end":14427075,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::rename`]: https://doc.rust-lang.org/std/fs/fn.rename.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427076,"byte_end":14427148,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427149,"byte_end":14427152,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427153,"byte_end":14427165,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427166,"byte_end":14427169,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427170,"byte_end":14427228,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427229,"byte_end":14427232,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427233,"byte_end":14427294,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * `from` and `to` are on different filesystems.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427295,"byte_end":14427346,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ * The current process lacks permissions to do the rename operation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427347,"byte_end":14427418,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427419,"byte_end":14427455,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427456,"byte_end":14427459,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427460,"byte_end":14427474,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427475,"byte_end":14427478,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427479,"byte_end":14427492,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427493,"byte_end":14427567,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427568,"byte_end":14427573,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427574,"byte_end":14427596,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427597,"byte_end":14427600,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fs::rename(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427601,"byte_end":14427641,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427642,"byte_end":14427647,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427648,"byte_end":14427665,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14427666,"byte_end":14427673,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4882},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14429020,"byte_end":14429035,"line_start":33,"line_end":33,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"async fn set_permissions<P>(P, Permissions) -> /*impl Trait*/ where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions of a file or directory.","sig":null,"attributes":[{"value":"/ Changes the permissions of a file or directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428195,"byte_end":14428246,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428247,"byte_end":14428250,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::set_permissions`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428251,"byte_end":14428321,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428322,"byte_end":14428325,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::set_permissions`]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428326,"byte_end":14428416,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428417,"byte_end":14428420,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428421,"byte_end":14428433,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428434,"byte_end":14428437,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428438,"byte_end":14428496,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428497,"byte_end":14428500,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428501,"byte_end":14428562,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to change attributes on the file or directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428563,"byte_end":14428653,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428654,"byte_end":14428690,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428691,"byte_end":14428694,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428695,"byte_end":14428709,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428710,"byte_end":14428713,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428714,"byte_end":14428727,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428728,"byte_end":14428802,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428803,"byte_end":14428808,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428809,"byte_end":14428831,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428832,"byte_end":14428835,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428836,"byte_end":14428898,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ perm.set_readonly(true);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428899,"byte_end":14428927,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ fs::set_permissions(\"a.txt\", perm).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428928,"byte_end":14428974,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428975,"byte_end":14428980,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428981,"byte_end":14428998,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14428999,"byte_end":14429006,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4900},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14430231,"byte_end":14430247,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"async fn symlink_metadata<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads metadata for a path without following symbolic links.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429312,"byte_end":14429375,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429376,"byte_end":14429379,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you want to follow symbolic links before reading metadata of the target file or directory,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429380,"byte_end":14429477,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ use [`metadata`] instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429478,"byte_end":14429507,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429508,"byte_end":14429511,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::symlink_metadata`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429512,"byte_end":14429583,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429584,"byte_end":14429587,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`metadata`]: fn.metadata.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429588,"byte_end":14429622,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::symlink_metadata`]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429623,"byte_end":14429715,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429716,"byte_end":14429719,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429720,"byte_end":14429732,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429733,"byte_end":14429736,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429737,"byte_end":14429795,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429796,"byte_end":14429799,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429800,"byte_end":14429861,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429862,"byte_end":14429936,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429937,"byte_end":14429973,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429974,"byte_end":14429977,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429978,"byte_end":14429992,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429993,"byte_end":14429996,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14429997,"byte_end":14430010,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14430011,"byte_end":14430085,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14430086,"byte_end":14430091,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14430092,"byte_end":14430114,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14430115,"byte_end":14430118,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::symlink_metadata(\"a.txt\").await?.permissions();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14430119,"byte_end":14430185,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14430186,"byte_end":14430191,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14430192,"byte_end":14430209,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14430210,"byte_end":14430217,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4918},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431305,"byte_end":14431310,"line_start":34,"line_end":34,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"async fn write<P, C>(P, C) -> /*impl Trait*/ where P: AsRef<Path>,\nC: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Writes a slice of bytes as the new contents of a file.","sig":null,"attributes":[{"value":"/ Writes a slice of bytes as the new contents of a file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430513,"byte_end":14430571,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430572,"byte_end":14430575,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist, and will entirely replace its contents","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430576,"byte_end":14430673,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ if it does.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430674,"byte_end":14430689,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430690,"byte_end":14430693,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::write`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430694,"byte_end":14430754,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430755,"byte_end":14430758,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::write`]: https://doc.rust-lang.org/std/fs/fn.write.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430759,"byte_end":14430829,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430830,"byte_end":14430833,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430834,"byte_end":14430846,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430847,"byte_end":14430850,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430851,"byte_end":14430909,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430910,"byte_end":14430913,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430914,"byte_end":14430963,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14430964,"byte_end":14431029,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431030,"byte_end":14431066,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431067,"byte_end":14431070,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431071,"byte_end":14431085,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431086,"byte_end":14431089,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431090,"byte_end":14431103,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431104,"byte_end":14431178,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431179,"byte_end":14431184,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431185,"byte_end":14431207,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431208,"byte_end":14431211,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fs::write(\"a.txt\", b\"Hello world!\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431212,"byte_end":14431259,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431260,"byte_end":14431265,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431266,"byte_end":14431283,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14431284,"byte_end":14431291,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4925},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","parent":null,"children":[{"krate":0,"index":4926},{"krate":0,"index":4938},{"krate":0,"index":4969},{"krate":0,"index":5012},{"krate":0,"index":5172},{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":5278},{"krate":0,"index":5281},{"krate":0,"index":5284},{"krate":0,"index":5287},{"krate":0,"index":5290},{"krate":0,"index":5293},{"krate":0,"index":5296},{"krate":0,"index":5299},{"krate":0,"index":5302},{"krate":0,"index":5305},{"krate":0,"index":5308}],"decl_id":null,"docs":" Cross-platform path manipulation.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16847,"byte_end":16874,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Cross-platform path manipulation.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14431646,"byte_end":14431683,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14431684,"byte_end":14431687,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::path`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14431688,"byte_end":14431741,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14431742,"byte_end":14431745,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides two types, [`PathBuf`] and [`Path`][`Path`] (akin to [`String`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14431746,"byte_end":14431834,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/ and [`str`]), for working with paths abstractly. These types are thin wrappers","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14431835,"byte_end":14431917,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ around [`OsString`] and [`OsStr`] respectively, meaning that they work directly","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14431918,"byte_end":14432001,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ on strings according to the local platform's path syntax.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432002,"byte_end":14432063,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432064,"byte_end":14432067,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Paths can be parsed into [`Component`]s by iterating over the structure","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432068,"byte_end":14432143,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ returned by the [`components`] method on [`Path`]. [`Component`]s roughly","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432144,"byte_end":14432221,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ correspond to the substrings between path separators (`/` or `\\`). You can","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432222,"byte_end":14432300,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ reconstruct an equivalent path from components with the [`push`] method on","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432301,"byte_end":14432379,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ [`PathBuf`]; note that the paths may differ syntactically by the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432380,"byte_end":14432448,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ normalization described in the documentation for the [`components`] method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432449,"byte_end":14432528,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432529,"byte_end":14432532,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::path`]: https://doc.rust-lang.org/std/path/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432533,"byte_end":14432597,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432598,"byte_end":14432601,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Simple usage","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432602,"byte_end":14432621,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432622,"byte_end":14432625,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Path manipulation includes both parsing components from slices and building","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432626,"byte_end":14432705,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ new owned paths.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432706,"byte_end":14432726,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432727,"byte_end":14432730,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To parse a path, you can create a [`Path`] slice from a [`str`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432731,"byte_end":14432798,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ slice and start asking questions:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432799,"byte_end":14432836,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432837,"byte_end":14432840,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432841,"byte_end":14432848,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432849,"byte_end":14432879,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432880,"byte_end":14432904,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432905,"byte_end":14432908,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432909,"byte_end":14432954,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432955,"byte_end":14432958,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432959,"byte_end":14432990,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"/tmp/foo\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14432991,"byte_end":14433043,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433044,"byte_end":14433047,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433048,"byte_end":14433085,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433086,"byte_end":14433137,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433138,"byte_end":14433141,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433142,"byte_end":14433179,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433180,"byte_end":14433231,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433232,"byte_end":14433239,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433240,"byte_end":14433243,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ To build or modify paths, use [`PathBuf`]:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433244,"byte_end":14433290,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433291,"byte_end":14433294,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433295,"byte_end":14433302,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433303,"byte_end":14433336,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433337,"byte_end":14433340,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // This way works...","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433341,"byte_end":14433365,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ let mut path = PathBuf::from(\"c:\\\\\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433366,"byte_end":14433407,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433408,"byte_end":14433411,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ path.push(\"windows\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433412,"byte_end":14433437,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/ path.push(\"system32\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433438,"byte_end":14433464,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433465,"byte_end":14433468,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ path.set_extension(\"dll\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433469,"byte_end":14433499,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433500,"byte_end":14433503,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // ... but push is best used if you don't know everything up","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433504,"byte_end":14433568,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ // front. If you do, this way is better:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433569,"byte_end":14433613,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ let path: PathBuf = [\"c:\\\\\", \"windows\", \"system32.dll\"].iter().collect();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433614,"byte_end":14433691,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433692,"byte_end":14433699,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433700,"byte_end":14433703,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433704,"byte_end":14433742,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433743,"byte_end":14433797,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433798,"byte_end":14433834,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433835,"byte_end":14433865,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/ [`push`]: struct.PathBuf.html#method.push","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433866,"byte_end":14433911,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`String`]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433912,"byte_end":14433983,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433984,"byte_end":14433987,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14433988,"byte_end":14434049,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434050,"byte_end":14434122,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14434123,"byte_end":14434189,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5774},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14435070,"byte_end":14435079,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Ancestors","qualname":"::path::ancestors::Ancestors","value":"Ancestors {  }","parent":null,"children":[{"krate":0,"index":5776}],"decl_id":null,"docs":" An iterator over [`Path`] and its ancestors.","sig":null,"attributes":[{"value":"/ An iterator over [`Path`] and its ancestors.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434577,"byte_end":14434625,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434626,"byte_end":14434629,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ancestors`] method on [`Path`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434630,"byte_end":14434699,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434700,"byte_end":14434735,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434736,"byte_end":14434739,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434740,"byte_end":14434754,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434755,"byte_end":14434758,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434759,"byte_end":14434766,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434767,"byte_end":14434797,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434798,"byte_end":14434801,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434802,"byte_end":14434839,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434840,"byte_end":14434843,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ for ancestor in path.ancestors() {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434844,"byte_end":14434882,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/     println!(\"{}\", ancestor.display());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434883,"byte_end":14434926,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434927,"byte_end":14434932,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434933,"byte_end":14434940,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434941,"byte_end":14434944,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ancestors`]: struct.Path.html#method.ancestors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434945,"byte_end":14434997,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14434998,"byte_end":14435028,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4936},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14435200,"byte_end":14435204,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"next","qualname":"<Ancestors as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5785},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436041,"byte_end":14436051,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::components::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":5787}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`].","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435471,"byte_end":14435525,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435526,"byte_end":14435529,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`components`] method on [`Path`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435530,"byte_end":14435600,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435601,"byte_end":14435636,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435637,"byte_end":14435640,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435641,"byte_end":14435655,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435656,"byte_end":14435659,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435660,"byte_end":14435667,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435668,"byte_end":14435698,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435699,"byte_end":14435702,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435703,"byte_end":14435748,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435749,"byte_end":14435752,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ for component in path.components() {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435753,"byte_end":14435793,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/     println!(\"{:?}\", component);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435794,"byte_end":14435830,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435831,"byte_end":14435836,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435837,"byte_end":14435844,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435845,"byte_end":14435848,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435849,"byte_end":14435887,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435888,"byte_end":14435942,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14435943,"byte_end":14435973,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4954},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436543,"byte_end":14436550,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Components>::as_path","value":"fn as_path<'_>(&'_ Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436140,"byte_end":14436226,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436231,"byte_end":14436234,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436239,"byte_end":14436253,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436258,"byte_end":14436261,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436266,"byte_end":14436273,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436278,"byte_end":14436308,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436313,"byte_end":14436316,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo/bar.txt\").components();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436321,"byte_end":14436389,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ components.next();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436394,"byte_end":14436416,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ components.next();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436421,"byte_end":14436443,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436448,"byte_end":14436451,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), components.as_path());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436456,"byte_end":14436519,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436524,"byte_end":14436531,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436662,"byte_end":14436668,"line_start":51,"line_end":51,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Components as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4958},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436765,"byte_end":14436771,"line_start":57,"line_end":57,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Components as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ OsStr","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4962},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436913,"byte_end":14436917,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"next","qualname":"<Components as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Component>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4965},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14437048,"byte_end":14437057,"line_start":71,"line_end":71,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Components as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Component>","parent":{"krate":2,"index":8454},"children":[],"decl_id":{"krate":2,"index":8455},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14437222,"byte_end":14437228,"line_start":79,"line_end":79,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Component as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5811},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437778,"byte_end":14437782,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Iter","qualname":"::path::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5813}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437405,"byte_end":14437480,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437481,"byte_end":14437484,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`Path`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437485,"byte_end":14437549,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437550,"byte_end":14437585,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437586,"byte_end":14437589,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437590,"byte_end":14437628,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.Path.html#method.iter","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437629,"byte_end":14437671,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437672,"byte_end":14437718,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437719,"byte_end":14437749,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4991},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438227,"byte_end":14438234,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Iter>::as_path","value":"fn as_path<'_>(&'_ Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437854,"byte_end":14437940,"line_start":22,"line_end":22,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437945,"byte_end":14437948,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437953,"byte_end":14437967,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437972,"byte_end":14437975,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437980,"byte_end":14437987,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437992,"byte_end":14438022,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438027,"byte_end":14438030,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut iter = Path::new(\"/tmp/foo/bar.txt\").iter();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438035,"byte_end":14438091,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ iter.next();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438096,"byte_end":14438112,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438117,"byte_end":14438133,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438138,"byte_end":14438141,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), iter.as_path());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438146,"byte_end":14438203,"line_start":33,"line_end":33,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438208,"byte_end":14438215,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4995},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438362,"byte_end":14438366,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<&'a OsStr>","parent":{"krate":2,"index":8608},"children":[],"decl_id":{"krate":2,"index":8610},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4997},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438500,"byte_end":14438503,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Iter as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5005},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438953,"byte_end":14438959,"line_start":65,"line_end":65,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Iter as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5007},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14439050,"byte_end":14439056,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Iter as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ OsStr","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5010},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14439171,"byte_end":14439180,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Iter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<&'a OsStr>","parent":{"krate":2,"index":8454},"children":[],"decl_id":{"krate":2,"index":8455},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5817},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440865,"byte_end":14440869,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":5818}],"decl_id":null,"docs":" A slice of a path.","sig":null,"attributes":[{"value":"/ A slice of a path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14439586,"byte_end":14439608,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14439609,"byte_end":14439612,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is an async version of [`std::path::Path`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14439613,"byte_end":14439672,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14439673,"byte_end":14439676,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type supports a number of operations for inspecting a path, including","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14439677,"byte_end":14439755,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ breaking the path into its components (separated by `/` on Unix and by either","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14439756,"byte_end":14439837,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ `/` or `\\` on Windows), extracting the file name, determining whether the path","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14439838,"byte_end":14439920,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ is absolute, and so on.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14439921,"byte_end":14439948,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14439949,"byte_end":14439952,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is an *unsized* type, meaning that it must always be used behind a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14439953,"byte_end":14440028,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ pointer like `&` or `Box`. For an owned version of this type,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440029,"byte_end":14440094,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ see [`PathBuf`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440095,"byte_end":14440115,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440116,"byte_end":14440119,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440120,"byte_end":14440156,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.Path.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440157,"byte_end":14440233,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440234,"byte_end":14440237,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440238,"byte_end":14440297,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440298,"byte_end":14440341,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440342,"byte_end":14440345,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440346,"byte_end":14440360,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440361,"byte_end":14440364,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440365,"byte_end":14440372,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440373,"byte_end":14440397,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440398,"byte_end":14440422,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440423,"byte_end":14440426,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Note: this example does work on Windows","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440427,"byte_end":14440473,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ let path = Path::new(\"./foo/bar.txt\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440474,"byte_end":14440516,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440517,"byte_end":14440520,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440521,"byte_end":14440552,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"./foo\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440553,"byte_end":14440602,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440603,"byte_end":14440606,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440607,"byte_end":14440644,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440645,"byte_end":14440696,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440697,"byte_end":14440700,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440701,"byte_end":14440738,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440739,"byte_end":14440790,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440791,"byte_end":14440798,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5063},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441501,"byte_end":14441504,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"fn new<S, '_>(&'_ S) -> &'_ Path where S: AsRef<OsStr> + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Directly wraps a string slice as a `Path` slice.","sig":null,"attributes":[{"value":"/ Directly wraps a string slice as a `Path` slice.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440919,"byte_end":14440971,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440976,"byte_end":14440979,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is a cost-free conversion.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440984,"byte_end":14441019,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441024,"byte_end":14441027,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441032,"byte_end":14441046,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441051,"byte_end":14441054,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441059,"byte_end":14441066,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441071,"byte_end":14441101,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441106,"byte_end":14441109,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Path::new(\"foo.txt\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441114,"byte_end":14441139,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441144,"byte_end":14441151,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441156,"byte_end":14441159,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ You can create `Path`s from `String`s, or even other `Path`s:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441164,"byte_end":14441229,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441234,"byte_end":14441237,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441242,"byte_end":14441249,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441254,"byte_end":14441284,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441289,"byte_end":14441292,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let string = String::from(\"foo.txt\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441297,"byte_end":14441338,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ let from_string = Path::new(&string);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441343,"byte_end":14441384,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let from_path = Path::new(&from_string);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441389,"byte_end":14441433,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_string, from_path);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441438,"byte_end":14441477,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441482,"byte_end":14441489,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5065},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442027,"byte_end":14442036,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Path>::as_os_str","value":"fn as_os_str<'_>(&'_ Self) -> &'_ OsStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Returns the underlying [`OsStr`] slice.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441648,"byte_end":14441691,"line_start":80,"line_end":80,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441696,"byte_end":14441699,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441704,"byte_end":14441770,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441775,"byte_end":14441778,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441783,"byte_end":14441797,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441802,"byte_end":14441805,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441810,"byte_end":14441817,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441822,"byte_end":14441846,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441851,"byte_end":14441854,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441859,"byte_end":14441889,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441894,"byte_end":14441897,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let os_str = Path::new(\"foo.txt\").as_os_str();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441902,"byte_end":14441952,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_str, OsStr::new(\"foo.txt\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14441957,"byte_end":14442003,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442008,"byte_end":14442015,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5066},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442626,"byte_end":14442632,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Path>::to_str","value":"fn to_str<'_>(&'_ Self) -> Option<&'_ str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`&str`] slice if the `Path` is valid unicode.","sig":null,"attributes":[{"value":"/ Returns a [`&str`] slice if the `Path` is valid unicode.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442098,"byte_end":14442158,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442163,"byte_end":14442166,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442171,"byte_end":14442235,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/ Note that validation is performed because non-UTF-8 strings are","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442240,"byte_end":14442307,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ perfectly valid for some OS.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442312,"byte_end":14442344,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442349,"byte_end":14442352,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442357,"byte_end":14442419,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442424,"byte_end":14442427,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442432,"byte_end":14442446,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442451,"byte_end":14442454,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442459,"byte_end":14442466,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442471,"byte_end":14442501,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442506,"byte_end":14442509,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442514,"byte_end":14442550,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_str(), Some(\"foo.txt\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442555,"byte_end":14442602,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442607,"byte_end":14442614,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5067},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443425,"byte_end":14443440,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Path>::to_string_lossy","value":"fn to_string_lossy<'_>(&'_ Self) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to a [`Cow<str>`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to a [`Cow<str>`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442697,"byte_end":14442737,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442742,"byte_end":14442745,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442750,"byte_end":14442797,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442802,"byte_end":14442847,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442852,"byte_end":14442855,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`Cow<str>`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442860,"byte_end":14442928,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ [U+FFFD]: https://doc.rust-lang.org/std/char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14442933,"byte_end":14443017,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443022,"byte_end":14443025,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443030,"byte_end":14443044,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443049,"byte_end":14443052,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Calling `to_string_lossy` on a `Path` with valid unicode:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443057,"byte_end":14443118,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443123,"byte_end":14443126,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443131,"byte_end":14443138,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443143,"byte_end":14443173,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443178,"byte_end":14443181,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443186,"byte_end":14443222,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo.txt\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443227,"byte_end":14443277,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443282,"byte_end":14443289,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443294,"byte_end":14443297,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Had `path` contained invalid unicode, the `to_string_lossy` call might","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443302,"byte_end":14443376,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ have returned `\"fo�.txt\"`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443381,"byte_end":14443413,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5068},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443849,"byte_end":14443860,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"to_path_buf","qualname":"<Path>::to_path_buf","value":"fn to_path_buf<'_>(&'_ Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to an owned [`PathBuf`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to an owned [`PathBuf`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443514,"byte_end":14443560,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443565,"byte_end":14443568,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443573,"byte_end":14443609,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443614,"byte_end":14443617,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443622,"byte_end":14443636,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443641,"byte_end":14443644,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443649,"byte_end":14443656,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443661,"byte_end":14443702,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443707,"byte_end":14443710,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let path_buf = Path::new(\"foo.txt\").to_path_buf();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443715,"byte_end":14443769,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(path_buf, PathBuf::from(\"foo.txt\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443774,"byte_end":14443825,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443830,"byte_end":14443837,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5069},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444560,"byte_end":14444571,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<Path>::is_absolute","value":"fn is_absolute<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is absolute, i.e. if it is independent of\n the current directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is absolute, i.e. if it is independent of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14443940,"byte_end":14444014,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ the current directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444019,"byte_end":14444045,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444050,"byte_end":14444053,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path is absolute if it starts with the root, so","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444058,"byte_end":14444122,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/   `is_absolute` and [`has_root`] are equivalent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444127,"byte_end":14444179,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444184,"byte_end":14444187,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path is absolute if it has a prefix and starts with the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444192,"byte_end":14444267,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   root: `c:\\windows` is absolute, while `c:temp` and `\\temp` are not.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444272,"byte_end":14444345,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444350,"byte_end":14444353,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`has_root`]: #method.has_root","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444358,"byte_end":14444392,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444397,"byte_end":14444400,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444405,"byte_end":14444419,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444424,"byte_end":14444427,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444432,"byte_end":14444439,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444444,"byte_end":14444474,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444479,"byte_end":14444482,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!Path::new(\"foo.txt\").is_absolute());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444487,"byte_end":14444536,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444541,"byte_end":14444548,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5070},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444987,"byte_end":14444998,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<Path>::is_relative","value":"fn is_relative<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is relative, i.e. not absolute.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is relative, i.e. not absolute.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444633,"byte_end":14444697,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444702,"byte_end":14444705,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ See [`is_absolute`]'s documentation for more details.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444710,"byte_end":14444767,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444772,"byte_end":14444775,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`is_absolute`]: #method.is_absolute","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444780,"byte_end":14444820,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444825,"byte_end":14444828,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444833,"byte_end":14444847,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444852,"byte_end":14444855,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444860,"byte_end":14444867,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444872,"byte_end":14444902,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444907,"byte_end":14444910,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"foo.txt\").is_relative());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444915,"byte_end":14444963,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14444968,"byte_end":14444975,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5071},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445619,"byte_end":14445627,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"has_root","qualname":"<Path>::has_root","value":"fn has_root<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` has a root.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` has a root.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445060,"byte_end":14445104,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445109,"byte_end":14445112,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path has a root if it begins with `/`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445117,"byte_end":14445172,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445177,"byte_end":14445180,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path has a root if it:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445185,"byte_end":14445227,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/     * has no prefix and begins with a separator, e.g. `\\windows`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445232,"byte_end":14445300,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/     * has a prefix followed by a separator, e.g. `c:\\windows` but not `c:windows`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445305,"byte_end":14445390,"line_start":204,"line_end":204,"column_start":5,"column_end":90}},{"value":"/     * has any non-disk prefix, e.g. `\\\\server\\share`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445395,"byte_end":14445451,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445456,"byte_end":14445459,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445464,"byte_end":14445478,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445483,"byte_end":14445486,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445491,"byte_end":14445498,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445503,"byte_end":14445533,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445538,"byte_end":14445541,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"/etc/passwd\").has_root());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445546,"byte_end":14445595,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445600,"byte_end":14445607,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5072},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446332,"byte_end":14446338,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"fn parent<'_>(&'_ Self) -> Option<&'_ Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` without its final component, if there is one.","sig":null,"attributes":[{"value":"/ Returns the `Path` without its final component, if there is one.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445686,"byte_end":14445754,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445759,"byte_end":14445762,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in a root or prefix.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445767,"byte_end":14445831,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445836,"byte_end":14445839,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445844,"byte_end":14445924,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445929,"byte_end":14445932,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445937,"byte_end":14445951,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445956,"byte_end":14445959,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445964,"byte_end":14445971,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14445976,"byte_end":14446006,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446011,"byte_end":14446014,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446019,"byte_end":14446056,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ let parent = path.parent().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446061,"byte_end":14446101,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(parent, Path::new(\"/foo\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446106,"byte_end":14446148,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446153,"byte_end":14446156,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let grand_parent = parent.parent().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446161,"byte_end":14446209,"line_start":233,"line_end":233,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(grand_parent, Path::new(\"/\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446214,"byte_end":14446259,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(grand_parent.parent(), None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446264,"byte_end":14446308,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446313,"byte_end":14446320,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5074},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447461,"byte_end":14447470,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"ancestors","qualname":"<Path>::ancestors","value":"fn ancestors<'_>(&'_ Self) -> Ancestors","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over `Path` and its ancestors.","sig":null,"attributes":[{"value":"/ Produces an iterator over `Path` and its ancestors.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446422,"byte_end":14446477,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446482,"byte_end":14446485,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield the `Path` that is returned if the [`parent`] method is used zero","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446490,"byte_end":14446583,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446588,"byte_end":14446678,"line_start":244,"line_end":244,"column_start":5,"column_end":95}},{"value":"/ `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446683,"byte_end":14446774,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/ [`None`], the iterator will do likewise. The iterator will always yield at least one value,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446779,"byte_end":14446874,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ namely `&self`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446879,"byte_end":14446898,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446903,"byte_end":14446906,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446911,"byte_end":14446978,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/ [`parent`]: struct.Path.html#method.parent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14446983,"byte_end":14447029,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447034,"byte_end":14447037,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447042,"byte_end":14447056,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447061,"byte_end":14447064,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447069,"byte_end":14447076,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447081,"byte_end":14447111,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447116,"byte_end":14447119,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut ancestors = Path::new(\"/foo/bar\").ancestors();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447124,"byte_end":14447182,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo/bar\").into()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447187,"byte_end":14447256,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo\").into()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447261,"byte_end":14447326,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/\").into()));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447331,"byte_end":14447393,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(ancestors.next(), None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447398,"byte_end":14447437,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447442,"byte_end":14447449,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5075},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448515,"byte_end":14448524,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Path>::file_name","value":"fn file_name<'_>(&'_ Self) -> Option<&'_ OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final component of the `Path`, if there is one.","sig":null,"attributes":[{"value":"/ Returns the final component of the `Path`, if there is one.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447548,"byte_end":14447611,"line_start":267,"line_end":267,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447616,"byte_end":14447619,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the path is a normal file, this is the file name. If it's the path of a directory, this","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447624,"byte_end":14447718,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ is the directory name.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447723,"byte_end":14447749,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447754,"byte_end":14447757,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in `..`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447762,"byte_end":14447814,"line_start":272,"line_end":272,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447819,"byte_end":14447822,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447827,"byte_end":14447907,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447912,"byte_end":14447915,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447920,"byte_end":14447934,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447939,"byte_end":14447942,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447947,"byte_end":14447954,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447959,"byte_end":14447983,"line_start":279,"line_end":279,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447988,"byte_end":14447991,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14447996,"byte_end":14448026,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448031,"byte_end":14448034,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(OsStr::new(\"bin\")), Path::new(\"/usr/bin/\").file_name());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448039,"byte_end":14448115,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"tmp/foo.txt\").file_name());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448120,"byte_end":14448202,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.\").file_name());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448207,"byte_end":14448287,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.//\").file_name());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448292,"byte_end":14448374,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(None, Path::new(\"foo.txt/..\").file_name());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448379,"byte_end":14448437,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, Path::new(\"/\").file_name());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448442,"byte_end":14448491,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448496,"byte_end":14448503,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5076},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449778,"byte_end":14449790,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<Path>::strip_prefix","value":"fn strip_prefix<P, '_>(&'_ Self, P) -> Result<&'_ Path, StripPrefixError>\nwhere P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns a path that becomes `self` when joined onto `base`.","sig":null,"attributes":[{"value":"/ Returns a path that becomes `self` when joined onto `base`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448594,"byte_end":14448657,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448662,"byte_end":14448665,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448670,"byte_end":14448682,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448687,"byte_end":14448690,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `base` is not a prefix of `self` (i.e., [`starts_with`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448695,"byte_end":14448757,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/ returns `false`), returns [`Err`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448762,"byte_end":14448800,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448805,"byte_end":14448808,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`starts_with`]: #method.starts_with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448813,"byte_end":14448853,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ [`Err`]: https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448858,"byte_end":14448936,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448941,"byte_end":14448944,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448949,"byte_end":14448963,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448968,"byte_end":14448971,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448976,"byte_end":14448983,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14448988,"byte_end":14449029,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449034,"byte_end":14449037,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/test/haha/foo.txt\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449042,"byte_end":14449089,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449094,"byte_end":14449097,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(path.strip_prefix(\"/\"), Ok(Path::new(\"test/haha/foo.txt\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449102,"byte_end":14449177,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449182,"byte_end":14449256,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449261,"byte_end":14449336,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt\"), Ok(Path::new(\"\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449341,"byte_end":14449416,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt/\"), Ok(Path::new(\"\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449421,"byte_end":14449497,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(path.strip_prefix(\"test\").is_ok(), false);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449502,"byte_end":14449559,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(path.strip_prefix(\"/haha\").is_ok(), false);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449564,"byte_end":14449622,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449627,"byte_end":14449630,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let prefix = PathBuf::from(\"/test/\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449635,"byte_end":14449676,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.strip_prefix(prefix), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449681,"byte_end":14449754,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449759,"byte_end":14449766,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5078},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450475,"byte_end":14450486,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Path>::starts_with","value":"fn starts_with<P, '_>(&'_ Self, P) -> bool where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14449955,"byte_end":14450007,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450012,"byte_end":14450015,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450020,"byte_end":14450070,"line_start":331,"line_end":331,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450075,"byte_end":14450078,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450083,"byte_end":14450097,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450102,"byte_end":14450105,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450110,"byte_end":14450117,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450122,"byte_end":14450152,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450157,"byte_end":14450160,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450165,"byte_end":14450205,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450210,"byte_end":14450213,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(path.starts_with(\"/etc\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450218,"byte_end":14450256,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/ assert!(path.starts_with(\"/etc/\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450261,"byte_end":14450300,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/ assert!(path.starts_with(\"/etc/passwd\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450305,"byte_end":14450350,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/ assert!(path.starts_with(\"/etc/passwd/\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450355,"byte_end":14450401,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450406,"byte_end":14450409,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(!path.starts_with(\"/e\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450414,"byte_end":14450451,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450456,"byte_end":14450463,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5080},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450912,"byte_end":14450921,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Path>::ends_with","value":"fn ends_with<P, '_>(&'_ Self, P) -> bool where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `child` is a suffix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `child` is a suffix of `self`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450586,"byte_end":14450639,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450644,"byte_end":14450647,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450652,"byte_end":14450702,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450707,"byte_end":14450710,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450715,"byte_end":14450729,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450734,"byte_end":14450737,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450742,"byte_end":14450749,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450754,"byte_end":14450784,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450789,"byte_end":14450792,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450797,"byte_end":14450837,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450842,"byte_end":14450845,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ assert!(path.ends_with(\"passwd\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450850,"byte_end":14450888,"line_start":362,"line_end":362,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14450893,"byte_end":14450900,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5082},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451763,"byte_end":14451772,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"file_stem","qualname":"<Path>::file_stem","value":"fn file_stem<'_>(&'_ Self) -> Option<&'_ OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the stem (non-extension) portion of [`file_name`].","sig":null,"attributes":[{"value":"/ Extracts the stem (non-extension) portion of [`file_name`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451021,"byte_end":14451084,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451089,"byte_end":14451092,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451097,"byte_end":14451149,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451154,"byte_end":14451157,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The stem is:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451162,"byte_end":14451178,"line_start":372,"line_end":372,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451183,"byte_end":14451186,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451191,"byte_end":14451231,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ * The entire file name if there is no embedded `.`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451236,"byte_end":14451290,"line_start":375,"line_end":375,"column_start":5,"column_end":59}},{"value":"/ * The entire file name if the file name begins with `.` and has no other `.`s within","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451295,"byte_end":14451383,"line_start":376,"line_end":376,"column_start":5,"column_end":93}},{"value":"/ * Otherwise, the portion of the file name before the final `.`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451388,"byte_end":14451454,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451459,"byte_end":14451462,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451467,"byte_end":14451547,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451552,"byte_end":14451555,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451560,"byte_end":14451574,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451579,"byte_end":14451582,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451587,"byte_end":14451594,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451599,"byte_end":14451629,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451634,"byte_end":14451637,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451642,"byte_end":14451677,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451682,"byte_end":14451685,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", path.file_stem().unwrap());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451690,"byte_end":14451739,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451744,"byte_end":14451751,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5083},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452551,"byte_end":14452560,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"extension","qualname":"<Path>::extension","value":"fn extension<'_>(&'_ Self) -> Option<&'_ OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the extension of [`file_name`], if possible.","sig":null,"attributes":[{"value":"/ Extracts the extension of [`file_name`], if possible.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451842,"byte_end":14451899,"line_start":394,"line_end":394,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451904,"byte_end":14451907,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The extension is:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451912,"byte_end":14451933,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451938,"byte_end":14451941,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451946,"byte_end":14451986,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ * [`None`], if there is no embedded `.`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14451991,"byte_end":14452034,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ * [`None`], if the file name begins with `.` and has no other `.`s within","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452039,"byte_end":14452116,"line_start":400,"line_end":400,"column_start":5,"column_end":82}},{"value":"/ * Otherwise, the portion of the file name after the final `.`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452121,"byte_end":14452186,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452191,"byte_end":14452194,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452199,"byte_end":14452251,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452256,"byte_end":14452336,"line_start":404,"line_end":404,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452341,"byte_end":14452344,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452349,"byte_end":14452363,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452368,"byte_end":14452371,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452376,"byte_end":14452383,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452388,"byte_end":14452418,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452423,"byte_end":14452426,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452431,"byte_end":14452466,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452471,"byte_end":14452474,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"rs\", path.extension().unwrap());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452479,"byte_end":14452527,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452532,"byte_end":14452539,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5084},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453101,"byte_end":14453105,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"fn join<P, '_>(&'_ Self, P) -> PathBuf where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] with `path` adjoined to `self`.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] with `path` adjoined to `self`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452630,"byte_end":14452694,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452699,"byte_end":14452702,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::push`] for more details on what it means to adjoin a path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452707,"byte_end":14452784,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452789,"byte_end":14452792,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452797,"byte_end":14452833,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::push`]: struct.PathBuf.html#method.push","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452838,"byte_end":14452892,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452897,"byte_end":14452900,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452905,"byte_end":14452919,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452924,"byte_end":14452927,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452932,"byte_end":14452939,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452944,"byte_end":14452985,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452990,"byte_end":14452993,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"/etc\").join(\"passwd\"), PathBuf::from(\"/etc/passwd\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14452998,"byte_end":14453077,"line_start":431,"line_end":431,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453082,"byte_end":14453089,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5086},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453844,"byte_end":14453858,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_file_name","qualname":"<Path>::with_file_name","value":"fn with_file_name<S, '_>(&'_ Self, S) -> PathBuf where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given file name.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given file name.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453208,"byte_end":14453282,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453287,"byte_end":14453290,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_file_name`] for more details.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453295,"byte_end":14453347,"line_start":439,"line_end":439,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453352,"byte_end":14453355,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453360,"byte_end":14453396,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_file_name`]: struct.PathBuf.html#method.set_file_name","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453401,"byte_end":14453473,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453478,"byte_end":14453481,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453486,"byte_end":14453500,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453505,"byte_end":14453508,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453513,"byte_end":14453520,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453525,"byte_end":14453566,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453571,"byte_end":14453574,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.txt\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453579,"byte_end":14453620,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.with_file_name(\"bar.txt\"), PathBuf::from(\"/tmp/bar.txt\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453625,"byte_end":14453703,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453708,"byte_end":14453711,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453716,"byte_end":14453749,"line_start":452,"line_end":452,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(path.with_file_name(\"var\"), PathBuf::from(\"/var\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453754,"byte_end":14453820,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453825,"byte_end":14453832,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5088},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454477,"byte_end":14454491,"line_start":474,"line_end":474,"column_start":12,"column_end":26},"name":"with_extension","qualname":"<Path>::with_extension","value":"fn with_extension<S, '_>(&'_ Self, S) -> PathBuf where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given extension.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given extension.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14453973,"byte_end":14454047,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454052,"byte_end":14454055,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_extension`] for more details.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454060,"byte_end":14454112,"line_start":461,"line_end":461,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454117,"byte_end":14454120,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454125,"byte_end":14454161,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454166,"byte_end":14454238,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454243,"byte_end":14454246,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454251,"byte_end":14454265,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454270,"byte_end":14454273,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454278,"byte_end":14454285,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454290,"byte_end":14454331,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454336,"byte_end":14454339,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454344,"byte_end":14454379,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(path.with_extension(\"txt\"), PathBuf::from(\"foo.txt\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454384,"byte_end":14454453,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454458,"byte_end":14454465,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5090},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456078,"byte_end":14456088,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"fn components<'_>(&'_ Self) -> Components","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the [`Component`]s of the path.","sig":null,"attributes":[{"value":"/ Produces an iterator over the [`Component`]s of the path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454606,"byte_end":14454667,"line_start":478,"line_end":478,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454672,"byte_end":14454675,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When parsing the path, there is a small amount of normalization:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454680,"byte_end":14454748,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454753,"byte_end":14454756,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * Repeated separators are ignored, so `a/b` and `a//b` both have","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454761,"byte_end":14454829,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/   `a` and `b` as components.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454834,"byte_end":14454866,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454871,"byte_end":14454874,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ * Occurrences of `.` are normalized away, except if they are at the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454879,"byte_end":14454950,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14454955,"byte_end":14455025,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/   `a/b` all have `a` and `b` as components, but `./a/b` starts with","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455030,"byte_end":14455101,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/   an additional [`CurDir`] component.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455106,"byte_end":14455147,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455152,"byte_end":14455155,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * A trailing slash is normalized away, `/a/b` and `/a/b/` are equivalent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455160,"byte_end":14455237,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455242,"byte_end":14455245,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that no other normalization takes place; in particular, `a/c`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455250,"byte_end":14455320,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ and `a/b/../c` are distinct, to account for the possibility that `b`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455325,"byte_end":14455397,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ is a symbolic link (so its parent isn't `a`).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455402,"byte_end":14455451,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455456,"byte_end":14455459,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455464,"byte_end":14455502,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/ [`CurDir`]: enum.Component.html#variant.CurDir","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455507,"byte_end":14455557,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455562,"byte_end":14455565,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455570,"byte_end":14455584,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455589,"byte_end":14455592,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455597,"byte_end":14455604,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455609,"byte_end":14455633,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455638,"byte_end":14455641,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{Path, Component};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455646,"byte_end":14455689,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455694,"byte_end":14455697,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo.txt\").components();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455702,"byte_end":14455766,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455771,"byte_end":14455774,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(components.next(), Some(Component::RootDir));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455779,"byte_end":14455839,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"tmp\"))));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455844,"byte_end":14455922,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"foo.txt\"))));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14455927,"byte_end":14456009,"line_start":510,"line_end":510,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(components.next(), None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456014,"byte_end":14456054,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456059,"byte_end":14456066,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5091},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456994,"byte_end":14456998,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"fn iter<'_>(&'_ Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the path's components viewed as [`OsStr`]\n slices.","sig":null,"attributes":[{"value":"/ Produces an iterator over the path's components viewed as [`OsStr`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456202,"byte_end":14456273,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ slices.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456278,"byte_end":14456289,"line_start":520,"line_end":520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456294,"byte_end":14456297,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For more information about the particulars of how the path is separated","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456302,"byte_end":14456377,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ into components, see [`components`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456382,"byte_end":14456422,"line_start":523,"line_end":523,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456427,"byte_end":14456430,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`components`]: #method.components","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456435,"byte_end":14456473,"line_start":525,"line_end":525,"column_start":5,"column_end":43}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456478,"byte_end":14456544,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456549,"byte_end":14456552,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456557,"byte_end":14456571,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456576,"byte_end":14456579,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456584,"byte_end":14456591,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456596,"byte_end":14456620,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456625,"byte_end":14456628,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{self, Path};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456633,"byte_end":14456671,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456676,"byte_end":14456679,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut it = Path::new(\"/tmp/foo.txt\").iter();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456684,"byte_end":14456734,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(&path::MAIN_SEPARATOR.to_string())));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456739,"byte_end":14456818,"line_start":536,"line_end":536,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"tmp\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456823,"byte_end":14456874,"line_start":537,"line_end":537,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"foo.txt\")));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456879,"byte_end":14456934,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(it.next(), None)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456939,"byte_end":14456970,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14456975,"byte_end":14456982,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5092},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457501,"byte_end":14457508,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"display","qualname":"<Path>::display","value":"fn display<'_>(&'_ Self) -> Display","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`] for safely printing paths\n that may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`] for safely printing paths","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457094,"byte_end":14457169,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ that may contain non-Unicode data.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457174,"byte_end":14457212,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457217,"byte_end":14457220,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457225,"byte_end":14457294,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457299,"byte_end":14457302,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457307,"byte_end":14457321,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457326,"byte_end":14457329,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457334,"byte_end":14457341,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457346,"byte_end":14457376,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457381,"byte_end":14457384,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.rs\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457389,"byte_end":14457429,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457434,"byte_end":14457437,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", path.display());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457442,"byte_end":14457477,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457482,"byte_end":14457489,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5093},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458274,"byte_end":14458282,"line_start":588,"line_end":588,"column_start":18,"column_end":26},"name":"metadata","qualname":"<Path>::metadata","value":"async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457573,"byte_end":14457619,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457624,"byte_end":14457627,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457632,"byte_end":14457709,"line_start":567,"line_end":567,"column_start":5,"column_end":82}},{"value":"/ destination file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457714,"byte_end":14457735,"line_start":568,"line_end":568,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457740,"byte_end":14457743,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::metadata`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457748,"byte_end":14457789,"line_start":570,"line_end":570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457794,"byte_end":14457797,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`fs::metadata`]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457802,"byte_end":14457846,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457851,"byte_end":14457854,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457859,"byte_end":14457873,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457878,"byte_end":14457881,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457886,"byte_end":14457899,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457904,"byte_end":14457978,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457983,"byte_end":14457988,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14457993,"byte_end":14458023,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458028,"byte_end":14458031,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458036,"byte_end":14458078,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.metadata().await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458083,"byte_end":14458125,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458130,"byte_end":14458173,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458178,"byte_end":14458183,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458188,"byte_end":14458205,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458210,"byte_end":14458217,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458222,"byte_end":14458256,"line_start":587,"line_end":587,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5096},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459014,"byte_end":14459030,"line_start":612,"line_end":612,"column_start":18,"column_end":34},"name":"symlink_metadata","qualname":"<Path>::symlink_metadata","value":"async fn symlink_metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory without following symbolic links.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458364,"byte_end":14458443,"line_start":592,"line_end":592,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458448,"byte_end":14458451,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::symlink_metadata`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458456,"byte_end":14458505,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458510,"byte_end":14458513,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [`fs::symlink_metadata`]: ../fs/fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458518,"byte_end":14458578,"line_start":596,"line_end":596,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458583,"byte_end":14458586,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458591,"byte_end":14458605,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458610,"byte_end":14458613,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458618,"byte_end":14458631,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458636,"byte_end":14458710,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458715,"byte_end":14458720,"line_start":602,"line_end":602,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458725,"byte_end":14458755,"line_start":603,"line_end":603,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458760,"byte_end":14458763,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458768,"byte_end":14458810,"line_start":605,"line_end":605,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.symlink_metadata().await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458815,"byte_end":14458865,"line_start":606,"line_end":606,"column_start":5,"column_end":55}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458870,"byte_end":14458913,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458918,"byte_end":14458923,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458928,"byte_end":14458945,"line_start":609,"line_end":609,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458950,"byte_end":14458957,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14458962,"byte_end":14458996,"line_start":611,"line_end":611,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5099},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459857,"byte_end":14459869,"line_start":638,"line_end":638,"column_start":18,"column_end":30},"name":"canonicalize","qualname":"<Path>::canonicalize","value":"async fn canonicalize<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459120,"byte_end":14459161,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459166,"byte_end":14459169,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459174,"byte_end":14459263,"line_start":618,"line_end":618,"column_start":5,"column_end":94}},{"value":"/ symbolic links resolved.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459268,"byte_end":14459296,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459301,"byte_end":14459304,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::canonicalize`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459309,"byte_end":14459354,"line_start":621,"line_end":621,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459359,"byte_end":14459362,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ [`fs::canonicalize`]: ../fs/fn.canonicalize.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459367,"byte_end":14459419,"line_start":623,"line_end":623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459424,"byte_end":14459427,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459432,"byte_end":14459446,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459451,"byte_end":14459454,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459459,"byte_end":14459472,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459477,"byte_end":14459551,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459556,"byte_end":14459561,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459566,"byte_end":14459607,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459612,"byte_end":14459615,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/test/../test/bar.rs\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459620,"byte_end":14459673,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(path.canonicalize().await?, PathBuf::from(\"/foo/test/bar.rs\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459678,"byte_end":14459756,"line_start":633,"line_end":633,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459761,"byte_end":14459766,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459771,"byte_end":14459788,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459793,"byte_end":14459800,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459805,"byte_end":14459839,"line_start":637,"line_end":637,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5102},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460524,"byte_end":14460533,"line_start":661,"line_end":661,"column_start":18,"column_end":27},"name":"read_link","qualname":"<Path>::read_link","value":"async fn read_link<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14459950,"byte_end":14460020,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460025,"byte_end":14460028,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_link`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460033,"byte_end":14460075,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460080,"byte_end":14460083,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ [`fs::read_link`]: ../fs/fn.read_link.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460088,"byte_end":14460134,"line_start":646,"line_end":646,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460139,"byte_end":14460142,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460147,"byte_end":14460161,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460166,"byte_end":14460169,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460174,"byte_end":14460187,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460192,"byte_end":14460266,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460271,"byte_end":14460276,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460281,"byte_end":14460311,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460316,"byte_end":14460319,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa/sky_castle.rs\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460324,"byte_end":14460374,"line_start":655,"line_end":655,"column_start":5,"column_end":55}},{"value":"/ let path_link = path.read_link().await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460379,"byte_end":14460423,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460428,"byte_end":14460433,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460438,"byte_end":14460455,"line_start":658,"line_end":658,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460460,"byte_end":14460467,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460472,"byte_end":14460506,"line_start":660,"line_end":660,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5105},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461643,"byte_end":14461651,"line_start":696,"line_end":696,"column_start":18,"column_end":26},"name":"read_dir","qualname":"<Path>::read_dir","value":"async fn read_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460611,"byte_end":14460668,"line_start":665,"line_end":665,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460673,"byte_end":14460676,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The stream will yield instances of [`io::Result`]`<`[`DirEntry`]`>`. New","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460681,"byte_end":14460757,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/ errors may be encountered after an iterator is initially constructed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460762,"byte_end":14460835,"line_start":668,"line_end":668,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460840,"byte_end":14460843,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_dir`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460848,"byte_end":14460889,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460894,"byte_end":14460897,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460902,"byte_end":14460944,"line_start":672,"line_end":672,"column_start":5,"column_end":47}},{"value":"/ [`DirEntry`]: ../fs/struct.DirEntry.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460949,"byte_end":14460993,"line_start":673,"line_end":673,"column_start":5,"column_end":49}},{"value":"/ [`fs::read_dir`]: ../fs/fn.read_dir.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14460998,"byte_end":14461042,"line_start":674,"line_end":674,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461047,"byte_end":14461050,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461055,"byte_end":14461069,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461074,"byte_end":14461077,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461082,"byte_end":14461095,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461100,"byte_end":14461174,"line_start":679,"line_end":679,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461179,"byte_end":14461184,"line_start":680,"line_end":680,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461189,"byte_end":14461211,"line_start":681,"line_end":681,"column_start":5,"column_end":27}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461216,"byte_end":14461246,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461251,"byte_end":14461281,"line_start":683,"line_end":683,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461286,"byte_end":14461289,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461294,"byte_end":14461330,"line_start":685,"line_end":685,"column_start":5,"column_end":41}},{"value":"/ let mut dir = fs::read_dir(&path).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461335,"byte_end":14461380,"line_start":686,"line_end":686,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461385,"byte_end":14461388,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461393,"byte_end":14461437,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461442,"byte_end":14461467,"line_start":689,"line_end":689,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461472,"byte_end":14461532,"line_start":690,"line_end":690,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461537,"byte_end":14461542,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461547,"byte_end":14461552,"line_start":692,"line_end":692,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461557,"byte_end":14461574,"line_start":693,"line_end":693,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461579,"byte_end":14461586,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461591,"byte_end":14461625,"line_start":695,"line_end":695,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5108},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462680,"byte_end":14462686,"line_start":726,"line_end":726,"column_start":18,"column_end":24},"name":"exists","qualname":"<Path>::exists","value":"async fn exists<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path points at an existing entity.","sig":null,"attributes":[{"value":"/ Returns `true` if the path points at an existing entity.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461732,"byte_end":14461792,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461797,"byte_end":14461800,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461805,"byte_end":14461882,"line_start":702,"line_end":702,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461887,"byte_end":14461967,"line_start":703,"line_end":703,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461972,"byte_end":14461975,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14461980,"byte_end":14462058,"line_start":705,"line_end":705,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462063,"byte_end":14462110,"line_start":706,"line_end":706,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462115,"byte_end":14462118,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462123,"byte_end":14462137,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462142,"byte_end":14462145,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462150,"byte_end":14462163,"line_start":710,"line_end":710,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462168,"byte_end":14462242,"line_start":711,"line_end":711,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462247,"byte_end":14462252,"line_start":712,"line_end":712,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462257,"byte_end":14462287,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"does_not_exist.txt\").exists().await, false);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462292,"byte_end":14462362,"line_start":714,"line_end":714,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462367,"byte_end":14462372,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462377,"byte_end":14462394,"line_start":716,"line_end":716,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462399,"byte_end":14462406,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462411,"byte_end":14462414,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462419,"byte_end":14462433,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462438,"byte_end":14462441,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462446,"byte_end":14462525,"line_start":721,"line_end":721,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462530,"byte_end":14462568,"line_start":722,"line_end":722,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462573,"byte_end":14462576,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462581,"byte_end":14462623,"line_start":724,"line_end":724,"column_start":5,"column_end":47}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462628,"byte_end":14462662,"line_start":725,"line_end":725,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5111},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463944,"byte_end":14463951,"line_start":759,"line_end":759,"column_start":18,"column_end":25},"name":"is_file","qualname":"<Path>::is_file","value":"async fn is_file<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a regular file.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a regular file.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462756,"byte_end":14462836,"line_start":730,"line_end":730,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462841,"byte_end":14462844,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462849,"byte_end":14462926,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14462931,"byte_end":14463011,"line_start":733,"line_end":733,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463016,"byte_end":14463019,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463024,"byte_end":14463102,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463107,"byte_end":14463154,"line_start":736,"line_end":736,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463159,"byte_end":14463162,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463167,"byte_end":14463181,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463186,"byte_end":14463189,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463194,"byte_end":14463207,"line_start":740,"line_end":740,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463212,"byte_end":14463286,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463291,"byte_end":14463296,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463301,"byte_end":14463331,"line_start":743,"line_end":743,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_file().await, false);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463336,"byte_end":14463406,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_file().await, true);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463411,"byte_end":14463473,"line_start":745,"line_end":745,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463478,"byte_end":14463483,"line_start":746,"line_end":746,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463488,"byte_end":14463505,"line_start":747,"line_end":747,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463510,"byte_end":14463517,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463522,"byte_end":14463525,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463530,"byte_end":14463544,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463549,"byte_end":14463552,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463557,"byte_end":14463636,"line_start":752,"line_end":752,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463641,"byte_end":14463711,"line_start":753,"line_end":753,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_file] if it was Ok.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463716,"byte_end":14463757,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463762,"byte_end":14463765,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463770,"byte_end":14463812,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_file]: ../fs/struct.Metadata.html#method.is_file","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463817,"byte_end":14463887,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14463892,"byte_end":14463926,"line_start":758,"line_end":758,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5115},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465278,"byte_end":14465284,"line_start":796,"line_end":796,"column_start":18,"column_end":24},"name":"is_dir","qualname":"<Path>::is_dir","value":"async fn is_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a directory.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464090,"byte_end":14464167,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464172,"byte_end":14464175,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464180,"byte_end":14464257,"line_start":768,"line_end":768,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464262,"byte_end":14464342,"line_start":769,"line_end":769,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464347,"byte_end":14464350,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464355,"byte_end":14464433,"line_start":771,"line_end":771,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464438,"byte_end":14464485,"line_start":772,"line_end":772,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464490,"byte_end":14464493,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464498,"byte_end":14464512,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464517,"byte_end":14464520,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464525,"byte_end":14464538,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464543,"byte_end":14464617,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464622,"byte_end":14464627,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464632,"byte_end":14464662,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464667,"byte_end":14464670,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_dir().await, true);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464675,"byte_end":14464743,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_dir().await, false);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464748,"byte_end":14464810,"line_start":782,"line_end":782,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464815,"byte_end":14464820,"line_start":783,"line_end":783,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464825,"byte_end":14464842,"line_start":784,"line_end":784,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464847,"byte_end":14464854,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464859,"byte_end":14464862,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464867,"byte_end":14464881,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464886,"byte_end":14464889,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464894,"byte_end":14464973,"line_start":789,"line_end":789,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14464978,"byte_end":14465048,"line_start":790,"line_end":790,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_dir] if it was Ok.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465053,"byte_end":14465093,"line_start":791,"line_end":791,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465098,"byte_end":14465101,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465106,"byte_end":14465148,"line_start":793,"line_end":793,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_dir]: ../fs/struct.Metadata.html#method.is_dir","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465153,"byte_end":14465221,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465226,"byte_end":14465260,"line_start":795,"line_end":795,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5119},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465851,"byte_end":14465864,"line_start":817,"line_end":817,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"fn into_path_buf(Box<Path>) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465422,"byte_end":14465495,"line_start":803,"line_end":803,"column_start":5,"column_end":78}},{"value":"/ allocating.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465500,"byte_end":14465515,"line_start":804,"line_end":804,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465520,"byte_end":14465523,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465528,"byte_end":14465592,"line_start":806,"line_end":806,"column_start":5,"column_end":69}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465597,"byte_end":14465633,"line_start":807,"line_end":807,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465638,"byte_end":14465641,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465646,"byte_end":14465660,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465665,"byte_end":14465668,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465673,"byte_end":14465680,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465685,"byte_end":14465715,"line_start":812,"line_end":812,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465720,"byte_end":14465723,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let path: Box<Path> = Path::new(\"foo.txt\").into();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465728,"byte_end":14465782,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/ let path_buf = path.into_path_buf();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465787,"byte_end":14465827,"line_start":815,"line_end":815,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14465832,"byte_end":14465839,"line_start":816,"line_end":816,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5121},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466093,"byte_end":14466097,"line_start":825,"line_end":825,"column_start":8,"column_end":12},"name":"from","qualname":"<Box<Path> as std::convert::From>::from","value":"fn from<'_>(&'_ Path) -> Box<Path>","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5123},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466420,"byte_end":14466424,"line_start":835,"line_end":835,"column_start":8,"column_end":12},"name":"from","qualname":"<Arc<Path> as std::convert::From>::from","value":"fn from<'_>(&'_ Path) -> Arc<Path>","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":" Converts a Path into a Rc by copying the Path data into a new Rc buffer.\n","sig":null,"attributes":[{"value":"/ Converts a Path into a Rc by copying the Path data into a new Rc buffer.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466322,"byte_end":14466398,"line_start":833,"line_end":833,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466403,"byte_end":14466412,"line_start":834,"line_end":834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5125},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466636,"byte_end":14466640,"line_start":843,"line_end":843,"column_start":8,"column_end":12},"name":"from","qualname":"<Rc<Path> as std::convert::From>::from","value":"fn from<'_>(&'_ Path) -> Rc<Path>","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466619,"byte_end":14466628,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5128},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466850,"byte_end":14466858,"line_start":852,"line_end":852,"column_start":8,"column_end":16},"name":"to_owned","qualname":"<Path as std::borrow::ToOwned>::to_owned","value":"fn to_owned<'_>(&'_ Self) -> PathBuf","parent":{"krate":5,"index":783},"children":[],"decl_id":{"krate":5,"index":785},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5130},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466951,"byte_end":14466957,"line_start":858,"line_end":858,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Path as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ OsStr","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5132},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467049,"byte_end":14467055,"line_start":864,"line_end":864,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Path as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5134},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467132,"byte_end":14467138,"line_start":870,"line_end":870,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<OsStr as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467255,"byte_end":14467259,"line_start":877,"line_end":877,"column_start":8,"column_end":12},"name":"from","qualname":"<Cow as std::convert::From>::from","value":"fn from(&'a Path) -> Cow","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467238,"byte_end":14467247,"line_start":876,"line_end":876,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5139},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467371,"byte_end":14467377,"line_start":883,"line_end":883,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Cow as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5141},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467468,"byte_end":14467474,"line_start":889,"line_end":889,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<OsString as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5143},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467560,"byte_end":14467566,"line_start":895,"line_end":895,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<str as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5145},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467655,"byte_end":14467661,"line_start":901,"line_end":901,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<String as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5147},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467751,"byte_end":14467757,"line_start":907,"line_end":907,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PathBuf as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5152},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467903,"byte_end":14467912,"line_start":916,"line_end":916,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a PathBuf as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Iter","parent":{"krate":2,"index":8410},"children":[],"decl_id":{"krate":2,"index":8413},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5157},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14468064,"byte_end":14468073,"line_start":925,"line_end":925,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Path as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Iter","parent":{"krate":2,"index":8410},"children":[],"decl_id":{"krate":2,"index":8413},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5162},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14470621,"byte_end":14470625,"line_start":1013,"line_end":1013,"column_start":8,"column_end":12},"name":"from","qualname":"<&'a Path as std::convert::From>::from","value":"fn from(&'a std::path::Path) -> &'a Path","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5165},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14470770,"byte_end":14470774,"line_start":1019,"line_end":1019,"column_start":8,"column_end":12},"name":"into","qualname":"<&'a Path as std::convert::Into>::into","value":"fn into(Self) -> &'a std::path::Path","parent":{"krate":2,"index":3171},"children":[],"decl_id":{"krate":2,"index":3173},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5167},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14470903,"byte_end":14470909,"line_start":1025,"line_end":1025,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Path as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ std::path::Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5169},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14471014,"byte_end":14471020,"line_start":1031,"line_end":1031,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<std::path::Path as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5171},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14471117,"byte_end":14471123,"line_start":1037,"line_end":1037,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<std::path::PathBuf as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6091},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14471834,"byte_end":14471841,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::path::pathbuf::PathBuf","value":"PathBuf {  }","parent":null,"children":[{"krate":0,"index":6092}],"decl_id":null,"docs":" This struct is an async version of [`std::path::PathBuf`].","sig":null,"attributes":[{"value":"/ This struct is an async version of [`std::path::PathBuf`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14471605,"byte_end":14471667,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14471668,"byte_end":14471671,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14471672,"byte_end":14471751,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":5210},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472082,"byte_end":14472085,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"fn new() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Allocates an empty `PathBuf`.","sig":null,"attributes":[{"value":"/ Allocates an empty `PathBuf`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14471897,"byte_end":14471930,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14471935,"byte_end":14471938,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14471943,"byte_end":14471957,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14471962,"byte_end":14471965,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14471970,"byte_end":14471977,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14471982,"byte_end":14472015,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472020,"byte_end":14472023,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let path = PathBuf::new();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472028,"byte_end":14472058,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472063,"byte_end":14472070,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5211},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472446,"byte_end":14472453,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"fn as_path<'_>(&'_ Self) -> &'_ Path","parent":null,"children":[],"decl_id":null,"docs":" Coerces to a [`Path`] slice.","sig":null,"attributes":[{"value":"/ Coerces to a [`Path`] slice.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472153,"byte_end":14472185,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472190,"byte_end":14472193,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472198,"byte_end":14472228,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472233,"byte_end":14472236,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472241,"byte_end":14472255,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472260,"byte_end":14472263,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472268,"byte_end":14472275,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472280,"byte_end":14472321,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472326,"byte_end":14472329,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/test\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472334,"byte_end":14472369,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Path::new(\"/test\"), p.as_path());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472374,"byte_end":14472422,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472427,"byte_end":14472434,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5212},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473447,"byte_end":14473451,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"fn push<P, '_>(&'_ mut Self, P) where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` with `path`.","sig":null,"attributes":[{"value":"/ Extends `self` with `path`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472519,"byte_end":14472550,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472555,"byte_end":14472558,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it replaces the current path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472563,"byte_end":14472619,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472624,"byte_end":14472627,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ On Windows:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472632,"byte_end":14472647,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472652,"byte_end":14472655,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * if `path` has a root but no prefix (e.g., `\\windows`), it","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472660,"byte_end":14472723,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/   replaces everything except for the prefix (if any) of `self`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472728,"byte_end":14472795,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ * if `path` has a prefix but no root, it replaces `self`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472800,"byte_end":14472861,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472866,"byte_end":14472869,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472874,"byte_end":14472888,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472893,"byte_end":14472896,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Pushing a relative path extends the existing path:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472901,"byte_end":14472955,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472960,"byte_end":14472963,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472968,"byte_end":14472975,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14472980,"byte_end":14473013,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473018,"byte_end":14473021,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473026,"byte_end":14473067,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ path.push(\"file.bk\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473072,"byte_end":14473097,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(path, PathBuf::from(\"/tmp/file.bk\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473102,"byte_end":14473154,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473159,"byte_end":14473166,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473171,"byte_end":14473174,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Pushing an absolute path replaces the existing path:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473179,"byte_end":14473235,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473240,"byte_end":14473243,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473248,"byte_end":14473255,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473260,"byte_end":14473293,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473298,"byte_end":14473301,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473306,"byte_end":14473347,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ path.push(\"/etc\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473352,"byte_end":14473374,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(path, PathBuf::from(\"/etc\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473379,"byte_end":14473423,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473428,"byte_end":14473435,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5214},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474149,"byte_end":14474152,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"pop","qualname":"<PathBuf>::pop","value":"fn pop<'_>(&'_ mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Truncates `self` to [`self.parent`].","sig":null,"attributes":[{"value":"/ Truncates `self` to [`self.parent`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473540,"byte_end":14473580,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473585,"byte_end":14473588,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.parent`] is [`None`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473593,"byte_end":14473661,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/ Otherwise, returns `true`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473666,"byte_end":14473696,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473701,"byte_end":14473704,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473709,"byte_end":14473789,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ [`self.parent`]: struct.PathBuf.html#method.parent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473794,"byte_end":14473848,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473853,"byte_end":14473856,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473861,"byte_end":14473875,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473880,"byte_end":14473883,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473888,"byte_end":14473895,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473900,"byte_end":14473941,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473946,"byte_end":14473949,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/test/test.rs\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14473954,"byte_end":14474001,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474006,"byte_end":14474009,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ p.pop();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474014,"byte_end":14474026,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/test\"), p);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474031,"byte_end":14474069,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ p.pop();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474074,"byte_end":14474086,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/\"), p);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474091,"byte_end":14474125,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474130,"byte_end":14474137,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5215},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475182,"byte_end":14475195,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"set_file_name","qualname":"<PathBuf>::set_file_name","value":"fn set_file_name<S, '_>(&'_ mut Self, S) where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.file_name`] to `file_name`.","sig":null,"attributes":[{"value":"/ Updates [`self.file_name`] to `file_name`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474210,"byte_end":14474256,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474261,"byte_end":14474264,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If [`self.file_name`] was [`None`], this is equivalent to pushing","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474269,"byte_end":14474338,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ `file_name`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474343,"byte_end":14474359,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474364,"byte_end":14474367,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Otherwise it is equivalent to calling [`pop`] and then pushing","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474372,"byte_end":14474438,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ `file_name`. The new path will be a sibling of the original path.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474443,"byte_end":14474512,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ (That is, it will have the same parent.)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474517,"byte_end":14474561,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474566,"byte_end":14474569,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474574,"byte_end":14474634,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474639,"byte_end":14474719,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ [`pop`]: struct.PathBuf.html#method.pop","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474724,"byte_end":14474767,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474772,"byte_end":14474775,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474780,"byte_end":14474794,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474799,"byte_end":14474802,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474807,"byte_end":14474814,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474819,"byte_end":14474852,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474857,"byte_end":14474860,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut buf = PathBuf::from(\"/\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474865,"byte_end":14474902,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ assert!(buf.file_name() == None);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474907,"byte_end":14474944,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ buf.set_file_name(\"bar\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474949,"byte_end":14474978,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ assert!(buf == PathBuf::from(\"/bar\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14474983,"byte_end":14475025,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"/ assert!(buf.file_name().is_some());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475030,"byte_end":14475069,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ buf.set_file_name(\"baz.txt\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475074,"byte_end":14475107,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ assert!(buf == PathBuf::from(\"/baz.txt\"));","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475112,"byte_end":14475158,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475163,"byte_end":14475170,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5217},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476208,"byte_end":14476221,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"set_extension","qualname":"<PathBuf>::set_extension","value":"fn set_extension<S, '_>(&'_ mut Self, S) -> bool where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.extension`] to `extension`.","sig":null,"attributes":[{"value":"/ Updates [`self.extension`] to `extension`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475295,"byte_end":14475341,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475346,"byte_end":14475349,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.file_name`] is [`None`],","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475354,"byte_end":14475425,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ returns `true` and updates the extension otherwise.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475430,"byte_end":14475485,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475490,"byte_end":14475493,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If [`self.extension`] is [`None`], the extension is added; otherwise","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475498,"byte_end":14475570,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ it is replaced.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475575,"byte_end":14475594,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475599,"byte_end":14475602,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475607,"byte_end":14475667,"line_start":152,"line_end":152,"column_start":5,"column_end":65}},{"value":"/ [`self.extension`]: struct.PathBuf.html#method.extension","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475672,"byte_end":14475732,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475737,"byte_end":14475817,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475822,"byte_end":14475825,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475830,"byte_end":14475844,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475849,"byte_end":14475852,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475857,"byte_end":14475864,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475869,"byte_end":14475910,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475915,"byte_end":14475918,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/feel/the\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475923,"byte_end":14475966,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475971,"byte_end":14475974,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"force\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14475979,"byte_end":14476008,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Path::new(\"/feel/the.force\"), p.as_path());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476013,"byte_end":14476071,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476076,"byte_end":14476079,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"dark_side\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476084,"byte_end":14476117,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Path::new(\"/feel/the.dark_side\"), p.as_path());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476122,"byte_end":14476184,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476189,"byte_end":14476196,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5219},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476688,"byte_end":14476702,"line_start":185,"line_end":185,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<PathBuf>::into_os_string","value":"fn into_os_string(Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PathBuf`, returning its internal [`OsString`] storage.","sig":null,"attributes":[{"value":"/ Consumes the `PathBuf`, returning its internal [`OsString`] storage.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476329,"byte_end":14476401,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476406,"byte_end":14476409,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476414,"byte_end":14476486,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476491,"byte_end":14476494,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476499,"byte_end":14476513,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476518,"byte_end":14476521,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476526,"byte_end":14476533,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476538,"byte_end":14476571,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476576,"byte_end":14476579,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/the/head\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476584,"byte_end":14476623,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let os_str = p.into_os_string();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476628,"byte_end":14476664,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476669,"byte_end":14476676,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5220},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476953,"byte_end":14476968,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"into_boxed_path","qualname":"<PathBuf>::into_boxed_path","value":"fn into_boxed_path(Self) -> Box<Path>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","sig":null,"attributes":[{"value":"/ Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476770,"byte_end":14476829,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476834,"byte_end":14476837,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476842,"byte_end":14476906,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14476911,"byte_end":14476941,"line_start":192,"line_end":192,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5222},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477153,"byte_end":14477157,"line_start":200,"line_end":200,"column_start":8,"column_end":12},"name":"from","qualname":"<PathBuf as std::convert::From>::from","value":"fn from(Box<Path>) -> PathBuf","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477270,"byte_end":14477274,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"from","qualname":"<Box<Path> as std::convert::From>::from","value":"fn from(PathBuf) -> Box<Path>","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477387,"byte_end":14477392,"line_start":213,"line_end":213,"column_start":8,"column_end":13},"name":"clone","qualname":"<Box<Path> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2887},"children":[],"decl_id":{"krate":2,"index":2888},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477370,"byte_end":14477379,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5229},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477525,"byte_end":14477529,"line_start":219,"line_end":219,"column_start":8,"column_end":12},"name":"from","qualname":"<PathBuf as std::convert::From>::from","value":"fn from<'_>(&'_ T) -> PathBuf","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5231},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477649,"byte_end":14477653,"line_start":225,"line_end":225,"column_start":8,"column_end":12},"name":"from","qualname":"<PathBuf as std::convert::From>::from","value":"fn from(OsString) -> PathBuf","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5233},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477766,"byte_end":14477770,"line_start":231,"line_end":231,"column_start":8,"column_end":12},"name":"from","qualname":"<OsString as std::convert::From>::from","value":"fn from(PathBuf) -> OsString","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5235},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477882,"byte_end":14477886,"line_start":237,"line_end":237,"column_start":8,"column_end":12},"name":"from","qualname":"<PathBuf as std::convert::From>::from","value":"fn from(String) -> PathBuf","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5238},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478038,"byte_end":14478046,"line_start":245,"line_end":245,"column_start":8,"column_end":16},"name":"from_str","qualname":"<PathBuf as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12999},"children":[],"decl_id":{"krate":2,"index":13001},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5241},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478181,"byte_end":14478190,"line_start":251,"line_end":251,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<PathBuf as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> PathBuf where I: IntoIterator<Item = P>","parent":{"krate":2,"index":8406},"children":[],"decl_id":{"krate":2,"index":8408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5245},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478383,"byte_end":14478389,"line_start":259,"line_end":259,"column_start":8,"column_end":14},"name":"extend","qualname":"<PathBuf as std::iter::Extend>::extend","value":"fn extend<I, '_>(&'_ mut Self, I) where I: IntoIterator<Item = P>","parent":{"krate":2,"index":8419},"children":[],"decl_id":{"krate":2,"index":8421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5250},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478572,"byte_end":14478577,"line_start":267,"line_end":267,"column_start":8,"column_end":13},"name":"deref","qualname":"<PathBuf as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":3491},"children":[],"decl_id":{"krate":2,"index":3493},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5252},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478675,"byte_end":14478681,"line_start":273,"line_end":273,"column_start":8,"column_end":14},"name":"borrow","qualname":"<PathBuf as std::borrow::Borrow>::borrow","value":"fn borrow<'_>(&'_ Self) -> &'_ Path","parent":{"krate":2,"index":2862},"children":[],"decl_id":{"krate":2,"index":2864},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5255},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478794,"byte_end":14478798,"line_start":280,"line_end":280,"column_start":8,"column_end":12},"name":"from","qualname":"<Cow as std::convert::From>::from","value":"fn from(PathBuf) -> Cow","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478777,"byte_end":14478786,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5258},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478929,"byte_end":14478933,"line_start":287,"line_end":287,"column_start":8,"column_end":12},"name":"from","qualname":"<Cow as std::convert::From>::from","value":"fn from(&'a PathBuf) -> Cow","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478912,"byte_end":14478921,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5261},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479077,"byte_end":14479081,"line_start":294,"line_end":294,"column_start":8,"column_end":12},"name":"from","qualname":"<PathBuf as std::convert::From>::from","value":"fn from(Cow) -> Self","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479060,"byte_end":14479069,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5263},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479198,"byte_end":14479202,"line_start":301,"line_end":301,"column_start":8,"column_end":12},"name":"from","qualname":"<Arc<Path> as std::convert::From>::from","value":"fn from(PathBuf) -> Arc<Path>","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479181,"byte_end":14479190,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5265},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479423,"byte_end":14479427,"line_start":309,"line_end":309,"column_start":8,"column_end":12},"name":"from","qualname":"<Rc<Path> as std::convert::From>::from","value":"fn from(PathBuf) -> Rc<Path>","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479406,"byte_end":14479415,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5267},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479625,"byte_end":14479631,"line_start":316,"line_end":316,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PathBuf as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ OsStr","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5269},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14480776,"byte_end":14480780,"line_start":362,"line_end":362,"column_start":8,"column_end":12},"name":"from","qualname":"<PathBuf as std::convert::From>::from","value":"fn from(std::path::PathBuf) -> PathBuf","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5271},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14480912,"byte_end":14480916,"line_start":368,"line_end":368,"column_start":8,"column_end":12},"name":"into","qualname":"<PathBuf as std::convert::Into>::into","value":"fn into(Self) -> std::path::PathBuf","parent":{"krate":2,"index":3171},"children":[],"decl_id":{"krate":2,"index":3173},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5273},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14481024,"byte_end":14481030,"line_start":374,"line_end":374,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PathBuf as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ std::path::Path","parent":{"krate":2,"index":3165},"children":[],"decl_id":{"krate":2,"index":3167},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5311},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":5312},{"krate":0,"index":5315},{"krate":0,"index":5318},{"krate":0,"index":5319},{"krate":0,"index":5322},{"krate":0,"index":5325},{"krate":0,"index":5328},{"krate":0,"index":5329},{"krate":0,"index":5332},{"krate":0,"index":5335},{"krate":0,"index":5338},{"krate":0,"index":5341},{"krate":0,"index":5342},{"krate":0,"index":5345},{"krate":0,"index":5348},{"krate":0,"index":5351},{"krate":0,"index":5354},{"krate":0,"index":5467},{"krate":0,"index":5624}],"decl_id":null,"docs":" Networking primitives for TCP/UDP communication.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16847,"byte_end":16874,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Networking primitives for TCP/UDP communication.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481097,"byte_end":14481149,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481150,"byte_end":14481153,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides networking functionality for the Transmission Control and User","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481154,"byte_end":14481241,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ Datagram Protocols, as well as types for IP and socket addresses.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481242,"byte_end":14481311,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481312,"byte_end":14481315,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::net`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481316,"byte_end":14481368,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481369,"byte_end":14481372,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481373,"byte_end":14481391,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481392,"byte_end":14481395,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481396,"byte_end":14481484,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481485,"byte_end":14481554,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`IpAddr`] represents IP addresses of either IPv4 or IPv6; [`Ipv4Addr`] and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481555,"byte_end":14481636,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/   [`Ipv6Addr`] are respectively IPv4 and IPv6 addresses","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481637,"byte_end":14481696,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ * [`SocketAddr`] represents socket addresses of either IPv4 or IPv6; [`SocketAddrV4`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481697,"byte_end":14481786,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/   and [`SocketAddrV6`] are respectively IPv4 and IPv6 socket addresses","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481787,"byte_end":14481861,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ * [`ToSocketAddrs`] is a trait that used for generic address resolution when interacting","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481862,"byte_end":14481954,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/   with networking objects like [`TcpListener`], [`TcpStream`] or [`UdpSocket`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14481955,"byte_end":14482037,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ * Other types are return or parameter types for various methods in this module","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482038,"byte_end":14482120,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482121,"byte_end":14482124,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`IpAddr`]: enum.IpAddr.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482125,"byte_end":14482157,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ [`Ipv4Addr`]: struct.Ipv4Addr.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482158,"byte_end":14482196,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [`Ipv6Addr`]: struct.Ipv6Addr.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482197,"byte_end":14482235,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482236,"byte_end":14482276,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`SocketAddrV4`]: struct.SocketAddrV4.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482277,"byte_end":14482323,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ [`SocketAddrV6`]: struct.SocketAddrV6.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482324,"byte_end":14482370,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482371,"byte_end":14482415,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482416,"byte_end":14482456,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/ [`ToSocketAddrs`]: trait.ToSocketAddrs.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482457,"byte_end":14482504,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482505,"byte_end":14482545,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482546,"byte_end":14482549,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482550,"byte_end":14482584,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482585,"byte_end":14482588,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ APIs such as Unix domain sockets are available on certain platforms only. You can find","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482589,"byte_end":14482679,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"/ platform-specific extensions in the [`async_std::os`] module.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482680,"byte_end":14482745,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482746,"byte_end":14482749,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`async_std::os`]: ../os/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482750,"byte_end":14482789,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482790,"byte_end":14482852,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482853,"byte_end":14482856,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482857,"byte_end":14482871,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482872,"byte_end":14482875,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ A simple UDP echo server:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482876,"byte_end":14482905,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482906,"byte_end":14482909,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482910,"byte_end":14482923,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482924,"byte_end":14482998,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14482999,"byte_end":14483004,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483005,"byte_end":14483039,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483040,"byte_end":14483043,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483044,"byte_end":14483102,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483103,"byte_end":14483137,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483138,"byte_end":14483141,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483142,"byte_end":14483152,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483153,"byte_end":14483211,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483212,"byte_end":14483260,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483261,"byte_end":14483266,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483267,"byte_end":14483272,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483273,"byte_end":14483283,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14483284,"byte_end":14483291,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5403},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484967,"byte_end":14484980,"line_start":45,"line_end":45,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs","parent":null,"children":[{"krate":0,"index":5404},{"krate":0,"index":5405}],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484389,"byte_end":14484449,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484450,"byte_end":14484453,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is an async version of [`std::net::ToSocketAddrs`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484454,"byte_end":14484520,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484521,"byte_end":14484524,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`std::net::ToSocketAddrs`]: https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484525,"byte_end":14484616,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484617,"byte_end":14484657,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484658,"byte_end":14484661,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484662,"byte_end":14484676,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484677,"byte_end":14484680,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484681,"byte_end":14484688,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484689,"byte_end":14484763,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484764,"byte_end":14484769,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::ToSocketAddrs;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484770,"byte_end":14484808,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484809,"byte_end":14484812,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let addr = \"localhost:8080\".to_socket_addrs().await?.next().unwrap();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484813,"byte_end":14484886,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ println!(\"resolved: {:?}\", addr);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484887,"byte_end":14484924,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484925,"byte_end":14484930,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484931,"byte_end":14484948,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484949,"byte_end":14484956,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5404},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485075,"byte_end":14485079,"line_start":47,"line_end":47,"column_start":10,"column_end":14},"name":"Iter","qualname":"::net::addr::ToSocketAddrs::Iter","value":"type Iter: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":5403},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14484987,"byte_end":14485065,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5405},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485421,"byte_end":14485436,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::net::addr::ToSocketAddrs::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5403},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485115,"byte_end":14485181,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485186,"byte_end":14485189,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485194,"byte_end":14485285,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485290,"byte_end":14485315,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485320,"byte_end":14485323,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485328,"byte_end":14485413,"line_start":54,"line_end":54,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5408},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485653,"byte_end":14485662,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::net::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(JoinHandle<io::Result<I>>)","parent":{"krate":0,"index":5406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5410},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485663,"byte_end":14485688,"line_start":66,"line_end":66,"column_start":15,"column_end":40},"name":"0","qualname":"::net::addr::ToSocketAddrsFuture::Resolving::0","value":"task::join_handle::JoinHandle<std::result::Result<I, futures_io::Error>>","parent":{"krate":0,"index":5408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5411},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485695,"byte_end":14485700,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Ready","qualname":"::net::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":5406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5413},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485701,"byte_end":14485714,"line_start":67,"line_end":67,"column_start":11,"column_end":24},"name":"0","qualname":"::net::addr::ToSocketAddrsFuture::Ready::0","value":"std::result::Result<I, futures_io::Error>","parent":{"krate":0,"index":5411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5414},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485721,"byte_end":14485725,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"Done","qualname":"::net::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":5406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5406},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485624,"byte_end":14485643,"line_start":65,"line_end":65,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::net::addr::ToSocketAddrsFuture","value":"enum ToSocketAddrsFuture<I> {\n    Resolving(JoinHandle<io::Result<I>>),\n    Ready(io::Result<I>),\n    Done,\n}","parent":null,"children":[{"krate":0,"index":5408},{"krate":0,"index":5411},{"krate":0,"index":5414}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485575,"byte_end":14485614,"line_start":64,"line_end":64,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5425},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14486386,"byte_end":14486390,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"poll","qualname":"<ToSocketAddrsFuture<I> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13773},"children":[],"decl_id":{"krate":2,"index":13775},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5428},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14487114,"byte_end":14487129,"line_start":110,"line_end":110,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<SocketAddr as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5403},"children":[],"decl_id":{"krate":0,"index":5405},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5431},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14487421,"byte_end":14487436,"line_start":123,"line_end":123,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<SocketAddrV4 as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5403},"children":[],"decl_id":{"krate":0,"index":5405},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5435},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14487798,"byte_end":14487813,"line_start":138,"line_end":138,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<SocketAddrV6 as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5403},"children":[],"decl_id":{"krate":0,"index":5405},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5439},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14488176,"byte_end":14488191,"line_start":153,"line_end":153,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(IpAddr, u16) as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5403},"children":[],"decl_id":{"krate":0,"index":5405},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5442},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14488599,"byte_end":14488614,"line_start":170,"line_end":170,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(Ipv4Addr, u16) as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5403},"children":[],"decl_id":{"krate":0,"index":5405},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5445},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14488931,"byte_end":14488946,"line_start":184,"line_end":184,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(Ipv6Addr, u16) as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5403},"children":[],"decl_id":{"krate":0,"index":5405},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5448},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14489262,"byte_end":14489277,"line_start":198,"line_end":198,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(&'_ str, u16) as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5403},"children":[],"decl_id":{"krate":0,"index":5405},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5453},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14490275,"byte_end":14490290,"line_start":229,"line_end":229,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<str as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5403},"children":[],"decl_id":{"krate":0,"index":5405},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5459},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14490956,"byte_end":14490971,"line_start":251,"line_end":251,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<&'a [SocketAddr] as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5403},"children":[],"decl_id":{"krate":0,"index":5405},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5463},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14491251,"byte_end":14491266,"line_start":264,"line_end":264,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<&'_ T as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5403},"children":[],"decl_id":{"krate":0,"index":5405},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5466},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14491520,"byte_end":14491535,"line_start":277,"line_end":277,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<String as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5403},"children":[],"decl_id":{"krate":0,"index":5405},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6114},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493329,"byte_end":14493340,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":6115}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP socket server, listening for connections.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492073,"byte_end":14492124,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492125,"byte_end":14492128,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492129,"byte_end":14492226,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ TCP connections. These can be accepted by awaiting elements from the async stream of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492227,"byte_end":14492315,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ [`incoming`] connections.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492316,"byte_end":14492345,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492346,"byte_end":14492349,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492350,"byte_end":14492406,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492407,"byte_end":14492410,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492411,"byte_end":14492480,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492481,"byte_end":14492484,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpListener`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492485,"byte_end":14492548,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492549,"byte_end":14492552,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492553,"byte_end":14492579,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492580,"byte_end":14492614,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492615,"byte_end":14492669,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ [`std::net::TcpListener`]: https://doc.rust-lang.org/std/net/struct.TcpListener.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492670,"byte_end":14492758,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492759,"byte_end":14492762,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492763,"byte_end":14492777,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492778,"byte_end":14492781,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492782,"byte_end":14492795,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492796,"byte_end":14492870,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492871,"byte_end":14492876,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492877,"byte_end":14492899,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492900,"byte_end":14492936,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492937,"byte_end":14492967,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492968,"byte_end":14492971,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14492972,"byte_end":14493034,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493035,"byte_end":14493078,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493079,"byte_end":14493082,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493083,"byte_end":14493135,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/     let stream = stream?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493136,"byte_end":14493165,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/     let (reader, writer) = &mut (&stream, &stream);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493166,"byte_end":14493221,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/     io::copy(reader, writer).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493222,"byte_end":14493262,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493263,"byte_end":14493268,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493269,"byte_end":14493274,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493275,"byte_end":14493292,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493293,"byte_end":14493300,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5521},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14494162,"byte_end":14494166,"line_start":78,"line_end":78,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"async fn bind<A>(A) -> /*impl Trait*/ where A: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` which will be bound to the specified address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493412,"byte_end":14493489,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493494,"byte_end":14493497,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493502,"byte_end":14493563,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493568,"byte_end":14493571,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this listener.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493576,"byte_end":14493669,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ The port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493674,"byte_end":14493742,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493747,"byte_end":14493750,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493755,"byte_end":14493769,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/ Create a TCP listener bound to 127.0.0.1:0:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493774,"byte_end":14493821,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493826,"byte_end":14493829,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493834,"byte_end":14493847,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493852,"byte_end":14493926,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493931,"byte_end":14493936,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493941,"byte_end":14493977,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493982,"byte_end":14493985,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493990,"byte_end":14494049,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14494054,"byte_end":14494059,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14494064,"byte_end":14494081,"line_start":74,"line_end":74,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14494086,"byte_end":14494093,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14494098,"byte_end":14494101,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14494106,"byte_end":14494144,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5526},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495332,"byte_end":14495338,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14494799,"byte_end":14494854,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14494859,"byte_end":14494862,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14494867,"byte_end":14494959,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14494964,"byte_end":14494967,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14494972,"byte_end":14494987,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14494992,"byte_end":14494995,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495000,"byte_end":14495013,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495018,"byte_end":14495092,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495097,"byte_end":14495102,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495107,"byte_end":14495143,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495148,"byte_end":14495151,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495156,"byte_end":14495215,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495220,"byte_end":14495270,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495275,"byte_end":14495280,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495285,"byte_end":14495302,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495307,"byte_end":14495314,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5529},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496502,"byte_end":14496510,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn incoming<'_>(&'_ Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495567,"byte_end":14495612,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495617,"byte_end":14495620,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495625,"byte_end":14495716,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495721,"byte_end":14495813,"line_start":126,"line_end":126,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495818,"byte_end":14495821,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495826,"byte_end":14495856,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495861,"byte_end":14495941,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495946,"byte_end":14495949,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495954,"byte_end":14495969,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495974,"byte_end":14495977,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14495982,"byte_end":14495995,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496000,"byte_end":14496074,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496079,"byte_end":14496084,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496089,"byte_end":14496125,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496130,"byte_end":14496160,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496165,"byte_end":14496168,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496173,"byte_end":14496232,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496237,"byte_end":14496280,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496285,"byte_end":14496288,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496293,"byte_end":14496345,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496350,"byte_end":14496383,"line_start":143,"line_end":143,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496388,"byte_end":14496436,"line_start":144,"line_end":144,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496441,"byte_end":14496446,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496451,"byte_end":14496456,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496461,"byte_end":14496478,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14496483,"byte_end":14496490,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5530},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498601,"byte_end":14498611,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn local_addr<'_>(&'_ Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498056,"byte_end":14498117,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498122,"byte_end":14498125,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, to identify when binding to port 0 which port was assigned","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498130,"byte_end":14498225,"line_start":196,"line_end":196,"column_start":5,"column_end":100}},{"value":"/ by the OS.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498230,"byte_end":14498244,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498249,"byte_end":14498252,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498257,"byte_end":14498271,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498276,"byte_end":14498279,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498284,"byte_end":14498297,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498302,"byte_end":14498376,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498381,"byte_end":14498386,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498391,"byte_end":14498427,"line_start":204,"line_end":204,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498432,"byte_end":14498435,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498440,"byte_end":14498502,"line_start":206,"line_end":206,"column_start":5,"column_end":67}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498507,"byte_end":14498545,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498550,"byte_end":14498555,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498560,"byte_end":14498577,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498582,"byte_end":14498589,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5531},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499251,"byte_end":14499259,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::listener::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":5533}],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498700,"byte_end":14498741,"line_start":216,"line_end":216,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498742,"byte_end":14498745,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498746,"byte_end":14498844,"line_start":218,"line_end":218,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`TcpListener`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498845,"byte_end":14498903,"line_start":219,"line_end":219,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498904,"byte_end":14498907,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::Incoming`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498908,"byte_end":14498968,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498969,"byte_end":14498972,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14498973,"byte_end":14499053,"line_start":223,"line_end":223,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.TcpListener.html#method.incoming","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499054,"byte_end":14499111,"line_start":224,"line_end":224,"column_start":1,"column_end":58}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499112,"byte_end":14499156,"line_start":225,"line_end":225,"column_start":1,"column_end":45}},{"value":"/ [`std::net::Incoming`]: https://doc.rust-lang.org/std/net/struct.Incoming.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499157,"byte_end":14499239,"line_start":226,"line_end":226,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5536},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499442,"byte_end":14499451,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Incoming as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5540},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499745,"byte_end":14499748,"line_start":241,"line_end":241,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Incoming as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10298},"children":[],"decl_id":{"krate":2,"index":10299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5542},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499985,"byte_end":14499989,"line_start":248,"line_end":248,"column_start":8,"column_end":12},"name":"from","qualname":"<TcpListener as std::convert::From>::from","value":"fn from(std::net::TcpListener) -> TcpListener","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":" Converts a `std::net::TcpListener` into its asynchronous equivalent.\n","sig":null,"attributes":[{"value":"/ Converts a `std::net::TcpListener` into its asynchronous equivalent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499905,"byte_end":14499977,"line_start":247,"line_end":247,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5545},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14500335,"byte_end":14500343,"line_start":258,"line_end":258,"column_start":8,"column_end":16},"name":"try_from","qualname":"<std::net::TcpListener as std::convert::TryFrom>::try_from","value":"fn try_from(TcpListener) -> io::Result<std::net::TcpListener>","parent":{"krate":2,"index":3181},"children":[],"decl_id":{"krate":2,"index":3184},"docs":" Converts a `TcpListener` into its synchronous equivalent.\n","sig":null,"attributes":[{"value":"/ Converts a `TcpListener` into its synchronous equivalent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14500266,"byte_end":14500327,"line_start":257,"line_end":257,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6132},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14501240,"byte_end":14501253,"line_start":293,"line_end":293,"column_start":12,"column_end":25},"name":"as_raw_socket","qualname":"<TcpListener as std::os::windows::io::AsRawSocket>::as_raw_socket","value":"fn as_raw_socket<'_>(&'_ Self) -> RawSocket","parent":{"krate":1,"index":5951},"children":[],"decl_id":{"krate":1,"index":5952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6134},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14501393,"byte_end":14501408,"line_start":299,"line_end":299,"column_start":19,"column_end":34},"name":"from_raw_socket","qualname":"<TcpListener as std::os::windows::io::FromRawSocket>::from_raw_socket","value":"unsafe fn from_raw_socket(RawSocket) -> TcpListener","parent":{"krate":1,"index":5953},"children":[],"decl_id":{"krate":1,"index":5954},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6136},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14501580,"byte_end":14501595,"line_start":305,"line_end":305,"column_start":12,"column_end":27},"name":"into_raw_socket","qualname":"<TcpListener as std::os::windows::io::IntoRawSocket>::into_raw_socket","value":"fn into_raw_socket(Self) -> RawSocket","parent":{"krate":1,"index":5955},"children":[],"decl_id":{"krate":1,"index":5956},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503487,"byte_end":14503496,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":6138}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"/ A TCP stream between a local and a remote socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14501929,"byte_end":14501982,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14501983,"byte_end":14501986,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `TcpStream` can either be created by connecting to an endpoint, via the [`connect`] method,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14501987,"byte_end":14502084,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ or by [accepting] a connection from a [listener].  It can be read or written to using the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502085,"byte_end":14502178,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ [`AsyncRead`], [`AsyncWrite`], and related extension traits in [`futures::io`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502179,"byte_end":14502262,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502263,"byte_end":14502266,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The connection will be closed when the value is dropped. The reading and writing portions of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502267,"byte_end":14502363,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ the connection can also be shut down individually with the [`shutdown`] method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502364,"byte_end":14502447,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502448,"byte_end":14502451,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpStream`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502452,"byte_end":14502513,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502514,"byte_end":14502517,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`connect`]: struct.TcpStream.html#method.connect","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502518,"byte_end":14502571,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ [accepting]: struct.TcpListener.html#method.accept","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502572,"byte_end":14502626,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [listener]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502627,"byte_end":14502666,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncRead.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502667,"byte_end":14502745,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ [`AsyncWrite`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502746,"byte_end":14502826,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ [`futures::io`]: https://docs.rs/futures/0.3/futures/io/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502827,"byte_end":14502897,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`shutdown`]: struct.TcpStream.html#method.shutdown","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502898,"byte_end":14502953,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ [`std::net::TcpStream`]: https://doc.rust-lang.org/std/net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14502954,"byte_end":14503038,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503039,"byte_end":14503042,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503043,"byte_end":14503058,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503059,"byte_end":14503062,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503063,"byte_end":14503076,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503077,"byte_end":14503151,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503152,"byte_end":14503157,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503158,"byte_end":14503192,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503193,"byte_end":14503223,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503224,"byte_end":14503227,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503228,"byte_end":14503293,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503294,"byte_end":14503338,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503339,"byte_end":14503342,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503343,"byte_end":14503377,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503378,"byte_end":14503419,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503420,"byte_end":14503425,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503426,"byte_end":14503443,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503444,"byte_end":14503451,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5587},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14504261,"byte_end":14504268,"line_start":73,"line_end":73,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"async fn connect<A>(A) -> /*impl Trait*/ where A: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TCP stream connected to the specified address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503580,"byte_end":14503644,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503649,"byte_end":14503652,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the `addr`","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503657,"byte_end":14503741,"line_start":56,"line_end":56,"column_start":5,"column_end":89}},{"value":"/ provided. The [returned future] will be resolved once the stream has successfully","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503746,"byte_end":14503831,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ connected, or it will return an error if one occurs.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503836,"byte_end":14503892,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503897,"byte_end":14503900,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [returned future]: struct.Connect.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503905,"byte_end":14503947,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503952,"byte_end":14503955,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503960,"byte_end":14503974,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503979,"byte_end":14503982,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503987,"byte_end":14504000,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14504005,"byte_end":14504079,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14504084,"byte_end":14504089,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14504094,"byte_end":14504128,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14504133,"byte_end":14504136,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14504141,"byte_end":14504199,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14504204,"byte_end":14504209,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14504214,"byte_end":14504231,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14504236,"byte_end":14504243,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5592},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505437,"byte_end":14505447,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn local_addr<'_>(&'_ Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is connected to.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505021,"byte_end":14505084,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505089,"byte_end":14505092,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505097,"byte_end":14505112,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505117,"byte_end":14505120,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505125,"byte_end":14505138,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505143,"byte_end":14505217,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505222,"byte_end":14505227,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505232,"byte_end":14505266,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505271,"byte_end":14505274,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505279,"byte_end":14505340,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505345,"byte_end":14505381,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505386,"byte_end":14505391,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505396,"byte_end":14505413,"line_start":111,"line_end":111,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505418,"byte_end":14505425,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5593},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505954,"byte_end":14505963,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn peer_addr<'_>(&'_ Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505538,"byte_end":14505602,"line_start":117,"line_end":117,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505607,"byte_end":14505610,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505615,"byte_end":14505630,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505635,"byte_end":14505638,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505643,"byte_end":14505656,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505661,"byte_end":14505735,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505740,"byte_end":14505745,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505750,"byte_end":14505784,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505789,"byte_end":14505792,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505797,"byte_end":14505858,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505863,"byte_end":14505898,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505903,"byte_end":14505908,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505913,"byte_end":14505930,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14505935,"byte_end":14505942,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5594},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506618,"byte_end":14506621,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn ttl<'_>(&'_ Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506053,"byte_end":14506111,"line_start":135,"line_end":135,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506116,"byte_end":14506119,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506124,"byte_end":14506184,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506189,"byte_end":14506192,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506197,"byte_end":14506229,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506234,"byte_end":14506237,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506242,"byte_end":14506256,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506261,"byte_end":14506264,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506269,"byte_end":14506282,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506287,"byte_end":14506361,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506366,"byte_end":14506371,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506376,"byte_end":14506410,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506415,"byte_end":14506418,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506423,"byte_end":14506484,"line_start":148,"line_end":148,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506489,"byte_end":14506492,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506497,"byte_end":14506522,"line_start":150,"line_end":150,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506527,"byte_end":14506562,"line_start":151,"line_end":151,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506567,"byte_end":14506572,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506577,"byte_end":14506594,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506599,"byte_end":14506606,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5595},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507260,"byte_end":14507267,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn set_ttl<'_>(&'_ Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506698,"byte_end":14506756,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506761,"byte_end":14506764,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506769,"byte_end":14506845,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506850,"byte_end":14506871,"line_start":162,"line_end":162,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506876,"byte_end":14506879,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506884,"byte_end":14506898,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506903,"byte_end":14506906,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506911,"byte_end":14506924,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14506929,"byte_end":14507003,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507008,"byte_end":14507013,"line_start":168,"line_end":168,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507018,"byte_end":14507052,"line_start":169,"line_end":169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507057,"byte_end":14507060,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507065,"byte_end":14507126,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507131,"byte_end":14507134,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507139,"byte_end":14507164,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507169,"byte_end":14507204,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507209,"byte_end":14507214,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507219,"byte_end":14507236,"line_start":176,"line_end":176,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507241,"byte_end":14507248,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5596},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508118,"byte_end":14508122,"line_start":204,"line_end":204,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is connected, without\n removing that data from the queue.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is connected, without","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507360,"byte_end":14507449,"line_start":182,"line_end":182,"column_start":5,"column_end":94}},{"value":"/ removing that data from the queue.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507454,"byte_end":14507492,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507497,"byte_end":14507500,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507505,"byte_end":14507556,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507561,"byte_end":14507564,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507569,"byte_end":14507664,"line_start":187,"line_end":187,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507669,"byte_end":14507710,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507715,"byte_end":14507718,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507723,"byte_end":14507737,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507742,"byte_end":14507745,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507750,"byte_end":14507763,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507768,"byte_end":14507842,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507847,"byte_end":14507852,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507857,"byte_end":14507891,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507896,"byte_end":14507899,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507904,"byte_end":14507965,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507970,"byte_end":14507973,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14507978,"byte_end":14508010,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508015,"byte_end":14508056,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508061,"byte_end":14508066,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508071,"byte_end":14508088,"line_start":202,"line_end":202,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508093,"byte_end":14508100,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5599},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508808,"byte_end":14508815,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn nodelay<'_>(&'_ Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508217,"byte_end":14508279,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508284,"byte_end":14508287,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508292,"byte_end":14508356,"line_start":210,"line_end":210,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508361,"byte_end":14508364,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: #method.set_nodelay","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508369,"byte_end":14508409,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508414,"byte_end":14508417,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508422,"byte_end":14508436,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508441,"byte_end":14508444,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508449,"byte_end":14508462,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508467,"byte_end":14508541,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508546,"byte_end":14508551,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508556,"byte_end":14508590,"line_start":219,"line_end":219,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508595,"byte_end":14508598,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508603,"byte_end":14508664,"line_start":221,"line_end":221,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508669,"byte_end":14508672,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508677,"byte_end":14508707,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508712,"byte_end":14508752,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508757,"byte_end":14508762,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508767,"byte_end":14508784,"line_start":226,"line_end":226,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508789,"byte_end":14508796,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5600},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509699,"byte_end":14509710,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn set_nodelay<'_>(&'_ Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508897,"byte_end":14508959,"line_start":232,"line_end":232,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508964,"byte_end":14508967,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14508972,"byte_end":14509041,"line_start":234,"line_end":234,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509046,"byte_end":14509119,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509124,"byte_end":14509197,"line_start":236,"line_end":236,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509202,"byte_end":14509277,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509282,"byte_end":14509300,"line_start":238,"line_end":238,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509305,"byte_end":14509308,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509313,"byte_end":14509327,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509332,"byte_end":14509335,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509340,"byte_end":14509353,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509358,"byte_end":14509432,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509437,"byte_end":14509442,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509447,"byte_end":14509481,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509486,"byte_end":14509489,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509494,"byte_end":14509555,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509560,"byte_end":14509563,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509568,"byte_end":14509598,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509603,"byte_end":14509643,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509648,"byte_end":14509653,"line_start":251,"line_end":251,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509658,"byte_end":14509675,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509680,"byte_end":14509687,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5601},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510547,"byte_end":14510555,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn shutdown<'_>(&'_ Self, std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509816,"byte_end":14509882,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509887,"byte_end":14509890,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O on the specified portions to return","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509895,"byte_end":14509984,"line_start":260,"line_end":260,"column_start":5,"column_end":94}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14509989,"byte_end":14510071,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510076,"byte_end":14510079,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510084,"byte_end":14510154,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510159,"byte_end":14510162,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510167,"byte_end":14510181,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510186,"byte_end":14510189,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510194,"byte_end":14510207,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510212,"byte_end":14510286,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510291,"byte_end":14510296,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510301,"byte_end":14510328,"line_start":270,"line_end":270,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510333,"byte_end":14510336,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510341,"byte_end":14510375,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510380,"byte_end":14510383,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510388,"byte_end":14510449,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510454,"byte_end":14510491,"line_start":275,"line_end":275,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510496,"byte_end":14510501,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510506,"byte_end":14510523,"line_start":277,"line_end":277,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510528,"byte_end":14510535,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5603},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510700,"byte_end":14510709,"line_start":285,"line_end":285,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<TcpStream as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5604},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510893,"byte_end":14510911,"line_start":293,"line_end":293,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<TcpStream as futures_lite::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5606},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14511147,"byte_end":14511156,"line_start":303,"line_end":303,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<&'_ TcpStream as futures_lite::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5607},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14511348,"byte_end":14511366,"line_start":311,"line_end":311,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<&'_ TcpStream as futures_lite::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":39},"children":[],"decl_id":{"krate":27,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5609},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14511610,"byte_end":14511620,"line_start":321,"line_end":321,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<TcpStream as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5610},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14511801,"byte_end":14511820,"line_start":329,"line_end":329,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<TcpStream as futures_lite::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5611},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14512021,"byte_end":14512031,"line_start":337,"line_end":337,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<TcpStream as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5612},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14512161,"byte_end":14512171,"line_start":341,"line_end":341,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<TcpStream as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5614},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14512331,"byte_end":14512341,"line_start":347,"line_end":347,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<&'_ TcpStream as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5615},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14512530,"byte_end":14512549,"line_start":355,"line_end":355,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<&'_ TcpStream as futures_lite::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5616},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14512758,"byte_end":14512768,"line_start":363,"line_end":363,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<&'_ TcpStream as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5617},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14512906,"byte_end":14512916,"line_start":367,"line_end":367,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<&'_ TcpStream as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":27,"index":42},"children":[],"decl_id":{"krate":27,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5619},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14513178,"byte_end":14513182,"line_start":374,"line_end":374,"column_start":8,"column_end":12},"name":"from","qualname":"<TcpStream as std::convert::From>::from","value":"fn from(std::net::TcpStream) -> TcpStream","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":" Converts a `std::net::TcpStream` into its asynchronous equivalent.\n","sig":null,"attributes":[{"value":"/ Converts a `std::net::TcpStream` into its asynchronous equivalent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14513100,"byte_end":14513170,"line_start":373,"line_end":373,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5622},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14513520,"byte_end":14513528,"line_start":384,"line_end":384,"column_start":8,"column_end":16},"name":"try_from","qualname":"<std::net::TcpStream as std::convert::TryFrom>::try_from","value":"fn try_from(TcpStream) -> io::Result<std::net::TcpStream>","parent":{"krate":2,"index":3181},"children":[],"decl_id":{"krate":2,"index":3184},"docs":" Converts a `TcpStream` into its synchronous equivalent.\n","sig":null,"attributes":[{"value":"/ Converts a `TcpStream` into its synchronous equivalent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14513453,"byte_end":14513512,"line_start":383,"line_end":383,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6157},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14514850,"byte_end":14514863,"line_start":427,"line_end":427,"column_start":12,"column_end":25},"name":"as_raw_socket","qualname":"<TcpStream as std::os::windows::io::AsRawSocket>::as_raw_socket","value":"fn as_raw_socket<'_>(&'_ Self) -> RawSocket","parent":{"krate":1,"index":5951},"children":[],"decl_id":{"krate":1,"index":5952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6159},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14515011,"byte_end":14515026,"line_start":433,"line_end":433,"column_start":19,"column_end":34},"name":"from_raw_socket","qualname":"<TcpStream as std::os::windows::io::FromRawSocket>::from_raw_socket","value":"unsafe fn from_raw_socket(RawSocket) -> TcpStream","parent":{"krate":1,"index":5953},"children":[],"decl_id":{"krate":1,"index":5954},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6161},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14515192,"byte_end":14515207,"line_start":439,"line_end":439,"column_start":12,"column_end":27},"name":"into_raw_socket","qualname":"<TcpStream as std::os::windows::io::IntoRawSocket>::into_raw_socket","value":"fn into_raw_socket(Self) -> RawSocket","parent":{"krate":1,"index":5955},"children":[],"decl_id":{"krate":1,"index":5956},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6162},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516970,"byte_end":14516979,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":6163}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14515716,"byte_end":14515733,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14515734,"byte_end":14515737,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ After creating a `UdpSocket` by [`bind`]ing it to a socket address, data can be [sent to] and","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14515738,"byte_end":14515835,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ [received from] any other socket address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14515836,"byte_end":14515881,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14515882,"byte_end":14515885,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14515886,"byte_end":14515985,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`] and [`TcpStream`] for async TCP primitives.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14515986,"byte_end":14516079,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516080,"byte_end":14516083,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::UdpSocket`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516084,"byte_end":14516145,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516146,"byte_end":14516149,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516150,"byte_end":14516176,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516177,"byte_end":14516215,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516216,"byte_end":14516246,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516247,"byte_end":14516291,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516292,"byte_end":14516332,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516333,"byte_end":14516395,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516396,"byte_end":14516450,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ [`std::net::UdpSocket`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516451,"byte_end":14516535,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516536,"byte_end":14516539,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516540,"byte_end":14516555,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516556,"byte_end":14516559,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516560,"byte_end":14516573,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516574,"byte_end":14516648,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516649,"byte_end":14516654,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516655,"byte_end":14516689,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516690,"byte_end":14516693,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516694,"byte_end":14516752,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516753,"byte_end":14516787,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516788,"byte_end":14516791,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516792,"byte_end":14516802,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516803,"byte_end":14516861,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516862,"byte_end":14516910,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516911,"byte_end":14516916,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516917,"byte_end":14516922,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516923,"byte_end":14516933,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14516934,"byte_end":14516941,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5648},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517634,"byte_end":14517638,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"async fn bind<A>(A) -> /*impl Trait*/ where A: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517047,"byte_end":14517095,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517100,"byte_end":14517103,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this socket. The","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517108,"byte_end":14517203,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517208,"byte_end":14517272,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517277,"byte_end":14517280,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517285,"byte_end":14517323,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517328,"byte_end":14517331,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517336,"byte_end":14517350,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517355,"byte_end":14517358,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517363,"byte_end":14517376,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517381,"byte_end":14517455,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517460,"byte_end":14517465,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517470,"byte_end":14517504,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517509,"byte_end":14517512,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517517,"byte_end":14517572,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517577,"byte_end":14517582,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517587,"byte_end":14517604,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517609,"byte_end":14517616,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5653},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518917,"byte_end":14518926,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"fn peer_addr<'_>(&'_ Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address that this listener is connected to.","sig":null,"attributes":[{"value":"/ Returns the peer address that this listener is connected to.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518261,"byte_end":14518325,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518330,"byte_end":14518333,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when connect to port 0 to figure out which port was","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518338,"byte_end":14518426,"line_start":93,"line_end":93,"column_start":5,"column_end":93}},{"value":"/ actually connected.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518431,"byte_end":14518454,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518459,"byte_end":14518462,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518467,"byte_end":14518481,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518486,"byte_end":14518489,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518494,"byte_end":14518507,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518512,"byte_end":14518586,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518591,"byte_end":14518596,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518601,"byte_end":14518635,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518640,"byte_end":14518643,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let socket1 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518648,"byte_end":14518704,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ let socket2 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518709,"byte_end":14518765,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/ socket1.connect(socket2.local_addr()?).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518770,"byte_end":14518820,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ let addr = socket1.peer_addr()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518825,"byte_end":14518861,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518866,"byte_end":14518871,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518876,"byte_end":14518893,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14518898,"byte_end":14518905,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5655},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519642,"byte_end":14519652,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn local_addr<'_>(&'_ Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519110,"byte_end":14519171,"line_start":117,"line_end":117,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519176,"byte_end":14519179,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519184,"byte_end":14519272,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519277,"byte_end":14519296,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519301,"byte_end":14519304,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519309,"byte_end":14519323,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519328,"byte_end":14519331,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519336,"byte_end":14519349,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519354,"byte_end":14519428,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519433,"byte_end":14519438,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519443,"byte_end":14519477,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519482,"byte_end":14519485,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519490,"byte_end":14519545,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519550,"byte_end":14519586,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519591,"byte_end":14519596,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519601,"byte_end":14519618,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519623,"byte_end":14519630,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5657},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520696,"byte_end":14520703,"line_start":167,"line_end":167,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"async fn send_to<A, '_, '_>(&'_ Self, &'_ [u8], A) -> /*impl Trait*/ where\nA: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519838,"byte_end":14519888,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519893,"byte_end":14519896,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519901,"byte_end":14519953,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519958,"byte_end":14519961,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519966,"byte_end":14519980,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519985,"byte_end":14519988,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14519993,"byte_end":14520006,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520011,"byte_end":14520085,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520090,"byte_end":14520095,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520100,"byte_end":14520134,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520139,"byte_end":14520142,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ const THE_MERCHANT_OF_VENICE: &[u8] = b\"","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520147,"byte_end":14520191,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/     If you prick us, do we not bleed?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520196,"byte_end":14520237,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/     If you tickle us, do we not laugh?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520242,"byte_end":14520284,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/     If you poison us, do we not die?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520289,"byte_end":14520329,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/     And if you wrong us, shall we not revenge?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520334,"byte_end":14520384,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/ \";","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520389,"byte_end":14520395,"line_start":157,"line_end":157,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520400,"byte_end":14520403,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520408,"byte_end":14520463,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520468,"byte_end":14520471,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:7878\";","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520476,"byte_end":14520508,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ let sent = socket.send_to(THE_MERCHANT_OF_VENICE, &addr).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520513,"byte_end":14520581,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ println!(\"Sent {} bytes to {}\", sent, addr);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520586,"byte_end":14520634,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520639,"byte_end":14520644,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520649,"byte_end":14520666,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14520671,"byte_end":14520678,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5662},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521818,"byte_end":14521827,"line_start":203,"line_end":203,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521236,"byte_end":14521270,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521275,"byte_end":14521278,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521283,"byte_end":14521347,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521352,"byte_end":14521355,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521360,"byte_end":14521374,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521379,"byte_end":14521382,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521387,"byte_end":14521400,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521405,"byte_end":14521479,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521484,"byte_end":14521489,"line_start":192,"line_end":192,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521494,"byte_end":14521528,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521533,"byte_end":14521536,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521541,"byte_end":14521596,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521601,"byte_end":14521604,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521609,"byte_end":14521641,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521646,"byte_end":14521700,"line_start":198,"line_end":198,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, peer);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521705,"byte_end":14521756,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521761,"byte_end":14521766,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521771,"byte_end":14521788,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521793,"byte_end":14521800,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5665},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522555,"byte_end":14522564,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from socket without removing it from the queue.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14521941,"byte_end":14522006,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522011,"byte_end":14522014,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the origin.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522019,"byte_end":14522085,"line_start":209,"line_end":209,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522090,"byte_end":14522093,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522098,"byte_end":14522112,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522117,"byte_end":14522120,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522125,"byte_end":14522138,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522143,"byte_end":14522217,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522222,"byte_end":14522227,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522232,"byte_end":14522266,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522271,"byte_end":14522274,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522279,"byte_end":14522334,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522339,"byte_end":14522342,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522347,"byte_end":14522379,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.peek_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522384,"byte_end":14522438,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/ println!(\"Peeked {} bytes from {}\", n, peer);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522443,"byte_end":14522492,"line_start":222,"line_end":222,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522497,"byte_end":14522502,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ # Ok (()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522507,"byte_end":14522525,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522530,"byte_end":14522537,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5668},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523456,"byte_end":14523463,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"async fn connect<A, '_>(&'_ Self, A) -> /*impl Trait*/ where A: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to a remote address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to a remote address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522678,"byte_end":14522726,"line_start":230,"line_end":230,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522731,"byte_end":14522734,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send`] and [`recv`] will use the specified address for sending","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522739,"byte_end":14522831,"line_start":232,"line_end":232,"column_start":5,"column_end":97}},{"value":"/ and receiving messages. Additionally, a filter will be applied to [`recv_from`] so that it","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522836,"byte_end":14522930,"line_start":233,"line_end":233,"column_start":5,"column_end":99}},{"value":"/ only receives messages from that same address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522935,"byte_end":14522985,"line_start":234,"line_end":234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522990,"byte_end":14522993,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14522998,"byte_end":14523024,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523029,"byte_end":14523055,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523060,"byte_end":14523096,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523101,"byte_end":14523104,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523109,"byte_end":14523123,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523128,"byte_end":14523131,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523136,"byte_end":14523149,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523154,"byte_end":14523228,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523233,"byte_end":14523238,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523243,"byte_end":14523277,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523282,"byte_end":14523285,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523290,"byte_end":14523345,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523350,"byte_end":14523394,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523399,"byte_end":14523404,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523409,"byte_end":14523426,"line_start":250,"line_end":250,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14523431,"byte_end":14523438,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5674},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524902,"byte_end":14524906,"line_start":297,"line_end":297,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address to which it is connected.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524166,"byte_end":14524242,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524247,"byte_end":14524250,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524255,"byte_end":14524327,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524332,"byte_end":14524389,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524394,"byte_end":14524397,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524402,"byte_end":14524434,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524439,"byte_end":14524442,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524447,"byte_end":14524461,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524466,"byte_end":14524469,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524474,"byte_end":14524487,"line_start":284,"line_end":284,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524492,"byte_end":14524566,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524571,"byte_end":14524576,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524581,"byte_end":14524615,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524620,"byte_end":14524623,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524628,"byte_end":14524687,"line_start":289,"line_end":289,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524692,"byte_end":14524736,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ let bytes = socket.send(b\"Hi there!\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524741,"byte_end":14524790,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524795,"byte_end":14524798,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ println!(\"Sent {} bytes\", bytes);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524803,"byte_end":14524840,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524845,"byte_end":14524850,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524855,"byte_end":14524872,"line_start":295,"line_end":295,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524877,"byte_end":14524884,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5677},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525586,"byte_end":14525590,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14524997,"byte_end":14525031,"line_start":301,"line_end":301,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525036,"byte_end":14525039,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525044,"byte_end":14525093,"line_start":303,"line_end":303,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525098,"byte_end":14525101,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525106,"byte_end":14525120,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525125,"byte_end":14525128,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525133,"byte_end":14525146,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525151,"byte_end":14525225,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525230,"byte_end":14525235,"line_start":309,"line_end":309,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525240,"byte_end":14525274,"line_start":310,"line_end":310,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525279,"byte_end":14525282,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525287,"byte_end":14525342,"line_start":312,"line_end":312,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525347,"byte_end":14525391,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525396,"byte_end":14525399,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525404,"byte_end":14525436,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525441,"byte_end":14525482,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525487,"byte_end":14525524,"line_start":317,"line_end":317,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525529,"byte_end":14525534,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525539,"byte_end":14525556,"line_start":319,"line_end":319,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525561,"byte_end":14525568,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5680},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526309,"byte_end":14526313,"line_start":345,"line_end":345,"column_start":18,"column_end":22},"name":"peek","qualname":"<UdpSocket>::peek","value":"async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from the socket without removing it from the queue.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525685,"byte_end":14525754,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525759,"byte_end":14525762,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525767,"byte_end":14525818,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525823,"byte_end":14525826,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525831,"byte_end":14525845,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525850,"byte_end":14525853,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525858,"byte_end":14525871,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525876,"byte_end":14525950,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525955,"byte_end":14525960,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14525965,"byte_end":14525999,"line_start":334,"line_end":334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526004,"byte_end":14526007,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526012,"byte_end":14526067,"line_start":336,"line_end":336,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526072,"byte_end":14526116,"line_start":337,"line_end":337,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526121,"byte_end":14526124,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526129,"byte_end":14526161,"line_start":339,"line_end":339,"column_start":5,"column_end":37}},{"value":"/ let n = socket.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526166,"byte_end":14526207,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/ println!(\"Peeked {} bytes\", n);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526212,"byte_end":14526247,"line_start":341,"line_end":341,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526252,"byte_end":14526257,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526262,"byte_end":14526279,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526284,"byte_end":14526291,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5683},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526620,"byte_end":14526629,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn broadcast<'_>(&'_ Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526408,"byte_end":14526472,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526477,"byte_end":14526480,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526485,"byte_end":14526551,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526556,"byte_end":14526559,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526564,"byte_end":14526608,"line_start":353,"line_end":353,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5684},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526882,"byte_end":14526895,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn set_broadcast<'_>(&'_ Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526713,"byte_end":14526777,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526782,"byte_end":14526785,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526790,"byte_end":14526870,"line_start":360,"line_end":360,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5685},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527234,"byte_end":14527251,"line_start":370,"line_end":370,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn multicast_loop_v4<'_>(&'_ Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14526993,"byte_end":14527062,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527067,"byte_end":14527070,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527075,"byte_end":14527149,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527154,"byte_end":14527157,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527162,"byte_end":14527222,"line_start":369,"line_end":369,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5686},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527596,"byte_end":14527617,"line_start":381,"line_end":381,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn set_multicast_loop_v4<'_>(&'_ Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527343,"byte_end":14527412,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527417,"byte_end":14527420,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527425,"byte_end":14527499,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527504,"byte_end":14527507,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527512,"byte_end":14527522,"line_start":378,"line_end":378,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527527,"byte_end":14527530,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527535,"byte_end":14527584,"line_start":380,"line_end":380,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5687},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527960,"byte_end":14527976,"line_start":390,"line_end":390,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn multicast_ttl_v4<'_>(&'_ Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527723,"byte_end":14527791,"line_start":385,"line_end":385,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527796,"byte_end":14527799,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527804,"byte_end":14527877,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527882,"byte_end":14527885,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14527890,"byte_end":14527948,"line_start":389,"line_end":389,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5688},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528460,"byte_end":14528480,"line_start":403,"line_end":403,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn set_multicast_ttl_v4<'_>(&'_ Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528066,"byte_end":14528134,"line_start":394,"line_end":394,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528139,"byte_end":14528142,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528147,"byte_end":14528242,"line_start":396,"line_end":396,"column_start":5,"column_end":100}},{"value":"/ value is 1 which means that multicast packets don't leave the local network unless","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528247,"byte_end":14528333,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"/ explicitly requested.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528338,"byte_end":14528363,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528368,"byte_end":14528371,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528376,"byte_end":14528386,"line_start":400,"line_end":400,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528391,"byte_end":14528394,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528399,"byte_end":14528448,"line_start":402,"line_end":402,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5689},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528829,"byte_end":14528846,"line_start":412,"line_end":412,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn multicast_loop_v6<'_>(&'_ Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528586,"byte_end":14528657,"line_start":407,"line_end":407,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528662,"byte_end":14528665,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528670,"byte_end":14528744,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528749,"byte_end":14528752,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528757,"byte_end":14528817,"line_start":411,"line_end":411,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5690},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529195,"byte_end":14529216,"line_start":423,"line_end":423,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn set_multicast_loop_v6<'_>(&'_ Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14528938,"byte_end":14529009,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529014,"byte_end":14529017,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529022,"byte_end":14529098,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529103,"byte_end":14529106,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529111,"byte_end":14529121,"line_start":420,"line_end":420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529126,"byte_end":14529129,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529134,"byte_end":14529183,"line_start":422,"line_end":422,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5691},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529510,"byte_end":14529513,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn ttl<'_>(&'_ Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529322,"byte_end":14529380,"line_start":427,"line_end":427,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529385,"byte_end":14529388,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529393,"byte_end":14529453,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529458,"byte_end":14529461,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529466,"byte_end":14529498,"line_start":431,"line_end":431,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5692},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529775,"byte_end":14529782,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn set_ttl<'_>(&'_ Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529590,"byte_end":14529648,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529653,"byte_end":14529656,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529661,"byte_end":14529737,"line_start":438,"line_end":438,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529742,"byte_end":14529763,"line_start":439,"line_end":439,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5693},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530799,"byte_end":14530816,"line_start":468,"line_end":468,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn join_multicast_v4<'_>(&'_ Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529875,"byte_end":14529933,"line_start":444,"line_end":444,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529938,"byte_end":14529941,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14529946,"byte_end":14530038,"line_start":446,"line_end":446,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the address of the local interface with which","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530043,"byte_end":14530138,"line_start":447,"line_end":447,"column_start":5,"column_end":100}},{"value":"/ the system should join the multicast group. If it's equal to `INADDR_ANY` then an","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530143,"byte_end":14530228,"line_start":448,"line_end":448,"column_start":5,"column_end":90}},{"value":"/ appropriate interface is chosen by the system.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530233,"byte_end":14530283,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530288,"byte_end":14530291,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530296,"byte_end":14530310,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530315,"byte_end":14530318,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530323,"byte_end":14530336,"line_start":453,"line_end":453,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530341,"byte_end":14530415,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530420,"byte_end":14530425,"line_start":455,"line_end":455,"column_start":5,"column_end":10}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530430,"byte_end":14530457,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530462,"byte_end":14530465,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530470,"byte_end":14530504,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530509,"byte_end":14530512,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let interface = Ipv4Addr::new(0, 0, 0, 0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530517,"byte_end":14530563,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/ let mdns_addr = Ipv4Addr::new(224, 0, 0, 123);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530568,"byte_end":14530618,"line_start":461,"line_end":461,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530623,"byte_end":14530626,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530631,"byte_end":14530686,"line_start":463,"line_end":463,"column_start":5,"column_end":60}},{"value":"/ socket.join_multicast_v4(mdns_addr, interface)?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530691,"byte_end":14530743,"line_start":464,"line_end":464,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530748,"byte_end":14530753,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530758,"byte_end":14530775,"line_start":466,"line_end":466,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530780,"byte_end":14530787,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5694},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531879,"byte_end":14531896,"line_start":497,"line_end":497,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn join_multicast_v6<'_, '_>(&'_ Self, &'_ Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14530996,"byte_end":14531056,"line_start":474,"line_end":474,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531061,"byte_end":14531064,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531069,"byte_end":14531161,"line_start":476,"line_end":476,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the index of the interface to join/leave (or","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531166,"byte_end":14531260,"line_start":477,"line_end":477,"column_start":5,"column_end":99}},{"value":"/ 0 to indicate any interface).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531265,"byte_end":14531298,"line_start":478,"line_end":478,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531303,"byte_end":14531306,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531311,"byte_end":14531325,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531330,"byte_end":14531333,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531338,"byte_end":14531351,"line_start":482,"line_end":482,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531356,"byte_end":14531430,"line_start":483,"line_end":483,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531435,"byte_end":14531440,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ use std::net::{Ipv6Addr, SocketAddr};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531445,"byte_end":14531486,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531491,"byte_end":14531494,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531499,"byte_end":14531533,"line_start":487,"line_end":487,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531538,"byte_end":14531541,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let socket_addr = SocketAddr::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0).into(), 0);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531546,"byte_end":14531633,"line_start":489,"line_end":489,"column_start":5,"column_end":92}},{"value":"/ let mdns_addr = Ipv6Addr::new(0xFF02, 0, 0, 0, 0, 0, 0, 0x0123);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531638,"byte_end":14531706,"line_start":490,"line_end":490,"column_start":5,"column_end":73}},{"value":"/ let socket = UdpSocket::bind(&socket_addr).await?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531711,"byte_end":14531765,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531770,"byte_end":14531773,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ socket.join_multicast_v6(&mdns_addr, 0)?;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531778,"byte_end":14531823,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531828,"byte_end":14531833,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531838,"byte_end":14531855,"line_start":495,"line_end":495,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14531860,"byte_end":14531867,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5695},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532289,"byte_end":14532307,"line_start":508,"line_end":508,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn leave_multicast_v4<'_>(&'_ Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532070,"byte_end":14532129,"line_start":503,"line_end":503,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532134,"byte_end":14532137,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532142,"byte_end":14532212,"line_start":505,"line_end":505,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532217,"byte_end":14532220,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532225,"byte_end":14532277,"line_start":507,"line_end":507,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5696},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532709,"byte_end":14532727,"line_start":519,"line_end":519,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn leave_multicast_v6<'_, '_>(&'_ Self, &'_ Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532488,"byte_end":14532549,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532554,"byte_end":14532557,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532562,"byte_end":14532632,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532637,"byte_end":14532640,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532645,"byte_end":14532697,"line_start":518,"line_end":518,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5698},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14533029,"byte_end":14533033,"line_start":528,"line_end":528,"column_start":8,"column_end":12},"name":"from","qualname":"<UdpSocket as std::convert::From>::from","value":"fn from(std::net::UdpSocket) -> UdpSocket","parent":{"krate":2,"index":3174},"children":[],"decl_id":{"krate":2,"index":3176},"docs":" Converts a `std::net::UdpSocket` into its asynchronous equivalent.\n","sig":null,"attributes":[{"value":"/ Converts a `std::net::UdpSocket` into its asynchronous equivalent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532951,"byte_end":14533021,"line_start":527,"line_end":527,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5701},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14533361,"byte_end":14533369,"line_start":538,"line_end":538,"column_start":8,"column_end":16},"name":"try_from","qualname":"<std::net::UdpSocket as std::convert::TryFrom>::try_from","value":"fn try_from(UdpSocket) -> io::Result<std::net::UdpSocket>","parent":{"krate":2,"index":3181},"children":[],"decl_id":{"krate":2,"index":3184},"docs":" Converts a `UdpSocket` into its synchronous equivalent.\n","sig":null,"attributes":[{"value":"/ Converts a `UdpSocket` into its synchronous equivalent.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14533294,"byte_end":14533353,"line_start":537,"line_end":537,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6180},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14534249,"byte_end":14534262,"line_start":573,"line_end":573,"column_start":12,"column_end":25},"name":"as_raw_socket","qualname":"<UdpSocket as std::os::windows::io::AsRawSocket>::as_raw_socket","value":"fn as_raw_socket<'_>(&'_ Self) -> RawSocket","parent":{"krate":1,"index":5951},"children":[],"decl_id":{"krate":1,"index":5952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6182},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14534410,"byte_end":14534425,"line_start":579,"line_end":579,"column_start":19,"column_end":34},"name":"from_raw_socket","qualname":"<UdpSocket as std::os::windows::io::FromRawSocket>::from_raw_socket","value":"unsafe fn from_raw_socket(RawSocket) -> UdpSocket","parent":{"krate":1,"index":5953},"children":[],"decl_id":{"krate":1,"index":5954},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6184},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14534591,"byte_end":14534606,"line_start":585,"line_end":585,"column_start":12,"column_end":27},"name":"into_raw_socket","qualname":"<UdpSocket as std::os::windows::io::IntoRawSocket>::into_raw_socket","value":"fn into_raw_socket(Self) -> RawSocket","parent":{"krate":1,"index":5955},"children":[],"decl_id":{"krate":1,"index":5956},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":11828,"byte_end":11832,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015584,"byte_end":14015592,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14017491,"byte_end":14017498,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14022855,"byte_end":14022872,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2044},{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025118,"byte_end":14025128,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14026201,"byte_end":14026211,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14026360,"byte_end":14026370,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029487,"byte_end":14029491,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14030101,"byte_end":14030105,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030659,"byte_end":14030665,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14031076,"byte_end":14031082,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031672,"byte_end":14031680,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2184},{"krate":0,"index":2187},{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14035560,"byte_end":14035571,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2196}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14035715,"byte_end":14035726,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14035891,"byte_end":14035902,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14036270,"byte_end":14036279,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_locals_wrapper.rs","byte_start":14038131,"byte_end":14038148,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_locals_wrapper.rs","byte_start":14039561,"byte_end":14039578,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\future\\mod.rs","byte_start":14176163,"byte_end":14176164,"line_start":287,"line_end":287,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176841,"byte_end":14176848,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2374},{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177741,"byte_end":14177747,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177777,"byte_end":14177783,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2403},{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13880013,"byte_end":13880026,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13880253,"byte_end":13880266,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13880902,"byte_end":13880914,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13880941,"byte_end":13880953,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13951321,"byte_end":13951330,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13951537,"byte_end":13951546,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13951586,"byte_end":13951595,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13952676,"byte_end":13952685,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13952892,"byte_end":13952901,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13952941,"byte_end":13952950,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\chain.rs","byte_start":13954320,"byte_end":13954325,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\chain.rs","byte_start":13954543,"byte_end":13954548,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cloned.rs","byte_start":13955586,"byte_end":13955592,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cloned.rs","byte_start":13955704,"byte_end":13955710,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cmp.rs","byte_start":13956661,"byte_end":13956670,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cmp.rs","byte_start":13956899,"byte_end":13956908,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\copied.rs","byte_start":13959208,"byte_end":13959214,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\copied.rs","byte_start":13959326,"byte_end":13959332,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","byte_start":13959989,"byte_end":13959994,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","byte_start":13960179,"byte_end":13960184,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\enumerate.rs","byte_start":13960877,"byte_end":13960886,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\enumerate.rs","byte_start":13960993,"byte_end":13961002,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\eq.rs","byte_start":13962018,"byte_end":13962026,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\eq.rs","byte_start":13962240,"byte_end":13962248,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter.rs","byte_start":13963517,"byte_end":13963523,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter.rs","byte_start":13963688,"byte_end":13963694,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter_map.rs","byte_start":13964491,"byte_end":13964500,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter_map.rs","byte_start":13964619,"byte_end":13964628,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13965467,"byte_end":13965477,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13965611,"byte_end":13965621,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13965662,"byte_end":13965672,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13966466,"byte_end":13966479,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13966613,"byte_end":13966626,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13966670,"byte_end":13966683,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fold.rs","byte_start":13967596,"byte_end":13967606,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fold.rs","byte_start":13967799,"byte_end":13967809,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\for_each.rs","byte_start":13968769,"byte_end":13968782,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\for_each.rs","byte_start":13968931,"byte_end":13968944,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fuse.rs","byte_start":13969975,"byte_end":13969979,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fuse.rs","byte_start":13970134,"byte_end":13970138,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ge.rs","byte_start":13971161,"byte_end":13971169,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ge.rs","byte_start":13971377,"byte_end":13971385,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\gt.rs","byte_start":13972394,"byte_end":13972402,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\gt.rs","byte_start":13972610,"byte_end":13972618,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\inspect.rs","byte_start":13973586,"byte_end":13973593,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\inspect.rs","byte_start":13973742,"byte_end":13973749,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\last.rs","byte_start":13974469,"byte_end":13974479,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\last.rs","byte_start":13974595,"byte_end":13974605,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\le.rs","byte_start":13975723,"byte_end":13975731,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\le.rs","byte_start":13975939,"byte_end":13975947,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\lt.rs","byte_start":13976966,"byte_end":13976974,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\lt.rs","byte_start":13977182,"byte_end":13977190,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\map.rs","byte_start":13977923,"byte_end":13977926,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\map.rs","byte_start":13978078,"byte_end":13978081,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max.rs","byte_start":13978766,"byte_end":13978775,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max.rs","byte_start":13978890,"byte_end":13978899,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by.rs","byte_start":13980071,"byte_end":13980082,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by.rs","byte_start":13980269,"byte_end":13980280,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13981502,"byte_end":13981516,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13981701,"byte_end":13981715,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min.rs","byte_start":13983121,"byte_end":13983130,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min.rs","byte_start":13983245,"byte_end":13983254,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by.rs","byte_start":13984423,"byte_end":13984434,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by.rs","byte_start":13984621,"byte_end":13984632,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13985880,"byte_end":13985894,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13986079,"byte_end":13986093,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ne.rs","byte_start":13987662,"byte_end":13987670,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ne.rs","byte_start":13987884,"byte_end":13987892,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\next.rs","byte_start":13988948,"byte_end":13988958,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13989405,"byte_end":13989414,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13989438,"byte_end":13989447,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13989577,"byte_end":13989586,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13990799,"byte_end":13990815,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13991044,"byte_end":13991060,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13993444,"byte_end":13993458,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13993488,"byte_end":13993502,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13993705,"byte_end":13993719,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\scan.rs","byte_start":13994917,"byte_end":13994921,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\scan.rs","byte_start":13995126,"byte_end":13995130,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1289},{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip.rs","byte_start":13996115,"byte_end":13996119,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip.rs","byte_start":13996233,"byte_end":13996237,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip_while.rs","byte_start":13997357,"byte_end":13997366,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip_while.rs","byte_start":13997548,"byte_end":13997557,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\step_by.rs","byte_start":13998900,"byte_end":13998906,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\step_by.rs","byte_start":13999107,"byte_end":13999113,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take.rs","byte_start":14000316,"byte_end":14000320,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take.rs","byte_start":14000491,"byte_end":14000495,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take_while.rs","byte_start":14001540,"byte_end":14001549,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take_while.rs","byte_start":14001714,"byte_end":14001723,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":14002577,"byte_end":14002590,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":14002626,"byte_end":14002639,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":14002851,"byte_end":14002864,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1459},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":14003894,"byte_end":14003910,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":14003940,"byte_end":14003956,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":14004091,"byte_end":14004107,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":14005369,"byte_end":14005372,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":14005612,"byte_end":14005615,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":14005817,"byte_end":14005820,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13950967,"byte_end":13950968,"line_start":2309,"line_end":2309,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007358,"byte_end":14007363,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14007864,"byte_end":14007870,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008799,"byte_end":14008805,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1806},{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14010159,"byte_end":14010167,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1829},{"krate":0,"index":1830}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14011474,"byte_end":14011478,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012647,"byte_end":14012653,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1872},{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013222,"byte_end":14013232,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014424,"byte_end":14014434,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\lines.rs","byte_start":14235667,"byte_end":14235672,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2626},{"krate":0,"index":2627}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_line.rs","byte_start":14237594,"byte_end":14237608,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_until.rs","byte_start":14239067,"byte_end":14239082,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2706},{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\split.rs","byte_start":14240282,"byte_end":14240287,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2740},{"krate":0,"index":2741}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":14234036,"byte_end":14234037,"line_start":240,"line_end":240,"column_start":42,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":14253064,"byte_end":14253069,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2808},{"krate":0,"index":2809}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14254884,"byte_end":14254889,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14257048,"byte_end":14257053,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14257295,"byte_end":14257300,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2853},{"krate":0,"index":2854}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14258445,"byte_end":14258450,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2858},{"krate":0,"index":2859}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read.rs","byte_start":14260151,"byte_end":14260161,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2888},{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_exact.rs","byte_start":14260736,"byte_end":14260751,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2921},{"krate":0,"index":2922}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":14261673,"byte_end":14261688,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2953}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":14262838,"byte_end":14262843,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2961}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_string.rs","byte_start":14264160,"byte_end":14264178,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3001},{"krate":0,"index":3002}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_vectored.rs","byte_start":14265532,"byte_end":14265550,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3035},{"krate":0,"index":3036}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266370,"byte_end":14266374,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14270046,"byte_end":14270050,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14270968,"byte_end":14270972,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3078},{"krate":0,"index":3079}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14251454,"byte_end":14251455,"line_start":376,"line_end":376,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\seek.rs","byte_start":14273861,"byte_end":14273871,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3169},{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\mod.rs","byte_start":14273525,"byte_end":14273526,"line_start":50,"line_end":50,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\flush.rs","byte_start":14279662,"byte_end":14279673,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3212},{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write.rs","byte_start":14280185,"byte_end":14280196,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3242},{"krate":0,"index":3243}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_all.rs","byte_start":14280761,"byte_end":14280775,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_fmt.rs","byte_start":14281746,"byte_end":14281760,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3307},{"krate":0,"index":3308}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_vectored.rs","byte_start":14283245,"byte_end":14283264,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3341}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14279363,"byte_end":14279364,"line_start":187,"line_end":187,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14283731,"byte_end":14283737,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3397}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14283990,"byte_end":14284002,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14284289,"byte_end":14284301,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14284432,"byte_end":14284444,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286425,"byte_end":14286434,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3456},{"krate":0,"index":3457}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287662,"byte_end":14287671,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14290411,"byte_end":14290420,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3468},{"krate":0,"index":3469}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14291874,"byte_end":14291883,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14292805,"byte_end":14292814,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3478}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293152,"byte_end":14293161,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3481}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299991,"byte_end":14300000,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3531},{"krate":0,"index":3532}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14305832,"byte_end":14305841,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3537}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14306739,"byte_end":14306748,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3540}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14306994,"byte_end":14307003,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14309184,"byte_end":14309194,"line_start":63,"line_end":63,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3588},{"krate":0,"index":3589}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313872,"byte_end":14313878,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14317179,"byte_end":14317185,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3637}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14317451,"byte_end":14317457,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3640},{"krate":0,"index":3641}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14317973,"byte_end":14317979,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3644},{"krate":0,"index":3645}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14318329,"byte_end":14318335,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14319094,"byte_end":14319100,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3654}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14319624,"byte_end":14319630,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":3658}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320908,"byte_end":14320913,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14321032,"byte_end":14321037,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3689}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14321241,"byte_end":14321246,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3691},{"krate":0,"index":3693}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322431,"byte_end":14322437,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3719}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322556,"byte_end":14322562,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3721}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323547,"byte_end":14323551,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3747}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323670,"byte_end":14323674,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":3751}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14325422,"byte_end":14325429,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3852},{"krate":0,"index":3853}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14328420,"byte_end":14328426,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3886},{"krate":0,"index":3888},{"krate":0,"index":3890}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14332115,"byte_end":14332121,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14334765,"byte_end":14334770,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14336786,"byte_end":14336791,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14339135,"byte_end":14339140,"line_start":214,"line_end":214,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4069}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14342265,"byte_end":14342271,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3988},{"krate":0,"index":3990},{"krate":0,"index":3992}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14345960,"byte_end":14345966,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4107}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357434,"byte_end":14357444,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":4347}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360668,"byte_end":14360676,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4382},{"krate":0,"index":4383},{"krate":0,"index":4384},{"krate":0,"index":4388},{"krate":0,"index":4392}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364639,"byte_end":14364647,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4394}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364800,"byte_end":14364808,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4396}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366987,"byte_end":14366991,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4495},{"krate":0,"index":4500},{"krate":0,"index":4505},{"krate":0,"index":4510},{"krate":0,"index":4515},{"krate":0,"index":4519}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374759,"byte_end":14374763,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4524}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14375258,"byte_end":14375262,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4526}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14375376,"byte_end":14375380,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4528}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14375861,"byte_end":14375865,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4534}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14377029,"byte_end":14377033,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14377522,"byte_end":14377526,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4545}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14378391,"byte_end":14378395,"line_start":444,"line_end":444,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5739}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14378527,"byte_end":14378531,"line_start":450,"line_end":450,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5741}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14378699,"byte_end":14378703,"line_start":456,"line_end":456,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5743}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14379107,"byte_end":14379111,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14379148,"byte_end":14379152,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14379178,"byte_end":14379182,"line_start":473,"line_end":473,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4556}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14379534,"byte_end":14379538,"line_start":492,"line_end":492,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4564},{"krate":0,"index":4565}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14380773,"byte_end":14380782,"line_start":529,"line_end":529,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14380819,"byte_end":14380828,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14380844,"byte_end":14380853,"line_start":532,"line_end":532,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4577}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14381244,"byte_end":14381253,"line_start":545,"line_end":545,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4581}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14381561,"byte_end":14381570,"line_start":557,"line_end":557,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4584},{"krate":0,"index":4585}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14381696,"byte_end":14381705,"line_start":565,"line_end":565,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4588}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14383266,"byte_end":14383275,"line_start":618,"line_end":618,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4605},{"krate":0,"index":4606},{"krate":0,"index":4608},{"krate":0,"index":4609},{"krate":0,"index":4610},{"krate":0,"index":4612},{"krate":0,"index":4614}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407339,"byte_end":14407350,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4668},{"krate":0,"index":4669},{"krate":0,"index":4670},{"krate":0,"index":4671},{"krate":0,"index":4672},{"krate":0,"index":4673},{"krate":0,"index":4674},{"krate":0,"index":4675}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14414139,"byte_end":14414150,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4681}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419991,"byte_end":14419998,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4744}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14420197,"byte_end":14420204,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4746},{"krate":0,"index":4747}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14435150,"byte_end":14435159,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4935},{"krate":0,"index":4936}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14435364,"byte_end":14435373,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436119,"byte_end":14436129,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4954}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436638,"byte_end":14436648,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4956}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436741,"byte_end":14436751,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4958}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436857,"byte_end":14436867,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4961},{"krate":0,"index":4962}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14437024,"byte_end":14437034,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4965}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14437159,"byte_end":14437169,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14437199,"byte_end":14437208,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4968}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437839,"byte_end":14437843,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4991}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438316,"byte_end":14438320,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4994},{"krate":0,"index":4995}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438482,"byte_end":14438486,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4997}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438627,"byte_end":14438638,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5003}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438935,"byte_end":14438939,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5005}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14439032,"byte_end":14439036,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5007}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14439153,"byte_end":14439157,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5010}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14439304,"byte_end":14439308,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440908,"byte_end":14440912,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5063},{"krate":0,"index":5065},{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5071},{"krate":0,"index":5072},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5076},{"krate":0,"index":5078},{"krate":0,"index":5080},{"krate":0,"index":5082},{"krate":0,"index":5083},{"krate":0,"index":5084},{"krate":0,"index":5086},{"krate":0,"index":5088},{"krate":0,"index":5090},{"krate":0,"index":5091},{"krate":0,"index":5092},{"krate":0,"index":5093},{"krate":0,"index":5096},{"krate":0,"index":5099},{"krate":0,"index":5102},{"krate":0,"index":5105},{"krate":0,"index":5108},{"krate":0,"index":5111},{"krate":0,"index":5115},{"krate":0,"index":5119}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466074,"byte_end":14466077,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5121}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466306,"byte_end":14466309,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5123}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466604,"byte_end":14466606,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5125}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466809,"byte_end":14466813,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5127},{"krate":0,"index":5128}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466937,"byte_end":14466941,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5130}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467035,"byte_end":14467039,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5132}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467117,"byte_end":14467122,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5134}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467218,"byte_end":14467221,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5137}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467347,"byte_end":14467350,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5139}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467450,"byte_end":14467458,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5141}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467639,"byte_end":14467645,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5145}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467734,"byte_end":14467741,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5147}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14470889,"byte_end":14470893,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5167}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14471000,"byte_end":14471004,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5169}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14471100,"byte_end":14471107,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5171}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14471883,"byte_end":14471890,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5212},{"krate":0,"index":5214},{"krate":0,"index":5215},{"krate":0,"index":5217},{"krate":0,"index":5219},{"krate":0,"index":5220}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477136,"byte_end":14477143,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5222}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477251,"byte_end":14477254,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5224}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477354,"byte_end":14477357,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5226}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477508,"byte_end":14477515,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477632,"byte_end":14477639,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5231}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477748,"byte_end":14477756,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5233}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477865,"byte_end":14477872,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5235}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477978,"byte_end":14477985,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5237},{"krate":0,"index":5238}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478164,"byte_end":14478171,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5241}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478366,"byte_end":14478373,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5245}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478530,"byte_end":14478537,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5249},{"krate":0,"index":5250}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478658,"byte_end":14478665,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5252}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478757,"byte_end":14478760,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5255}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478892,"byte_end":14478895,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5258}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479046,"byte_end":14479053,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5261}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479165,"byte_end":14479168,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5263}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479391,"byte_end":14479393,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5265}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479608,"byte_end":14479615,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5267}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14480759,"byte_end":14480766,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5269}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14480895,"byte_end":14480902,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5271}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14481007,"byte_end":14481014,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5273}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485842,"byte_end":14485861,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14486029,"byte_end":14486048,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5420}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14486320,"byte_end":14486339,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":5424},{"krate":0,"index":5425}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14487042,"byte_end":14487052,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5427},{"krate":0,"index":5428}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14487347,"byte_end":14487359,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5430},{"krate":0,"index":5431}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14487724,"byte_end":14487736,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5434},{"krate":0,"index":5435}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14491455,"byte_end":14491461,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5465},{"krate":0,"index":5466}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493394,"byte_end":14493405,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5521},{"krate":0,"index":5526},{"krate":0,"index":5529},{"krate":0,"index":5530}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499380,"byte_end":14499388,"line_start":231,"line_end":231,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5535},{"krate":0,"index":5536}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499723,"byte_end":14499731,"line_start":240,"line_end":240,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5540}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499887,"byte_end":14499898,"line_start":246,"line_end":246,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5542}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14500220,"byte_end":14500231,"line_start":255,"line_end":255,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5544},{"krate":0,"index":5545}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14501215,"byte_end":14501226,"line_start":292,"line_end":292,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6132}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14501361,"byte_end":14501372,"line_start":298,"line_end":298,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6134}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14501555,"byte_end":14501566,"line_start":304,"line_end":304,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6136}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503564,"byte_end":14503573,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5587},{"krate":0,"index":5592},{"krate":0,"index":5593},{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5596},{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5601}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510681,"byte_end":14510690,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5603},{"krate":0,"index":5604}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14511591,"byte_end":14511600,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5612}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14513084,"byte_end":14513093,"line_start":372,"line_end":372,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5619}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14513409,"byte_end":14513418,"line_start":381,"line_end":381,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5621},{"krate":0,"index":5622}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14514827,"byte_end":14514836,"line_start":426,"line_end":426,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6157}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14514981,"byte_end":14514990,"line_start":432,"line_end":432,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6159}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14515169,"byte_end":14515178,"line_start":438,"line_end":438,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6161}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517031,"byte_end":14517040,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5648},{"krate":0,"index":5653},{"krate":0,"index":5655},{"krate":0,"index":5657},{"krate":0,"index":5662},{"krate":0,"index":5665},{"krate":0,"index":5668},{"krate":0,"index":5674},{"krate":0,"index":5677},{"krate":0,"index":5680},{"krate":0,"index":5683},{"krate":0,"index":5684},{"krate":0,"index":5685},{"krate":0,"index":5686},{"krate":0,"index":5687},{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5690},{"krate":0,"index":5691},{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":5694},{"krate":0,"index":5695},{"krate":0,"index":5696}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532935,"byte_end":14532944,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5698}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14533250,"byte_end":14533259,"line_start":535,"line_end":535,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5700},{"krate":0,"index":5701}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14534226,"byte_end":14534235,"line_start":572,"line_end":572,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6180}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14534380,"byte_end":14534389,"line_start":578,"line_end":578,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6182}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14534568,"byte_end":14534577,"line_start":584,"line_end":584,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6184}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10930,"byte_end":10934,"line_start":301,"line_end":301,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10948,"byte_end":10954,"line_start":302,"line_end":302,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":35}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10968,"byte_end":10974,"line_start":303,"line_end":303,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":91}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11002,"byte_end":11004,"line_start":307,"line_end":307,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2457}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":14217133,"byte_end":14217140,"line_start":290,"line_end":290,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2565}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11018,"byte_end":11020,"line_start":308,"line_end":308,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2459}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\mod.rs","byte_start":14218127,"byte_end":14218134,"line_start":8,"line_end":8,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4108}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\mod.rs","byte_start":14346151,"byte_end":14346153,"line_start":4,"line_end":4,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4109}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11034,"byte_end":11041,"line_start":309,"line_end":309,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2460}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11055,"byte_end":11059,"line_start":310,"line_end":310,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2461}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11073,"byte_end":11080,"line_start":311,"line_end":311,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2492}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11151,"byte_end":11153,"line_start":316,"line_end":316,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4174}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11167,"byte_end":11171,"line_start":317,"line_end":317,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4925}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11185,"byte_end":11188,"line_start":318,"line_end":318,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":5311}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":11828,"byte_end":11832,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":14015584,"byte_end":14015592,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1935},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14017491,"byte_end":14017498,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":14022855,"byte_end":14022872,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14025118,"byte_end":14025128,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14026201,"byte_end":14026211,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2266},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":14026360,"byte_end":14026370,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2266},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14029487,"byte_end":14029491,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":14030101,"byte_end":14030105,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2273},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14030659,"byte_end":14030665,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":14031076,"byte_end":14031082,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14031672,"byte_end":14031680,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14035560,"byte_end":14035571,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2303},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14035715,"byte_end":14035726,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2303},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14035891,"byte_end":14035902,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2303},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":14036270,"byte_end":14036279,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_locals_wrapper.rs","byte_start":14038131,"byte_end":14038148,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_locals_wrapper.rs","byte_start":14039561,"byte_end":14039578,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2231},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\future\\mod.rs","byte_start":14168940,"byte_end":14168946,"line_start":30,"line_end":30,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":13773},"to":{"krate":0,"index":2336}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\future\\mod.rs","byte_start":14176163,"byte_end":14176164,"line_start":287,"line_end":287,"column_start":40,"column_end":41},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2338},"to":{"krate":0,"index":2336}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":14176841,"byte_end":14176848,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2369},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177741,"byte_end":14177747,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":14177777,"byte_end":14177783,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13880013,"byte_end":13880026,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":8234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13880253,"byte_end":13880266,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":8234},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13880902,"byte_end":13880914,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2410},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13880941,"byte_end":13880953,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2410},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13951321,"byte_end":13951330,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13951537,"byte_end":13951546,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13951586,"byte_end":13951595,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13952676,"byte_end":13952685,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13952892,"byte_end":13952901,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13952941,"byte_end":13952950,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\chain.rs","byte_start":13954320,"byte_end":13954325,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":8185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\chain.rs","byte_start":13954543,"byte_end":13954548,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":8185},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cloned.rs","byte_start":13955586,"byte_end":13955592,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":8149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cloned.rs","byte_start":13955704,"byte_end":13955710,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":8149},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cmp.rs","byte_start":13956661,"byte_end":13956670,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":8096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cmp.rs","byte_start":13956899,"byte_end":13956908,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":8096},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\copied.rs","byte_start":13959208,"byte_end":13959214,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":8060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\copied.rs","byte_start":13959326,"byte_end":13959332,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":8060},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","byte_start":13959989,"byte_end":13959994,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":8020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","byte_start":13960179,"byte_end":13960184,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":8020},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\enumerate.rs","byte_start":13960877,"byte_end":13960886,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":7980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\enumerate.rs","byte_start":13960993,"byte_end":13961002,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":7980},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\eq.rs","byte_start":13962018,"byte_end":13962026,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":7935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\eq.rs","byte_start":13962240,"byte_end":13962248,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":7935},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter.rs","byte_start":13963517,"byte_end":13963523,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":7886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter.rs","byte_start":13963688,"byte_end":13963694,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":7886},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter_map.rs","byte_start":13964491,"byte_end":13964500,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":7837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter_map.rs","byte_start":13964619,"byte_end":13964628,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":7837},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13965467,"byte_end":13965477,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13965611,"byte_end":13965621,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13965662,"byte_end":13965672,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13966466,"byte_end":13966479,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13966613,"byte_end":13966626,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13966670,"byte_end":13966683,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fold.rs","byte_start":13967596,"byte_end":13967606,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":7775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fold.rs","byte_start":13967799,"byte_end":13967809,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":7775},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\for_each.rs","byte_start":13968769,"byte_end":13968782,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":7730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\for_each.rs","byte_start":13968931,"byte_end":13968944,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":7730},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fuse.rs","byte_start":13969975,"byte_end":13969979,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":7687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fuse.rs","byte_start":13970134,"byte_end":13970138,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":7687},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ge.rs","byte_start":13971161,"byte_end":13971169,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":7646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ge.rs","byte_start":13971377,"byte_end":13971385,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":7646},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\gt.rs","byte_start":13972394,"byte_end":13972402,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":7605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\gt.rs","byte_start":13972610,"byte_end":13972618,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":7605},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\inspect.rs","byte_start":13973586,"byte_end":13973593,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":7556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\inspect.rs","byte_start":13973742,"byte_end":13973749,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":7556},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\last.rs","byte_start":13974469,"byte_end":13974479,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":7511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\last.rs","byte_start":13974595,"byte_end":13974605,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":7511},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\le.rs","byte_start":13975723,"byte_end":13975731,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":7470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\le.rs","byte_start":13975939,"byte_end":13975947,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":7470},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\lt.rs","byte_start":13976966,"byte_end":13976974,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":7429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\lt.rs","byte_start":13977182,"byte_end":13977190,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":7429},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\map.rs","byte_start":13977923,"byte_end":13977926,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":7380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\map.rs","byte_start":13978078,"byte_end":13978081,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":7380},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max.rs","byte_start":13978766,"byte_end":13978775,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":7335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max.rs","byte_start":13978890,"byte_end":13978899,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":7335},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by.rs","byte_start":13980071,"byte_end":13980082,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":7278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by.rs","byte_start":13980269,"byte_end":13980280,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":7278},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13981502,"byte_end":13981516,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":7221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13981701,"byte_end":13981715,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":7221},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min.rs","byte_start":13983121,"byte_end":13983130,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":7176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min.rs","byte_start":13983245,"byte_end":13983254,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":7176},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by.rs","byte_start":13984423,"byte_end":13984434,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":7119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by.rs","byte_start":13984621,"byte_end":13984632,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":7119},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13985880,"byte_end":13985894,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":7062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13986079,"byte_end":13986093,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":7062},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ne.rs","byte_start":13987662,"byte_end":13987670,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":7017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ne.rs","byte_start":13987884,"byte_end":13987892,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":7017},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\next.rs","byte_start":13988948,"byte_end":13988958,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13989405,"byte_end":13989414,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1169},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13989438,"byte_end":13989447,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13989577,"byte_end":13989586,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1169},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13990799,"byte_end":13990815,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":6964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13991044,"byte_end":13991060,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":6964},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13993444,"byte_end":13993458,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13993488,"byte_end":13993502,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13993705,"byte_end":13993719,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\scan.rs","byte_start":13994917,"byte_end":13994921,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":6906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\scan.rs","byte_start":13995126,"byte_end":13995130,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6906},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip.rs","byte_start":13996115,"byte_end":13996119,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip.rs","byte_start":13996233,"byte_end":13996237,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":6866},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip_while.rs","byte_start":13997357,"byte_end":13997366,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":6817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip_while.rs","byte_start":13997548,"byte_end":13997557,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6817},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\step_by.rs","byte_start":13998900,"byte_end":13998906,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":6773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\step_by.rs","byte_start":13999107,"byte_end":13999113,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6773},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take.rs","byte_start":14000316,"byte_end":14000320,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take.rs","byte_start":14000491,"byte_end":14000495,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":6730},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take_while.rs","byte_start":14001540,"byte_end":14001549,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":6681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take_while.rs","byte_start":14001714,"byte_end":14001723,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":6681},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":14002577,"byte_end":14002590,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":14002626,"byte_end":14002639,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":14002851,"byte_end":14002864,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":14003894,"byte_end":14003910,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1478},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":14003940,"byte_end":14003956,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":14004091,"byte_end":14004107,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1478},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":14005369,"byte_end":14005372,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":6632},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":14005612,"byte_end":14005615,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":6632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":14005817,"byte_end":14005820,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6632},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13895214,"byte_end":13895220,"line_start":153,"line_end":153,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":20,"index":96},"to":{"krate":0,"index":1669}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13950967,"byte_end":13950968,"line_start":2309,"line_end":2309,"column_start":40,"column_end":41},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1760},"to":{"krate":0,"index":1669}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":14007358,"byte_end":14007363,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2424},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14007864,"byte_end":14007870,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2430},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":14008799,"byte_end":14008805,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2430},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":14010159,"byte_end":14010167,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6593},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":14011474,"byte_end":14011478,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":6554},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":14012647,"byte_end":14012653,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2439},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14013222,"byte_end":14013232,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2448},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":14014424,"byte_end":14014434,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2448},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\lines.rs","byte_start":14235667,"byte_end":14235672,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6506},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_line.rs","byte_start":14237594,"byte_end":14237608,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2661},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_until.rs","byte_start":14239067,"byte_end":14239082,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\split.rs","byte_start":14240282,"byte_end":14240287,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6458},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":14227739,"byte_end":14227746,"line_start":25,"line_end":25,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":27,"index":49},"to":{"krate":0,"index":2773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":14234036,"byte_end":14234037,"line_start":240,"line_end":240,"column_start":42,"column_end":43},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2781},"to":{"krate":0,"index":2773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":14253064,"byte_end":14253069,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3752},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14254884,"byte_end":14254889,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14257048,"byte_end":14257053,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6409},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14257295,"byte_end":14257300,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6409},"to":{"krate":27,"index":39}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":14258445,"byte_end":14258450,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6409},"to":{"krate":27,"index":49}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read.rs","byte_start":14260151,"byte_end":14260161,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2881},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_exact.rs","byte_start":14260736,"byte_end":14260751,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2914},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":14261673,"byte_end":14261688,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2944},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":14262838,"byte_end":14262843,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2956},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_string.rs","byte_start":14264160,"byte_end":14264178,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2992},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_vectored.rs","byte_start":14265532,"byte_end":14265550,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3028},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14266370,"byte_end":14266374,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":6369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14270046,"byte_end":14270050,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6369},"to":{"krate":27,"index":39}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14270968,"byte_end":14270972,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6369},"to":{"krate":27,"index":49}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14241456,"byte_end":14241460,"line_start":31,"line_end":31,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":27,"index":39},"to":{"krate":0,"index":3117}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":14251454,"byte_end":14251455,"line_start":376,"line_end":376,"column_start":36,"column_end":37},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3134},"to":{"krate":0,"index":3117}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\seek.rs","byte_start":14273861,"byte_end":14273871,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3162},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\mod.rs","byte_start":14272686,"byte_end":14272690,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":27,"index":47},"to":{"krate":0,"index":3180}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\mod.rs","byte_start":14273525,"byte_end":14273526,"line_start":50,"line_end":50,"column_start":36,"column_end":37},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3183},"to":{"krate":0,"index":3180}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\flush.rs","byte_start":14279662,"byte_end":14279673,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3206},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write.rs","byte_start":14280185,"byte_end":14280196,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3235},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_all.rs","byte_start":14280761,"byte_end":14280775,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3268},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_fmt.rs","byte_start":14281746,"byte_end":14281760,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3298},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_vectored.rs","byte_start":14283245,"byte_end":14283264,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3333},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14274502,"byte_end":14274507,"line_start":22,"line_end":22,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":27,"index":42},"to":{"krate":0,"index":3367}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14279363,"byte_end":14279364,"line_start":187,"line_end":187,"column_start":38,"column_end":39},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3380},"to":{"krate":0,"index":3367}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14283731,"byte_end":14283737,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"kind":{"Impl":{"id":157}},"from":{"krate":2,"index":47616},"to":{"krate":0,"index":15}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14283990,"byte_end":14284002,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14284289,"byte_end":14284301,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3758},"to":{"krate":2,"index":10305}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14284432,"byte_end":14284444,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3758},"to":{"krate":1,"index":2576}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14286425,"byte_end":14286434,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14287662,"byte_end":14287671,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":6324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14290411,"byte_end":14290420,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":6324},"to":{"krate":27,"index":39}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14291874,"byte_end":14291883,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":6324},"to":{"krate":27,"index":49}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14292805,"byte_end":14292814,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6324},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14293152,"byte_end":14293161,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6324},"to":{"krate":27,"index":47}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14299991,"byte_end":14300000,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14305832,"byte_end":14305841,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6283},"to":{"krate":27,"index":42}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14306739,"byte_end":14306748,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6283},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14306994,"byte_end":14307003,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6283},"to":{"krate":27,"index":47}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14309184,"byte_end":14309194,"line_start":63,"line_end":63,"column_start":27,"column_end":37},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6234},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14313872,"byte_end":14313878,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14317179,"byte_end":14317185,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3771},"to":{"krate":27,"index":47}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14317451,"byte_end":14317457,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3771},"to":{"krate":27,"index":39}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14317973,"byte_end":14317979,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3771},"to":{"krate":27,"index":49}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14318329,"byte_end":14318335,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3771},"to":{"krate":27,"index":42}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14319094,"byte_end":14319100,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3771},"to":{"krate":27,"index":42}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14319624,"byte_end":14319630,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3771},"to":{"krate":27,"index":42}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14320908,"byte_end":14320913,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3684},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14321032,"byte_end":14321037,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3684},"to":{"krate":27,"index":39}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14321241,"byte_end":14321246,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3684},"to":{"krate":27,"index":49}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322431,"byte_end":14322437,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3716},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14322556,"byte_end":14322562,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3716},"to":{"krate":27,"index":39}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323547,"byte_end":14323551,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3744},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14323670,"byte_end":14323674,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3744},"to":{"krate":27,"index":42}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14325422,"byte_end":14325429,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6185},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14328420,"byte_end":14328426,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3993},"to":{"krate":27,"index":42}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14332115,"byte_end":14332121,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3993},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14334765,"byte_end":14334770,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14336786,"byte_end":14336791,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4031},"to":{"krate":27,"index":39}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14339135,"byte_end":14339140,"line_start":214,"line_end":214,"column_start":26,"column_end":31},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4031},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14342265,"byte_end":14342271,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4070},"to":{"krate":27,"index":42}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14345960,"byte_end":14345966,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4070},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14357434,"byte_end":14357444,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14360668,"byte_end":14360676,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364639,"byte_end":14364647,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4378},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14364800,"byte_end":14364808,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4378},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14366987,"byte_end":14366991,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14374759,"byte_end":14374763,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5720},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14375258,"byte_end":14375262,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5720},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14375376,"byte_end":14375380,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5720},"to":{"krate":27,"index":39}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14375861,"byte_end":14375865,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5720},"to":{"krate":27,"index":42}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14377029,"byte_end":14377033,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5720},"to":{"krate":27,"index":47}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14377522,"byte_end":14377526,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5720},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14378391,"byte_end":14378395,"line_start":444,"line_end":444,"column_start":26,"column_end":30},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5720},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14378527,"byte_end":14378531,"line_start":450,"line_end":450,"column_start":28,"column_end":32},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5720},"to":{"krate":1,"index":5925}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14378699,"byte_end":14378703,"line_start":456,"line_end":456,"column_start":28,"column_end":32},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5720},"to":{"krate":1,"index":5927}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14379107,"byte_end":14379111,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4546},"to":{"krate":2,"index":3268}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14379148,"byte_end":14379152,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4546},"to":{"krate":2,"index":3280}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14379178,"byte_end":14379182,"line_start":473,"line_end":473,"column_start":19,"column_end":23},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4546},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14379534,"byte_end":14379538,"line_start":492,"line_end":492,"column_start":9,"column_end":13},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14380773,"byte_end":14380782,"line_start":529,"line_end":529,"column_start":31,"column_end":40},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4567},"to":{"krate":2,"index":3268}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14380819,"byte_end":14380828,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4567},"to":{"krate":2,"index":3280}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14380844,"byte_end":14380853,"line_start":532,"line_end":532,"column_start":9,"column_end":18},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14381244,"byte_end":14381253,"line_start":545,"line_end":545,"column_start":18,"column_end":27},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4567},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14381561,"byte_end":14381570,"line_start":557,"line_end":557,"column_start":19,"column_end":28},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4567},"to":{"krate":2,"index":3491}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14381696,"byte_end":14381705,"line_start":565,"line_end":565,"column_start":22,"column_end":31},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4567},"to":{"krate":2,"index":3504}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14383266,"byte_end":14383275,"line_start":618,"line_end":618,"column_start":6,"column_end":15},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14407339,"byte_end":14407350,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14414139,"byte_end":14414150,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5750},"to":{"krate":2,"index":3246}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14419991,"byte_end":14419998,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14420197,"byte_end":14420204,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5760},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14435150,"byte_end":14435159,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5774},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14435364,"byte_end":14435373,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5774},"to":{"krate":2,"index":8886}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436119,"byte_end":14436129,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436638,"byte_end":14436648,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5785},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436741,"byte_end":14436751,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5785},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14436857,"byte_end":14436867,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5785},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14437024,"byte_end":14437034,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5785},"to":{"krate":2,"index":8454}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14437159,"byte_end":14437169,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5785},"to":{"krate":2,"index":8886}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14437199,"byte_end":14437208,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":231}},"from":{"krate":1,"index":10804},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14437839,"byte_end":14437843,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438316,"byte_end":14438320,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5811},"to":{"krate":2,"index":8608}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438482,"byte_end":14438486,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5811},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438627,"byte_end":14438638,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14438935,"byte_end":14438939,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5811},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14439032,"byte_end":14439036,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":5811},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14439153,"byte_end":14439157,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5811},"to":{"krate":2,"index":8454}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14439304,"byte_end":14439308,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5811},"to":{"krate":2,"index":8886}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14440908,"byte_end":14440912,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466074,"byte_end":14466077,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"kind":{"Impl":{"id":241}},"from":{"krate":5,"index":432},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466306,"byte_end":14466309,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"kind":{"Impl":{"id":242}},"from":{"krate":5,"index":6652},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466604,"byte_end":14466606,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"kind":{"Impl":{"id":243}},"from":{"krate":5,"index":5315},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466809,"byte_end":14466813,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5817},"to":{"krate":5,"index":783}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14466937,"byte_end":14466941,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5817},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467035,"byte_end":14467039,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5817},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467117,"byte_end":14467122,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"kind":{"Impl":{"id":247}},"from":{"krate":1,"index":2941},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467218,"byte_end":14467221,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"kind":{"Impl":{"id":248}},"from":{"krate":5,"index":792},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467347,"byte_end":14467350,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"kind":{"Impl":{"id":249}},"from":{"krate":5,"index":792},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467450,"byte_end":14467458,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":1,"index":2938},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467639,"byte_end":14467645,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"kind":{"Impl":{"id":252}},"from":{"krate":5,"index":8368},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14467734,"byte_end":14467741,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14470889,"byte_end":14470893,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5817},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14471000,"byte_end":14471004,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"kind":{"Impl":{"id":305}},"from":{"krate":1,"index":6664},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14471100,"byte_end":14471107,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"kind":{"Impl":{"id":306}},"from":{"krate":1,"index":6555},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14471883,"byte_end":14471890,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477136,"byte_end":14477143,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477251,"byte_end":14477254,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"kind":{"Impl":{"id":309}},"from":{"krate":5,"index":432},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477354,"byte_end":14477357,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"kind":{"Impl":{"id":310}},"from":{"krate":5,"index":432},"to":{"krate":2,"index":2887}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477508,"byte_end":14477515,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477632,"byte_end":14477639,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477748,"byte_end":14477756,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":313}},"from":{"krate":1,"index":2938},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477865,"byte_end":14477872,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14477978,"byte_end":14477985,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":12999}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478164,"byte_end":14478171,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":8406}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478366,"byte_end":14478373,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":8419}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478530,"byte_end":14478537,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":3491}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478658,"byte_end":14478665,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":2862}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478757,"byte_end":14478760,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"kind":{"Impl":{"id":320}},"from":{"krate":5,"index":792},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14478892,"byte_end":14478895,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"kind":{"Impl":{"id":321}},"from":{"krate":5,"index":792},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479046,"byte_end":14479053,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479165,"byte_end":14479168,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"kind":{"Impl":{"id":323}},"from":{"krate":5,"index":6652},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479391,"byte_end":14479393,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"kind":{"Impl":{"id":324}},"from":{"krate":5,"index":5315},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14479608,"byte_end":14479615,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14480759,"byte_end":14480766,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14480895,"byte_end":14480902,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":3171}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14481007,"byte_end":14481014,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":3165}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14485842,"byte_end":14485861,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5406},"to":{"krate":2,"index":3309}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14486029,"byte_end":14486048,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":5406},"to":{"krate":0,"index":15}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14486320,"byte_end":14486339,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":5406},"to":{"krate":2,"index":13773}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14487042,"byte_end":14487052,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"kind":{"Impl":{"id":332}},"from":{"krate":1,"index":10397},"to":{"krate":0,"index":5403}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14487347,"byte_end":14487359,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"kind":{"Impl":{"id":333}},"from":{"krate":1,"index":10421},"to":{"krate":0,"index":5403}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14487724,"byte_end":14487736,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"kind":{"Impl":{"id":334}},"from":{"krate":1,"index":10434},"to":{"krate":0,"index":5403}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14491455,"byte_end":14491461,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"kind":{"Impl":{"id":336}},"from":{"krate":5,"index":8368},"to":{"krate":0,"index":5403}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14493394,"byte_end":14493405,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499380,"byte_end":14499388,"line_start":231,"line_end":231,"column_start":17,"column_end":25},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5531},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499723,"byte_end":14499731,"line_start":240,"line_end":240,"column_start":21,"column_end":29},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5531},"to":{"krate":2,"index":10298}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14499887,"byte_end":14499898,"line_start":246,"line_end":246,"column_start":38,"column_end":49},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6114},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14500220,"byte_end":14500231,"line_start":255,"line_end":255,"column_start":55,"column_end":66},"kind":{"Impl":{"id":341}},"from":{"krate":1,"index":5377},"to":{"krate":2,"index":3181}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14501215,"byte_end":14501226,"line_start":292,"line_end":292,"column_start":26,"column_end":37},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6114},"to":{"krate":1,"index":5951}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14501361,"byte_end":14501372,"line_start":298,"line_end":298,"column_start":28,"column_end":39},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":6114},"to":{"krate":1,"index":5953}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14501555,"byte_end":14501566,"line_start":304,"line_end":304,"column_start":28,"column_end":39},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6114},"to":{"krate":1,"index":5955}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14503564,"byte_end":14503573,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":6137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14510681,"byte_end":14510690,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":6137},"to":{"krate":27,"index":39}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14511591,"byte_end":14511600,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":6137},"to":{"krate":27,"index":42}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14513084,"byte_end":14513093,"line_start":372,"line_end":372,"column_start":36,"column_end":45},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":6137},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14513409,"byte_end":14513418,"line_start":381,"line_end":381,"column_start":53,"column_end":62},"kind":{"Impl":{"id":349}},"from":{"krate":1,"index":5374},"to":{"krate":2,"index":3181}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14514827,"byte_end":14514836,"line_start":426,"line_end":426,"column_start":26,"column_end":35},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":6137},"to":{"krate":1,"index":5951}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14514981,"byte_end":14514990,"line_start":432,"line_end":432,"column_start":28,"column_end":37},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":6137},"to":{"krate":1,"index":5953}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14515169,"byte_end":14515178,"line_start":438,"line_end":438,"column_start":28,"column_end":37},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":6137},"to":{"krate":1,"index":5955}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14517031,"byte_end":14517040,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":6162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14532935,"byte_end":14532944,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":6162},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14533250,"byte_end":14533259,"line_start":535,"line_end":535,"column_start":53,"column_end":62},"kind":{"Impl":{"id":355}},"from":{"krate":1,"index":5501},"to":{"krate":2,"index":3181}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14534226,"byte_end":14534235,"line_start":572,"line_end":572,"column_start":26,"column_end":35},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6162},"to":{"krate":1,"index":5951}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14534380,"byte_end":14534389,"line_start":578,"line_end":578,"column_start":28,"column_end":37},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6162},"to":{"krate":1,"index":5953}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14534568,"byte_end":14534577,"line_start":584,"line_end":584,"column_start":28,"column_end":37},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6162},"to":{"krate":1,"index":5955}}]}