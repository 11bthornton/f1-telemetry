{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0","program":"C:\\Users\\Ben\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","egui_extras","--edition=2021","C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=0b567c4d4ed4d910","-C","extra-filename=-0b567c4d4ed4d910","--out-dir","c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps","--extern","egui=c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libegui-b371447087a4c77f.rmeta","--cap-lints","allow","-L","native=C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.42.0\\lib","--error-format=json","--sysroot","C:\\Users\\Ben\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Ben\\Desktop\\rust_f1_telemetry-main\\rust_f1_telemetry-main\\f1-game-client\\target\\rls\\debug\\deps\\libegui_extras-0b567c4d4ed4d910.rmeta"},"prelude":{"crate_id":{"name":"egui_extras","disambiguator":[7112351009338751578,0]},"crate_root":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src","external_crates":[{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10288641326355699271,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5178777620647193466,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7203661724729889941,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17525700935344431946,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14114419768508526436,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[7430704726206783492,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12664251144516306473,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5349691386245612169,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7588176879124425336,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12802573245210436658,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[15058356585373963657,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11406058276128544710,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[12054102872615165506,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15575797803660711391,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[2170788131994516450,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":16,"id":{"name":"egui","disambiguator":[12227148466953334288,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":17,"id":{"name":"epaint","disambiguator":[186319933373941023,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":18,"id":{"name":"emath","disambiguator":[11311028471918619171,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":19,"id":{"name":"serde","disambiguator":[226809851131364859,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":20,"id":{"name":"serde_derive","disambiguator":[7049712192807757020,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":21,"id":{"name":"bytemuck","disambiguator":[12474186806860358612,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":22,"id":{"name":"bytemuck_derive","disambiguator":[15746579042910254411,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":23,"id":{"name":"parking_lot","disambiguator":[9803409037347105818,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":24,"id":{"name":"lock_api","disambiguator":[5282362868738777283,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":25,"id":{"name":"scopeguard","disambiguator":[6110210485670846652,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":26,"id":{"name":"parking_lot_core","disambiguator":[9085526294295934367,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":27,"id":{"name":"smallvec","disambiguator":[3142930680554501111,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":28,"id":{"name":"cfg_if","disambiguator":[7872221195650628815,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":29,"id":{"name":"windows_sys","disambiguator":[12860283537905889122,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":30,"id":{"name":"ab_glyph","disambiguator":[415284283810391617,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":31,"id":{"name":"ab_glyph_rasterizer","disambiguator":[3824368558333404478,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":32,"id":{"name":"owned_ttf_parser","disambiguator":[900269849856247089,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":33,"id":{"name":"ttf_parser","disambiguator":[5935717363750618687,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":34,"id":{"name":"ahash","disambiguator":[14949227901135022770,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":35,"id":{"name":"once_cell","disambiguator":[10393899279476839872,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":36,"id":{"name":"getrandom","disambiguator":[15237022176755909937,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":37,"id":{"name":"nohash_hasher","disambiguator":[13304172010932220083,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":38,"id":{"name":"tracing","disambiguator":[11242614703124416000,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":39,"id":{"name":"tracing_core","disambiguator":[10757275274691151432,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":40,"id":{"name":"pin_project_lite","disambiguator":[6621430443817631547,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":41,"id":{"name":"ron","disambiguator":[11333379201070446033,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":42,"id":{"name":"bitflags","disambiguator":[16296419251187714830,0]}},{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","num":43,"id":{"name":"base64","disambiguator":[7630812310911628536,0]}}],"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":0,"byte_end":1401,"line_start":1,"line_end":54,"column_start":1,"column_end":29}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":617,"byte_end":630,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"alias_span":null,"name":"RetainedImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":698,"byte_end":702,"line_start":26,"line_end":26,"column_start":24,"column_end":28},"alias_span":null,"name":"Size","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":726,"byte_end":727,"line_start":27,"line_end":27,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":751,"byte_end":752,"line_start":28,"line_end":28,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":0,"byte_end":1401,"line_start":1,"line_end":54,"column_start":1,"column_end":29},"name":"","qualname":"::","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":36},{"krate":0,"index":82},{"krate":0,"index":99},{"krate":0,"index":164},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":301}],"decl_id":null,"docs":" This is a crate that adds some features on top top of [`egui`](https://github.com/emilk/egui).","sig":null,"attributes":[{"value":"/ This is a crate that adds some features on top top of [`egui`](https://github.com/emilk/egui).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":0,"byte_end":98,"line_start":1,"line_end":1,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":99,"byte_end":102,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate are for experimental features, and features that require big dependencies that does not belong in `egui`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":103,"byte_end":223,"line_start":3,"line_end":3,"column_start":1,"column_end":121}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":224,"byte_end":227,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":228,"byte_end":248,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":340,"byte_end":343,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"allow(clippy :: float_cmp)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":345,"byte_end":373,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"allow(clippy :: manual_range_contains)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":374,"byte_end":414,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"image","qualname":"::image","value":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":17},{"krate":0,"index":33}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":1627,"byte_end":1640,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"RetainedImage","qualname":"::image::RetainedImage","value":"RetainedImage {  }","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16}],"decl_id":null,"docs":" An image to be shown in egui.","sig":null,"attributes":[{"value":"/ An image to be shown in egui.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":1453,"byte_end":1486,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":1487,"byte_end":1490,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Load once, and save somewhere in your app state.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":1491,"byte_end":1543,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":1544,"byte_end":1547,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Use the `svg` and `image` features to enable more constructors.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":1548,"byte_end":1615,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":1944,"byte_end":1960,"line_start":20,"line_end":20,"column_start":12,"column_end":28},"name":"from_color_image","qualname":"<RetainedImage>::from_color_image","value":"fn from_color_image<impl Into<String>>(impl Into<String>, ColorImage) -> Self\nwhere impl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4313,"byte_end":4332,"line_start":90,"line_end":90,"column_start":12,"column_end":31},"name":"with_texture_filter","qualname":"<RetainedImage>::with_texture_filter","value":"fn with_texture_filter(Self, TextureFilter) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the texture filter to use for the image.","sig":null,"attributes":[{"value":"/ Set the texture filter to use for the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":3559,"byte_end":3607,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":3612,"byte_end":3615,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ **Note:** If the texture has already been uploaded to the GPU, this will require","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":3620,"byte_end":3704,"line_start":73,"line_end":73,"column_start":5,"column_end":89}},{"value":"/ re-uploading the texture with the updated filter.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":3709,"byte_end":3762,"line_start":74,"line_end":74,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":3767,"byte_end":3770,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":3775,"byte_end":3788,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":3793,"byte_end":3804,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ # use egui_extras::RetainedImage;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":3809,"byte_end":3846,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/ # use egui::{Color32, epaint::{ColorImage, textures::TextureFilter}};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":3851,"byte_end":3924,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ # let pixels = vec![Color32::BLACK];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":3929,"byte_end":3969,"line_start":80,"line_end":80,"column_start":5,"column_end":45}},{"value":"/ # let color_image = ColorImage {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":3974,"byte_end":4010,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/ #   size: [1, 1],","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4015,"byte_end":4036,"line_start":82,"line_end":82,"column_start":5,"column_end":26}},{"value":"/ #   pixels,","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4041,"byte_end":4056,"line_start":83,"line_end":83,"column_start":5,"column_end":20}},{"value":"/ # };","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4061,"byte_end":4069,"line_start":84,"line_end":84,"column_start":5,"column_end":13}},{"value":"/ #","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4074,"byte_end":4079,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ // Upload a pixel art image without it getting blurry when resized","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4084,"byte_end":4154,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ let image = RetainedImage::from_color_image(\"my_image\", color_image)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4159,"byte_end":4231,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/     .with_texture_filter(TextureFilter::Nearest);","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4236,"byte_end":4289,"line_start":88,"line_end":88,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4294,"byte_end":4301,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4667,"byte_end":4671,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"name":"size","qualname":"<RetainedImage>::size","value":"fn size<'_>(&'_ Self) -> [usize; ]","parent":null,"children":[],"decl_id":null,"docs":" The size of the image data (number of pixels wide/high).\n","sig":null,"attributes":[{"value":"/ The size of the image data (number of pixels wide/high).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4595,"byte_end":4655,"line_start":100,"line_end":100,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4763,"byte_end":4768,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"width","qualname":"<RetainedImage>::width","value":"fn width<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The width of the image.\n","sig":null,"attributes":[{"value":"/ The width of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4724,"byte_end":4751,"line_start":105,"line_end":105,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4859,"byte_end":4865,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"height","qualname":"<RetainedImage>::height","value":"fn height<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The height of the image.\n","sig":null,"attributes":[{"value":"/ The height of the image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4819,"byte_end":4847,"line_start":110,"line_end":110,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4988,"byte_end":4997,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"size_vec2","qualname":"<RetainedImage>::size_vec2","value":"fn size_vec2<'_>(&'_ Self) -> egui::Vec2","parent":null,"children":[],"decl_id":null,"docs":" The size of the image data (number of pixels wide/high).\n","sig":null,"attributes":[{"value":"/ The size of the image data (number of pixels wide/high).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":4916,"byte_end":4976,"line_start":115,"line_end":115,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":5169,"byte_end":5179,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"debug_name","qualname":"<RetainedImage>::debug_name","value":"fn debug_name<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":" The debug name of the image, e.g. the file name.\n","sig":null,"attributes":[{"value":"/ The debug name of the image, e.g. the file name.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":5105,"byte_end":5157,"line_start":121,"line_end":121,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":5279,"byte_end":5289,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"texture_id","qualname":"<RetainedImage>::texture_id","value":"fn texture_id<'_, '_>(&'_ Self, &'_ egui::Context) -> egui::TextureId","parent":null,"children":[],"decl_id":null,"docs":" The texture if for this image.\n","sig":null,"attributes":[{"value":"/ The texture if for this image.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":5233,"byte_end":5267,"line_start":126,"line_end":126,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":5711,"byte_end":5724,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"show_max_size","qualname":"<RetainedImage>::show_max_size","value":"fn show_max_size<'_, '_>(&'_ Self, &'_ mut egui::Ui, egui::Vec2)\n-> egui::Response","parent":null,"children":[],"decl_id":null,"docs":" Show the image with the given maximum size.\n","sig":null,"attributes":[{"value":"/ Show the image with the given maximum size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":5652,"byte_end":5699,"line_start":138,"line_end":138,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":6110,"byte_end":6114,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"show","qualname":"<RetainedImage>::show","value":"fn show<'_, '_>(&'_ Self, &'_ mut egui::Ui) -> egui::Response","parent":null,"children":[],"decl_id":null,"docs":" Show the image with the original size (one image pixel = one gui point).\n","sig":null,"attributes":[{"value":"/ Show the image with the original size (one image pixel = one gui point).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":6022,"byte_end":6098,"line_start":146,"line_end":146,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":6298,"byte_end":6309,"line_start":152,"line_end":152,"column_start":12,"column_end":23},"name":"show_scaled","qualname":"<RetainedImage>::show_scaled","value":"fn show_scaled<'_, '_>(&'_ Self, &'_ mut egui::Ui, f32) -> egui::Response","parent":null,"children":[],"decl_id":null,"docs":" Show the image with the given scale factor (1.0 = original size).\n","sig":null,"attributes":[{"value":"/ Show the image with the given scale factor (1.0 = original size).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":6217,"byte_end":6286,"line_start":151,"line_end":151,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":6483,"byte_end":6492,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"show_size","qualname":"<RetainedImage>::show_size","value":"fn show_size<'_, '_>(&'_ Self, &'_ mut egui::Ui, egui::Vec2) -> egui::Response","parent":null,"children":[],"decl_id":null,"docs":" Show the image with the given size.\n","sig":null,"attributes":[{"value":"/ Show the image with the given size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":6432,"byte_end":6471,"line_start":156,"line_end":156,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14099,"byte_end":14107,"line_start":5,"line_end":5,"column_start":5,"column_end":13},"name":"Absolute","qualname":"::sizing::Size::Absolute","value":"Size::Absolute { initial, range }","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Absolute size in points, with a given range of allowed sizes to resize within.\n","sig":null,"attributes":[{"value":"/ Absolute size in points, with a given range of allowed sizes to resize within.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14012,"byte_end":14094,"line_start":4,"line_end":4,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14110,"byte_end":14117,"line_start":5,"line_end":5,"column_start":16,"column_end":23},"name":"initial","qualname":"::sizing::Size::Absolute::initial","value":"f32","parent":{"krate":0,"index":314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14124,"byte_end":14129,"line_start":5,"line_end":5,"column_start":30,"column_end":35},"name":"range","qualname":"::sizing::Size::Absolute::range","value":"(f32, f32)","parent":{"krate":0,"index":314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14205,"byte_end":14213,"line_start":8,"line_end":8,"column_start":5,"column_end":13},"name":"Relative","qualname":"::sizing::Size::Relative","value":"Size::Relative { fraction, range }","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Relative size relative to all available space.\n","sig":null,"attributes":[{"value":"/ Relative size relative to all available space.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14150,"byte_end":14200,"line_start":7,"line_end":7,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14216,"byte_end":14224,"line_start":8,"line_end":8,"column_start":16,"column_end":24},"name":"fraction","qualname":"::sizing::Size::Relative::fraction","value":"f32","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14231,"byte_end":14236,"line_start":8,"line_end":8,"column_start":31,"column_end":36},"name":"range","qualname":"::sizing::Size::Relative::range","value":"(f32, f32)","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14310,"byte_end":14319,"line_start":11,"line_end":11,"column_start":5,"column_end":14},"name":"Remainder","qualname":"::sizing::Size::Remainder","value":"Size::Remainder { range }","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Multiple remainders each get the same space.\n","sig":null,"attributes":[{"value":"/ Multiple remainders each get the same space.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14257,"byte_end":14305,"line_start":10,"line_end":10,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14322,"byte_end":14327,"line_start":11,"line_end":11,"column_start":17,"column_end":22},"name":"range","qualname":"::sizing::Size::Remainder::range","value":"(f32, f32)","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14001,"byte_end":14005,"line_start":3,"line_end":3,"column_start":10,"column_end":14},"name":"Size","qualname":"::sizing::Size","value":"enum Size {\n    Absolute {\n            initial: f32,\n            range: (f32, f32),\n        },\n    Relative {\n            fraction: f32,\n            range: (f32, f32),\n        },\n    Remainder {\n            range: (f32, f32),\n        },\n}","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320}],"decl_id":null,"docs":" Size hint for table column/strip cell.\n","sig":null,"attributes":[{"value":"/ Size hint for table column/strip cell.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":13919,"byte_end":13961,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14420,"byte_end":14425,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"exact","qualname":"<Size>::exact","value":"fn exact(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Exactly this big, with no room for resize.\n","sig":null,"attributes":[{"value":"/ Exactly this big, with no room for resize.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14362,"byte_end":14408,"line_start":15,"line_end":15,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14612,"byte_end":14619,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"initial","qualname":"<Size>::initial","value":"fn initial(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initially this big, but can resize.\n","sig":null,"attributes":[{"value":"/ Initially this big, but can resize.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14561,"byte_end":14600,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14858,"byte_end":14866,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"relative","qualname":"<Size>::relative","value":"fn relative(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Relative size relative to all available space. Values must be in range `0.0..=1.0`.\n","sig":null,"attributes":[{"value":"/ Relative size relative to all available space. Values must be in range `0.0..=1.0`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14759,"byte_end":14846,"line_start":31,"line_end":31,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":15125,"byte_end":15134,"line_start":41,"line_end":41,"column_start":12,"column_end":21},"name":"remainder","qualname":"<Size>::remainder","value":"fn remainder() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiple remainders each get the same space.\n","sig":null,"attributes":[{"value":"/ Multiple remainders each get the same space.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":15065,"byte_end":15113,"line_start":40,"line_end":40,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":15292,"byte_end":15300,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"at_least","qualname":"<Size>::at_least","value":"fn at_least(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Won't shrink below this size (in points).\n","sig":null,"attributes":[{"value":"/ Won't shrink below this size (in points).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":15235,"byte_end":15280,"line_start":47,"line_end":47,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":15632,"byte_end":15639,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"at_most","qualname":"<Size>::at_most","value":"fn at_most(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Won't grow above this size (in points).\n","sig":null,"attributes":[{"value":"/ Won't grow above this size (in points).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":15577,"byte_end":15620,"line_start":59,"line_end":59,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":16020,"byte_end":16025,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"range","qualname":"<Size>::range","value":"fn range(Self) -> (f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Allowed range of movement (in points), if in a resizable [`Table`](crate::table::Table).\n","sig":null,"attributes":[{"value":"/ Allowed range of movement (in points), if in a resizable [`Table`](crate::table::Table).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":15916,"byte_end":16008,"line_start":71,"line_end":71,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21039,"byte_end":21051,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"StripBuilder","qualname":"::strip::StripBuilder","value":"StripBuilder {  }","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"decl_id":null,"docs":" Builder for creating a new [`Strip`].","sig":null,"attributes":[{"value":"/ Builder for creating a new [`Strip`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":19715,"byte_end":19756,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":19757,"byte_end":19760,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This can be used to do dynamic layouts.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":19761,"byte_end":19804,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":19805,"byte_end":19808,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ In contrast to normal egui behavior, strip cells do *not* grow with its children!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":19809,"byte_end":19894,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":19895,"byte_end":19898,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ First use [`Self::size`] and [`Self::sizes`] to allocate space for the rows or columns will follow.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":19899,"byte_end":20002,"line_start":14,"line_end":14,"column_start":1,"column_end":104}},{"value":"/ Then build the strip with [`Self::horizontal`]/[`Self::vertical`], and add 'cells'","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20003,"byte_end":20089,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/ to it using [`Strip::cell`]. The number of cells MUST match the number of pre-allocated sizes.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20090,"byte_end":20188,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20189,"byte_end":20192,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ### Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20193,"byte_end":20208,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20209,"byte_end":20216,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20217,"byte_end":20249,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ use egui_extras::{StripBuilder, Size};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20250,"byte_end":20292,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ StripBuilder::new(ui)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20293,"byte_end":20318,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/     .size(Size::remainder().at_least(100.0)) // top cell","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20319,"byte_end":20379,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/     .size(Size::exact(40.0)) // bottom cell","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20380,"byte_end":20427,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/     .vertical(|mut strip| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20428,"byte_end":20459,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"/         // Add the top 'cell'","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20460,"byte_end":20493,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/         strip.cell(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20494,"byte_end":20523,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/             ui.label(\"Fixed\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20524,"byte_end":20558,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/         });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20559,"byte_end":20574,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/         // We add a nested strip in the bottom cell:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20575,"byte_end":20631,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/         strip.strip(|builder| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20632,"byte_end":20667,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/             builder.sizes(Size::remainder(), 2).horizontal(|mut strip| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20668,"byte_end":20744,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/                 strip.cell(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20745,"byte_end":20782,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/                     ui.label(\"Top Left\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20783,"byte_end":20828,"line_start":34,"line_end":34,"column_start":1,"column_end":46}},{"value":"/                 });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20829,"byte_end":20852,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/                 strip.cell(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20853,"byte_end":20890,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/                     ui.label(\"Top Right\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20891,"byte_end":20937,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20938,"byte_end":20961,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/             });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20962,"byte_end":20981,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"/         });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20982,"byte_end":20997,"line_start":40,"line_end":40,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":20998,"byte_end":21009,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21010,"byte_end":21019,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21020,"byte_end":21027,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21221,"byte_end":21224,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<StripBuilder>::new","value":"fn new(&'a mut Ui) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new strip builder.\n","sig":null,"attributes":[{"value":"/ Create new strip builder.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21180,"byte_end":21209,"line_start":52,"line_end":52,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21506,"byte_end":21510,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"clip","qualname":"<StripBuilder>::clip","value":"fn clip(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Should we clip the contents of each cell? Default: `true`.\n","sig":null,"attributes":[{"value":"/ Should we clip the contents of each cell? Default: `true`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21432,"byte_end":21494,"line_start":63,"line_end":63,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21660,"byte_end":21671,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"cell_layout","qualname":"<StripBuilder>::cell_layout","value":"fn cell_layout(Self, egui::Layout) -> Self","parent":null,"children":[],"decl_id":null,"docs":" What layout should we use for the individual cells?\n","sig":null,"attributes":[{"value":"/ What layout should we use for the individual cells?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21593,"byte_end":21648,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21837,"byte_end":21841,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"size","qualname":"<StripBuilder>::size","value":"fn size(Self, Size) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocate space for for one column/row.\n","sig":null,"attributes":[{"value":"/ Allocate space for for one column/row.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21783,"byte_end":21825,"line_start":75,"line_end":75,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21997,"byte_end":22002,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"sizes","qualname":"<StripBuilder>::sizes","value":"fn sizes(Self, Size, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocate space for for several columns/rows at once.\n","sig":null,"attributes":[{"value":"/ Allocate space for for several columns/rows at once.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21929,"byte_end":21985,"line_start":81,"line_end":81,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":22415,"byte_end":22425,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<StripBuilder>::horizontal","value":"fn horizontal<F>(Self, F) -> Response where F: for<'b> FnOnce(Strip) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Build horizontal strip: Cells are positions from left to right.\n Takes the available horizontal width, so there can't be anything right of the strip or the container will grow slowly!","sig":null,"attributes":[{"value":"/ Build horizontal strip: Cells are positions from left to right.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":22146,"byte_end":22213,"line_start":89,"line_end":89,"column_start":5,"column_end":72}},{"value":"/ Takes the available horizontal width, so there can't be anything right of the strip or the container will grow slowly!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":22218,"byte_end":22340,"line_start":90,"line_end":90,"column_start":5,"column_end":127}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":22345,"byte_end":22348,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns a [`egui::Response`] for hover events.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":22353,"byte_end":22403,"line_start":92,"line_end":92,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":23326,"byte_end":23334,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"vertical","qualname":"<StripBuilder>::vertical","value":"fn vertical<F>(Self, F) -> Response where F: for<'b> FnOnce(Strip) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Build vertical strip: Cells are positions from top to bottom.\n Takes the full available vertical height, so there can't be anything below of the strip or the container will grow slowly!","sig":null,"attributes":[{"value":"/ Build vertical strip: Cells are positions from top to bottom.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":23055,"byte_end":23120,"line_start":116,"line_end":116,"column_start":5,"column_end":70}},{"value":"/ Takes the full available vertical height, so there can't be anything below of the strip or the container will grow slowly!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":23125,"byte_end":23251,"line_start":117,"line_end":117,"column_start":5,"column_end":131}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":23256,"byte_end":23259,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Returns a [`egui::Response`] for hover events.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":23264,"byte_end":23314,"line_start":119,"line_end":119,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":24134,"byte_end":24139,"line_start":146,"line_end":146,"column_start":12,"column_end":17},"name":"Strip","qualname":"::strip::Strip","value":"Strip {  }","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" A Strip of cells which go in one direction. Each cell has a fixed size.\n In contrast to normal egui behavior, strip cells do *not* grow with its children!\n","sig":null,"attributes":[{"value":"/ A Strip of cells which go in one direction. Each cell has a fixed size.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":23961,"byte_end":24036,"line_start":144,"line_end":144,"column_start":1,"column_end":76}},{"value":"/ In contrast to normal egui behavior, strip cells do *not* grow with its children!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":24037,"byte_end":24122,"line_start":145,"line_end":145,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":25026,"byte_end":25030,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"cell","qualname":"<Strip>::cell","value":"fn cell<'_, impl FnOnce(&mut Ui)>(&'_ mut Self, impl FnOnce(&mut Ui)) where\nimpl FnOnce(&mut Ui): for<'_> FnOnce(&'_ mut Ui) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add cell contents.\n","sig":null,"attributes":[{"value":"/ Add cell contents.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":24992,"byte_end":25014,"line_start":172,"line_end":172,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":25232,"byte_end":25237,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"empty","qualname":"<Strip>::empty","value":"fn empty<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Add an empty cell.\n","sig":null,"attributes":[{"value":"/ Add an empty cell.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":25198,"byte_end":25220,"line_start":178,"line_end":178,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":25393,"byte_end":25398,"line_start":185,"line_end":185,"column_start":12,"column_end":17},"name":"strip","qualname":"<Strip>::strip","value":"fn strip<'_,\nimpl FnOnce(StripBuilder<'_>)>(&'_ mut Self, impl FnOnce(StripBuilder<'_>))\nwhere impl FnOnce(StripBuilder<'_>): for<'_> FnOnce(StripBuilder) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a strip as cell.\n","sig":null,"attributes":[{"value":"/ Add a strip as cell.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":25357,"byte_end":25381,"line_start":184,"line_end":184,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":25647,"byte_end":25651,"line_start":194,"line_end":194,"column_start":8,"column_end":12},"name":"drop","qualname":"<Strip as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27493,"byte_end":27505,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"TableBuilder","qualname":"::table::TableBuilder","value":"TableBuilder {  }","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"decl_id":null,"docs":" Builder for a [`Table`] with (optional) fixed header and scrolling body.","sig":null,"attributes":[{"value":"/ Builder for a [`Table`] with (optional) fixed header and scrolling body.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26233,"byte_end":26309,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26310,"byte_end":26313,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Cell widths are precalculated so we can have tables like this:","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26314,"byte_end":26380,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26381,"byte_end":26384,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ | fixed size | all available space/minimum | 30% of available width | fixed size |","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26385,"byte_end":26471,"line_start":18,"line_end":18,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26472,"byte_end":26475,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ In contrast to normal egui behavior, columns/rows do *not* grow with its children!","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26476,"byte_end":26562,"line_start":20,"line_end":20,"column_start":1,"column_end":87}},{"value":"/ Takes all available height, so if you want something below the table, put it in a strip.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26563,"byte_end":26655,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26656,"byte_end":26659,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ You must pre-allocate all columns with [`Self::column`]/[`Self::columns`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26660,"byte_end":26738,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26739,"byte_end":26742,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ### Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26743,"byte_end":26758,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26759,"byte_end":26766,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26767,"byte_end":26799,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/ use egui_extras::{TableBuilder, Size};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26800,"byte_end":26842,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/ TableBuilder::new(ui)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26843,"byte_end":26868,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/     .column(Size::remainder().at_least(100.0))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26869,"byte_end":26919,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/     .column(Size::exact(40.0))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26920,"byte_end":26954,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/     .header(20.0, |mut header| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26955,"byte_end":26991,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/         header.col(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":26992,"byte_end":27021,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/             ui.heading(\"Growing\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27022,"byte_end":27060,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/         });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27061,"byte_end":27076,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/         header.col(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27077,"byte_end":27106,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/             ui.heading(\"Fixed\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27107,"byte_end":27143,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/         });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27144,"byte_end":27159,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/     })","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27160,"byte_end":27170,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     .body(|mut body| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27171,"byte_end":27197,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/         body.row(30.0, |mut row| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27198,"byte_end":27236,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/             row.col(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27237,"byte_end":27267,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/                 ui.label(\"first row growing cell\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27268,"byte_end":27323,"line_start":43,"line_end":43,"column_start":1,"column_end":56}},{"value":"/             });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27324,"byte_end":27343,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/             row.col(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27344,"byte_end":27374,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/                 ui.button(\"action\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27375,"byte_end":27415,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/             });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27416,"byte_end":27435,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/         });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27436,"byte_end":27451,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27452,"byte_end":27463,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27464,"byte_end":27473,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27474,"byte_end":27481,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27726,"byte_end":27729,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<TableBuilder>::new","value":"fn new(&'a mut Ui) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28114,"byte_end":28120,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"scroll","qualname":"<TableBuilder>::scroll","value":"fn scroll(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable scrollview in body (default: true)\n","sig":null,"attributes":[{"value":"/ Enable scrollview in body (default: true)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28057,"byte_end":28102,"line_start":78,"line_end":78,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28271,"byte_end":28278,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"striped","qualname":"<TableBuilder>::striped","value":"fn striped(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable striped row background (default: false)\n","sig":null,"attributes":[{"value":"/ Enable striped row background (default: false)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28209,"byte_end":28259,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28730,"byte_end":28739,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"resizable","qualname":"<TableBuilder>::resizable","value":"fn resizable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Make the columns resizable by dragging.","sig":null,"attributes":[{"value":"/ Make the columns resizable by dragging.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28370,"byte_end":28413,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28418,"byte_end":28421,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ If the _last_ column is [`Size::Remainder`], then it won't be resizable","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28426,"byte_end":28501,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ (and instead use up the remainder).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28506,"byte_end":28545,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28550,"byte_end":28553,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28558,"byte_end":28581,"line_start":95,"line_end":95,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28586,"byte_end":28589,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If you have multiple [`Table`]:s in the same [`Ui`]","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28594,"byte_end":28649,"line_start":97,"line_end":97,"column_start":5,"column_end":60}},{"value":"/ you will need to give them unique id:s with [`Ui::push_id`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28654,"byte_end":28718,"line_start":98,"line_end":98,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28911,"byte_end":28915,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"clip","qualname":"<TableBuilder>::clip","value":"fn clip(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Should we clip the contents of each cell? Default: `true`.\n","sig":null,"attributes":[{"value":"/ Should we clip the contents of each cell? Default: `true`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28837,"byte_end":28899,"line_start":104,"line_end":104,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":29269,"byte_end":29284,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"stick_to_bottom","qualname":"<TableBuilder>::stick_to_bottom","value":"fn stick_to_bottom(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Should the scroll handle stick to the bottom position even as the content size changes\n dynamically? The scroll handle remains stuck until manually changed, and will become stuck\n once again when repositioned to the bottom. Default: `false`.\n","sig":null,"attributes":[{"value":"/ Should the scroll handle stick to the bottom position even as the content size changes","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":28998,"byte_end":29088,"line_start":110,"line_end":110,"column_start":5,"column_end":95}},{"value":"/ dynamically? The scroll handle remains stuck until manually changed, and will become stuck","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":29093,"byte_end":29187,"line_start":111,"line_end":111,"column_start":5,"column_end":99}},{"value":"/ once again when repositioned to the bottom. Default: `false`.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":29192,"byte_end":29257,"line_start":112,"line_end":112,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":29447,"byte_end":29458,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"cell_layout","qualname":"<TableBuilder>::cell_layout","value":"fn cell_layout(Self, egui::Layout) -> Self","parent":null,"children":[],"decl_id":null,"docs":" What layout should we use for the individual cells?\n","sig":null,"attributes":[{"value":"/ What layout should we use for the individual cells?","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":29380,"byte_end":29435,"line_start":118,"line_end":118,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":29616,"byte_end":29622,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"column","qualname":"<TableBuilder>::column","value":"fn column(Self, Size) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocate space for one column.\n","sig":null,"attributes":[{"value":"/ Allocate space for one column.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":29570,"byte_end":29604,"line_start":124,"line_end":124,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":29771,"byte_end":29778,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"columns","qualname":"<TableBuilder>::columns","value":"fn columns(Self, Size, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocate space for several columns at once.\n","sig":null,"attributes":[{"value":"/ Allocate space for several columns at once.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":29712,"byte_end":29759,"line_start":130,"line_end":130,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":30270,"byte_end":30276,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"header","qualname":"<TableBuilder>::header","value":"fn header<impl FnOnce(TableRow<'_, '_>)>(Self, f32,\nimpl FnOnce(TableRow<'_, '_>)) -> Table where\nimpl FnOnce(TableRow<'_, '_>): for<'_, '_> FnOnce(TableRow) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Create a header row which always stays visible and at the top\n","sig":null,"attributes":[{"value":"/ Create a header row which always stays visible and at the top","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":30193,"byte_end":30258,"line_start":147,"line_end":147,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":31598,"byte_end":31602,"line_start":197,"line_end":197,"column_start":12,"column_end":16},"name":"body","qualname":"<TableBuilder>::body","value":"fn body<F>(Self, F) where F: for<'b> FnOnce(TableBody) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Create table body without a header row\n","sig":null,"attributes":[{"value":"/ Create table body without a header row","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":31544,"byte_end":31586,"line_start":196,"line_end":196,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":33349,"byte_end":33354,"line_start":260,"line_end":260,"column_start":12,"column_end":17},"name":"Table","qualname":"::table::Table","value":"Table {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"decl_id":null,"docs":" Table struct which can construct a [`TableBody`].","sig":null,"attributes":[{"value":"/ Table struct which can construct a [`TableBody`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":33142,"byte_end":33195,"line_start":257,"line_end":257,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":33196,"byte_end":33199,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Is created by [`TableBuilder`] by either calling [`TableBuilder::body`] or after creating a header row with [`TableBuilder::header`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":33200,"byte_end":33337,"line_start":259,"line_end":259,"column_start":1,"column_end":138}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":33700,"byte_end":33704,"line_start":276,"line_end":276,"column_start":12,"column_end":16},"name":"body","qualname":"<Table>::body","value":"fn body<F>(Self, F) where F: for<'b> FnOnce(TableBody) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Create table body after adding a header row\n","sig":null,"attributes":[{"value":"/ Create table body after adding a header row","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":33641,"byte_end":33688,"line_start":275,"line_end":275,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":37976,"byte_end":37985,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"TableBody","qualname":"::table::TableBody","value":"TableBody {  }","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" The body of a table.\n Is created by calling `body` on a [`Table`] (after adding a header row) or [`TableBuilder`] (without a header row).\n","sig":null,"attributes":[{"value":"/ The body of a table.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":37820,"byte_end":37844,"line_start":388,"line_end":388,"column_start":1,"column_end":25}},{"value":"/ Is created by calling `body` on a [`Table`] (after adding a header row) or [`TableBuilder`] (without a header row).","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":37845,"byte_end":37964,"line_start":389,"line_end":389,"column_start":1,"column_end":120}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":38582,"byte_end":38588,"line_start":409,"line_end":409,"column_start":12,"column_end":18},"name":"widths","qualname":"<TableBody>::widths","value":"fn widths<'_>(&'_ Self) -> &'_ [f32]","parent":null,"children":[],"decl_id":null,"docs":" Return a vector containing all column widths for this table body.","sig":null,"attributes":[{"value":"/ Return a vector containing all column widths for this table body.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":38239,"byte_end":38308,"line_start":404,"line_end":404,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":38313,"byte_end":38316,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This is primarily meant for use with [`TableBody::heterogeneous_rows`] in cases where row","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":38321,"byte_end":38414,"line_start":406,"line_end":406,"column_start":5,"column_end":98}},{"value":"/ heights are expected to according to the width of one or more cells -- for example, if text","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":38419,"byte_end":38514,"line_start":407,"line_end":407,"column_start":5,"column_end":100}},{"value":"/ is wrapped rather than clipped within the cell.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":38519,"byte_end":38570,"line_start":408,"line_end":408,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":38834,"byte_end":38837,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"row","qualname":"<TableBody>::row","value":"fn row<'_,\nimpl FnOnce(TableRow<'a, '_>)>(&'_ mut Self, f32,\nimpl FnOnce(TableRow<'a, '_>)) where\nimpl FnOnce(TableRow<'a, '_>): for<'_> FnOnce(TableRow) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a single row with the given height.","sig":null,"attributes":[{"value":"/ Add a single row with the given height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":38640,"byte_end":38683,"line_start":413,"line_end":413,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":38688,"byte_end":38691,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ If you have many thousands of row it can be more performant to instead use [`Self::rows`] or [`Self::heterogeneous_rows`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":38696,"byte_end":38822,"line_start":415,"line_end":415,"column_start":5,"column_end":131}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39978,"byte_end":39982,"line_start":451,"line_end":451,"column_start":12,"column_end":16},"name":"rows","qualname":"<TableBody>::rows","value":"fn rows<impl FnMut(usize, TableRow<'_, '_>)>(Self, f32, usize,\nimpl FnMut(usize, TableRow<'_, '_>)) where\nimpl FnMut(usize, TableRow<'_, '_>): for<'_, '_> FnMut(usize, TableRow) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add many rows with same height.","sig":null,"attributes":[{"value":"/ Add many rows with same height.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39152,"byte_end":39187,"line_start":428,"line_end":428,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39192,"byte_end":39195,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Is a lot more performant than adding each individual row as non visible rows must not be rendered.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39200,"byte_end":39302,"line_start":430,"line_end":430,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39307,"byte_end":39310,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ If you need many rows with different heights, use [`Self::heterogeneous_rows`] instead.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39315,"byte_end":39406,"line_start":432,"line_end":432,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39411,"byte_end":39414,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ### Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39419,"byte_end":39434,"line_start":434,"line_end":434,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39439,"byte_end":39446,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39451,"byte_end":39483,"line_start":436,"line_end":436,"column_start":5,"column_end":37}},{"value":"/ use egui_extras::{TableBuilder, Size};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39488,"byte_end":39530,"line_start":437,"line_end":437,"column_start":5,"column_end":47}},{"value":"/ TableBuilder::new(ui)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39535,"byte_end":39560,"line_start":438,"line_end":438,"column_start":5,"column_end":30}},{"value":"/     .column(Size::remainder().at_least(100.0))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39565,"byte_end":39615,"line_start":439,"line_end":439,"column_start":5,"column_end":55}},{"value":"/     .body(|mut body| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39620,"byte_end":39646,"line_start":440,"line_end":440,"column_start":5,"column_end":31}},{"value":"/         let row_height = 18.0;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39651,"byte_end":39685,"line_start":441,"line_end":441,"column_start":5,"column_end":39}},{"value":"/         let num_rows = 10_000;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39690,"byte_end":39724,"line_start":442,"line_end":442,"column_start":5,"column_end":39}},{"value":"/         body.rows(row_height, num_rows, |row_index, mut row| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39729,"byte_end":39795,"line_start":443,"line_end":443,"column_start":5,"column_end":71}},{"value":"/             row.col(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39800,"byte_end":39830,"line_start":444,"line_end":444,"column_start":5,"column_end":35}},{"value":"/                 ui.label(\"First column\");","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39835,"byte_end":39880,"line_start":445,"line_end":445,"column_start":5,"column_end":50}},{"value":"/             });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39885,"byte_end":39904,"line_start":446,"line_end":446,"column_start":5,"column_end":24}},{"value":"/         });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39909,"byte_end":39924,"line_start":447,"line_end":447,"column_start":5,"column_end":20}},{"value":"/     });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39929,"byte_end":39940,"line_start":448,"line_end":448,"column_start":5,"column_end":16}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39945,"byte_end":39954,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":39959,"byte_end":39966,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42686,"byte_end":42704,"line_start":521,"line_end":521,"column_start":12,"column_end":30},"name":"heterogeneous_rows","qualname":"<TableBody>::heterogeneous_rows","value":"fn heterogeneous_rows<impl Iterator<Item = f32>,\nimpl FnMut(usize, TableRow<'_, '_>)>(Self, impl Iterator<Item = f32>,\nimpl FnMut(usize, TableRow<'_, '_>)) where\nimpl Iterator<Item = f32>: Iterator<Item = f32>,\nimpl FnMut(usize, TableRow<'_, '_>): for<'_, '_> FnMut(usize, TableRow) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add rows with varying heights.","sig":null,"attributes":[{"value":"/ Add rows with varying heights.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":41424,"byte_end":41458,"line_start":494,"line_end":494,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":41463,"byte_end":41466,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This takes a very slight performance hit compared to [`TableBody::rows`] due to the need to","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":41471,"byte_end":41566,"line_start":496,"line_end":496,"column_start":5,"column_end":100}},{"value":"/ iterate over all row heights in to calculate the virtual table height above and below the","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":41571,"byte_end":41664,"line_start":497,"line_end":497,"column_start":5,"column_end":98}},{"value":"/ visible region, but it is many orders of magnitude more performant than adding individual","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":41669,"byte_end":41762,"line_start":498,"line_end":498,"column_start":5,"column_end":98}},{"value":"/ heterogenously-sized rows using [`TableBody::row`] at the cost of the additional complexity","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":41767,"byte_end":41862,"line_start":499,"line_end":499,"column_start":5,"column_end":100}},{"value":"/ that comes with pre-calculating row heights and representing them as an iterator.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":41867,"byte_end":41952,"line_start":500,"line_end":500,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":41957,"byte_end":41960,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ### Example","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":41965,"byte_end":41980,"line_start":502,"line_end":502,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":41985,"byte_end":41992,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":41997,"byte_end":42029,"line_start":504,"line_end":504,"column_start":5,"column_end":37}},{"value":"/ use egui_extras::{TableBuilder, Size};","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42034,"byte_end":42076,"line_start":505,"line_end":505,"column_start":5,"column_end":47}},{"value":"/ TableBuilder::new(ui)","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42081,"byte_end":42106,"line_start":506,"line_end":506,"column_start":5,"column_end":30}},{"value":"/     .column(Size::remainder().at_least(100.0))","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42111,"byte_end":42161,"line_start":507,"line_end":507,"column_start":5,"column_end":55}},{"value":"/     .body(|mut body| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42166,"byte_end":42192,"line_start":508,"line_end":508,"column_start":5,"column_end":31}},{"value":"/         let row_heights: Vec<f32> = vec![60.0, 18.0, 31.0, 240.0];","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42197,"byte_end":42267,"line_start":509,"line_end":509,"column_start":5,"column_end":75}},{"value":"/         body.heterogeneous_rows(row_heights.into_iter(), |row_index, mut row| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42272,"byte_end":42355,"line_start":510,"line_end":510,"column_start":5,"column_end":88}},{"value":"/             let thick = row_index % 6 == 0;","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42360,"byte_end":42407,"line_start":511,"line_end":511,"column_start":5,"column_end":52}},{"value":"/             row.col(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42412,"byte_end":42442,"line_start":512,"line_end":512,"column_start":5,"column_end":35}},{"value":"/                 ui.centered_and_justified(|ui| {","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42447,"byte_end":42499,"line_start":513,"line_end":513,"column_start":5,"column_end":57}},{"value":"/                     ui.label(row_index.to_string());","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42504,"byte_end":42560,"line_start":514,"line_end":514,"column_start":5,"column_end":61}},{"value":"/                 });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42565,"byte_end":42588,"line_start":515,"line_end":515,"column_start":5,"column_end":28}},{"value":"/             });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42593,"byte_end":42612,"line_start":516,"line_end":516,"column_start":5,"column_end":24}},{"value":"/         });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42617,"byte_end":42632,"line_start":517,"line_end":517,"column_start":5,"column_end":20}},{"value":"/     });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42637,"byte_end":42648,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42653,"byte_end":42662,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":42667,"byte_end":42674,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":45146,"byte_end":45150,"line_start":590,"line_end":590,"column_start":8,"column_end":12},"name":"drop","qualname":"<TableBody as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":45380,"byte_end":45388,"line_start":597,"line_end":597,"column_start":12,"column_end":20},"name":"TableRow","qualname":"::table::TableRow","value":"TableRow {  }","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" The row of a table.\n Is created by [`TableRow`] for each created [`TableBody::row`] or each visible row in rows created by calling [`TableBody::rows`].\n","sig":null,"attributes":[{"value":"/ The row of a table.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":45210,"byte_end":45233,"line_start":595,"line_end":595,"column_start":1,"column_end":24}},{"value":"/ Is created by [`TableRow`] for each created [`TableBody::row`] or each visible row in rows created by calling [`TableBody::rows`].","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":45234,"byte_end":45368,"line_start":596,"line_end":596,"column_start":1,"column_end":135}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":45603,"byte_end":45606,"line_start":607,"line_end":607,"column_start":12,"column_end":15},"name":"col","qualname":"<TableRow>::col","value":"fn col<'_, impl FnOnce(&mut Ui)>(&'_ mut Self, impl FnOnce(&mut Ui))\n-> Response where impl FnOnce(&mut Ui): for<'_> FnOnce(&'_ mut Ui) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add the contents of a column.\n","sig":null,"attributes":[{"value":"/ Add the contents of a column.","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":45558,"byte_end":45591,"line_start":606,"line_end":606,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":46421,"byte_end":46425,"line_start":631,"line_end":631,"column_start":8,"column_end":12},"name":"drop","qualname":"<TableRow as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3515},"children":[],"decl_id":{"krate":2,"index":3516},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":1917,"byte_end":1930,"line_start":19,"line_end":19,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\layout.rs","byte_start":9791,"byte_end":9802,"line_start":40,"line_end":40,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14351,"byte_end":14355,"line_start":14,"line_end":14,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":16313,"byte_end":16319,"line_start":86,"line_end":86,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":18430,"byte_end":18436,"line_start":151,"line_end":151,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21157,"byte_end":21169,"line_start":51,"line_end":51,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":24277,"byte_end":24282,"line_start":153,"line_end":153,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":25624,"byte_end":25629,"line_start":193,"line_end":193,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27696,"byte_end":27708,"line_start":63,"line_end":63,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":33625,"byte_end":33630,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":38127,"byte_end":38136,"line_start":399,"line_end":399,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":45123,"byte_end":45132,"line_start":589,"line_end":589,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":45535,"byte_end":45543,"line_start":605,"line_end":605,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":46395,"byte_end":46403,"line_start":630,"line_end":630,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\lib.rs","byte_start":468,"byte_end":473,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\image.rs","byte_start":1917,"byte_end":1930,"line_start":19,"line_end":19,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":10},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\layout.rs","byte_start":9791,"byte_end":9802,"line_start":40,"line_end":40,"column_start":10,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":14351,"byte_end":14355,"line_start":14,"line_end":14,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":16313,"byte_end":16319,"line_start":86,"line_end":86,"column_start":6,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\sizing.rs","byte_start":18430,"byte_end":18436,"line_start":151,"line_end":151,"column_start":26,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":327},"to":{"krate":2,"index":3174}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":21157,"byte_end":21169,"line_start":51,"line_end":51,"column_start":10,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":24277,"byte_end":24282,"line_start":153,"line_end":153,"column_start":14,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\strip.rs","byte_start":25624,"byte_end":25629,"line_start":193,"line_end":193,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":27696,"byte_end":27708,"line_start":63,"line_end":63,"column_start":10,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":33625,"byte_end":33630,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":38127,"byte_end":38136,"line_start":399,"line_end":399,"column_start":10,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":45123,"byte_end":45132,"line_start":589,"line_end":589,"column_start":19,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":3515}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":45535,"byte_end":45543,"line_start":605,"line_end":605,"column_start":14,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Ben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui_extras-0.19.0\\src\\table.rs","byte_start":46395,"byte_end":46403,"line_start":630,"line_end":630,"column_start":23,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":268},"to":{"krate":2,"index":3515}}]}